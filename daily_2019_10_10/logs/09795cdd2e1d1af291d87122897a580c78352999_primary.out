cset: moving following pidspec: 10878
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.331651572 seconds)
loading group "string"... done (took 0.544004914 seconds)
loading group "linalg"... done (took 7.019673881 seconds)
loading group "parallel"... done (took 0.155779246 seconds)
loading group "find"... done (took 1.095603577 seconds)
loading group "tuple"... done (took 1.725563292 seconds)
loading group "dates"... done (took 1.183375653 seconds)
loading group "micro"... done (took 0.214988573 seconds)
loading group "io"... done (took 0.981775194 seconds)
loading group "scalar"... done (took 36.937574458 seconds)
loading group "sparse"... done (took 11.430657877 seconds)
loading group "broadcast"... done (took 0.903110755 seconds)
loading group "union"... done (took 12.521687307 seconds)
loading group "simd"... done (took 4.221468181 seconds)
loading group "random"... done (took 8.434512654 seconds)
loading group "problem"... done (took 1.704001441 seconds)
loading group "array"... done (took 19.613317498 seconds)
loading group "misc"... done (took 1.628482712 seconds)
loading group "sort"... done (took 3.128659018 seconds)
loading group "collection"... done (took 16.662123975 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483398338 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122488673 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113386094 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117808999 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144256551 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113789215 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121910131 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082923162 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.869924859 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146128038 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118475848 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410699743 seconds)
done (took 5.186763565 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176915914 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083481844 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081990048 seconds)
  done (took 1.321634535 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065979823 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121603284 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066118703 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066206047 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066765934 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065946905 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065402671 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065784133 seconds)
  done (took 1.672496989 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073520936 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067639833 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067981036 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068001149 seconds)
  done (took 1.436070116 seconds)
done (took 5.840957543 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.765381709 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200099151 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181790689 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397958817 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128186492 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153005573 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.657708816 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315813078 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186083841 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080744518 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104033445 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.314869498 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106308825 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.640446524 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076549509 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089828466 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136760316 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427061857 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067236123 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081429455 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088469042 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12994509 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087766433 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074219023 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141557204 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067495745 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.129424219 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079569157 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065969435 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206386984 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172941325 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.654140239 seconds)
  done (took 10.203664849 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095952773 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097061085 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06773872 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135728016 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098348064 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069614612 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070645214 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06686523 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086609982 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126984796 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089879105 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10059623 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065531402 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068160777 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083804071 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204176809 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081733092 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082346786 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07026547 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074864191 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118485401 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080606062 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079161513 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077927963 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128077258 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179772375 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09881404 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099012099 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068610758 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081840106 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115759141 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128390744 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066970589 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067557559 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12414893 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09616665 seconds)
  done (took 4.642751363 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.293731193 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139332345 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090211355 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130504091 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064308786 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.108817925 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106193646 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064891783 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080130338 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.19858317 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288420165 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.58067398 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110799957 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102940988 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06727768 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067734137 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064535625 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066013083 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.337617408 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106777228 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102848399 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080201385 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069177549 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067881394 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340181874 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066874444 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063265801 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067515165 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057433341 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122369841 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067062305 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.932262006 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124683742 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066528745 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100603873 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168904869 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.197256571 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086870277 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14259387 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067928164 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063615931 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149117844 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069974588 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065616384 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08302268 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103039937 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113350356 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065612531 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067062209 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162066912 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065073858 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078872937 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.000869831 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153818293 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078484005 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06537473 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244930845 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085974204 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069731351 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064078955 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.209446518 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13490103 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066918104 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065759987 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067715988 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068749133 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366855244 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065610732 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.984457939 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067201065 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075777343 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068265497 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069012425 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074515272 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071709897 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085033252 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065835268 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074477106 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065150036 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065099323 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066109341 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08328155 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.353634726 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065903401 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067474925 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06385603 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089582103 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095613725 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06754124 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065310974 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099789031 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.17075802 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065948958 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105837362 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066789699 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084021679 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06871215 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112999675 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064608182 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065375878 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.11012514 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067553823 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098386522 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069356101 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098732505 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081711888 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067742864 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398350395 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064951575 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064907477 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068209176 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065680186 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067149138 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066075802 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079427414 seconds)
  done (took 21.16140794 seconds)
done (took 38.459715452 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.266917376 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074724418 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07442086 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074427159 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074810062 seconds)
  done (took 1.819041014 seconds)
done (took 3.05432108 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118939577 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098390969 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06376245 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09441214 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064125352 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099011047 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097834277 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080069686 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098390126 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063629093 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094879938 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063625997 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06350352 seconds)
  done (took 2.351256045 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083813281 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081894133 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069362018 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081229199 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062879303 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081530822 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07960409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087788035 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080435991 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071238842 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06316353 seconds)
  done (took 2.071999704 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08297164 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082577299 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068754477 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080846733 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063361934 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083198197 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080171021 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084370771 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080882685 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072400606 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063112264 seconds)
  done (took 2.060662252 seconds)
done (took 7.705068314 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079054544 seconds)
  done (took 1.28730667 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582202554 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.109591502 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.0807997 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111251599 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182480293 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11819766 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277100467 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085916457 seconds)
  done (took 8.938264708 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101146149 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068643704 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067966241 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071688624 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071293306 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071251002 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068561665 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068106279 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070626214 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070672353 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07041956 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070088677 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068858835 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067618614 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068297709 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06858117 seconds)
  done (took 2.43443087 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091728568 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090393015 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072991136 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073598195 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071545438 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071407598 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073746874 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07310146 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069883298 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071291032 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073944402 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0726008 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070802218 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064655999 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073341171 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075038347 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070627261 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073595724 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074156224 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074088664 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073639386 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064076466 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070830078 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073150716 seconds)
  done (took 3.088638676 seconds)
done (took 16.96792976 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115729091 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071924802 seconds)
  done (took 1.406928821 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082664639 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082292977 seconds)
  done (took 1.389015644 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085524775 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065426206 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090990579 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078026683 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065810125 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065203299 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088694823 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065612599 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065491278 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065520726 seconds)
  done (took 1.960980125 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070890522 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08015546 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070112781 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082333222 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073877066 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064036023 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072254794 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06716905 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077739377 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062202381 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071525763 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082204187 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070939965 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083747255 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071725147 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068504032 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07050274 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067191237 seconds)
  done (took 2.539178634 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067628737 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068406902 seconds)
  done (took 1.366652005 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069132211 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065404274 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067786196 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065846201 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063037602 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062004496 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063075093 seconds)
  done (took 1.683756566 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.394873326 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109445382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.296153837 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070151059 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080701238 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247733772 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06464894 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069830748 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069537107 seconds)
  done (took 2.674527379 seconds)
done (took 14.257991399 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078903306 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08487819 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094488397 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.357320616 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090923246 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065077695 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11318742 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188149336 seconds)
done (took 2.311303237 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216933283 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611631613 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384083778 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196032688 seconds)
  done (took 2.421794669 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332851749 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085490637 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058638038 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065993235 seconds)
  done (took 1.787972621 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067150228 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069143526 seconds)
  done (took 1.379494725 seconds)
done (took 7.041105505 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06745924 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08431775 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065534944 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063195984 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065256392 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063046248 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06426502 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065650513 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065609358 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062988827 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067715756 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065163199 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065337934 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062816678 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062959163 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062881684 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066099473 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065701877 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063115352 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064963784 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063020282 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065080522 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062851512 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062949514 seconds)
  done (took 2.843032344 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085598294 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066626708 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070958617 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070376914 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069586948 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070449286 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070343353 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065617338 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07069089 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067328983 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069168503 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069941783 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067432571 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069474345 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06749254 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069469246 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070744758 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065586539 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067559074 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069634651 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070490644 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065853339 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06919908 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070223569 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068531133 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068931258 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067277946 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065799399 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070464748 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068666182 seconds)
  done (took 3.333272242 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07114973 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063776933 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064121514 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070116088 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063915289 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064702719 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06261142 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063718141 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064057431 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063052549 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064254902 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062921641 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062960871 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063902479 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064165197 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066317893 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07828614 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06327594 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062786152 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06384291 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066169484 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063025187 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06374343 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063358859 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.175144214 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063000071 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063859836 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06280519 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063483455 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062619014 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065702992 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066423947 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062677216 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069791483 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066288016 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062584161 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066622683 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062456324 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063052695 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062502112 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062556754 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062622401 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062689281 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069389924 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063116604 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064400541 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063196895 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064019086 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063051906 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06516909 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062122461 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062339554 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064843118 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063721833 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066305911 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062352749 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063302053 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062033296 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063632321 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062786531 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062542087 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061981579 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065009452 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063607038 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077095275 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06969135 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062899266 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065001072 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064100189 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065171755 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064514503 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076426755 seconds)
  done (took 6.025687423 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091685381 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086939766 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065297562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064594401 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06133957 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063898564 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067004806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063678048 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064976202 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069322886 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064045818 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064426275 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064665667 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076060556 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064342461 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064896531 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06926869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061165278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063240583 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066587235 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063622834 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066711479 seconds)
  done (took 2.751249773 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156108202 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069964533 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105240627 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072468495 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066783322 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072320497 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068863655 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069006445 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069488808 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067488306 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067612756 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068993428 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066816913 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067399863 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067436586 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06769189 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069400728 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067856931 seconds)
  done (took 2.620858628 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078808919 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065806997 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085926986 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065625965 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06559194 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06766702 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070063829 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073227038 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06774888 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065291426 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073286276 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067595862 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067812064 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065291895 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067684884 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065356555 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067722317 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065225654 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072995753 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069981642 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069994904 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073663872 seconds)
  done (took 2.79344075 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080531392 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068996999 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081805749 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067734714 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06145692 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063618271 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06928108 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065182663 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069517673 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067297453 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065228797 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063630466 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068727062 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065510096 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068579446 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065374801 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067019375 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065466047 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0669029 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061245112 seconds)
  done (took 2.614234443 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088278831 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069095828 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067437031 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075679916 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066573117 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066685735 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07417811 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066704325 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066634266 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088432349 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066616605 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066525943 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074132434 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071721731 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066562332 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074385118 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074094262 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074094397 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066238552 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066395882 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085845893 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066640271 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074165974 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066289459 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066327022 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066324565 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066578653 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071407899 seconds)
  done (took 3.258469675 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067473926 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066723225 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063341824 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063540735 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063011588 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062376935 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06280305 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062902486 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064915597 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063256002 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065516365 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064939112 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065394799 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065017301 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065632357 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065594372 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065026217 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063010635 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062862121 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062784661 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065406278 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065365411 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065285051 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062765981 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06284422 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065100137 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062819641 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062468646 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065235255 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062613716 seconds)
  done (took 3.194617363 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077394044 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073353259 seconds)
  done (took 1.419308141 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06499513 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080970781 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062652113 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069088928 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068763965 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06611754 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073078837 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069062239 seconds)
  done (took 1.81695625 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082923174 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076950117 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067556281 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080048425 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075942199 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081963748 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130842519 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066257269 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072379807 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063700136 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079121726 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064821867 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071981164 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066180951 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070922373 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071530725 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063260469 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072068234 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067545938 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064231726 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066739328 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074380059 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067530138 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061309442 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066739618 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087259342 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076419153 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065065284 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068166069 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072498582 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070993512 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059482222 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065429556 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065662847 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063468601 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075503759 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080230859 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068444337 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074094595 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066619797 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076176639 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060843329 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070254487 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072031465 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075588108 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066104592 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066399855 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060910354 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063849083 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067929544 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061148257 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066268902 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060650552 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074978512 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069341146 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076249135 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064730588 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067803694 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068880294 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068967983 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072156051 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067645273 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068171617 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065175466 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075069352 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070412404 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074314879 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061019289 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059969838 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063569984 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075075688 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087327595 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071687784 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066079966 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066823569 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063332265 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069206623 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066543651 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071165953 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.0722044 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065732591 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071133558 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073242607 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066339317 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068467487 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073925379 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064157876 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068605967 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063851044 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082140002 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065277043 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064072815 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06391098 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076821508 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069362765 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066083037 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06407774 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073039257 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060060256 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066322375 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066683758 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06632266 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076239081 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070116759 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070355285 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073816931 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072549007 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064829224 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067556418 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062355796 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065678045 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064109338 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071748016 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059005063 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06718569 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065487813 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064815788 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200853868 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065482065 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067733948 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074706749 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072179177 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065136973 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063762289 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069632181 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066612212 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069886178 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074307074 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065668346 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062225771 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061508559 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069667904 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066057523 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070503141 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070991487 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069537124 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060495323 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064682102 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071263354 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07507024 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066776975 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067560055 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072614272 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067654199 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065950647 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072861854 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0688402 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.0652229 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072186386 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068019242 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061880241 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069622268 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069145779 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064302439 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069662428 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06979069 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068497163 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067069694 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065493275 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074368641 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06681103 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065802065 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066985017 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064748825 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076913415 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068496847 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061621701 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063101348 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074835573 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063958297 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065401097 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065429516 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067915026 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066787204 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064302809 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065834703 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068196294 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076359094 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070525152 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067167227 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071439706 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077066414 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065430072 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068601243 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065657666 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067502199 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066722799 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074403439 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071317304 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070157082 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068310662 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062496501 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071279112 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072981745 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064905732 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063477373 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064924685 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069559439 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071067014 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069751439 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066177799 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063797556 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066235929 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068647335 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068477326 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065373355 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064709977 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071996267 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063596345 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072433472 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066713586 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075701072 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068956949 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060838388 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06882788 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063809998 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071907539 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061241759 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063709885 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065401368 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067199803 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06467533 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069047201 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060124773 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072615362 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072955614 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065808257 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064751821 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065200521 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07142751 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066124885 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068364069 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068407609 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070484931 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075009646 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064456151 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06781754 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203784133 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067010592 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061048527 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071696461 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064823475 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066046389 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.0659068 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063913139 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07002461 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075401878 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072912442 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060531484 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069277981 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065274642 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065886459 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062199076 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071519825 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069374314 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067643826 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074010085 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067671094 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067330519 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070944125 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066384523 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068111325 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068333376 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069912078 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067319271 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068343041 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065882677 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069848193 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06596137 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064302446 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068314037 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065982828 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067000528 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071990686 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067058998 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066949071 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069017794 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067557098 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067101611 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066650012 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066613966 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069175747 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067862986 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06649972 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069027881 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061206 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073654094 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066868601 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073991094 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067793289 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063557782 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073091493 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069210839 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073051396 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066834262 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067194413 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067218894 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066056517 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069436059 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073248893 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06430109 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076842944 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074662121 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066574039 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069280503 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066627688 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067992687 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065389752 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066873406 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067004434 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06701385 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065762751 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071369991 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06852256 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066077468 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067514912 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067137516 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066382861 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067154565 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060831962 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065502612 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065451319 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066510499 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076095979 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066727328 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06587717 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065283635 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067086422 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06488201 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063213849 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074118711 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074946826 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066686583 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073109349 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065673957 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067714786 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076834998 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060305431 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064477134 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064027543 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064043609 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073096874 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066818438 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074924102 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066028368 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065332117 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06331753 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066413347 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06448 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060242091 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063458995 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069036716 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064575372 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064131648 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064691667 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067160062 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065570293 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073796255 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063924509 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065373183 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064663362 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.19428922 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066535531 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066273006 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069723546 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067015574 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065061978 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063892676 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066186796 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067105371 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06835821 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066905526 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06913541 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075812632 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066485881 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069713594 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070270308 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061255337 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069981849 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066503429 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065990157 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066380544 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070247197 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069508706 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067993736 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07550326 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066742222 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068543633 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066135896 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064498528 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066664113 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066731415 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067725598 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06556942 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067613429 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074870753 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065122592 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06961344 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06605273 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067068804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073016985 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067743567 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069719861 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073309448 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067428459 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068031083 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074979402 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070577082 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069878027 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067601933 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068403833 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072488814 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065517857 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073452069 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066529244 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066314991 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067665395 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064490146 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065563594 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066493485 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065727664 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072168754 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067447025 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065958792 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065780413 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064889168 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067466164 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06954903 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073986483 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068785077 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069724923 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062043766 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064042029 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067713766 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.0647926 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068175173 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068897722 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071921639 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068146349 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066397669 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065082752 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075215159 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072035797 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069833937 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064293827 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069664699 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066665636 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068167723 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06685339 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066370463 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067185436 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069779746 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067551017 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065189921 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072977814 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069184915 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066483313 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067467624 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0669985 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066372468 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061267729 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066991882 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067835836 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071054181 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068323097 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065507352 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076179233 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063879991 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066315424 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069135555 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065078792 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069955518 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060930335 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066951954 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066426595 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066468611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060773051 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064984654 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063766136 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067067365 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064121315 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060054589 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074746228 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073311069 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067436354 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063622182 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.195963768 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062365488 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061765971 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065880648 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067572123 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068251824 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077065521 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065831673 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065407863 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061892527 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067241551 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069758764 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069475223 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064805729 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061582862 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065371729 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070134137 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072669532 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065473109 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066307417 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069786834 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.0685304 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064739848 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070194752 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063514196 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070896232 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079710639 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067793551 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067634908 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073248635 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073633351 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067293168 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062412326 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067683972 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070049218 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067748027 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067740433 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067656607 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081559993 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069458201 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065221959 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066540681 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068949017 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065405663 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074561662 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067384364 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067122642 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071059319 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068770451 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075975841 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069169497 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074616852 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069070125 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069366764 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066085265 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066612976 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064207523 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065490687 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067785356 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068279215 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071807637 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074792848 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065614529 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076779329 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07538253 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06787723 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062697141 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06572477 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065423878 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061114761 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.0672358 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064232551 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064338382 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064517528 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065003159 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067056393 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071257393 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067063792 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066585936 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065754012 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060071667 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068116548 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068193207 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066804102 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062507141 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065551955 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06620988 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070383194 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069266908 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063823102 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067614456 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06770009 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066713405 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06177844 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072254257 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064993093 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067864235 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065142782 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066086654 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066802122 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069322173 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070447512 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066862898 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06805489 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069672248 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067860175 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063041654 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063400534 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070956679 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063815256 seconds)
  done (took 42.418245755 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101166978 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062900091 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062366151 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061428866 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072853436 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062466934 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061256544 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062845003 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062481494 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065055183 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061434068 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061371277 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070245148 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077802101 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07350966 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065991005 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061413845 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062756926 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061536126 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063089777 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07053097 seconds)
  done (took 2.765566045 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076236652 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072003355 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072745384 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074910088 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06656632 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069991001 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072051516 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070343535 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075623701 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066664561 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083970738 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07007263 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066792593 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066781652 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066364322 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070660194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075217938 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066783734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069835908 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071978081 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070118827 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071818148 seconds)
  done (took 2.904484734 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069407127 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065587029 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067798777 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061235025 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065871441 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06119517 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06878744 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063891945 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068609459 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064715462 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064492233 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064704992 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067369073 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06098948 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065793315 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063437038 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10752335 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068360662 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065104241 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066082666 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06080927 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067460505 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061124523 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061427295 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064525909 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068621313 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066075311 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063705797 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064997845 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064339206 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065334343 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063520502 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066881551 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0659988 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064793231 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064929498 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065180207 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06560101 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060817188 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063414772 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065812492 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061150463 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065704808 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066811362 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063520992 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063038589 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066623206 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064935441 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060767258 seconds)
  done (took 4.558780836 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08233091 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109061672 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068007775 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087677645 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079347804 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075013009 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068704489 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088575975 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062726101 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064017563 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080955737 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078791233 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064990584 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069968165 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072101897 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065622305 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066393138 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064347571 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068939328 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064580289 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069225584 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072437626 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079245686 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078068903 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069001789 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06423231 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064612476 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069222628 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07740877 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069710464 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069520661 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070559791 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080060693 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070254888 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064620828 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067574045 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080734908 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06576969 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067817275 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063133218 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067555011 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069476627 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071976336 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081165475 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066064507 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070310244 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065235613 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06292808 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077588108 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067540582 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073552802 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079554036 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069008469 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06569711 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069461213 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079735665 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065121513 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063647364 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068105837 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077202318 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063237299 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069104067 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078968906 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06720771 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072186878 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078868468 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070321559 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068755765 seconds)
  done (took 6.351075071 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076772978 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.073232421 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079471397 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079466347 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072029207 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071873145 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071810381 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071776608 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07155815 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076485818 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071786792 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092326501 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067613869 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074952809 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072043326 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072408715 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072207939 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072121742 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07204318 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071807404 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071797956 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079876512 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072301649 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079276392 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097749967 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067289715 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071573485 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072003221 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080031971 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072192935 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079296333 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072262367 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071713575 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079562736 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079051677 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071781194 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064719576 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071386108 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07191163 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071576558 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066834509 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079664437 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071168442 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066966509 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071441246 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071393068 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079089106 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078229927 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073738963 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075975046 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.0713086 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079288941 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071038321 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071449065 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078998867 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104248092 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079044326 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079908126 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072105185 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0793516 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079053726 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08517967 seconds)
  done (took 6.025452647 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084766817 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074307582 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076748617 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061533995 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06387461 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069510963 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063720837 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063965832 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074498829 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073815177 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07633259 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069255775 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071973346 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076159826 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06907792 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071911268 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069223702 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069623521 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074254127 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068866941 seconds)
  done (took 2.781936513 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076183118 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083521349 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06612478 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071541035 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068585027 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07141237 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068289287 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068514362 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066484563 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068598658 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075668616 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075311267 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066984717 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071279598 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075013907 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071250112 seconds)
  done (took 2.494837044 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07678622 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073508325 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079243904 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066048469 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064173817 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062415719 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065814375 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061033421 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06219764 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077132857 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065384506 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068023908 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065267907 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064184853 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062270216 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068234009 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062087472 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063016749 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065375307 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077436088 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076086147 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064801991 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066250398 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065850796 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065607344 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07066554 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064906741 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063194052 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062976608 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065523961 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065467686 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068863193 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062677528 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06331579 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063962379 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063305646 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064830276 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065611953 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067791634 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065070424 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063244961 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065294574 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065504241 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066213541 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061692793 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065894577 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062076075 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067209463 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063625691 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065657398 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065204145 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067684135 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06585103 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072120786 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067943465 seconds)
  done (took 5.004008651 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081393256 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070830787 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062104729 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064482946 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068472787 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067322323 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068715731 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067143031 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067863426 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063869142 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067208156 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06803615 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066944573 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069164063 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067154723 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068944409 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061619009 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067331733 seconds)
  done (took 2.584104017 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073027104 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065872852 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073176242 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06566403 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065612249 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068242974 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06170105 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064440058 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063992961 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065555362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065559755 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06741415 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064125916 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067773094 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065592052 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065737132 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067479961 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064177148 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065243165 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061791721 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067467903 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063930287 seconds)
  done (took 2.809503238 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094972517 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.0825523 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.13727405 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078107947 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082556482 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071258547 seconds)
  done (took 1.905779173 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092675877 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079920533 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06645944 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088499705 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072701627 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06664406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067028304 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067005165 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075388603 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075426218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06684611 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075252451 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075416416 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074868234 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072527887 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072221277 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066475824 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066833894 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065906367 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08354146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066978727 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075692406 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067315337 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066535361 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067397592 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074593688 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075273705 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075480834 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066708838 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075309835 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072369435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066960909 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075723164 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075559926 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068311552 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075231053 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066747349 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083658582 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072358138 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074249742 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068124476 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072814137 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075281129 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071958848 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075194786 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066856646 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071276381 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066801506 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067013352 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084956286 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072407267 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074133397 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072401401 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075443218 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075283939 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085412115 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075684945 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074869645 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073195931 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077937426 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075170216 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073130077 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074407381 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075517441 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072856125 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07458775 seconds)
  done (took 6.199245316 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083738951 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086603087 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067670055 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075935055 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075060744 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067046204 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06697582 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066962686 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066854096 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066952939 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106737321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067293177 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074834354 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075272869 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06740895 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067252697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067488666 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074680435 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066811124 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085344068 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067079385 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074885891 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074648638 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074594816 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07553009 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072929453 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066920319 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066923304 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067006446 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066960677 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071747617 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067388185 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074682111 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066537999 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074802608 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06718331 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066735497 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071811028 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067099909 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072580282 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074868199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083037941 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067298842 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0668465 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075721438 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066803229 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067302907 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066771788 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066870647 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066879867 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075663364 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075703593 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075305588 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074554121 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066972174 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067018945 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06706266 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067079396 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067051581 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072420061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074980868 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066878489 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085503149 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067146038 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067237994 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075233437 seconds)
  done (took 6.112066848 seconds)
done (took 128.825118957 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184093067 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165655537 seconds)
  done (took 1.70164619 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071185932 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098177971 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077212147 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128067923 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066594798 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10039785 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09935026 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077377431 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065760832 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065816433 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065595437 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068348433 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131492801 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066055693 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065591326 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068589496 seconds)
  done (took 2.683707314 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099394406 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15694903 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099708603 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064613931 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096568818 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072624869 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064561623 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074244341 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070229178 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064754336 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072510805 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070735348 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064644575 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070029317 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070704066 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072565162 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064974592 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07261051 seconds)
  done (took 2.792602169 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103772481 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090188136 seconds)
  done (took 1.56943626 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157153401 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105872871 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150361524 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343438474 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166719026 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22926482 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130023409 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127842686 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11684769 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122838889 seconds)
  done (took 3.025811767 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100214656 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152517986 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255184618 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114302798 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07155502 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094252865 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115706122 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077391925 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080214848 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079817593 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080718102 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075814887 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097787481 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072988554 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072917565 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075451711 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102042494 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072505928 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07361049 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076242937 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098670004 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065242015 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073271685 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071658419 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076929388 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076848929 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065155313 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065164319 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076163091 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07363695 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076424439 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093614196 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076959484 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106131095 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069946204 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107735315 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076634405 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073455016 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073874399 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073512138 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078491151 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078155646 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07218839 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075638921 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065258095 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075942319 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065317633 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065515436 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077919144 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06741002 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077806424 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076586403 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106307639 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066905157 seconds)
  done (took 5.964717974 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104565589 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103287721 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071247413 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110161592 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09977295 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071443098 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100405203 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092862789 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102356188 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069814312 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067965098 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070046831 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081703973 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082754095 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111951411 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103658363 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073610515 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070477792 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104092871 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102063222 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068009259 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095105023 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.0895732 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101762264 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067219663 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070030923 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067538553 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070426871 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076563568 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078448526 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069814186 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080785135 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08450952 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078261887 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067091991 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067557557 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067894359 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079405284 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079223688 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078916821 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07718277 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067119359 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067725791 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06876452 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069613561 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067300075 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07876574 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080134835 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078527921 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069347276 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069720722 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067436499 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069182797 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079735002 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077389581 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080643116 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079854964 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068170659 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068511649 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071200047 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080698724 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078972127 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079113178 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069252839 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078822434 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068247997 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080121919 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084074602 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068047304 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069766859 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068237227 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069359834 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069312256 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077923379 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07788297 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069750183 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069133286 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067985063 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079963273 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078483881 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067799499 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077011259 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066931747 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068620903 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069649786 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069835788 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077376709 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079415901 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069731941 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06779752 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069194444 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068121155 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067057272 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075903052 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079231692 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077982165 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077693455 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067903592 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077140732 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076654794 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068260496 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079062446 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067041909 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197833571 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069809518 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07958223 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078983423 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079262026 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069084421 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068706166 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07860449 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081330745 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068298193 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079485379 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080441551 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079731286 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068103796 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082530664 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068772839 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079487101 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06970876 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080767852 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069124872 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080685341 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068742359 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067926291 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069465037 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080220611 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070001706 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069478381 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070402252 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069534729 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080567271 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082599221 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071118422 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081013229 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079334454 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070300762 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079268766 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069656191 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079753854 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069873153 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070204524 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068235105 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081872389 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068876003 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068707897 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070036378 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080426349 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068955141 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081678854 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077764507 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068420729 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08259195 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080003152 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078514766 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079812664 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070077587 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06841072 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06791096 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069938988 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0784247 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081000739 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070340259 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068809959 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078644881 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079706058 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067537899 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078150903 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077872692 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078485383 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068358678 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069529453 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080314333 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080765547 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078047873 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077891791 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077835348 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068340519 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077427311 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078140574 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067611727 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083966717 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067639328 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081933258 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079115762 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076580606 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078468031 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080369171 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08011401 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080064199 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082611383 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067372773 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067519567 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079540375 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068124579 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069099751 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077783753 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069051541 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069044403 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082115596 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067629005 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077820839 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066047355 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076552367 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06550444 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068478697 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081575365 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.198596899 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069804063 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080547694 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069814029 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078632633 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081567057 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078961142 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068532734 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06950778 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080524237 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079868633 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068407543 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068020876 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071143811 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078605169 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077525856 seconds)
  done (took 18.633769975 seconds)
done (took 37.75387629 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209910846 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150187691 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.197501946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117166946 seconds)
  done (took 2.157184116 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12572764 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101025251 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094288598 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064788406 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101480719 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064783169 seconds)
  done (took 1.966744496 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316735096 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210958982 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181764122 seconds)
  done (took 2.124914629 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207005125 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186145124 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39234617 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252113155 seconds)
  done (took 2.565580141 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142498926 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08841433 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066873831 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082454734 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133195742 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159477642 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100709409 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124945505 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077345524 seconds)
  done (took 2.449083715 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146226144 seconds)
done (took 12.828743398 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12752611 seconds)
    (2/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.179856559 seconds)
    (3/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.082381917 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.124206407 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111501341 seconds)
    (6/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.216882541 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.100883296 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076807238 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.119268823 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.0727126 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072571534 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078463205 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.203488616 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089377203 seconds)
    (15/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072766748 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.21725556 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.104721275 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133542365 seconds)
    (19/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.196731968 seconds)
    (20/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052137051 seconds)
    (21/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073227349 seconds)
    (22/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.081878618 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091556997 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052718247 seconds)
    (25/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112195446 seconds)
    (26/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081002801 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120165146 seconds)
    (28/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073039124 seconds)
    (29/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089950772 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.182224011 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064672333 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.208738301 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073190843 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07091886 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089177897 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074666995 seconds)
    (37/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.150796609 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.081374045 seconds)
    (39/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12777269 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.193460283 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072945307 seconds)
    (42/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.181938809 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.093882802 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.181398889 seconds)
    (45/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.124372675 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.148186754 seconds)
    (47/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.108462706 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.157507713 seconds)
    (49/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.201156026 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088126266 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157617598 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073249144 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073053621 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173267247 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072331121 seconds)
    (56/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.150873544 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091438159 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.183531472 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074783003 seconds)
    (60/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.08820143 seconds)
    (61/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.117176481 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.090786025 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066761024 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.168196942 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15113098 seconds)
    (66/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075984055 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.175395639 seconds)
    (68/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.148978493 seconds)
    (69/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.108102637 seconds)
    (70/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.155866999 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.177201892 seconds)
    (72/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079916532 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064354657 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.071792859 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064514985 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089747948 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095638883 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141093755 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.192284454 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052131853 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050819242 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.214377022 seconds)
    (83/309) benchmarking ("sort", Float32, false)...
    done (took 0.127903693 seconds)
    (84/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.325812179 seconds)
    (85/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081546622 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075797242 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12844831 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066389757 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09076485 seconds)
    (90/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074375172 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065570741 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.065803761 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067402739 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088162375 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052317718 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109163535 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051970557 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072302265 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076620312 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065575799 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053656276 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.135198219 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148481979 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07101765 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076308359 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072005778 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.150400777 seconds)
    (108/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147724457 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075911383 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077322285 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.071329924 seconds)
    (112/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053878675 seconds)
    (113/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065557178 seconds)
    (114/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055124587 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064695222 seconds)
    (116/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087993291 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150540167 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072101638 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071508908 seconds)
    (120/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.148950789 seconds)
    (121/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068442559 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072255219 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088850792 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07325372 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13455862 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050927299 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134790204 seconds)
    (128/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075141163 seconds)
    (129/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071888251 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074264509 seconds)
    (131/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071414988 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077363654 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05133279 seconds)
    (134/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076893155 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163284075 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08902244 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09160466 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064807198 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078236797 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.13158193 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072923481 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.184354296 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167181061 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089027157 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071233242 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051833939 seconds)
    (147/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066203576 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.130564859 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064735475 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06982402 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067854939 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07120442 seconds)
    (153/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.14902732 seconds)
    (154/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.0508702 seconds)
    (155/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051413961 seconds)
    (156/309) benchmarking ("sort", Int8, false)...
    done (took 0.13803345 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.0694678 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085754837 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065637421 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072219144 seconds)
    (161/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070988795 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06466544 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088567875 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064221382 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067666952 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.137841656 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064057749 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071357726 seconds)
    (169/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06658514 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.153758313 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064280012 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051063525 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070089025 seconds)
    (174/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116822778 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072905249 seconds)
    (176/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08528252 seconds)
    (177/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074350986 seconds)
    (178/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.105698261 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107500373 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146834026 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06430685 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085747735 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.061943419 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.05160876 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070809876 seconds)
    (186/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.107819772 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085081866 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110786702 seconds)
    (189/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.147050706 seconds)
    (190/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.096259528 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.209316136 seconds)
    (192/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056483845 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068035835 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065450775 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167543243 seconds)
    (196/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05262279 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089200168 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072490111 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051947444 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135724897 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074536821 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052259127 seconds)
    (203/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060492474 seconds)
    (204/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070845794 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065949573 seconds)
    (206/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051921794 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064085933 seconds)
    (208/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182846182 seconds)
    (209/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051908764 seconds)
    (210/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051857934 seconds)
    (211/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078840459 seconds)
    (212/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077370119 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051172028 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06420381 seconds)
    (215/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087905879 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066804076 seconds)
    (217/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08829818 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088536036 seconds)
    (219/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069139463 seconds)
    (220/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068225589 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074718897 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072036079 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052604565 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075760292 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066021114 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070743918 seconds)
    (227/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066528535 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051048989 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050784974 seconds)
    (230/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051003079 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063866261 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071247855 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109635899 seconds)
    (234/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06663099 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051557911 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087089767 seconds)
    (237/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05207294 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131236073 seconds)
    (239/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062452467 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086900611 seconds)
    (241/309) benchmarking ("sort", Float64, false)...
    done (took 0.125324668 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.095571025 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111675097 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051437835 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051323087 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137652524 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061468404 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052161709 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051991076 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065138815 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050692973 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175287179 seconds)
    (253/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072640947 seconds)
    (254/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060749785 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066467593 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065246294 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.183433569 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06500524 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052230242 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067361553 seconds)
    (261/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06152552 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05205378 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05103516 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092509125 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051542571 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070835561 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066283932 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050997668 seconds)
    (269/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111014581 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072061615 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085325447 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064698165 seconds)
    (273/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05304104 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050757578 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.172908387 seconds)
    (276/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06868267 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125388614 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063764818 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071071608 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086436429 seconds)
    (281/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051066977 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06494406 seconds)
    (283/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051638594 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051547174 seconds)
    (285/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053465908 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065053885 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071881798 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064903164 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063315748 seconds)
    (290/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072417057 seconds)
    (291/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072133982 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063838787 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052427392 seconds)
    (294/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052409954 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071931287 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.112797398 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06612976 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172119808 seconds)
    (299/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078946203 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070923623 seconds)
    (301/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051080249 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069988623 seconds)
    (303/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05207252 seconds)
    (304/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05124947 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06556815 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069769135 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064492391 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13704639 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050801102 seconds)
  done (took 30.235272043 seconds)
done (took 31.664806838 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088164843 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09331849 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074551606 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091951485 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080035979 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07581461 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071778433 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077380527 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079289668 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080370087 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077442891 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054400846 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073295624 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073376968 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073723783 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089893877 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077190524 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072149702 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07189106 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063845924 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072366541 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065025323 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066839021 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054317055 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077045086 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070561979 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071655837 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073268507 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065333697 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065448508 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068447228 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072729172 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065166293 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077072706 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.0715533 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072344502 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074248081 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075415176 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066691434 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065394259 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073323101 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065424171 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072232704 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072733177 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071047326 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070924714 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072279924 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076881988 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09026708 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067105897 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073566863 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074824218 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075972921 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071646592 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068432181 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072139481 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069967697 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090002089 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072775799 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067298373 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073295176 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072582536 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070048651 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072002641 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072087704 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07431938 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074117945 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070277899 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07364663 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070342959 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0645699 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072361556 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06835922 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064951188 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074896051 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075788499 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063831641 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070172579 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071418972 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070415515 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064024839 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067506431 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066181501 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071096734 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066660625 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053873031 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068420058 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070960107 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063581746 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072261883 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070624748 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070900032 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066015427 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074216646 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063698374 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069697966 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064828416 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064878276 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066594577 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068039212 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064668071 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066771864 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073540046 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066080288 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070538208 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078245622 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064637017 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070955549 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064015736 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064077313 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078478263 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073495414 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064519105 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067048221 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063356539 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071087805 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063985014 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064333134 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064228631 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064447592 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069600042 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064382662 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066366467 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071050947 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075727782 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064060128 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066753095 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065700619 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063628018 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068613221 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063758231 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.198310923 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067213957 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061735948 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067418707 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065236017 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072358954 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067134581 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07287272 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066484259 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072851353 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069442097 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071110716 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070319181 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063331409 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058765949 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067694143 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067601142 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066578104 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065287627 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066794006 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065132807 seconds)
done (took 12.345932246 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068582202 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142493352 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098838281 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094504856 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085025657 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066191908 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075585643 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100517907 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067509206 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101692413 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08633985 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084590631 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11119187 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064599251 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065793584 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069771687 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066681842 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080775706 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099895577 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085672643 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115012584 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064544141 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093498496 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089148263 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086528179 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100556325 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066953774 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068990158 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069416435 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090075197 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085311399 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069169589 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065944596 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099756197 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091493705 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082259715 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065616383 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081366895 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065739322 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064923509 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06679174 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097016858 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078986582 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079603137 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069166126 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068623032 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066384605 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082591354 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087841136 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077987596 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086016788 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101608995 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067895356 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065277963 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06401614 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084453587 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064535198 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067914645 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065629541 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067883448 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065213402 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068642604 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080111922 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080915294 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069296986 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079277839 seconds)
  done (took 6.763015632 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086125052 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090203718 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082963465 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082896342 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064725172 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065477276 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065832157 seconds)
  done (took 2.054131698 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069077304 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087361859 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088414879 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089159528 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083382956 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08693311 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075013023 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065755506 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079932063 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067154909 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085990152 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101105936 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066587678 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071970263 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089208516 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066173601 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088910539 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066472236 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069205219 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089245592 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067552625 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081152154 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069102636 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0664599 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079614922 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066284705 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111977493 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070567299 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067459987 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069137772 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064306603 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10600793 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079780806 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07470796 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065902113 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080064312 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.07967359 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064217394 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081916817 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070529586 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079579069 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066248721 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066662009 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064047954 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070149251 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076178887 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067011108 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067230513 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068521059 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085370689 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066818899 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079487107 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069263645 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068532929 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067902776 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070092632 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075329538 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066862762 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08556727 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06702462 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082579356 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081556048 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079221116 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081457755 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068335019 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079146602 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079151159 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068367829 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067307699 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069153327 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0815674 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064108501 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067067092 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075996481 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067233166 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08833369 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088272208 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067035639 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075081922 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066803294 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06620091 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066177632 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088089471 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068357482 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06594324 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070475613 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068672429 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06415415 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065472194 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069328966 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064452791 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067434187 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068427422 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069061281 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068666963 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082360538 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068086245 seconds)
  done (took 8.715286545 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071361191 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06938742 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069118695 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067663276 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067204766 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067549167 seconds)
  done (took 1.954700962 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096891391 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068755471 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080131047 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071761563 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10367115 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086257887 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085803486 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077852935 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083030892 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078600769 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085864579 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087990912 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091906915 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072400302 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085422002 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071395956 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086766746 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075233143 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077574924 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073278502 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085931699 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072202928 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072505495 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080550145 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074795781 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071404424 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066770461 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078567383 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077917968 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078147237 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072286502 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074958924 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070506119 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077934395 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085945465 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070379592 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071052586 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076566895 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071819312 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075080351 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087126111 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072613378 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074053967 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076694418 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077725973 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070897219 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07644693 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07550726 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085110467 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077126196 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076276791 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070746529 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074449227 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076089318 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07011968 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077667064 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076312849 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085534117 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07163605 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069859582 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068397748 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.0746929 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077053808 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074643349 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078029472 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076457131 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070329231 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072304399 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072415398 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071095842 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076399562 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068541747 seconds)
  done (took 7.066837193 seconds)
done (took 28.0547385 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542496368 seconds)
  done (took 2.047587341 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602289699 seconds)
  done (took 2.133765243 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.793618176 seconds)
  done (took 8.320256656 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405824333 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.488814836 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.692292089 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131234202 seconds)
  done (took 3.292890819 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.678911867 seconds)
  done (took 2.218514918 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214236017 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197001761 seconds)
  done (took 1.958387664 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382406204 seconds)
  done (took 1.910945255 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.115014348 seconds)
  done (took 2.645045055 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26870824 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163732738 seconds)
  done (took 1.969020992 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.467566143 seconds)
  done (took 2.000409068 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.865268637 seconds)
  done (took 6.39459661 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212318238 seconds)
  done (took 1.787412037 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24233369 seconds)
  done (took 1.775506682 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.739910076 seconds)
  done (took 3.27353156 seconds)
done (took 43.266041762 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082587251 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080690716 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080674757 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.0775726 seconds)
  done (took 1.840618472 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078779719 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073112936 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075561237 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072724006 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075941849 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.0718651 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073612891 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076297203 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071610251 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072715476 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072043888 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071854652 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07441706 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073813776 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070055766 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074576383 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07567381 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071717711 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074813813 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071827671 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070458763 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074475844 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074683233 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070989559 seconds)
  done (took 3.299861198 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079724754 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074783818 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075080453 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071116654 seconds)
  done (took 1.846850667 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079378529 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094031832 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088537873 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076817551 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091503627 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084999376 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06841483 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068605982 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072930881 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076519391 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067410999 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094995889 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086936541 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07627529 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078158194 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065256442 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068396871 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086582012 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076750405 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076915116 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06952823 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076306101 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067200872 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087315149 seconds)
  done (took 3.421236798 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079962338 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103242586 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077385628 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087622871 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089176319 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064748342 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074144726 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088243512 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121760374 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064911158 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069476567 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06505183 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07190957 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064697761 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075367815 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10376311 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107218895 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067939177 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094986234 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065063717 seconds)
  done (took 3.188372822 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074582573 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069199744 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065910055 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068528035 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076678234 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.0734037 seconds)
  done (took 1.978525523 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070631261 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066862686 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067241778 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066573981 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070734071 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06642438 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065261941 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067336184 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06684872 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066186116 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065837318 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065349972 seconds)
  done (took 2.348177712 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.175182828 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068386666 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06868652 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065893719 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070481107 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066252204 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079529692 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067539198 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089849225 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066027763 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065820764 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067794515 seconds)
  done (took 2.500005558 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208267845 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075514892 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234672605 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135706211 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110162469 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114118168 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103586207 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112669842 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142047393 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101071286 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166906737 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164761281 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106273088 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135938925 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088306509 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097087052 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153999974 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160599714 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102699012 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164203793 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142804247 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123222104 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145676797 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100564454 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104692337 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120332476 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070226586 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079401289 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168115763 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129957275 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144961956 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110025303 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092322988 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174508194 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168400867 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141269667 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132942759 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08311973 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100873634 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131321406 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195602393 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087157727 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160623989 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245889114 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081136767 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132990742 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120859514 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118487903 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105372179 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089485222 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145029377 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18156928 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139820768 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086944524 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112885754 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114957211 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115816353 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102192608 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181198824 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160480661 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126993944 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071092574 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099340894 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153007183 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131339091 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108092673 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127207733 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092522956 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134203311 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154051839 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11753578 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142898967 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127863995 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087734166 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118161724 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138584872 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127022812 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168952623 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123856919 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072199898 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123787416 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102662417 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080553831 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141101359 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074285352 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17328497 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097080611 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10484829 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112190136 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107771514 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107165619 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15926482 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140955062 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243814055 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065507368 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104061938 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119829415 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146570852 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086567682 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107789152 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11569887 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078000744 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138392643 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07434008 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122008744 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074497116 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124017485 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131753618 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075271317 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120955179 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099796348 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098712009 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132723589 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15939075 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089627229 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081340808 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166996446 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1224878 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103269965 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142047817 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154337768 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097786627 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101493535 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148421705 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178123203 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088239864 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16124869 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10657542 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082689885 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086582385 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122799097 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110779871 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120598634 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08157377 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117370743 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166265689 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074499507 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094754969 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132091908 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077806602 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079382928 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101822896 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098966874 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093473995 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099198882 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102770546 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135355325 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121309087 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10245153 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268159834 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098228337 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168675646 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088382422 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099323213 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103533146 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069395873 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13525553 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155580126 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078922063 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163375801 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122788612 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104630738 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118314506 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082094057 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137985563 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078315674 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069811536 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144096623 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109104466 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109124502 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149048186 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103902782 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126538511 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119076283 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133520743 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130938439 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127637083 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104835195 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087009395 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111055767 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125016983 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072018735 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090213155 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079590801 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102949602 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094854748 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082390112 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140981426 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123542334 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099074594 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110478217 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09534345 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145511611 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075771288 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128062772 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117417748 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092533091 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149825534 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150235405 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129197253 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097976872 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142108068 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068882157 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07282509 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231802152 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123655704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082669905 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082971312 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117761556 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145006752 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128274504 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136918244 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111791842 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11984373 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154177063 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069645022 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114403394 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147078483 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121285817 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102699527 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089919452 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097909899 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140805032 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107102572 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180664401 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11422412 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125905675 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15212828 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098966931 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07909202 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107262616 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134123724 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103893006 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142787849 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098783507 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087097988 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109051951 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073501418 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099031645 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125940799 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119034942 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134090992 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113730267 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131424055 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07649205 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115584601 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119151379 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121227708 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063342479 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118290642 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159558056 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09251515 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117115277 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150869851 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078335635 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122485394 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32118028 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14519184 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084260449 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108744771 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119123926 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127153874 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118743286 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139870593 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107598876 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133765309 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108313704 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085497593 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087814302 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09664882 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10529397 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093999816 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106384982 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113917357 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093887984 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131849188 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10183538 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108753776 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117324439 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095149791 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089520461 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097219907 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173166437 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117907354 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169418791 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098446791 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143883778 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163020888 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073803772 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078066096 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078031915 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138687214 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083098801 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130181325 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097336089 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104461135 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123173835 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140707724 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094175696 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067823227 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107416842 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136274839 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111223719 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096761009 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103219586 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160070674 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099021128 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078337794 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111958005 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103208334 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101493194 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313966656 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062278127 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097756535 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075396283 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080769776 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126680797 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15259356 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079514077 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102338933 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117686301 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10983445 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126732434 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100359857 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098672073 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113559293 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148043032 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127758194 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088622717 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110501534 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12892074 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154651171 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104416924 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094417216 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170665748 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167886855 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158350288 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08751641 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113153279 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113007821 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107058932 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138104129 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082453665 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163128829 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081201941 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135465272 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102887924 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089736133 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128905358 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098112848 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087224281 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146803181 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116593606 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082011382 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077075369 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116664985 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119095187 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104413349 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074517957 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136830615 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071768045 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130054523 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166478149 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080233031 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248684263 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096289789 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080146837 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107055101 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102447279 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088961845 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096913499 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171541285 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087157326 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148626974 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141092906 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112617052 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136420435 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098934566 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634813443 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07666587 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150101041 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115686526 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171395057 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096729587 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116124134 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10872164 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12366627 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144090227 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103954864 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175833016 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130365517 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115189378 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078632651 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101024261 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102224496 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088015596 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103946326 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112357072 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114867446 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092795516 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11454135 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122009744 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08102073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094265659 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154554303 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116163215 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142565654 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138962018 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083775397 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115658165 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136537986 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079051131 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120536573 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149594969 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104681044 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241259548 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.07965316 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10178944 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168614745 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072382916 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162869241 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118305659 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108615662 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112545848 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11288518 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13157878 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107068522 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121006295 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092725336 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109584505 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111681094 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081052861 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076371789 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104063706 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110906719 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096680897 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097797631 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097029439 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149780742 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070483366 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094872632 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102345214 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143884579 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17288184 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087606481 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082457742 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118735806 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112002348 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112315396 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1194818 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078772816 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081537913 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081257351 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076816883 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107487996 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111363054 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103626355 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109790579 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16257106 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081374342 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221575589 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094631419 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103764997 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068804354 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077925078 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094732742 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096380766 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106897682 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099128499 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165536196 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092755301 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087962587 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09071265 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072328932 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226397796 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128863147 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110353241 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11895651 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096880648 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062409122 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108751763 seconds)
  done (took 58.406788049 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107373802 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082750742 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096440438 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148821112 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121650474 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210724648 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157165957 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198551712 seconds)
  done (took 2.772063571 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070094135 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095750689 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100118374 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082160672 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065908447 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067802975 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223748416 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079473301 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066002403 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087573573 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077716731 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069179698 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414798971 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065740678 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066802569 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061207712 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066497965 seconds)
  done (took 3.399031853 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371587109 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598708549 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.369835986 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072850524 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.868523191 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087637468 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.056510982 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126215048 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07326173 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525897581 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702253462 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126753826 seconds)
  done (took 18.629178762 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078112032 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070034153 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083381817 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083309528 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072157818 seconds)
  done (took 2.027977018 seconds)
done (took 107.228235613 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082153821 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.388798766 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053239374 seconds)
  done (took 2.111697675 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085310912 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083578004 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083776131 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081598388 seconds)
  done (took 1.989877821 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075933789 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077098327 seconds)
  done (took 1.798910058 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220548867 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.13764914 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086003795 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084742346 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079047774 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078652437 seconds)
  done (took 1.896266742 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074135874 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07501381 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072033921 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074678442 seconds)
  done (took 1.943577724 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077848366 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051925632 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054738409 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055846306 seconds)
  done (took 1.888714307 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088267548 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080308564 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076890285 seconds)
  done (took 1.894367354 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103791553 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084706376 seconds)
  done (took 1.838386419 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084374157 seconds)
  done (took 1.733588794 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101585312 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113341737 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126998183 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108633318 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13501999 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107528498 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084551413 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085836847 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076213166 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086660619 seconds)
  done (took 2.674813426 seconds)
done (took 21.936120718 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080908098 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.455564561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360463335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089038122 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.683362084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356119101 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978196776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091512755 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11232733 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067050414 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083757911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668237023 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.000150234 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.418192276 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.992091716 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317717565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649847569 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067569949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066967075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067290298 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964177385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067169733 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067080229 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067840924 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647769025 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369826956 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067481637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322556035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067020918 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068809418 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353830946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067847499 seconds)
  done (took 16.369835981 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073881469 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11886008 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073377606 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083340327 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070719891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069152676 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071108182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068655896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118007026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067548723 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083530618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067111438 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071474599 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067836979 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086450147 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067476035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068346698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067921658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067953034 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068054325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086095043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067450406 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06762349 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067984248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067613343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079305881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068186909 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068122755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068018132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070038154 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070723754 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068761572 seconds)
  done (took 4.044436841 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11787768 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12457748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073666032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102368084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112934982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069570364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142478938 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092188539 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126412024 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068060279 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083818325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067602415 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100174931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068453596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087009704 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068460192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068800349 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068731733 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067872499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067989063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086826874 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067630215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067957568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068386332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067941718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081064233 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068393526 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067909871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067957698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069843715 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071471127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068538026 seconds)
  done (took 4.297444598 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075387974 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076682757 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082407914 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08351495 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069404935 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07125917 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072404232 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069254611 seconds)
  done (took 2.26913157 seconds)
done (took 28.637040744 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081611286 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069539895 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07176485 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080755083 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073160624 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078708123 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066821446 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074524312 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071646138 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07198316 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074016878 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067229057 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070751967 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066763932 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072867304 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067182573 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078525086 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071110268 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078308724 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079052197 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069448212 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072424862 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073770623 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078375203 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078548253 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078240521 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076750354 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072414199 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068616194 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069972885 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076026694 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083219989 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068083352 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078819154 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067418403 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06709806 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071420742 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067480142 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078513911 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075871724 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06893971 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075784693 seconds)
  done (took 4.725405633 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089791526 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089945971 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08467073 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061791434 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065639157 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064245989 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087806098 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059042966 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059442384 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087053839 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05590299 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058871696 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061972727 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053749803 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058746543 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056736699 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061080699 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055577315 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059103244 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059280122 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057584803 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053769952 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059660946 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061985665 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058708527 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061400269 seconds)
  done (took 3.356418873 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076917081 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084306759 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087843985 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125614686 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103293935 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076039558 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077370781 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091574993 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084263997 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066374371 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070401842 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092285364 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086925515 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.084219865 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067114139 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083428753 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080986325 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068362504 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072819917 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08989162 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083386176 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082774929 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09189806 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080296281 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06598445 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069003112 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070634987 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080438274 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071881956 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075959022 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070992982 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070304446 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068598068 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07801487 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070838293 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06888848 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089702783 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076623174 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076803825 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067343219 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07090066 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067908122 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.08886309 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121598004 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066349447 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07353198 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074516104 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076299419 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06703512 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085112304 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077928752 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06654974 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069917528 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06644012 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06720524 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080193161 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06899211 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069499075 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076493319 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070375804 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08504957 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070773242 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081939638 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066823867 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074565816 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066295584 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067917412 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066012248 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09260422 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068800714 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107549622 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068311342 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067807674 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075924361 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074738715 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072970837 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067513306 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081586348 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076978179 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070274337 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076132069 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07032977 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070041904 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086879426 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069037511 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068493918 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06770501 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072976664 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.06935671 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068499765 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07956996 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067512837 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070041799 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083186761 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066642085 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068576849 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07303951 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072273605 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066549902 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077542968 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.0717229 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067898699 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076211043 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066769697 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069797395 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077146513 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073154038 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066350895 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07146615 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07302618 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067870198 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068303109 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069951598 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068434519 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074775506 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072947617 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071376767 seconds)
  done (took 10.517951747 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163754105 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154236263 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069880882 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142897898 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076079522 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078955701 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146821245 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093681456 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067333028 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068251243 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068557107 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109108701 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104970406 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114139802 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07777253 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067080664 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083173511 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112761122 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147564661 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141566113 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083064752 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076034582 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069351683 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068376138 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070360619 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077849035 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084770154 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075915529 seconds)
  done (took 4.39857897 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083206333 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096943364 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073339494 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08942072 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090573713 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067827739 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069808075 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069506793 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.07993074 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077981914 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066942361 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072666483 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074607491 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070394188 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068119363 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.0737825 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074745964 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068868444 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070209271 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072217498 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077341981 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079915582 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070962957 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066523427 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07342232 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066835507 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063872163 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083799472 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067373246 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089303566 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065066615 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074380284 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08044573 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068168267 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066763476 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067231609 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067282599 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067121455 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068727881 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065772901 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065795709 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057290261 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066366616 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078901463 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073348961 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056571458 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072102281 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072011841 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072289166 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065127966 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069915957 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069764494 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070656469 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074221617 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071879959 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072134287 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068214362 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065230858 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074609721 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066994474 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063948085 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065575802 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071468326 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065226456 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07462784 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071245289 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065520874 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066476599 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068870795 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072947816 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066934929 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069871435 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064609001 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068986179 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071336086 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068903171 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067932278 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06531105 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066608846 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067632 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055066747 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066976912 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053436542 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070273776 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065279665 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065407283 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067038581 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072480621 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078980817 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068204021 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072644439 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068091734 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066034765 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070238872 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059851182 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069799206 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081976487 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082013508 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066869716 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065111502 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081166982 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071476569 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065879402 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055786268 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074843238 seconds)
  done (took 9.101883264 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092838494 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070671442 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082804928 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090281341 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085806391 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075586334 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076297873 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068693383 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081256882 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073282921 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075778606 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067630269 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076835481 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076253396 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069770714 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076202216 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071372089 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082224267 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081440855 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067867582 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075106085 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079151888 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088201788 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079472534 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.077892018 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079663166 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08837358 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072077321 seconds)
  done (took 3.893572051 seconds)
done (took 37.653470961 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.757788803 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.002350592 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.748482654 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.127944305 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.830681092 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.959478875 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.807003001 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.75167403 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.13796078 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.783393106 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.997378301 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.786437395 seconds)
done (took 65.367411362 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.777509367 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.884389805 seconds)
    (2/2) benchmarking "String"...
    done (took 2.013000643 seconds)
  done (took 5.57629404 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.032120075 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.342068149 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.983153523 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.738301368 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.740722086 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.036905357 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.548080984 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.267686321 seconds)
  done (took 30.33570936 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.935330102 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.970211183 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.456882869 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.493764873 seconds)
  done (took 15.589833158 seconds)
done (took 63.076405977 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.779430647 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.784738845 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.775858193 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.72379972 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.795505828 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.74655534 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.847449297 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.799712439 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.739022267 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.73005175 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.737610876 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.171769707 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.74655802 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.894463544 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.740059052 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.748269521 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.78153509 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.15790649 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.898414478 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.752782355 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.757554598 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.770585345 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.741108743 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.74974729 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.791626577 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.739132429 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.174239961 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.749896383 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.556938049 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.742082381 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.791669289 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.108939226 seconds)
  done (took 202.700329816 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.740783933 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.788195601 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.880218164 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.762282669 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.252412003 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.933563441 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.865354898 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.309613342 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.743686761 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.761585997 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.95653308 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.739425155 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.982980505 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.753889058 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.769304796 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.743118775 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.957562357 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.994838335 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.771805358 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.894546243 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.756465324 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.776949762 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.748858514 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.945201449 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.783798564 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.762447255 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.763562474 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.771993181 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.947565761 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.947454858 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.765202255 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.784639025 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.948116557 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.615075521 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.762285618 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.746839006 seconds)
  done (took 169.108363926 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.903930896 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.743631042 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.742424033 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.741507585 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.749613502 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.740871185 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.743519088 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.872258977 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868381972 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.202251862 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.980951221 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.792938894 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590071192 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.739741429 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.809879361 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.752710673 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.741268202 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.743976124 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.758931189 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.770529255 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.742737584 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.743862896 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873039263 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.754327883 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.779446821 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.749540223 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.74335971 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.749395043 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.114688742 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.741286491 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748884874 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.988668229 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.74147886 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743543693 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.653863716 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.113371226 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.752295605 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.828416726 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.742815205 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.748527938 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.743761685 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.966951468 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.741176437 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.743102096 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.747341676 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.932097263 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.743632656 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.871505047 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.739957275 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.258347297 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.744170612 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.745981335 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.810539221 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.453487295 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.75559734 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.751197581 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.753529333 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.75216444 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.752854926 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.758976623 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.587464086 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.827932011 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.755165854 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.756714337 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758865547 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.752222365 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.790367443 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750221355 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.058787638 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.812264468 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.866387467 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875640355 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753574234 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822028821 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.844076562 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.750946971 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.753328769 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.75243763 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.753668717 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.834386421 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.750310562 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.877121658 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.759275288 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.755960698 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.803599957 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.826657485 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.751684335 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.642401191 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.753490212 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.754381006 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.09524248 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822543168 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.752781078 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.756512725 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755611148 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.878090656 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875616513 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.543393797 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.75473899 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.755910072 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.597069847 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.75932876 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.89082335 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.751560227 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.947859329 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.755997188 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839147097 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.757786691 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.757365664 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.755000762 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.788194745 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.755376264 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.811505576 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.756376702 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.12538476 seconds)
  done (took 399.170292843 seconds)
done (took 774.622871363 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.436422013 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.379359247 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.503638411 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.404301877 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.387928757 seconds)
  done (took 13.801865245 seconds)
done (took 15.493571672 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.842948356 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.846162121 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.782040209 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.845027501 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.776413152 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.845332642 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.825767242 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.778915584 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.811141923 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.781993155 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.814665577 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782576944 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.766711937 seconds)
  done (took 25.191866363 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987845198 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.993714072 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825700598 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.996048666 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804046138 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.990423059 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.918401696 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.910062746 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.912950922 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773699886 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771175319 seconds)
  done (took 22.577941875 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.999010925 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.000054403 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.832959034 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.999144428 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.806231353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.992693329 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.921557787 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.911081036 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.913002429 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.774153081 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771955783 seconds)
  done (took 22.616804424 seconds)
done (took 72.079714734 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.766015507 seconds)
  done (took 3.460142136 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.787459718 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.928391417 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773550326 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.767227 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.765064486 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.766511884 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.768169143 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.763583452 seconds)
  done (took 16.016312782 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.765215567 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.763446954 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.7625693 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.768050061 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.766704083 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.767528749 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.76383508 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.763641086 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.766263412 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.767473907 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.766118404 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.76662905 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.764581475 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.764826759 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.765245776 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.765387745 seconds)
  done (took 29.943115627 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.765303109 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.764341416 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.762727699 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.766966321 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.765206032 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.763870793 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.767001917 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.76581754 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.767537723 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.764444235 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.764668802 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.765616638 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.765283381 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.763803514 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.766521992 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.767018401 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.767196695 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.764103998 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.770491637 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.764464473 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.767658637 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.76395362 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.764080766 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.764809597 seconds)
  done (took 44.070856314 seconds)
done (took 95.18409078 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.632106292 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.363439435 seconds)
  done (took 8.691197255 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.769510502 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.767579466 seconds)
  done (took 5.278360864 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.767864462 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.767845831 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.768703103 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.768484014 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.767463876 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.768626345 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.767811368 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.768339814 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.767704985 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.767824077 seconds)
  done (took 19.378087145 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.768504009 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.767817355 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.765690813 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.767429693 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.768326707 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.764742329 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.768437232 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.767948254 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.768113756 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.765319253 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.768943231 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.76566097 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.768537686 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.766562857 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.770225089 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.767140948 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.766897817 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.765892154 seconds)
  done (took 33.509731458 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.769461652 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.769529624 seconds)
  done (took 5.238346419 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.76759804 seconds)
    (2/7) benchmarking "second"...
    done (took 1.766583732 seconds)
    (3/7) benchmarking "month"...
    done (took 1.767659628 seconds)
    (4/7) benchmarking "year"...
    done (took 1.76723729 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.768151436 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.766911119 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.767102894 seconds)
  done (took 14.069812607 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.77200058 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.933095848 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.009787661 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.458162234 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.773318844 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.775357808 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.732839218 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.776423202 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.777611869 seconds)
  done (took 19.707799842 seconds)
done (took 107.568273035 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.603588354 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.763442591 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.089733514 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.824504097 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.817441783 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.129932331 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.783227009 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.99002292 seconds)
done (took 42.701778798 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.781766543 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.317422089 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.344487656 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.105477862 seconds)
  done (took 12.465655577 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.765291124 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.298003042 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.807982656 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.359860272 seconds)
  done (took 19.956400111 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.13973176 seconds)
    (2/2) benchmarking "read"...
    done (took 2.130775703 seconds)
  done (took 5.978452418 seconds)
done (took 46.884328332 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772501424 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.770075427 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.772459027 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.768863677 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.772156242 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.769797699 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770594073 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.772015095 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.773427733 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.770757324 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.772491438 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.772831735 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773049093 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768722535 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769680105 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.769283487 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772282622 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.770417871 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770344974 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.773351358 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771029425 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77356351 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.770246633 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.769660087 seconds)
  done (took 44.210121674 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.772763895 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.771066239 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.772991587 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.773732302 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.7712234 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.773873982 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.774422053 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.770969873 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.773849847 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.77474926 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.771493795 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.772269076 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.774622329 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.771071502 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774271165 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.771833952 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.775433162 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771503617 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77438066 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.772502393 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.775809797 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773466379 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.772959017 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775323228 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.773586959 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772883111 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.775817656 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.774367312 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.774557264 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.773079917 seconds)
  done (took 54.90414689 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.780903506 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.785719826 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.775148825 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.776292128 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.77596478 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.77587454 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.776281033 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.776144412 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.776002296 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.775353876 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.77488984 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.776231104 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.777279691 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.77656086 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.778118865 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.777907916 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.777259784 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.776902996 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.777204981 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.776239205 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.776633004 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.778461294 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.777435874 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.776599144 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.776286275 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.77696401 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.777478404 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.777117319 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.777519908 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.776843369 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.778282524 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.777502856 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.778167525 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.778279516 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.777286799 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.777618924 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.783509239 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.786964053 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.778741755 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.77753357 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.77929699 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.77774901 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.778817535 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.778605511 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.778305351 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.779929193 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.777775248 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.77974366 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.779665713 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.777756987 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.779221294 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.778584118 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.778056852 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.778813927 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.780036692 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.778071977 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.776214658 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.778579275 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.778556217 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.777698496 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.779789591 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.778298067 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.77874452 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.778094726 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.778178742 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.778472163 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.778800555 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.778082349 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.77569808 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.77845153 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.776424867 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.777622849 seconds)
  done (took 129.723098158 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.778862408 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.775752194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.775008671 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.776319256 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776088844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.778158818 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.775450779 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77717066 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775668516 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.779382062 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779348803 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.776163035 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776659881 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.777819002 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.778808211 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.777245332 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.780310407 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775825352 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.779912211 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.781095632 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780626488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.777552924 seconds)
  done (took 40.817214664 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.782556464 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.780319014 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.778254498 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781110244 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.778251614 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781483791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.782214134 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.780351646 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781141351 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778956572 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778831685 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781447187 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779443674 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778793284 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779053806 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.778396598 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780764428 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779484672 seconds)
  done (took 33.750445057 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.782007903 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.780193115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.782167832 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.779718589 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.779487412 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.782396812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779524322 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.782598169 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.782797951 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.779989531 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.782418839 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781819606 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.784056322 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780185503 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782197993 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781731809 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.782753687 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780572112 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781643199 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780818097 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780367824 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782293262 seconds)
  done (took 40.90341673 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783520655 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.783611424 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.780459833 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.781747891 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.780470387 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.782392496 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.784114305 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.77937866 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.784075022 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.784057648 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781584817 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.783644727 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.78161101 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.780662587 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.781502004 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781921517 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.783072765 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782028661 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783725487 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.782104897 seconds)
  done (took 37.357786466 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784795657 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784507179 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.784521489 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784158947 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784590511 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.785334255 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785777923 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.784761035 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786399091 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.787825913 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.785382404 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.785931839 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783670876 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785647303 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783615568 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785579246 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785772993 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78423949 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.784926264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78507358 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.785589299 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78577852 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.785555886 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.784541526 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.785925124 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784982285 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786415912 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.786889228 seconds)
  done (took 51.701897309 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785902214 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784740086 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.782623397 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.782845543 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.783474769 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.781869773 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.783878365 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.784758371 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785593062 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783828205 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.787033062 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.785181909 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.785772757 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.785923327 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.785567916 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.786257011 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786698454 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.783681236 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783840538 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.783825852 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.787108679 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786531309 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.786478657 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784637164 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784445564 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.787553058 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784934765 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.785303443 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787847779 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.784282625 seconds)
  done (took 55.267909964 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.807289884 seconds)
    (2/2) benchmarking "in"...
    done (took 1.805735737 seconds)
  done (took 5.327045212 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.784347418 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787219956 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.787174818 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.78559157 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.784433492 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.786635306 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.787235091 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784881421 seconds)
  done (took 16.003411887 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.7877277 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.787686135 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.78836535 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.788843287 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.787845937 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.787448599 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792661897 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.788351146 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.788090145 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.788109732 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.795710949 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.797368176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.790433781 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.788741635 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.788091555 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.789215542 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.786767341 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.788571076 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.788516118 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.788089714 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787336283 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.790159336 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788742345 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.786354096 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.78965058 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.799830048 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.791451459 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.789258467 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788809977 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.791724944 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.789944983 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.785706536 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.788709785 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.788074886 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.788255165 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.788075606 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794802187 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787531448 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.794937995 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.788192979 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788370333 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.784655298 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.788870864 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.789741413 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.789451519 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.790663698 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.789724939 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.787142069 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.788777337 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.793683911 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.796648129 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788484294 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.787949326 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.79197936 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.790191149 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.795474783 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.79065958 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.792374107 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.800259831 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.800780425 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.801617656 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.799997505 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791962637 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.790254251 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800478543 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.81757708 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795496112 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.78820598 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.787314269 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.790430629 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.796062431 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802856077 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.802483409 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.789961391 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.791386291 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.790754876 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790726377 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791149037 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797647979 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.793382125 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.791604249 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792020778 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.80031272 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816411796 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.791042487 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.792337988 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.79251114 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.790660975 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.793654129 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803701919 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.792150305 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.792482967 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.791534052 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.791183762 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.794494418 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.792751055 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.791389869 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792164021 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.791567582 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.791602036 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.792689415 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794856871 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.80240973 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791054773 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793198529 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.798810994 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.792770052 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793063793 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.799311469 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.7925384 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792778016 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.79293172 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.80025653 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.790449331 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.7960608 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.801447138 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.793992347 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.793432118 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.794473521 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.792862445 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804435908 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.823947919 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.793145887 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.793449549 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.79704232 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.803966373 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79378338 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.795597614 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.794100233 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.790888834 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.790789947 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.795613539 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.794161975 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.793732662 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79415216 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793037936 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.792388179 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.794336409 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.793505893 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.794093258 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.794335564 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.794208588 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.794989573 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.796269667 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.794809337 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.794837186 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.799310911 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.793290026 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.794721195 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.795108814 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.792253666 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792225117 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.795026277 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.795693582 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.794707451 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794240023 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.793438501 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.794145225 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793092183 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.794939584 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794545381 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.795978994 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799703633 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.796086263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.798904946 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.793566799 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.794196803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.795183552 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.794415125 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.794060213 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.797204083 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.796416512 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.799222646 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.80511569 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.795158615 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.795316994 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.799619536 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.7965356 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797427423 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796483887 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.799414559 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.804569274 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.796702621 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.803848181 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.795926048 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796836395 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.79702542 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.796867917 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.795833467 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79706347 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.800954064 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.805855216 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808515525 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806929313 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.797278232 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.801917912 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.79751881 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.800850945 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.800490983 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.795741136 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.79619409 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79753291 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797619196 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.79699689 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.79878212 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.798618055 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.79585968 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.797822827 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.798392077 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.796266622 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798962703 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.798746984 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.797939986 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.796813281 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.799878903 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79926081 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.797755971 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.79580269 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.798892314 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.798173539 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.798472667 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.79812683 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.805517902 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.797100505 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.799666531 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799249607 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.79799177 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.799202928 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.797899305 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.800422924 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.798589086 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804726058 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.79795705 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.800186107 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804013925 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.799592733 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.799051804 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.801243763 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.799768554 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.797000701 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.801588091 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.808023542 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.798711898 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.798665332 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.79990646 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798783348 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799042114 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.805411474 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.797062268 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.798221708 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.800092438 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.801927065 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.797833615 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.799347407 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.799714041 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.800516874 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.801705573 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.801206732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.800186805 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801798276 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.800520173 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.799598544 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.801453737 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80288138 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.809521572 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.803837939 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.799875968 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.80440685 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.803800126 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.806249928 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.801036204 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.801350792 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.801248567 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.814123692 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.81087793 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.805633116 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.803154619 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.802288235 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806069174 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.804087855 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.806763899 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801556398 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800879811 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.800645507 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.799466238 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.79963176 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800973436 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.802776084 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.802771752 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.801992864 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.80613822 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.799777104 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.800257998 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.800429365 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.801200794 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.801511758 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.799485298 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.802078018 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.804417684 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.801270135 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.801009085 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.799310215 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806018331 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799973269 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.803064588 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.799909397 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.803977394 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.801087431 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.803071942 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.80264021 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.806045751 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.810745471 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.805316951 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.812147236 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.804019877 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.813526342 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.804415068 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.805725308 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.810397118 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.799892439 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.80036643 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.801773916 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.803327273 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809752062 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.802450945 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.80488035 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.808225947 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804069719 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.802952167 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.802830607 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.803476421 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.804532396 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.802814828 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811299523 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.803028921 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.806533291 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804261811 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.800658831 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.804396844 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.802033568 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.802113708 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804609921 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.8037203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.802680784 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.801271317 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.803006176 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.804166874 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.802608278 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.804064934 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.801371243 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.804399082 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80892131 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.804412037 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810445949 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.804643337 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.810443983 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.805421903 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808805767 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.804686911 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.804211257 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.804649635 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.802182506 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.806256788 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.80353214 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.80450447 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.803786572 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.806492813 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.808755933 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.804700549 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.80760731 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.804561394 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.804841388 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.803120338 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814148178 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832300228 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.807038255 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.810138185 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.801058734 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.805354134 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.809907924 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.805307878 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.803355528 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.806872121 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817977087 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814295608 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.804439941 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.805543603 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80490618 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804518545 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.805205633 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.805593413 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.805793821 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.805019048 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.805325011 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.806640369 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808326483 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.805194472 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.80378358 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808693883 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.807134665 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.8170842 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.806470047 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.806485253 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807946437 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.805272232 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.807220119 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.807256814 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.806748139 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806695142 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806159555 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.807670747 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815640223 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.813899095 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.809069564 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.806592985 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.805885214 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.806628154 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.807482098 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.80717469 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.80659223 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808458322 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.806957282 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.808705841 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.808883133 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.80605022 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.809043074 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.808110364 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808037066 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811294028 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.816658033 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808340397 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.806740401 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.807299217 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807518132 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.807749034 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.809503374 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.817048426 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812077459 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.819841606 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.818557764 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.814629765 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.806937263 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811687313 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.817768015 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.807672441 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.809812901 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.808818323 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.810103915 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.810015081 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.811778762 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809541815 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.815155185 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.80792101 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.809485156 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.815225553 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.809714984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.809726907 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.810217657 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.813908992 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.809124948 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.80721564 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.808975028 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.808433516 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814706836 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.81150195 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.811307858 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812523965 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.81018697 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.81157062 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.817509734 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811447896 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.812540489 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.808296251 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.81056605 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.80963395 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810250002 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.806786338 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.811600118 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.812134094 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.816194351 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.819583629 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.808008667 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.813003669 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.812435508 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.812243294 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810225033 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809345299 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.807448006 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.807707648 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.811349182 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.812877968 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.811996572 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.814033179 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.811194441 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.814691686 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.816210058 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814116917 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.814414425 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.822736305 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.821551616 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.809598037 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.811010674 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812144091 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.817962866 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814239471 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.813831292 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813739126 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.814781301 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.81538613 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.812287047 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.811876512 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.814926101 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.828221625 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.811636496 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813116994 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.814653637 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819013091 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.814144546 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.813074303 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.814237749 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.815181877 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.817291594 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.823459123 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.812996543 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81730966 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812795495 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.812170736 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.81716608 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.816520202 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.823334944 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.816024281 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81564668 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.814878196 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.819873983 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.832597545 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812237487 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.822908093 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.844924732 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.813039022 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.814520389 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.817077192 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815230708 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.815751369 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.818691417 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.816737938 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.816008492 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815315181 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.814354163 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.814962946 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820566562 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.817136889 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.814598975 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.816234703 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.816334728 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.818002803 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.813982844 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.816792405 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.815628511 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.816872511 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.815936586 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.815089318 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.814579852 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828348219 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.825252406 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.813538661 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.816933447 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.815323573 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.820936381 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.818456468 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830262915 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.825863218 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.817024298 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.816332212 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.816957292 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815554323 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.814360203 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.815495523 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.814588993 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816399587 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.813607666 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.830610301 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826023141 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.821242015 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.815707806 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818349876 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.816518096 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816077387 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817837128 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816057089 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.816894355 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.818487713 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82208249 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.815776013 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.81709262 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.81952864 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.825950397 seconds)
  done (took 1076.775634979 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.814967504 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.813786605 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814948384 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81411123 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.816342741 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814638563 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814310484 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.814195106 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.814667632 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815055082 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.815260975 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814261882 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.814211493 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815602625 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814761045 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813787469 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815761317 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814075896 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814928687 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813792198 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.815501194 seconds)
  done (took 39.853095639 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.817073589 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.813610059 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.815210666 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.817972287 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.815105122 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.818652629 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.815394558 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818206351 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.818033574 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81486675 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.81838013 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817121712 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.815764685 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.81699415 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815306304 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818297968 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.818462823 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817945491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.81847595 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.815223116 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818301903 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.816907175 seconds)
  done (took 41.71839263 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.819872263 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.819090254 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.818754019 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.816875844 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.819881267 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.816375208 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.820014037 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.819999421 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.820075359 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.820345801 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.817644794 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.820156158 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.828195924 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.827760162 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.822631032 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.819835715 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.964584325 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.821161631 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.821904397 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.820183305 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.818361356 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.823976746 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.817889609 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.818209683 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.818057134 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.82028184 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.821623283 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.821476804 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.821721427 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.822520057 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.825455164 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.821656509 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.820746115 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.823740142 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.819878557 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.822916753 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.825664641 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.820576781 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.817422981 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.820329335 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.831750087 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.846524699 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.820913559 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.825117896 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.821455956 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.821141476 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.825835706 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.830822974 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.820907036 seconds)
  done (took 91.171534088 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.822213975 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.822382041 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.819045057 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822622249 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.823739962 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.821867164 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.822830763 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.82199753 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.819640434 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.820820525 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.822070167 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.820918128 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819496679 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.823271638 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.822920881 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.821108556 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820393365 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819925535 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.819649271 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819285726 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.820382737 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.821664208 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.822044236 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.821233679 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82256577 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.820571774 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.820037811 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.822463866 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.820815268 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.819303303 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.82323487 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822822148 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.824024271 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.821909886 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820853728 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.822427694 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.824269031 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.821291411 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.824165118 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.821599512 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.823811146 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.823445 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.824373393 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.824896868 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.822026016 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.822687371 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.822090943 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.822321045 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.823478656 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.825818286 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.825403513 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.823689466 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824732968 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.823991024 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824875805 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.825295802 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.824081938 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.822284776 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.82543326 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.823956929 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.824434427 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.825819192 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.823841193 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.827531614 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.82665835 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.824038803 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.823946879 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826361569 seconds)
  done (took 125.69768209 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827265971 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.826900693 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826773448 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826957102 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.825908294 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.826530495 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.82722884 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.826906995 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.827589396 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827471518 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828622447 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826789266 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.8283318 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.826521856 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.826200916 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827386858 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.82705594 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.82498948 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.827003425 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826699423 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.826658093 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.826847052 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.826589197 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.82815754 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.828339576 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.827535659 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826486346 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.827157916 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826221451 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827565476 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.827136371 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.827023491 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.827623024 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.828053602 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.82789508 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.827966313 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.827949653 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828393534 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.828308473 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.828698807 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.82726122 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.827751677 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.829198971 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.827652878 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.826889376 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827235595 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.828422889 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.828450411 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.829587994 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.82933746 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.82913308 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.829624796 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827544696 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.828676713 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.828169631 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.829860438 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829073487 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83050651 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828508656 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829139511 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.829963874 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.83026429 seconds)
  done (took 115.078332069 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829070567 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.829029317 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.827752796 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.828246687 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.829489975 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.827124132 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.829695924 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.830054269 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829175573 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.829251049 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83035726 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82742892 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826026693 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829433743 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827991002 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827927265 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.827802467 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.828189686 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82943198 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.827291197 seconds)
  done (took 38.328490984 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.827021657 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.831980183 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.826697792 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.828286532 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.831183605 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828824048 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.830620525 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829895834 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829215915 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829698461 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.830981457 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831192712 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829646491 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829404427 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.831876697 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828680415 seconds)
  done (took 31.033249375 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.829259391 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.831181554 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.83139173 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.831375198 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.829115137 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.830808718 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.83176015 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.829099225 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.828957722 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.831823154 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.832886652 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.833411692 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.831545479 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.831361376 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.830346243 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.832042587 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.82954064 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.830471417 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.832683468 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.832401187 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.82923062 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.830319479 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.834136124 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.83357364 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.830826935 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.831060939 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.829219918 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.83020958 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.830705548 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.832450543 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.830825562 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.83262437 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.830701648 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.830166276 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.832880817 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.83071303 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.834527406 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.83283029 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.834976822 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.833079122 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.831775376 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.831626166 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.832556513 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.832489221 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.831493006 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.833779973 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.831226629 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.831014608 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.8300263 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.832113339 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.833566852 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.833577177 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.833617046 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.834306102 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.832640012 seconds)
  done (took 102.503176602 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833441406 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834655893 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.832753706 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.833465454 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83369615 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.831252701 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.834956268 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832875852 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831060082 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.833813397 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832270493 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.835811535 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.832647247 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.834828674 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83413427 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.834447138 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.833356192 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832614605 seconds)
  done (took 34.764091453 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.833353189 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.832756446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.835742255 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.833082478 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.834238223 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836195896 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831757155 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.83567977 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.835336038 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.834460714 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833785636 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.83470892 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835729904 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.83764249 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.835297788 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833990904 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.835850152 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837607874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.83373986 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833759431 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836464357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.835319595 seconds)
  done (took 42.13047608 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.834359443 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.833846611 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.852871021 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.858605815 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.857695861 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.874486644 seconds)
  done (took 12.87504627 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835137806 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835941512 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.832499458 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835334065 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835698309 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833657581 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833229224 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833164883 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83474774 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831123489 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832125902 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835957038 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835590037 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832365098 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834725584 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835417053 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833103203 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836769952 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832929861 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836092927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834010276 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837726809 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834412548 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8340077 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835739071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833612686 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836880799 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834058445 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835386182 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835957874 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836203884 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834332764 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837324758 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834410536 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830564694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829873861 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826883472 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830388199 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829808172 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828613147 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.83024985 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829822947 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830102399 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827636432 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832336551 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827389232 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826485915 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826251677 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827147614 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830612214 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831419575 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82629502 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829925054 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829381177 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827615026 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833098713 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826414708 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825647607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828043585 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826512374 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826353446 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.830099537 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825768272 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82611052 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827300314 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825281839 seconds)
  done (took 122.652809155 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825270555 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824738725 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826379068 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825516579 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822650061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822705678 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824232595 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824708619 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82319343 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824409526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826600555 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824042929 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824558461 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823194463 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824210145 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823152364 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823672424 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82305794 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822394973 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827052771 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823319725 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823141078 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823924612 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82417985 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824905578 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825040889 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821397584 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822188678 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824840553 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825735922 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825760039 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82335291 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822982653 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.823346837 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825015516 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824450728 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823282916 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824818885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824386467 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826995328 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823734316 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828153171 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824390926 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825957122 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826181394 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825154664 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825274555 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824751154 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825949138 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823618772 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825234539 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822632072 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824883293 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822257458 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827775891 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826122609 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826186169 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825289004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822861626 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83021178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822763221 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824620074 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828054836 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825219493 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82581675 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828913477 seconds)
  done (took 122.190322928 seconds)
done (took 2508.437487634 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.859164274 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.894657624 seconds)
  done (took 15.508359589 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.986606631 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.940409128 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.825233931 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.866513954 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.824261654 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.841197609 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.840573502 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.824166004 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.82535248 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.824792484 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.823928448 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.012960965 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.84354409 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.818826313 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.821164209 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.913519322 seconds)
  done (took 51.595831367 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.820858187 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.822264943 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.83379841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.824741887 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.820697814 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.832494344 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.855462329 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.826389923 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.855501303 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.831607035 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.890795116 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.830325031 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.81900308 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.870315487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.833341715 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.840474189 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.908281093 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.896328819 seconds)
  done (took 34.963157734 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.902057733 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.843135576 seconds)
  done (took 10.500692812 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.838791764 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.839228977 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.816564735 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.819204239 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.825432014 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.815304755 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.828827402 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.810937671 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.847737468 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.817122416 seconds)
  done (took 70.006983364 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.822381783 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.816871943 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.816157694 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.813278034 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.808359773 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.810366747 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.815028411 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.812683714 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.51555414 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.856030411 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.819412576 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.819401937 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.81206961 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.816476399 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.817194259 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.835868941 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.939825073 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.810931129 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.810818129 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.819470027 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.820845816 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.874910652 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.823686307 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.81243952 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.843088142 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.511011888 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.817783189 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.816850477 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.933812724 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.807676236 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.817763517 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.810551414 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.813728105 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.205177239 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.140106986 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.809985926 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.816086556 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.817324456 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.809807125 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.932860836 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.810511505 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.813316647 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.802702755 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.117680673 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.906972144 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.852285293 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.178111834 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.809860262 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.80827802 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.837964047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.808723889 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.808465669 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.817536912 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.323270384 seconds)
  done (took 129.667330499 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.801143973 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.103046248 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953821571 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.802700118 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074202189 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010258178 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.746839991 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.848996084 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.799009151 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.007583639 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.963821472 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.91513249 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.799788661 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.797262342 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.796388248 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.795366655 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.962340919 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.871496561 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.800809305 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.798630302 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827596037 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012309669 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.933065682 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.798319366 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.820863723 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.014127539 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.922722378 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.909365256 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.084657583 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.79919643 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.865429807 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.801620633 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.79716556 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.793660176 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956308133 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.8972805 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.888976274 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.798205495 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.796027876 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.795500033 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.45982218 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994835015 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.900968999 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.940890847 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.990748142 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.002775828 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.442837218 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.798780945 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.430765532 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.965128374 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.01019283 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.006696129 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.918743311 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.795955427 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.030997707 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.7969361 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795292269 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033622162 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.941382242 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.902224061 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79767593 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.795374887 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.793981424 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045485351 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.79331958 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.892248964 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.797859611 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.793344152 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.897248479 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903642446 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.937735194 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.013654022 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.825856341 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.705336622 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.304929236 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.01024414 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.862257523 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029679496 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.795403229 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.789787049 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87977572 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.548510684 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.953322937 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.043273381 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.014960474 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8280222 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.386994833 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.790264537 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.988334919 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.98032444 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.988074371 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.002990362 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.9452823 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.010658696 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.791251894 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.790028265 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.091080667 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.929849955 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.795456239 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.154204956 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.029862044 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.381038461 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.815571696 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.091980719 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929570383 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.171888675 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.422041944 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.794930182 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.961193254 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.833506866 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.796258095 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792825869 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985939231 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.600096614 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.791237098 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.31664938 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.861606599 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.793941163 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998554754 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.795643333 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001828119 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.795975511 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031240464 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.116188299 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.829022642 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.965673338 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.001429117 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.592008525 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.04046222 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039935244 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.917212613 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020758131 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.390961098 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.799677314 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069576387 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.799424523 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.795289894 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.960659499 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.79368519 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.944849811 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.79756892 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.026101571 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817392224 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949071853 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.797281149 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.029936046 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.829996115 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.847583071 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.798168842 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926355307 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.795119019 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.685818513 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.950610728 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795562131 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.794144466 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.246127853 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.794770798 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940243303 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.031639699 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.819538328 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871492902 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.324154056 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.797519388 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.883694304 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.821607389 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.237441811 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.796977248 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.95360641 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.745423363 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.227841703 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.803214504 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.039912966 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.983875083 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.803819161 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.796468838 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.538603589 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.501746704 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.797447589 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.96096139 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.17894224 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.445903625 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.001806468 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802245833 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.927663448 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.802984354 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.885560611 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.147854255 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.798397472 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.799184916 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.800970775 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.803054429 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.801462303 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.006410782 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.828930982 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.314847159 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.938341164 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.01534404 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.109934875 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.022620511 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.843340154 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.805275486 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059210904 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.797911188 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.864205583 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.802216345 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.818310194 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031157192 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799933179 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007707417 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.051546424 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.703010373 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.847393541 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.801027249 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802983454 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.798804884 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.948842722 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.894255339 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.803369651 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.800360032 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.908862766 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.924551675 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.989087059 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.391200314 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.97455896 seconds)
  done (took 882.297198492 seconds)
done (took 1196.292814205 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.801412171 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.798839922 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.787768925 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.794366206 seconds)
  done (took 28.918815503 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.805823095 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.801996691 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.802282746 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.799075208 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.801000949 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.799130181 seconds)
  done (took 12.538770224 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.818213978 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.793428939 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79357556 seconds)
  done (took 21.138291107 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.873780413 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.213042812 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.901801003 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.246265449 seconds)
  done (took 9.962933129 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.803534842 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.801324433 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.800428747 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.803308056 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.804219731 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.801705137 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.80207704 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.802624278 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.805995609 seconds)
  done (took 17.95597891 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.251892765 seconds)
done (took 96.499893746 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.782483131 seconds)
    (2/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.178005742 seconds)
    (3/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.288814869 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.028916568 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.869512169 seconds)
    (6/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.383962843 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.919724529 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.838342554 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.934401489 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.824314612 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.819538867 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.792515126 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.846249222 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.37194821 seconds)
    (15/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.824658039 seconds)
    (16/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.391773163 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.80031769 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.828773621 seconds)
    (19/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.168436171 seconds)
    (20/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.391577046 seconds)
    (21/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.8818247 seconds)
    (22/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.197006251 seconds)
    (23/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.797027523 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.428721359 seconds)
    (25/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.158423632 seconds)
    (26/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.609726018 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.397796141 seconds)
    (28/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.984746319 seconds)
    (29/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.815977566 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.390441084 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.201593848 seconds)
    (32/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.68687409 seconds)
    (33/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.056729779 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.905615941 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.090972852 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.330515454 seconds)
    (37/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.040890687 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.018983597 seconds)
    (39/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.79911352 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.1017909 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.831418187 seconds)
    (42/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.232487618 seconds)
    (43/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.798775546 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.876207426 seconds)
    (45/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.977900792 seconds)
    (46/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.070184656 seconds)
    (47/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.159680606 seconds)
    (48/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.800385734 seconds)
    (49/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.09037293 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.04610314 seconds)
    (51/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.992808112 seconds)
    (52/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.886950748 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.911029624 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.801252114 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.056863731 seconds)
    (56/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.933497182 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.59248595 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.984726134 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.903276736 seconds)
    (60/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.810581743 seconds)
    (61/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.730981807 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.392712644 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.856078937 seconds)
    (64/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.036714959 seconds)
    (65/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.901502477 seconds)
    (66/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.80489946 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.136428857 seconds)
    (68/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.898303654 seconds)
    (69/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.970570322 seconds)
    (70/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.982142689 seconds)
    (71/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.17898218 seconds)
    (72/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.316422845 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.10267305 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.97512668 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.804027738 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.664597145 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.858464771 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.914497946 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.785015306 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.789389283 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.985516962 seconds)
    (82/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.392357339 seconds)
    (83/309) benchmarking ("sort", Float32, false)...
    done (took 5.676673037 seconds)
    (84/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.98149552 seconds)
    (85/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.369642128 seconds)
    (86/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.841082967 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.907785562 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.802828056 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.541137902 seconds)
    (90/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.937706835 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.176805338 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.505110837 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.801830982 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.104880428 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.224412368 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.011231504 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.97150708 seconds)
    (98/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.833967004 seconds)
    (99/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.903041686 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.100317615 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.835851536 seconds)
    (102/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.933944636 seconds)
    (103/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.101892525 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.944194661 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.804343853 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.121969614 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.950129527 seconds)
    (108/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.808323882 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.816507637 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.888111163 seconds)
    (111/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.990445135 seconds)
    (112/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.796620146 seconds)
    (113/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.887738691 seconds)
    (114/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.85870819 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.489826933 seconds)
    (116/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.808094367 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.933570264 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.076825936 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.00810732 seconds)
    (120/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.432278159 seconds)
    (121/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.866344011 seconds)
    (122/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.829672265 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.493140496 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.448196962 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.908748758 seconds)
    (126/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.111772772 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.809649151 seconds)
    (128/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.251002556 seconds)
    (129/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.132418308 seconds)
    (130/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.855166889 seconds)
    (131/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.831775667 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.518986431 seconds)
    (133/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.112647354 seconds)
    (134/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.915895896 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.803750694 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.130055978 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.184560446 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.46790008 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.973743386 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 2.25592806 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.831052252 seconds)
    (142/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.790218002 seconds)
    (143/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.816928125 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.454411374 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.093907268 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.850178086 seconds)
    (147/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.025632938 seconds)
    (148/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.805549522 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.163022864 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.023086535 seconds)
    (151/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.871928776 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.088115086 seconds)
    (153/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.06860877 seconds)
    (154/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.180978031 seconds)
    (155/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.941060418 seconds)
    (156/309) benchmarking ("sort", Int8, false)...
    done (took 4.840917609 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.829579353 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.715212012 seconds)
    (159/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.816753396 seconds)
    (160/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.929422279 seconds)
    (161/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.907288721 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.14875763 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.07688918 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.027017035 seconds)
    (165/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.496758743 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.31427861 seconds)
    (167/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.031485399 seconds)
    (168/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.832050656 seconds)
    (169/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.893096438 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.394790011 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.951716317 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.160055643 seconds)
    (173/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.833039154 seconds)
    (174/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.792180245 seconds)
    (175/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.874492128 seconds)
    (176/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.823712157 seconds)
    (177/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.893328304 seconds)
    (178/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.319697355 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.880836874 seconds)
    (180/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.992467192 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.106656668 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.954400984 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.245276371 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.794991332 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.859202266 seconds)
    (186/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.133524732 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.704961095 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.893434883 seconds)
    (189/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.160888863 seconds)
    (190/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.970402197 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.795214569 seconds)
    (192/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.024968087 seconds)
    (193/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.792070965 seconds)
    (194/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.999619682 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.772352032 seconds)
    (196/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.942474766 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.097339431 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.835610021 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.180612204 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.812498646 seconds)
    (201/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.852160564 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.797550311 seconds)
    (203/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.001744954 seconds)
    (204/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.899371919 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.80876407 seconds)
    (206/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.043551968 seconds)
    (207/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.913877886 seconds)
    (208/309) benchmarking ("sort", BigInt, false)...
    done (took 6.808606433 seconds)
    (209/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.894595322 seconds)
    (210/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.913118162 seconds)
    (211/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.32042358 seconds)
    (212/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.499316783 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.898523637 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.871907503 seconds)
    (215/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.893782443 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.915051969 seconds)
    (217/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.840174523 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.856900072 seconds)
    (219/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.323204255 seconds)
    (220/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.883680253 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.60174429 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.011348901 seconds)
    (223/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.225222975 seconds)
    (224/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.816479352 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.254303907 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.83529606 seconds)
    (227/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.845099929 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.211523731 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.099261277 seconds)
    (230/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.012502595 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.854612819 seconds)
    (232/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.918035481 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.799924374 seconds)
    (234/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.955207738 seconds)
    (235/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.102992593 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.735277909 seconds)
    (237/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.685961241 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.695388686 seconds)
    (239/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.136358875 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.827598477 seconds)
    (241/309) benchmarking ("sort", Float64, false)...
    done (took 5.636826826 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.054834236 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.012792517 seconds)
    (244/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.693423551 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.909900139 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.812786499 seconds)
    (247/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.100777146 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.228526264 seconds)
    (249/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.333688043 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.493804117 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.866679646 seconds)
    (252/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.815027763 seconds)
    (253/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.823797904 seconds)
    (254/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.983879052 seconds)
    (255/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.90580691 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.197954666 seconds)
    (257/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.799906735 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.361584267 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.395686734 seconds)
    (260/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.87733523 seconds)
    (261/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.021522591 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.2333835 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.289539724 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.861400627 seconds)
    (265/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.690723021 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.834507426 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.810356975 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.538300212 seconds)
    (269/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.089951945 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.292900672 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.818053987 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.194741065 seconds)
    (273/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.797259847 seconds)
    (274/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.999914486 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.813458774 seconds)
    (276/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.941884239 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.904986497 seconds)
    (278/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.910113457 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.838368152 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.818496051 seconds)
    (281/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.020625916 seconds)
    (282/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.812210958 seconds)
    (283/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.989332401 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.828267408 seconds)
    (285/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.799964451 seconds)
    (286/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.114710018 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.914504104 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.138568519 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.898288115 seconds)
    (290/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.838968215 seconds)
    (291/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.821127884 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.929240611 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.327731234 seconds)
    (294/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.054741323 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.562203268 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.341845504 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.870365269 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.81155311 seconds)
    (299/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.732475189 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.956766775 seconds)
    (301/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.024312297 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.863322196 seconds)
    (303/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.232530401 seconds)
    (304/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.036572565 seconds)
    (305/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.898764903 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.834996806 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.108570367 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.839345587 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.10189166 seconds)
  done (took 996.678419248 seconds)
done (took 998.484983424 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.848131406 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8404489 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.827000987 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.850892797 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.938556377 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.854777992 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.835034971 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.829752738 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.877112865 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.875373114 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.825742005 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.853161092 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.827137901 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.824058247 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.826430024 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838315605 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.127932678 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.848872674 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.841742339 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.83965376 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.843225627 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.824245231 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.877898455 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.85642204 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.831139681 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.828546936 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.829259289 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.845838902 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.940195456 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.831180027 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.831754419 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.836808633 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.130152226 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.847462618 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.821573096 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.846278177 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.837913284 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.838135604 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.829641977 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.859767873 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.261667814 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.828643048 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.827333812 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.829009389 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.829484001 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.832888962 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.828665795 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.836104393 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839835174 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842210399 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.258297648 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.84489772 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.831989516 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.828681061 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.839095372 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.827382216 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.832978856 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.845415517 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.84811141 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843762742 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.121881861 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.853562191 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.833396855 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.845584153 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.836758112 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.294588281 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.8273213 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.834101048 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.259555 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.837433246 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.294667178 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.840401392 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.83035011 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.843014331 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.862692492 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.133104798 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.845122852 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.83175504 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.836510521 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.828446871 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.841371352 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.840935191 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.834752562 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.832532107 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843170394 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.856767115 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.840269235 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.830964265 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.839367645 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.848458077 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.83747934 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.840397992 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.834269669 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.824658396 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.840410749 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.833865867 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.832999193 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.832229868 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.836651609 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.84203354 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.256588013 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.848710254 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.827468284 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.827367955 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.832051373 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.842880962 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.256988562 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.833039552 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.850544567 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.87973857 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.832833862 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.12152673 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.853695493 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846514175 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.8429288 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.834570896 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.827848632 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.12264383 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.281086625 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.849452745 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.833731105 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.828903429 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.85095932 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.834634159 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.829402945 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.135966919 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.852782225 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.845237619 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.952759944 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.843573346 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.864456589 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.830827047 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.837031759 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.864501726 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.847491837 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.862885592 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.837182313 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846780971 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.848154042 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.830900203 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.843332151 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.844705146 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.834290546 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.839285498 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.827875195 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.861790453 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844290851 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845661792 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.855339802 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.952114868 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.830019392 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.125402305 seconds)
done (took 287.633600786 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.89712594 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.81991668 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.92608492 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.827452661 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.911108791 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.912176664 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.827540235 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.82551599 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.824576271 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.212854533 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.826238082 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.826189248 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.821958317 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.826386547 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.910837114 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.828013161 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.825866509 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.179490728 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.828637581 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.899859835 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.821471259 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.828089696 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.829619952 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.210556903 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.820197367 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.827887857 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.900506728 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.831539793 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.173754545 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.828393371 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.827713511 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.177584763 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.918429341 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.848591781 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.839092301 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.835996152 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.913821761 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.833466791 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.912192598 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.909923096 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.925902205 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.873036736 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.826185162 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.82491833 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.832524823 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.83108086 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.826571834 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.861882045 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.824388281 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.829757589 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.18070059 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.840627911 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.839349479 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.828665001 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.829592925 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.852790968 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.832457771 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.833189419 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.919549041 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.833030826 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.892848928 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.213362409 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.219187569 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.834046643 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.828814936 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.829716276 seconds)
  done (took 181.667353576 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.899716239 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.906101524 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.904026213 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.833827714 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.882042594 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.313159639 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.833931249 seconds)
  done (took 15.329378557 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.837353994 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.833435647 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.882862574 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.882048161 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.833140725 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.98378924 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831650274 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.8435925 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.830536129 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.886822781 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.832830535 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832695053 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.839198307 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.831425853 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.882844673 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.845549235 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.947377173 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.83338731 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.834368762 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.990577936 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829885895 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.840452055 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.887888273 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.845043477 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.834311339 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.842073973 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.41743537 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.834511029 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.830845781 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.833463585 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832734589 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.87510452 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.833601785 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.830993433 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.833455076 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950789987 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.833944668 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.832188319 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.834524779 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.82797328 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.835805538 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.83590987 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.83619534 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.832946502 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.835173026 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.859499837 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.833701298 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.835334296 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.83404962 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.835160624 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.885196796 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.836766487 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.831841358 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.833724152 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.893336061 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8424052 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.836935639 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.834515727 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.836094601 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832619956 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.993574172 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.885362348 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.836261004 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.88374639 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.838260892 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.837679619 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.83593028 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.837310583 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.891800368 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.833606805 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.883768503 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.833448372 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.000286022 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.860467536 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.836192306 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.838058079 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.839557448 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.838905255 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.83086469 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.84249172 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.837585192 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.836885642 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.843182555 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835351837 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.835064697 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.949030973 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946710279 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.832819104 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.848971273 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.844516866 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.833197086 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.893006893 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.83625651 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.832379993 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.888536089 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.951444897 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.893024922 seconds)
  done (took 202.412302189 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.841535515 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.845196603 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.836514136 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.854942248 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.840108474 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.837479173 seconds)
  done (took 12.819696184 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.837499016 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.838144632 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.841111638 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.838208449 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.836980165 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.837434789 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.838493206 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.837802762 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.844097899 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.837573211 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.838367525 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.839486739 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.83988067 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.84100946 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.839375861 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.837148954 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.841011061 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.835317041 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.838954153 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83890709 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.993854474 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.839245653 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.840231907 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.84201795 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.843726369 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.840426462 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.846393487 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.840459567 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.84080803 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.849634383 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.843701102 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.840286919 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.840703913 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.847090925 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.845816147 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.839849929 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844399248 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.841972342 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.838936298 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.839845589 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.8431102 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.838794327 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.841763964 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.843243907 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.841045765 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.846746203 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.845538417 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.849935813 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.840175021 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.843957071 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.843660273 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.840894364 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.842687093 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.843080708 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.844929498 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846851215 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.849385228 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.843815222 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.840289539 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.842973261 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.843298097 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.844436454 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.843261361 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.846454308 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.842103955 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.844218624 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.844735644 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.84732114 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.842433116 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.842699694 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.842704469 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.840737863 seconds)
  done (took 135.539799832 seconds)
done (took 549.538967762 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.11648495 seconds)
  done (took 8.885416411 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.89815366 seconds)
  done (took 8.772235418 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.282587307 seconds)
  done (took 10.053369427 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.875162705 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.863441982 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.847338354 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.839322032 seconds)
  done (took 29.206690155 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.914900388 seconds)
  done (took 8.683826515 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.847303774 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.831656815 seconds)
  done (took 15.484686322 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.891054968 seconds)
  done (took 8.661695904 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.921453595 seconds)
  done (took 8.691831811 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.85773276 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.831551958 seconds)
  done (took 15.470422765 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.817955924 seconds)
  done (took 8.584468088 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.542893375 seconds)
  done (took 11.31979006 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.842613239 seconds)
  done (took 8.621467722 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.862223951 seconds)
  done (took 8.629176317 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.931435368 seconds)
  done (took 9.698082936 seconds)
done (took 162.536996823 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.836114614 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.832917965 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.834467569 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.833685107 seconds)
  done (took 29.101286626 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.875506724 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.873574961 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.875088791 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.887126248 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.877872689 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.875685219 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.865850722 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.86548667 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.885634381 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.878288526 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.877378203 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.87725607 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.876824245 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.869427889 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.87976385 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.877245168 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.884004645 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.876889598 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.866712221 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.881322741 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.843289351 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.886074453 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.87947793 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.841915474 seconds)
  done (took 46.744850187 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.037304558 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.912880027 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.99425706 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.894893998 seconds)
  done (took 9.609880353 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.893902745 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.893905299 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.905784567 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.946133346 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.972050296 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.908873664 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.866915711 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.8641284 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.851139272 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.89568963 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.97173224 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.912321547 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.9784841 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.843319493 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.031314302 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.842366115 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.842571619 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.895902054 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.948073834 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.963512242 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.844411169 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.896876874 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.90105473 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.914826101 seconds)
  done (took 47.557403259 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.842362813 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.856707591 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.849986355 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.844807441 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.844417047 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.842518082 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.849936751 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.845219916 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.86551721 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.846163176 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.84404588 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.843393713 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.843608746 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.84458647 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.843664354 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.856211171 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.859025782 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.845822805 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.847672996 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.850944951 seconds)
  done (took 38.738489831 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.83689751 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.790805617 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.189952292 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.094605975 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.839029382 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.839254562 seconds)
  done (took 32.36280145 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.857290525 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.849737236 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.845704989 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.89991057 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.976309985 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.847288428 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.84477498 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.854150256 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.88703788 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.904073855 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.864069676 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.870224114 seconds)
  done (took 24.271812775 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.841012955 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.840348972 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.839807039 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.856518384 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.855992721 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.853480177 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.851141582 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.840316826 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.855829028 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.862673946 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.853821003 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.856684594 seconds)
  done (took 43.983740351 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927622707 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.885347874 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.894652558 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527265359 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.22033811 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048718483 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449816812 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185058412 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.843474213 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1151483 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958617333 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941984737 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.097053989 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245493306 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867752839 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.309733052 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138197945 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064578357 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870440315 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.573422849 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907296249 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.927810465 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.693095492 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900219898 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055544944 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.970295584 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.104564121 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.84257326 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981343923 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880220398 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853943663 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842704186 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115191843 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230810628 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945228604 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85160683 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.464124178 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.554093104 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.833768276 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.636744197 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.614320921 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.966775257 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854191503 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844597121 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777905277 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.894694292 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22198374 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.848709101 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.555530389 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842236808 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856790524 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940538015 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.849095408 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.662852757 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755978766 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.843691887 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.84180333 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850231419 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.418948134 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.997920169 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.933021304 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.809063946 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.937018728 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.640045515 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240104364 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.994895825 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.848322756 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848113417 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779162749 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.574648832 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901669134 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175043186 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.863169945 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.495489791 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15136054 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.003225526 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785490835 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160718922 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.287265679 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.811843652 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071970821 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845672987 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780779254 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.791858721 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780687847 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120211342 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885299862 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.601317052 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883648031 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184610222 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.857181637 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863680017 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869569397 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.069151695 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.733795628 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846064515 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.724643263 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996461611 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865222433 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.187694188 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781322601 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.84832294 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104990484 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.059224977 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.823446901 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341106715 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01113658 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.312289969 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.890531162 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.903702605 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886765021 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.123416929 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904826441 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018487823 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900340294 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.845836957 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171070942 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.362650391 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.975563243 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.014346647 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969219569 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.174894228 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878141962 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930090164 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854327977 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.849214321 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.692583328 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400195339 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.848167442 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.85071969 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.822207096 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886347753 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.846531297 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798056956 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.468837175 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.969311893 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.858277707 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072776928 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.327850741 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152472065 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784414492 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176309061 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939039406 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.068322927 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.501448643 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.928548846 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.111691975 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.830554571 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.851822476 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887884979 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867404803 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945095381 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871641282 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.904469274 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.13341279 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.851090343 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.852440339 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.668515174 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.88338807 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850625327 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.853655273 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.602359344 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127629613 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.872243627 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.852794747 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.73699174 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.862810057 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915734972 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855874806 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.858845997 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.391442245 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562156679 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.855923339 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.430541537 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075598595 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860086857 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.569735467 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965860259 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.940111375 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131178596 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907573042 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.782925975 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.561532732 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.543315974 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850474923 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785482359 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.852816345 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858505373 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861314464 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.045764385 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131509787 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893745215 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.567186307 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.893448761 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861798576 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.856272824 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853035164 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.360294086 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.012397892 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.947272813 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.890922638 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994561736 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.864576992 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.786279589 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.856747274 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85708029 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.851769608 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.853798517 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884870442 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.58853966 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240595544 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.114421454 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.464884947 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866869817 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.624716722 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.908771155 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.853733029 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.752982163 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.921946823 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.946029918 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862113823 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.863153041 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.641585429 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.5610564 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420828251 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164761769 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16325877 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295878293 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.968636695 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877885889 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194534854 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786900518 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408678068 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910634118 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199767766 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799338548 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942678482 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.506528721 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201558095 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867089785 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083190602 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247604077 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.672501762 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.996853036 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.067380547 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891746725 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.907778813 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809471144 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.138792395 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999209617 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.605165051 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059394262 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193169715 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.628529055 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.980947843 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.854287322 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.556049416 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941993901 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.568592523 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.02824952 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.944746001 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.868999322 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331045392 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.860767382 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082493049 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232028478 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.923464677 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.976624366 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79268167 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.866212413 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.865887511 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.857940944 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.851804497 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.730502686 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.109470841 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867543675 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791522315 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.878737203 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150395225 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.756319387 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.864683285 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856446713 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162605443 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.316509816 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019875788 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.862708109 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.364131543 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866370659 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790835636 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790214351 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.549658621 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863647179 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835359855 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072005406 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.961568499 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.768295313 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.845629674 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931885206 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11433186 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.871272369 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134155574 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1332451 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.55420918 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882136535 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.959296091 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.611850668 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.964904131 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859341627 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09598744 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.612585393 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.083632122 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.911423761 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.813167239 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.859054179 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073195603 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.856930595 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.842441057 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089734045 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.580394748 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.002072817 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169252079 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931514509 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.865425295 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.905989298 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.948204193 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867669824 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939337023 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86879481 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.869159449 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869399805 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906798103 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887762551 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.982176914 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.872367997 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952586514 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.044196146 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.377719691 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.864685777 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141467398 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219520269 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191970616 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919271954 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.859827562 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86991264 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795522239 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005766082 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.086516786 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134701759 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.991650746 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.973888754 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885255112 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.641871621 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.968667231 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096097152 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1353702 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.753773036 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285477678 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.894428547 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.860848667 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871310452 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.073062264 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092573461 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172772286 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.005729822 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.84804066 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225648333 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135314557 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.861852549 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860271702 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4525519 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.005331697 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.563843061 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.903479236 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841811545 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137087918 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.871435341 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25490033 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.881782986 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.015924652 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.634547463 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.641753707 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151714355 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.858032386 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.922982834 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141190439 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.252840955 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176775225 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931692487 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872650698 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.974658821 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009241101 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.735241017 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860606316 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.864307557 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914204366 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.575234155 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.873182216 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146983408 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173796304 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.861743802 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.739401638 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882194957 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.87423966 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.088123243 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162832347 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119586266 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872852038 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870152749 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.680342357 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14939344 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923302401 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79909866 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.863479663 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964640518 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113245978 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883920669 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.316366787 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.576045073 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167939985 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.867921622 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886073846 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.934168874 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232389575 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195128541 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.397233769 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079029128 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453325505 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.360158166 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161655478 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.87019801 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.936446002 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162835223 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.870101578 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.852044469 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900790262 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.143519891 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180015584 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.993811535 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58538722 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.832924149 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.206711599 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426022299 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803936582 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872554815 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.925974126 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.865288444 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.995044777 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874058868 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.745054766 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929118819 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.642550515 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150417667 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.868619348 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.857504275 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.648892237 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.060841994 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895832339 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009649316 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868298606 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.541393538 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.21649723 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12313408 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.858076873 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.869492293 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.869846413 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867411129 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853968794 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060999939 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.063115047 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153560402 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.880039937 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.898807951 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870971433 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.084727977 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078555725 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.855301432 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003542075 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8536189 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905092186 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.77814466 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.370015323 seconds)
  done (took 1666.264136095 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.9208939 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.89139484 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.943378283 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.934263153 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951905059 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927415062 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.939430737 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.959457319 seconds)
  done (took 57.266481856 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.864566577 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.066782111 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.877129208 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.869426941 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.874559433 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.869798832 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.031582143 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.883938164 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.873300074 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.876833679 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.870900643 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.87064724 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.181177802 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.890488528 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.879623185 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.852863115 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.876307559 seconds)
  done (took 74.332300579 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.889088624 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.931562115 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.890988316 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.885523412 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.825811567 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.882262841 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.656462621 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.887241371 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.864472252 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.096094337 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.503019404 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.884938039 seconds)
  done (took 89.998201153 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.878033634 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.875859137 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.875030953 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.877109298 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.874968403 seconds)
  done (took 11.187401939 seconds)
done (took 2173.210646348 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.127477594 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.087763757 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.097568257 seconds)
  done (took 5.985661668 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.023692369 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.069611578 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.188432124 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.195905842 seconds)
  done (took 10.286465862 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.162627656 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.242132954 seconds)
  done (took 6.210673074 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.269576438 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.872109719 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.247288153 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.872554928 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.875565444 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.873401384 seconds)
  done (took 22.434036287 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.878806473 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.879032332 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.879198823 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.880432639 seconds)
  done (took 9.32204539 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.8614085 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.57516985 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.857604981 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.872883774 seconds)
  done (took 20.972344916 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.62717607 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.639388706 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.622945467 seconds)
  done (took 9.695150802 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.400384667 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.77533028 seconds)
  done (took 8.980882362 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.138786176 seconds)
  done (took 3.944495469 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.009569876 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.183914841 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.362284647 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.384726071 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.500865554 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.544748611 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.175766316 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.112607211 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.280775737 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.309962814 seconds)
  done (took 24.672870765 seconds)
done (took 137.821307606 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.251877825 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.237609827 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.07544446 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.21192734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.282976278 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.075555149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.085433643 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.194001165 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.716351013 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.712630656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.24790431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.260572651 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.243074762 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.241596882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.242594983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.116904764 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.093336136 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.269692175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.903724907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.138271275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.085632523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.846900153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.091249308 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.85974092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.094689627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.02729475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.426008884 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.113988768 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.062724444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.433992494 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.024627805 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.292950307 seconds)
  done (took 171.769897336 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.789802401 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.873196332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.873711378 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.873585212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.281706978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.875252374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.875648036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.872847686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.130709473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.119741981 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.874184618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.259769719 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.878789263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.876126048 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.876008942 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.873901508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.242990059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.833022946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.879580233 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.887395761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.891885544 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.205113837 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.894181549 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.243461365 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.281476846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.903571876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.876167492 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.91117744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.882256919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.885180442 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.887557982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.876768977 seconds)
  done (took 208.600380721 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.878417979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.877790052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.876109833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.875587622 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.877534504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881175578 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.876442112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.87605435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.447306666 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447601696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.888389636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.883937836 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.884481632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.87736384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.886405034 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.876283963 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.892104878 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.880873749 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885415348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.887591567 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.890784234 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.590150076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.893186487 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.584664058 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.895611609 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.889902158 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.877252254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.904766958 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.897706635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.899203808 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.8979286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.878835604 seconds)
  done (took 220.685919646 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.091300809 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.893443748 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.897123136 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.849191172 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.895877939 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.89429154 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.888826554 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.09329357 seconds)
  done (took 19.836368791 seconds)
done (took 622.709878821 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.494142349 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.24326137 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.081233251 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.919690137 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.156711544 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.960210582 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.916067639 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.987214765 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.658399814 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.988752841 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.615587253 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.929247489 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.695042498 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.934260762 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.037954946 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.96766297 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.476951062 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.571022395 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.095459916 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.984186007 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.094541928 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.897845929 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.989492978 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.679571323 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.716124128 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.903010445 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.094794463 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.486907181 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.924485883 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.081890684 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.691235519 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.309272405 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.927892576 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.910371684 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.965000311 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.949505933 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.272001993 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.9264574 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.041181647 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.667365148 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.973119506 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.536689798 seconds)
  done (took 104.572295799 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.886502931 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.886586607 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.888108235 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.885881472 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.887717794 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.886168539 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.885409455 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.885868175 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.886369879 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.884788771 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.885732679 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.885415085 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.884728329 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.885582437 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.886454067 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.884812825 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.888121959 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.889954479 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.883777661 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.883666717 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.886748282 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.885379591 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.885969016 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.884762976 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.886572961 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.886911847 seconds)
  done (took 50.872131411 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.901139313 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.043574195 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.126777387 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.915609066 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.90011611 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.903276825 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.919664191 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.904667474 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.903184853 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.901330319 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.996417138 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.902837498 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.915708493 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.134591758 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.910866183 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.898023492 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.896537546 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.898299392 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.045636543 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.91379749 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.916710889 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.903799807 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.915178013 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.908266685 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.898863961 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.896753472 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.899739341 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.334418263 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.906108531 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.993348741 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.992209746 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.916572205 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.295359267 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.132732497 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.963260027 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.90575767 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.898439869 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.996718677 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.902319675 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.896512626 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.914672462 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.902230117 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.121656262 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.395887077 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.90944257 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.898166136 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.342368872 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.00324957 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.937612889 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.91005649 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.124584434 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.911816413 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.90111678 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.898067013 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.934218994 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.906526009 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.898032079 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.207488083 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.908970854 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.918384346 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.901590885 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.899659362 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.05376714 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.904327115 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.042521157 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.9060353 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.905119438 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.898854602 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.121859103 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.912474848 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.399047786 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.908303857 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.89871937 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.991988388 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.044454782 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.365692276 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.910234404 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.055129068 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.310282476 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.921555526 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.903827488 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.325825327 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.925635752 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.903263686 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.901833539 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.900634783 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.90031521 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.944327839 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.915963031 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.328683384 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.398979363 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.220852187 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.923729419 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.912830297 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.900940755 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.210358953 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.905868856 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.9011801 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.117283074 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.412513891 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.914665569 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.906819073 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.382175878 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.912452938 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.922566476 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.907233605 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.129875362 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.915145533 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.944921237 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.90019197 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.908850669 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.904305657 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.919392245 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.90646074 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.904289258 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.371248618 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.014625308 seconds)
  done (took 235.146456575 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.893930625 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.892998095 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.894418614 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.892344316 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.891872562 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.900499409 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.893937724 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.894788152 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.902319241 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.893266746 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.893252791 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.895725388 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.897678365 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.893694059 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.934897537 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.902099294 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.504019062 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.894441262 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.892568266 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.905211598 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.543141861 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.901626502 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.896775375 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.91217477 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.896558758 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.897754852 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.904273284 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.93832902 seconds)
  done (took 168.281747214 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.902566765 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.015841992 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.9185097 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.929202545 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.907498561 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.900153963 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.925567984 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.917732636 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.906014704 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.900399969 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.899244624 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.964525024 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.912840157 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.008011718 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.93233221 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.934791308 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.007152049 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.908835731 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.900836539 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.898208761 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.93010186 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.897801356 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.963431269 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.028826119 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.918472186 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.021548576 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.904826919 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.902623407 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.902075421 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.019493905 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.916558073 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.964839616 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.929003895 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.920156107 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.023133147 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.02091175 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.011155227 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.932224154 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.905504998 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.902601471 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.904383753 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.892536772 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.021392952 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.920284915 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.904003644 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.010537428 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.918913102 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.905950287 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.913209392 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.9019765 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.919626531 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.920119461 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.97185204 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.033583563 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.933881221 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.930455093 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.92875349 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.192864781 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.913694185 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.004887971 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.897511217 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.021968939 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.921155265 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.89334525 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.904237667 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.908159443 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.932173072 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.935529677 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.0102303 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.911561043 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.006657378 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.94039491 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.909135997 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.903245503 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.90592315 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.022833839 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.019893923 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.940638434 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.942219357 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.935615346 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.899781396 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.904509602 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.895111741 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.923544188 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.907579582 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.022540426 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.020383962 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.912464158 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.907997534 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.908362725 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.907304204 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.933041708 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.026715878 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.935995026 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.004485065 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.972120488 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.975099265 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.915040729 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.918554718 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.909711437 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.968330823 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.917921187 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.917637311 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.24257886 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.977344649 seconds)
  done (took 206.16579027 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.382394626 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.9566632 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.961001412 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.182769665 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.327142077 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.718927366 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.948971759 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.955539201 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.977605989 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.112525243 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.006244618 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.96866663 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.942662866 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.928711513 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.954286541 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.976460011 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.959025001 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.261277161 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.073739544 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.076345622 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.931569833 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.261323381 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.275934649 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.335884831 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.987636148 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.277178986 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.625653019 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.194337078 seconds)
  done (took 62.399787513 seconds)
done (took 829.256270683 seconds)
SAVING RESULT...
DONE!
