cset: moving following pidspec: 7276
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "string"... done (took 0.648348648 seconds)
loading group "linalg"... done (took 7.272850899 seconds)
loading group "parallel"... done (took 0.167588979 seconds)
loading group "tuple"... done (took 1.707136151 seconds)
loading group "dates"... done (took 1.22044172 seconds)
loading group "micro"... done (took 0.4185424 seconds)
loading group "io"... done (took 0.415192323 seconds)
loading group "scalar"... done (took 35.915393641 seconds)
loading group "sparse"... done (took 11.012758745 seconds)
loading group "broadcast"... done (took 0.98157992 seconds)
loading group "simd"... done (took 2.455237848 seconds)
loading group "random"... done (took 9.293533068 seconds)
loading group "problem"... done (took 1.736396996 seconds)
loading group "array"... done (took 18.161002947 seconds)
loading group "misc"... done (took 0.881140472 seconds)
loading group "sort"... done (took 3.183247115 seconds)
loading group "nullable"... done (took 5.767799174 seconds)
loading group "shootout"... done (took 0.748068103 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/7) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.428825481 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.209927394 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.218525205 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147423565 seconds)
  done (took 1.909789645 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 0.194331206 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 0.120662551 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 0.12027123 seconds)
  done (took 1.251834189 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.158287098 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.141185133 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14232592 seconds)
  done (took 1.240730543 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.22495633 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.222394551 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.497257438 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.367684117 seconds)
  done (took 2.150961865 seconds)
done (took 7.341509071 seconds)
(2/7) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.421851201 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.884441171 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.499218022 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.17709808 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316305307 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.255081739 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.269251976 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.231841494 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.132577613 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.117697648 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.195836635 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.433486549 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.360787919 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.810583246 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.116338188 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.136488795 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.157541472 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.807857829 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.120101725 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.152453744 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463195076 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.175788486 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.160651854 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.153586082 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.242475388 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.159154387 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.176755857 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.120324239 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.719142566 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13916211 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.226217384 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.125090558 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.173155749 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.196456337 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.209495216 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.143132028 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.7304234 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.228033677 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.121979269 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.121591859 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.727041826 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12011297 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.195662102 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.135046573 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.103490256 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.192707397 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112333908 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.120717027 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.149300271 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.120545567 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204114364 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.495224707 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.148943382 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.19006104 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.148699426 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.734232126 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.143516854 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.293903925 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.172017964 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.149661769 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.122456564 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.120809985 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.194725041 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.126613028 seconds)
  done (took 21.417306699 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.155472564 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138448611 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.122349636 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.175020301 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.145380708 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.136382357 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.127416971 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.122098697 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.135623112 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183207516 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135385233 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.198924318 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.120327661 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.158042653 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.16196033 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.26716037 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.132694877 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.142270815 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.131958191 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.133290135 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.156658259 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.14679709 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.127890355 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.12721499 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.187353015 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.25135878 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.166845868 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.153430265 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.131863207 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.126832609 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.183710792 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.176934511 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.122112177 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.13056814 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176025527 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.166399722 seconds)
  done (took 6.37344714 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.207351508 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.148681826 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.202589519 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.190532889 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.152918119 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.190930704 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.163317137 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.273670835 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.200620484 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.46852634 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.201039043 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156893624 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.163282775 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.120935281 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.126708641 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.119939065 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.152295414 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180365603 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.193831142 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16328033 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137662199 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.1272196 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.401128663 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.122922614 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.134754008 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.123035059 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.106079761 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.191153009 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123441186 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.795204404 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12398504 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101377068 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155584869 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.251173351 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129852616 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.172799698 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12322384 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.121663865 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.122305148 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.123758685 seconds)
    (41/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 0.896607522 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.138117145 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.142644048 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157621161 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.182130772 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.121242373 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.122217916 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.232517976 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.12104584 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110770371 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.875702839 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.211273444 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.158617657 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.122706526 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.282948342 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.142966435 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123649244 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.137982071 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.193270736 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124932089 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.123212316 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.12141509 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12539765 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.12340864 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.121017554 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.552102889 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.124540139 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137910973 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12461864 seconds)
    (70/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.376815935 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126733086 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.126156197 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.141808117 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.134196046 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.119755592 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120869141 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.134375049 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.122721821 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.121669382 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.123225167 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13737557 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.120696982 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.183407192 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.124320488 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.143233368 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.162123689 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.12347904 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.120711928 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.155774208 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.122133338 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.13437896 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.179424353 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101797582 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122265268 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137914744 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.169846528 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.13552282 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206757438 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.123513053 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.122502031 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.143861241 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.199428224 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.122725732 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.165528941 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121142779 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.121250824 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.121689706 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123600494 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.121720576 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.121901954 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.198155924 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.124522469 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.121841472 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.123321199 seconds)
  done (took 25.915610569 seconds)
done (took 54.501608412 seconds)
(3/7) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.368464453 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.333018465 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.075404422 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153460996 seconds)
  done (took 3.767428805 seconds)
done (took 4.613368222 seconds)
(4/7) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.130562133 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.13410197 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.133245995 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132087956 seconds)
  done (took 1.374569001 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.128807092 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.121469078 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.123438881 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.122500215 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.124747986 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.121106532 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.136672617 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.121803059 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.120288969 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.120097116 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.123337332 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.118973859 seconds)
  done (took 2.335190809 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178210162 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150247737 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.15801304 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.26920211 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177687051 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269041196 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210088448 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232393309 seconds)
  done (took 2.516689378 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.189693256 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156638634 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.153146639 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121224564 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.157683948 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.32123638 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.136346807 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12077737 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.183261223 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.121368995 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135599436 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.439844131 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120078049 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.120433262 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.1192989 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.119852042 seconds)
  done (took 3.568773026 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.169065912 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.390647372 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 3.590533894 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.190841587 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.167269664 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.128221123 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.538865452 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.129209727 seconds)
  done (took 9.168219227 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.203902256 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.139459495 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.153727999 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175055361 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.166711633 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.15629285 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.172056866 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.129504527 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.139375405 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.136967278 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.148969293 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.15437438 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.173694294 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.139153171 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.132175048 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.131059264 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.195892369 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.140758891 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.178696747 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.135228859 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.139383227 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.143816473 seconds)
  done (took 4.249802087 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.173703933 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.126413562 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.127420324 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.127115467 seconds)
  done (took 1.422892115 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.171158986 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.169201125 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.123265815 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.123278456 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.149746417 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128286495 seconds)
  done (took 1.734338633 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213965897 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173488053 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227012387 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31844224 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148768499 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179481622 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255852996 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154506449 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.171497018 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141656701 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165429347 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160361244 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154793357 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195279372 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144840974 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.192630851 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160124412 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181650614 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168073887 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188001351 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157924203 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171590884 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222293073 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152986633 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145833 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149351744 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.139581157 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156980507 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16006819 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157713212 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154169465 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154720793 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157505434 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171759063 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155995396 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155180627 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277148163 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14149879 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.184022843 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.175071355 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189335459 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145242213 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183228748 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152816849 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144585565 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176108987 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145171463 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179895013 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144642696 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148654937 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158850578 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174559768 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.182620918 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143429621 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273811425 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156265193 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143677768 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169006966 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180725496 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192445701 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163724311 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.134165106 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193534038 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169230459 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167456351 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14476401 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.150341465 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146263712 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157690583 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176581882 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160639003 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153517427 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181721153 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138616649 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157628565 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155841605 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163739467 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16735955 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158560037 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.13344176 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146042524 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137684059 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15499883 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.237936891 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138175463 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185608519 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160216324 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167383855 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179369947 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153764106 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152405205 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175494523 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162501601 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14901434 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.116246976 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148578321 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.178370448 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154588094 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138230218 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150932183 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145435603 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.136158865 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170643697 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.13817204 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162028286 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.142673311 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153672335 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183411592 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.146101331 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16915524 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150611401 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.178189629 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158005148 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175662143 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143470269 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141465615 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200869328 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166869684 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145535267 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166774769 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173875393 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.163431607 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142493679 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152567376 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203031056 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148070016 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175772143 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140766294 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141184574 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.1522577 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167377151 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150437077 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.189984565 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138315145 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.171810744 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167973246 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.137646484 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143454136 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180978321 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136136097 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137567843 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140893825 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140981964 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145926727 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.169151049 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144291114 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149662118 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16200915 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16248875 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161547219 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141458911 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153768437 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138994701 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.163636102 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165655353 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.134166083 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.15538617 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172210795 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137099906 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187780443 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151832715 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182665198 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178727336 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139830771 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174358345 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154374869 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.136233734 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148531318 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154942469 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14982862 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.18314843 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180083095 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.150035769 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.170626795 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146110899 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150696189 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169055646 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150966264 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.157832291 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159771434 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156638285 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.134545322 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.131754953 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136639652 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158967841 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137500166 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144235521 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152854634 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149873807 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19555748 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16107614 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141899958 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190798285 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.136760059 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150703452 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.160860261 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144960333 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185142677 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171289729 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170185119 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141594053 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146467927 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.134624382 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153562405 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140388313 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157432171 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147089585 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144839228 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162478762 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176848606 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158261327 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150758697 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208676048 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156923796 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184711478 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.138627544 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.194239295 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158943467 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165682522 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178769871 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146096511 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.155446932 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192738546 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148144188 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183787896 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162068026 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18334161 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17268837 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.16608355 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141610676 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148126728 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179284111 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144595552 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160062882 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146455984 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143298111 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147097127 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164711658 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136737011 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161020196 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147156283 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155225047 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154626437 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172402161 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142301546 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1451554 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168245697 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149240207 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.1450322 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15902518 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163215588 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152841224 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149065953 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179676201 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142863837 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.303976504 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169993964 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161471581 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144062104 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163128216 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172231818 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156834748 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150903897 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196883835 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146578277 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17335305 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187757955 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.146306594 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144357882 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153146919 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153036919 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135378179 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.157110481 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.161970038 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.152881173 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161663365 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146090505 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189448672 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165521118 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15926753 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.158223333 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147196861 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209277171 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159105009 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160962997 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163172216 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.154441427 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192312864 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137629932 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137956719 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137886668 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192864889 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140875806 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159740844 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.190403891 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183998049 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185997674 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158834164 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145951102 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.138821704 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160969283 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16646202 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183063014 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142199996 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161088293 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167278045 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133530389 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142255031 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159732184 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288164018 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149873598 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155497776 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.12210191 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279486309 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141103628 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140329087 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153950583 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174728225 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137404415 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17556674 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164421537 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148702359 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158163269 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163409398 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186750284 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179997749 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171590676 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15494652 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143546397 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151375604 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146050137 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175675203 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150559928 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.151559147 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158033224 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172243481 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183798932 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140932726 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161415499 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161840273 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160662539 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150113083 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164312864 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174769571 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139615449 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150862551 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140251494 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133892935 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171555615 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.175300574 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138577678 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176108778 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160386457 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141430834 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137129798 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14532707 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17913542 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145140873 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.139851234 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157262456 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.140272238 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163985029 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189082565 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140588199 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162554819 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14375613 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137801322 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16028861 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148596411 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141244078 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172576135 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164470286 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135686039 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174914492 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149978569 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153302945 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146773273 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143737902 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.150346074 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.157903389 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173344599 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152581833 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174841367 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148638664 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181773534 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163220616 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148205019 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150884551 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143756829 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.246662232 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152203922 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.160509447 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140683533 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1476986 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1445042 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.156410113 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150398455 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161272324 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143709685 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142303152 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.161055467 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16819611 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.145391044 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147728004 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174414288 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153394227 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17885333 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177626429 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162260159 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164422584 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154303421 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14196519 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157539657 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161905785 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165926408 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146511718 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.143807813 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.142587825 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17486707 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.139507335 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17361272 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163151403 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162047912 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164242814 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134894458 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180344232 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144243343 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164736172 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135042243 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14797161 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183559097 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140916314 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.139172167 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164991722 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147137007 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161242642 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154742723 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173481767 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176006041 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.139103862 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14029291 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279318201 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155571319 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202220268 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.135369239 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143989191 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147688473 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154119179 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165637753 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184755827 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.141447457 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141062701 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135655239 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.176362022 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142223812 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166972769 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171520903 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148236309 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195291524 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.147383337 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.262215747 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147878442 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164271099 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.144070974 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.139434631 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146791852 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141024288 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146070949 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202285779 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174163907 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.166805011 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.144722733 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155352996 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.142396111 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141655164 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156343904 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147082949 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164445702 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164378864 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.121835395 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144142213 seconds)
  done (took 78.324534987 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.179217553 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.183206538 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.25370838 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.213781515 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.176153267 seconds)
  done (took 1.963964831 seconds)
done (took 107.511796789 seconds)
(5/7) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 0.184430437 seconds)
  done (took 1.135138554 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.34803511 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.115944423 seconds)
  done (took 1.436384473 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.148897286 seconds)
  done (took 1.117133471 seconds)
done (took 4.651911601 seconds)
(6/7) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.157084221 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.199461468 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.225532381 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.189086755 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.174925247 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.161009092 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.173097152 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.129306388 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.127183632 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.126969358 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.18855631 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.128498673 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.193144743 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.127385053 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.228286153 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.128651276 seconds)
  done (took 3.630468511 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.217079839 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.226412032 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.144760448 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.13243856 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.153536354 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.128395238 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.128325047 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.130500324 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.130483003 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131558908 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.128992102 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.14967881 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131837715 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.130485588 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.129394737 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.1291732 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.132442959 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.130254832 seconds)
  done (took 3.549659492 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.144608334 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.169244707 seconds)
  done (took 1.279221052 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.150273718 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191079745 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309405687 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.181930538 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.133702337 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131085454 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.16329395 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.144613501 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.224232006 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.128923797 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.129235359 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.133006997 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.153536982 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.132383524 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.146879571 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.158111796 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.155722246 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.145714829 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.14903648 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.133699753 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.155581167 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.154130703 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.133804516 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.146772784 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.197333404 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133254935 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.131832128 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.147630924 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.128932387 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.142790714 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128001892 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129072908 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.128424711 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128289498 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.151757287 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130305327 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.131494654 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.129742477 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.148437033 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.134116217 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.15455457 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.133971017 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138653247 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.13731851 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.134518013 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.136547113 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.134659233 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.15337537 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132965093 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.138998052 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13389489 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.134421773 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134360103 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.156993568 seconds)
  done (took 8.923935928 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.905317918 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16868458 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130795403 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.049336651 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152282075 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135354992 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.956767267 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.161904876 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.221863897 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.005274204 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143361806 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130379987 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.142297355 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.244578867 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.069008007 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.246964925 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.833499567 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132251804 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.158102717 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158216558 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129834877 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137834357 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140754561 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437383972 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.130635606 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.133724407 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.151515706 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.13333602 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.140533863 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.133084033 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.133829867 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.1455602 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.255910895 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.135649862 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129793251 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.131486902 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134149042 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.144953209 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.187721568 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.156470317 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.169677233 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132042908 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.131814248 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132246356 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13695289 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.149492335 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133552528 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.14802881 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.145799476 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132415302 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133163861 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.1360379 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.154617148 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.131998699 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.141253018 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.248786664 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.249489618 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.130782971 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150154848 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132173861 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.181977192 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.13618743 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.141835006 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142641393 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.155282735 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.131631054 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.718682174 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.141659914 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.131135949 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135317277 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.136256433 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.153276475 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130193721 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162002235 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.412576976 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129879924 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.130891225 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148999046 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.169991868 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.132193696 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131360908 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136103062 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130019188 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131572527 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151373439 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130333194 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.142800212 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.216527604 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130162223 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13052435 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.150811776 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136719131 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.130974895 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190472126 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.133157087 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.131882273 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.182097318 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.150890766 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.13403157 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.141202383 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131600464 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.141994593 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131292883 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.153688398 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131809918 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.13320835 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136602217 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.136230313 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.131063524 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130208247 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158909523 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.136471335 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131632242 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.142497939 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.431539304 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.140965412 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.151053566 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.137515392 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131768153 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139180618 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131610172 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.183530532 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132595562 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.159287364 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13114873 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.132351537 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131768293 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.133502102 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134128299 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150840969 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132197327 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13483656 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.225631416 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.137821576 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131728972 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.1927808 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175970771 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133269391 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.146479451 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131433753 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.142740149 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134518922 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.150434633 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132240769 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.721041901 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135919938 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132430179 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.188377097 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.201838166 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133570827 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.138452313 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.132255296 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132845246 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.712570991 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.135888788 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.15179989 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.137901125 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132656534 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1322972 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134039182 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.132908242 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153837649 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144656105 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133153804 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131995835 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.132480953 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.13915296 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.133234262 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.153827662 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.133147169 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.133866744 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.133774973 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133044642 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.137982071 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.161580743 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.135577087 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.137091107 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.519414165 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.132763531 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.132318083 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144409704 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152544678 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.223810444 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13354254 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.142533488 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.13851049 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.133023829 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.268908567 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.140352275 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183497147 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.136435926 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14545453 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.133607074 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132132235 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153753421 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.134146947 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133110363 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.134354516 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.133780211 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132752216 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.087502538 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.13408828 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205010288 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.13293094 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.144668956 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132139918 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132958248 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.24441942 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.134406896 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137541931 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.133994624 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133145703 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.134653367 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.964880032 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.134821474 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135501798 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.132924026 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.134803944 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139407462 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.133160299 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.153302386 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133805702 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.136528604 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184577173 seconds)
  done (took 45.485981354 seconds)
done (took 63.829333536 seconds)
(7/7) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.205314726 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135178573 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.140081012 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.143504911 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.214699928 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.14727194 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155180488 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.141785558 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.149995261 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.141032111 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.153009192 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.155726507 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.141888644 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.154898539 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.144127825 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.132141175 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.15337069 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.1510345 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.155878552 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.15460304 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.188992399 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136359589 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.172031583 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.13335355 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190148063 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.137493462 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.139829443 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.166512027 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.155633338 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.142306714 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.145760435 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.133295233 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.155853269 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.174790593 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136597607 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.141765932 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135496979 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.118643579 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.140801215 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.141800364 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.175601171 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.142535863 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.139942726 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.133687671 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.141705031 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.141410231 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135279353 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.165127703 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.13416336 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.145918695 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.137849513 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.154693205 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.142379278 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.152763351 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.133570896 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.133990293 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.151482182 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136034827 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.153925719 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134945442 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.153885211 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135996205 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.142526784 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135474909 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.141796733 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.133296001 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.160735245 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.142694194 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.142212916 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.137823742 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135199315 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.141525539 seconds)
done (took 11.644821803 seconds)
RUNNING BENCHMARKS...
(1/7) benchmarking "broadcast"...
  (1/4) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.989675992 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.989651757 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 1.989110208 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.988552246 seconds)
  done (took 8.945250161 seconds)
  (2/4) benchmarking "typeargs"...
    (1/3) benchmarking ("array", 5)...
    done (took 1.008689094 seconds)
    (2/3) benchmarking ("array", 3)...
    done (took 1.010561748 seconds)
    (3/3) benchmarking ("array", 10)...
    done (took 1.009634116 seconds)
  done (took 4.016803882 seconds)
  (3/4) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 1.987472778 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 1.987759966 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 1.988345934 seconds)
  done (took 6.951849813 seconds)
  (4/4) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.209291559 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 1.988794734 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.336153501 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 1.988329731 seconds)
  done (took 7.510535593 seconds)
done (took 28.410906444 seconds)
(2/7) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.042428161 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.150182227 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.250655199 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 1.989671871 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 1.989809738 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 1.993900272 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 1.992799713 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 1.99242718 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 1.988346702 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 1.990244081 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.381129402 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.252016684 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 1.992223382 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.374550353 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 1.989681788 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 1.990258119 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 1.98898163 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.203340313 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 1.987515731 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.035628832 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 1.995664533 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 1.989851084 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.008469793 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.008148103 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.091168996 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.009562459 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.029231092 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 1.988662176 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.151561033 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.020775127 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.034766712 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 1.98878761 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.025629307 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 1.987915642 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.98780236 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 1.989396487 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.156637377 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.088609173 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 1.993049955 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 1.989703369 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.161355156 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.003694814 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 1.988517046 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 1.989462486 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 1.99218937 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.045924904 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 1.996543416 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.13910484 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 1.991503459 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 1.988212468 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.015965438 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.376343737 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 1.992932551 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.009530891 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.002365315 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.190829994 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.003725264 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.013545997 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.007808465 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.00952663 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 1.988865833 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 1.988581439 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.045638695 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 1.991657598 seconds)
  done (took 130.035267337 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 1.987895598 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 1.989427985 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 1.989681998 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 1.999536673 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 1.988949084 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 1.98932434 seconds)
    (7/36) benchmarking "scal!"...
    done (took 1.988857033 seconds)
    (8/36) benchmarking "gemv"...
    done (took 1.988590588 seconds)
    (9/36) benchmarking "syr!"...
    done (took 1.989039179 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 1.994828463 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 1.989214062 seconds)
    (12/36) benchmarking "her!"...
    done (took 1.988866321 seconds)
    (13/36) benchmarking "trsv"...
    done (took 1.99001109 seconds)
    (14/36) benchmarking "dot"...
    done (took 1.989366455 seconds)
    (15/36) benchmarking "dotu"...
    done (took 1.990379992 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.007149373 seconds)
    (17/36) benchmarking "trmv"...
    done (took 1.989328042 seconds)
    (18/36) benchmarking "symv"...
    done (took 1.989890404 seconds)
    (19/36) benchmarking "dotc"...
    done (took 1.988423388 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 1.988853959 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 1.996406317 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 1.98905189 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 1.988486315 seconds)
    (24/36) benchmarking "symv!"...
    done (took 1.988370658 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.011261488 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.043299012 seconds)
    (27/36) benchmarking "syrk"...
    done (took 1.996854488 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.0133818 seconds)
    (29/36) benchmarking "asum"...
    done (took 1.98810603 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 1.988497699 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.007604599 seconds)
    (32/36) benchmarking "symm!"...
    done (took 1.996397098 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.513407955 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.928888374 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.009070078 seconds)
    (36/36) benchmarking "trmm"...
    done (took 1.99408165 seconds)
  done (took 72.260102002 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.988437775 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.988666995 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.988773083 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.012250441 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.989261693 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.399150339 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.410465465 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.930822139 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.382013174 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.103437595 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 6.882499164 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.089220144 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.988340207 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.07223684 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.001337181 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.990040912 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.004779309 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.017236689 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.989171878 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.989023604 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.397522479 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.003395194 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.089465707 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.137448345 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.989087369 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.012614383 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.394174846 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.989050912 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.01307345 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.341467794 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.012818879 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.988863179 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.197596706 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.352861911 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.091933968 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.990191071 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.011730961 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.987856067 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.251903682 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.988465223 seconds)
    (41/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.543604812 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.989383915 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.992813611 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.498912048 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.989002372 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.397501875 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.989047839 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.798415636 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.988881827 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.988552804 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.734716825 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.385492806 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.9889421 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.987814582 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.991463859 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.988462779 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.98882309 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.011715805 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.718232675 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.072649742 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.989860861 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.99296803 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.012586098 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.989304087 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.98867782 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.976008402 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.047126105 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.396813589 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.988710645 seconds)
    (70/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.037722605 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.076217374 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.098401829 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.989125363 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.988402925 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.98894636 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.988596176 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.989119985 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.090807358 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.988728734 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.305473133 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.137752573 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.990799319 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 6.888169997 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.076221146 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.989595814 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.197861195 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.98926777 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.988907667 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.546463276 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.074584624 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.98880996 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.988247737 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.988421013 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.305228549 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.409181084 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.087444849 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.988477026 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.041780523 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.989655389 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.988441896 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.303487127 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.988427509 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.390175036 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.515427415 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.988609027 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.989978893 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.091017998 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.137488503 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.990738836 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.988562443 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 6.886012041 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.988742773 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.040577646 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.988885598 seconds)
  done (took 338.364563198 seconds)
done (took 541.646455894 seconds)
(3/7) benchmarking "problem"...
  (1/1) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.052357636 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 1.990380341 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.993085434 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 1.998270311 seconds)
  done (took 9.022429529 seconds)
done (took 10.010013774 seconds)
(4/7) benchmarking "array"...
  (1/10) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 1.988168328 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 1.991137001 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 1.990199522 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 1.988563001 seconds)
  done (took 8.94614825 seconds)
  (2/10) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.075095234 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.093537524 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.009912015 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.267608542 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.39383402 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.011570116 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.010863323 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.156349631 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.352007543 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.383055276 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.055981071 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.066468229 seconds)
  done (took 14.864847688 seconds)
  (3/10) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.01516827 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 1.993931002 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 1.996716273 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.036616458 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.022053154 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.042165488 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.005808839 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.058803497 seconds)
  done (took 17.160461397 seconds)
  (4/10) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 1.989851363 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.018080721 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 1.990773617 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.018228785 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 1.991176043 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.23441731 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 1.993204863 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.018782207 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.035834375 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 1.999224273 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 1.99832786 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.385802412 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.020735388 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 1.988986728 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 1.988592055 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.018801762 seconds)
  done (took 25.680851525 seconds)
  (5/10) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.24851177 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.084770556 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.573472855 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.010062732 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.02018895 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 1.991501293 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.299713881 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 1.990252043 seconds)
  done (took 21.20827914 seconds)
  (6/10) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.026637256 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.035698045 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.018646505 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.011873926 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.017509 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.013481882 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.034744223 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.013917761 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.026898952 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.011821196 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.020257465 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.017814486 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.03559901 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.011233831 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.012684015 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.025279541 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.020645223 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.025078608 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.035374191 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.016874423 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.012941311 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.025276957 seconds)
  done (took 23.45889844 seconds)
  (7/10) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.277464683 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.141374542 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.228216102 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.107215241 seconds)
  done (took 5.743767486 seconds)
  (8/10) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 1.987312493 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 1.988220709 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.424948382 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.33053463 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 1.990144347 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 1.989320848 seconds)
  done (took 11.698951382 seconds)
  (9/10) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.147187991 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989441186 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989100011 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032736495 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989474989 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989681439 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.049757934 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.431858409 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.010615316 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340791591 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996163828 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.147611858 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.321790781 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995303383 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.988835382 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 1.841745797 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303808816 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493172002 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988819598 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988641573 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.045668797 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.99009497 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.997290647 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.179428403 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988500004 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989641211 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.332488091 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989924137 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.299333456 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269801 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263075633 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989573884 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.338535019 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370618428 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.189664901 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.179046721 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994621313 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989804779 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 1.992956926 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 1.988371007 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991202094 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991733166 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263129969 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991236735 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990144138 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995837529 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437137083 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.013118009 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 1.989734239 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991245674 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.266989329 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.144637946 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.010321075 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989402494 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001287594 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989052588 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.010858294 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.166895036 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725462296 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989524855 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994614469 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 1.988204716 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989511795 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990010182 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722991729 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.010700803 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.010825259 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.010525849 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989236131 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989273217 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.035641334 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989289909 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.034144636 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989426379 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.803189986 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989163426 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990809516 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560813005 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989627871 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 1.989128994 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301499722 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989066138 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989316099 seconds)
    (84/481) benchmarking "5d"...
    done (took 1.989741223 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989722576 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668913274 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.011675158 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 1.989431058 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.045375672 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.432202866 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.177974378 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.032956356 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.042969501 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.291482109 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 1.989528836 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98963723 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 1.992960697 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990393192 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.034005581 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.440383655 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98980848 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.010603793 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.323424858 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.283417675 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990132264 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 1.850537139 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439670017 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997697403 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.035275924 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997749295 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.179370295 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.656969158 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.265691608 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997969225 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.050518226 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.989065439 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717126039 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989215668 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.010968853 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992918024 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302016828 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.782468288 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989678925 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.13553211 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990946195 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990946963 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989538195 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991900018 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.989667192 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.200044573 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995641205 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.265806008 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 1.991058151 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989318334 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 1.98924996 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989273636 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 1.990957998 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.292910572 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989490773 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.337863984 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990106214 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988391541 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989151903 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.294484375 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 1.997528247 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.010735024 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415724583 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993206469 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991755446 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.264442916 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.048897349 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.190762247 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.047547945 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 1.994976526 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.322444006 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.011182288 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.012060962 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989197788 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991963992 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997307409 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.013537825 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992231903 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659600429 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989339915 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008771716 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990078138 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.028225377 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.134328884 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.013293032 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.178903337 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 1.989551604 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992947078 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.01133957 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 1.99747852 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292147137 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.267166236 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 1.989934614 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.239177343 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.431260358 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656208447 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.025175129 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 1.990744423 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 1.990138202 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 1.990051529 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990562976 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989077033 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.990464639 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.179177883 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.26611275 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.998126368 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656380954 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990685129 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989645401 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.013036224 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266116383 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.012861901 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990333407 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 1.997323473 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988156176 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991416995 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.265333811 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.299013722 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.027954254 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990259725 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.590571608 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.01261173 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989679903 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989876925 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.044255907 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.996184012 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528399177 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414911142 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99525198 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266107792 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.989327693 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.030331301 seconds)
    (217/481) benchmarking "4d"...
    done (took 1.990156919 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990003478 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992702424 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 1.988823578 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.012041405 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.178221197 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991128062 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992456653 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.712878642 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853954194 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.595205577 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995077936 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 1.997788475 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.988265478 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.437401991 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9899541 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989681369 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.272781197 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.431422879 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990109637 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430178935 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 1.993647237 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6553839 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.265821862 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.303822923 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992772475 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 1.991398627 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.271060656 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.286468831 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.045814905 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.998194114 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988533738 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 1.989999496 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527202656 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995724037 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.241036727 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433732181 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990447668 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.991690075 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.025455332 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991488303 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340892651 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.989845636 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990804138 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991949814 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997221854 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529375907 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.008282688 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989910728 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71515009 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.989393972 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.438324664 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990152519 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.178670486 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.266264516 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.273259609 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 1.990157128 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 1.998540945 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.321860762 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.270746091 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990255535 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.990912811 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.589376694 seconds)
    (280/481) benchmarking "3d"...
    done (took 1.95219832 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.019134626 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990322303 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713868433 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991729466 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.298236388 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 1.993472145 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 1.993807662 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992986817 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990086589 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990803859 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 1.990424411 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012545241 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99128283 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493872371 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 1.997671981 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.001059842 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989891173 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989445586 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.324162661 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.02860231 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.655504935 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303998085 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994985885 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.047406377 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.014720308 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990174449 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 1.991252309 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.990083446 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.989981617 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995336209 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.292925867 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999994343 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 1.989903325 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033547143 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.286681148 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989816303 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.98979975 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.2542537 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 1.990817827 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 1.990440404 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880446599 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.04379698 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.99455678 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991380677 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.993962571 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.044451183 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.133127194 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.179331883 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.267203951 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.268289284 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340244314 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990520163 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993080544 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.029524704 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.149845102 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990132474 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 1.997038101 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.988785097 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656856224 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.803768831 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659993565 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.268405151 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991567154 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998974311 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989952703 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.32712882 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9900729 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339778962 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990932576 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.008701875 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.034379093 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993381072 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997836247 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28274664 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339268003 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990881383 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999677962 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989386919 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 1.990959954 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.267892656 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.286754761 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497020815 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573022729 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990767471 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.990456607 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.439803693 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340333013 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989982944 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991350227 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990430138 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 1.990827675 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999409632 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.015230708 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99055236 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.304000041 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266103043 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372927102 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.268094287 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.990871675 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.944364852 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99038537 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.325485175 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990737788 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.17933747 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661787508 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.756805666 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324661467 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.137753691 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.180376289 seconds)
    (390/481) benchmarking "6d"...
    done (took 1.991804754 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.32015845 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 1.992052412 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989529534 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989945579 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99050843 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 1.990598036 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.268575215 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656675685 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.32532915 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.012003761 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 1.993639275 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.043574605 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.178779019 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.294298598 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664213445 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.296312331 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.265117233 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013065419 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990629884 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663038017 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.266595564 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990338227 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.011900117 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.25152144 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990776411 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.052304626 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.942527957 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 1.991066042 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562261723 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.284805631 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.034448585 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995647212 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.753945735 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662375083 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 1.99612744 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491325957 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990189674 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995836552 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.339887146 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.018037071 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990365046 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.356369201 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.018423851 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.990781789 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.180190931 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.655542719 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655878237 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 1.997306571 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99071495 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 1.993287903 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990756786 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044717558 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990452697 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992174703 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.359779829 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991753351 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990287383 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.027535205 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 1.994441262 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990355757 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 1.989054963 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990595103 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.014089571 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.010938891 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 1.990013465 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992662963 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.171343158 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528732041 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992843573 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.679516509 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.403078143 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.327398826 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990596779 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 1.989768042 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.011697088 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.991409034 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990750221 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990872024 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997319072 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564875603 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 1.996667872 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.266510916 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.012163977 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.288974387 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.288029993 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.000806667 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.181442696 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999478425 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.03687082 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 1.99054789 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99050431 seconds)
  done (took 800.517552357 seconds)
  (10/10) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.026101713 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.027114621 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.027123212 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.027034443 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.02635852 seconds)
  done (took 6.124598317 seconds)
done (took 936.392478635 seconds)
(5/7) benchmarking "misc"...
  (1/3) benchmarking "julia"...
    (1/1) benchmarking ("parse", "array")...
    done (took 1.99167443 seconds)
  done (took 2.981553241 seconds)
  (2/3) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.356644236 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.486142197 seconds)
  done (took 3.832129631 seconds)
  (3/3) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.348354354 seconds)
  done (took 2.33793627 seconds)
done (took 10.141048454 seconds)
(6/7) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.241079819 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.193499606 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.0170514 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.014250206 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.004135722 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.007418891 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.017402702 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.505265229 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.552768896 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.375451586 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.993436735 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.276047883 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.029981885 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.701006672 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.994665872 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.170750275 seconds)
  done (took 28.084959827 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.04269265 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.023713211 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.117474087 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.013543692 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.043116237 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.204707666 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.070597805 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.013763692 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.144316956 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.045632688 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.990940677 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.041374186 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.013344574 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.886723723 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.034500128 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.205285603 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.274963248 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.997506876 seconds)
  done (took 23.153805523 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.381675561 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.011697577 seconds)
  done (took 4.382047396 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.033307099 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.012891234 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.016470181 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.01205258 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 1.989121382 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 1.991298963 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.011237532 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 1.995734863 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 1.998080273 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.113210765 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.015447774 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.034393759 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.0118946 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.014652841 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.010679501 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.069710611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.203490053 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.011900047 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.009949031 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.023220411 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.011284815 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.161436242 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.048708219 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.010179297 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.11220093 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 1.989329998 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.013555216 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.025326405 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.200530529 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.010620624 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.009252713 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.019736309 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.014499819 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.961421701 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.547540996 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 1.989753306 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.03844169 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.024032595 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.010729298 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.212731172 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.0087479 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.018545724 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 1.985669966 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.489381855 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.160113029 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.13994105 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 1.985055502 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.008290929 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.008446605 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.070475373 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.005429741 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.00925376 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.071768415 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.824303845 seconds)
  done (took 67.768101868 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.996453669 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.983046308 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.241767057 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.984997324 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982599812 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982897616 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.983913946 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.229918554 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 1.983167831 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98821142 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.363612649 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.501623496 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.992274926 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.023371687 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.85541681 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.03376386 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.983157496 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.98232387 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 1.983356123 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 1.987474524 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.49512232 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982924854 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.981958599 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.186018976 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.042390027 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.528017843 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.982942803 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.982212962 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.982278753 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 1.983218956 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.487160693 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 1.994020119 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.049950416 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 1.985351699 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.328556794 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.349603745 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.330997329 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 1.988922334 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.006616694 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 1.987703743 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.017204004 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.536323229 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.343435363 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.983275736 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.982615038 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.529375977 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.982111203 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 1.985455692 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 1.98874375 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.305226943 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.981736784 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.983419539 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.982635501 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 1.982780353 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 1.982318422 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.050939998 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.043675596 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.554653423 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982161838 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.98229691 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.000129137 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 1.982603374 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.988768474 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.983841312 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 1.984498658 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.345701713 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.155141027 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 1.985205381 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.359981182 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.475811205 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.988915141 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.542894526 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.982200879 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 1.992622176 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.105099748 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981970193 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.982183977 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.531876574 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.004764712 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 1.982590873 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.328760522 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.983782156 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.357106305 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.98345474 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.991654246 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.502764353 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 1.989362683 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.00836503 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98241627 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.982171127 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.981745723 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.98291326 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.299288338 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.02875652 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 1.983635908 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 1.982041501 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 1.992419985 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983819172 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.982378276 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.988421014 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.551775544 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 1.987633065 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.981498136 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.982270301 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982129013 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 1.982533114 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 1.98210792 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 1.986811451 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.317099402 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.982173711 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 1.983663356 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.984625838 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.982759051 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 1.989226563 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.18303424 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 1.986254956 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.282115624 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 1.984815317 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983010898 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 1.985900721 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982557838 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.006724459 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982495749 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 1.989340614 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.929892062 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.387563949 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.983078295 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 1.983273571 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.98403966 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.98188827 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981744047 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.984452423 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.009956644 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 1.985834581 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.676728305 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.99904087 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 1.995992018 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.982586473 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 1.989925325 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.984166073 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 1.992003662 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.983061883 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.374292778 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.313722506 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.155753186 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.984717889 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.98194498 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.671516957 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 1.997054094 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.239554485 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.984372175 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.982349711 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.366317951 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.142071279 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 1.983649247 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 1.982604212 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 1.981845457 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.317785034 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.988961027 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.374257089 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.496007069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 1.982011749 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.992102627 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666823065 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.701414754 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 1.980674009 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 1.985199165 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.377871027 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 1.981297482 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 1.98041371 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 1.980455755 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.981862359 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.981626085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 1.984340466 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 1.985852182 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 1.980265996 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 1.979764116 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.136661304 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.252916729 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 1.980157183 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 1.990138621 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.520332159 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.068799741 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.979367349 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.988920658 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 1.982175666 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 1.980075958 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.024362107 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 1.983623337 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 1.98810135 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 1.979573031 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 1.985658372 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.546607638 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.97887385 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 1.979659843 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.255865149 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.600917547 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.978089672 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.979217539 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.97929171 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.8467391 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.546261854 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 1.980673939 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.268004053 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 1.984925039 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.033763162 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.978815741 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 1.984067178 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.541965288 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.979900028 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 1.97878145 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.604914773 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 1.978076123 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.791261584 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 1.978620536 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.980555837 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.536543788 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 1.978577025 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 1.981669177 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.979105723 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.979764885 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.34032086 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 1.978598605 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 1.988682639 seconds)
  done (took 420.623852178 seconds)
done (took 545.001901862 seconds)
(7/7) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.036207677 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.166271004 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.007334172 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.002310769 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.006618859 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 1.579096337 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.027234958 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.003399804 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.02140328 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.021500081 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 1.579800896 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.007262865 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.03225033 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.004476686 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.053470137 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.002205239 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.012314695 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.003512108 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.025021618 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.023934958 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.010143189 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.010495468 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.034092952 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.002214248 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.023461713 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.024682468 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.022505795 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 1.832694297 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.002026654 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.022212531 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 1.820348174 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.022866874 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.024112494 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.009983952 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.009145367 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.003695512 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.010552179 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.160211854 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.028186406 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.007692808 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.008510369 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.023337534 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.022082417 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.021620207 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.009469221 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.034342216 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.023543147 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.030823403 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 1.819124485 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 1.552631588 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.035067938 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.017877692 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.008339329 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 1.553869734 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 1.832652602 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.030889403 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.009903494 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.037497296 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.000723207 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.010829449 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.050183127 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.036174154 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.018472042 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.024245751 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.001059283 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.030884025 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.008882904 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.0234277 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.001148051 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.010003926 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.010457964 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.008242528 seconds)
done (took 79.984687719 seconds)
SAVING RESULT...
DONE!
