cset: moving following pidspec: 25343
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.085473143 seconds)
loading group "string"... done (took 0.692305653 seconds)
loading group "linalg"... done (took 12.083731242 seconds)
loading group "parallel"... done (took 0.258810265 seconds)
loading group "find"... done (took 1.857832774 seconds)
loading group "tuple"... done (took 2.74741738 seconds)
loading group "dates"... done (took 2.04512181 seconds)
loading group "micro"... done (took 0.314160023 seconds)
loading group "io"... done (took 0.657370641 seconds)
loading group "scalar"... done (took 65.754881395 seconds)
loading group "sparse"... done (took 19.575017557 seconds)
loading group "broadcast"... done (took 1.718624636 seconds)
loading group "union"... done (took 16.708323466 seconds)
loading group "simd"... done (took 3.819553216 seconds)
loading group "random"... done (took 14.863943894 seconds)
loading group "problem"... done (took 1833.560137 seconds)
loading group "array"... done (took 37.105439123 seconds)
loading group "misc"... done (took 1.5001879 seconds)
loading group "sort"... done (took 5.610472134 seconds)
loading group "collection"... done (took 25.461910545 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.835755454 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157190708 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.245425917 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.419697735 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.261052994 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.175773951 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.186611355 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.610679096 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.079228274 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.309633975 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.170296155 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.644132348 seconds)
done (took 6.943088206 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.319760677 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.417640501 seconds)
    (2/2) benchmarking "String"...
    done (took 0.192155911 seconds)
  done (took 1.375611743 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.083337873 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.199840932 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.130523892 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.126554173 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.111938835 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.127392764 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.127745668 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.128400804 seconds)
  done (took 1.720285075 seconds)
done (took 4.271956806 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.605121769 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.900058034 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.607580579 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.193131051 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.221931549 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.20615566 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.352880047 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.189284204 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.139438999 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.121689853 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.22608545 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.374459449 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.579397626 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.061184554 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.11849209 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.123417447 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.114123024 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.723168328 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.097574539 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.150685033 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.652070336 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.128560355 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.124598645 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.135297032 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.215627332 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.150633549 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.186545519 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.1061474 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.706862077 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113443557 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.252165988 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.093346028 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.197434554 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.292926035 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.089709963 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.118867567 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.699679979 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203532996 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.128593179 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.114369824 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.69294207 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.091284317 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.269460988 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.124598975 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.128591501 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.201842094 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.134741608 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.094571287 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.116682101 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.11350706 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172843848 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.487093819 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.121538692 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195789275 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.120614584 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.716168563 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109750916 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.169540331 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.152865831 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.123170004 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092773371 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.124385099 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16781681 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.12536752 seconds)
  done (took 21.537674977 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.183134557 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.18847059 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.108296935 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155907459 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.16318108 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.112630927 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.113297402 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.089555453 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.148226526 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.21139975 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.161579454 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.215421317 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.086412067 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.115850602 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.162758839 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.270053384 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.12180695 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.140270171 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.113540615 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104992108 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.159766118 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.129937075 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.125839086 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.12681993 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.184101324 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.21841142 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.121488601 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.135090487 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.112260873 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.135110145 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.152980632 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.164280089 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.106572178 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094915402 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.224239529 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.132490608 seconds)
  done (took 6.081387304 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241745755 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.13124664 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.264265138 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.203965881 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.218658658 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.164750694 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184270965 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171442599 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.312687367 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.309344194 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.20328215 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125283983 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.123648279 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106295524 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089274267 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.106061807 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.881401852 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.203991691 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.169728472 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.169444732 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136843607 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.092932191 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.413237579 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116331852 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092078724 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.117289012 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.105395015 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.230642544 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.120673092 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.502852587 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.137218598 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.125453863 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145568758 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212375073 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.148448464 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.164145856 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099673719 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.113851385 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.247846465 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.128257076 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.108798865 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12442273 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148384809 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.151637745 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.116238353 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.127747584 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.275936811 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095554309 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.114236821 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141196527 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.255303835 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.218252915 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.154551753 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.110915196 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.424248647 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.125463308 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097825408 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109949426 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.3237921 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.155981334 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.094539868 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.109185287 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115934997 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.090965571 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.483899336 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10647938 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.81878547 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093225969 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.194852373 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114654714 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119637581 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116527417 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097416347 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.13126237 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.110836232 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.091250438 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.111853491 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.10715481 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099539856 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.137119886 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115927961 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.091346753 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.178501425 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.096897303 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.133773463 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.113216269 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.130124109 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097536803 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.111431234 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.137456529 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126490826 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110323003 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.11527471 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.196126022 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121565412 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.134903377 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115668276 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139231253 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.111404353 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.233565922 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.105834774 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.140195105 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.113693611 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125769103 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.138694195 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112511857 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115181188 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09054292 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.112137989 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162542331 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.108530601 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.091336545 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.115552977 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.131373199 seconds)
  done (took 26.781704081 seconds)
done (took 55.167009293 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.562346431 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.137911563 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.133509353 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.13112063 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.129089765 seconds)
  done (took 1.956954179 seconds)
done (took 2.789471999 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.436066594 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.22251832 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.134898522 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.213813991 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.119654698 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.248788611 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.214066419 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.137721823 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.247382473 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.116607588 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.222331649 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11714223 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.12276369 seconds)
  done (took 3.418049262 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.114493052 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138628038 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096124066 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.130561621 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108888418 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113446578 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.128251142 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.164947712 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110377792 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.121240287 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090912219 seconds)
  done (took 2.145297772 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109250425 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.134296198 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095451691 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.130633802 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090100878 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.126729988 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125548397 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118943217 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.128172445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.120361468 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091229876 seconds)
  done (took 2.102204539 seconds)
done (took 8.486392493 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.252160007 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.160812693 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.167451995 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.223668863 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.429380704 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.277784098 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.66088663 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.185416319 seconds)
  done (took 13.43206856 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.197119826 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.116883163 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09672342 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.115364492 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096488573 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.11260834 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.111473128 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096816347 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.111530119 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.095405374 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.113326707 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.111418436 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097542689 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.113084867 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096509051 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113078295 seconds)
  done (took 2.697305611 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.152482441 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.150734876 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10262852 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.126764704 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.118758853 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.101415401 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.12006424 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.119669084 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10019725 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.118172323 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.124729428 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107055784 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.123463752 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.115321815 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10337549 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.125742414 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.116354547 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.120024108 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105616297 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.119714122 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.125679085 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101805271 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.123472853 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.124631452 seconds)
  done (took 3.791964661 seconds)
done (took 20.753355639 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.194884791 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112390882 seconds)
  done (took 1.14141565 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.169102936 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.170685393 seconds)
  done (took 1.181257546 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.126056702 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.113874423 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.157376741 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.135483721 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.113284661 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097624712 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.150772456 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.115005425 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098007639 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.11543473 seconds)
  done (took 2.067651837 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.102629352 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.118891194 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126272225 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.166410907 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10995423 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.119599308 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.119191512 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099066697 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.116970857 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.112643349 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108006571 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.137877203 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.123360322 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.141070522 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103099054 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.123886884 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.12940951 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.121204787 seconds)
  done (took 3.025187031 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.097898951 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.116279291 seconds)
  done (took 1.058586555 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.103535057 seconds)
    (2/7) benchmarking "second"...
    done (took 0.115057216 seconds)
    (3/7) benchmarking "month"...
    done (took 0.102627848 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11933899 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.111927999 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094335215 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.112721757 seconds)
  done (took 1.604644064 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.604130956 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.29326351 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.409424487 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.135286175 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.15829727 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.427256744 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.159647762 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.130937798 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.129590228 seconds)
  done (took 3.338364408 seconds)
done (took 14.259141152 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.105361206 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.26442525 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.663405965 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.136470384 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094446197 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.170898742 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.356985757 seconds)
done (took 2.641601227 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.391687801 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.173125649 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.103628496 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.10798545 seconds)
  done (took 1.622447351 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.091939514 seconds)
    (2/2) benchmarking "read"...
    done (took 0.123332821 seconds)
  done (took 1.067624795 seconds)
done (took 3.553349481 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095352036 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.14835472 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.108919124 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09163506 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.11008578 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.091760358 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.108185294 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091014873 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10733715 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091596404 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.107268018 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090290764 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.107175286 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105608431 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09190704 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106685523 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090725639 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107431534 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090687198 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107537557 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090709608 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107365642 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.091658126 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.108251725 seconds)
  done (took 3.341023692 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.118848783 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.113027641 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.114002699 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097972681 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.116579769 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.114605896 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.097951736 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.112728928 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.115650321 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095469267 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118360535 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116560037 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098181709 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.120293557 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11221718 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100532689 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.116096672 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111025097 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095229966 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.116244232 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.115116971 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095003201 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.116599883 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117749538 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.098943933 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.115923992 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.110604234 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095259994 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114745308 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.11606425 seconds)
  done (took 4.156582981 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.104989535 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.106487387 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090054765 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.118771306 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087915776 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.111903302 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106140844 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091759822 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.106970778 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089684638 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109043548 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088948408 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.106008293 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.091003405 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.108956895 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.11327984 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110159802 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107986239 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088998643 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.106889139 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112247922 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089068308 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.109552758 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088906138 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.10612993 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088600616 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.108294908 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.089740348 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.107574671 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089598632 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.111868696 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113318345 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089197174 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.121984065 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096765345 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.106619349 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.116247796 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089177761 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.106476501 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090533166 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106023831 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.089437139 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.106136381 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.117726671 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092830006 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.106719506 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089956942 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108065709 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.08984447 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.109224321 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.089275783 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.107577184 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.109264244 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090385418 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.112192919 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.209261253 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.107766734 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088546062 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108033365 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.106811326 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.089352971 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.105912455 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096847017 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.106884011 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.132689175 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.102436618 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.105606947 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092280185 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.110184534 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098048493 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.109745333 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.126684651 seconds)
  done (took 8.361612986 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100385315 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123065048 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094267938 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112564736 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107085519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090627053 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116840375 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089772634 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111739621 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128348939 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089783769 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112293934 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094385347 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111175438 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106505667 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095126054 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118514425 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09116709 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.108829068 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110383844 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09118443 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118700059 seconds)
  done (took 3.187809661 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.279244423 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102854832 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.164067655 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.128134116 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.134374643 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.125966799 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098856722 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117740006 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115877941 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105743977 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120828356 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115230546 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.132184442 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104546355 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121758264 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.124469354 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098390544 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.124152351 seconds)
  done (took 3.181959998 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.114854664 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.115233377 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.137192877 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097132495 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.114635907 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096181681 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121911315 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.130783404 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.115004281 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09731741 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.124492056 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115875651 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101531672 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116616296 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100303788 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.120474019 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.11750319 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101212025 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127602988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126088977 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.109096427 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128804437 seconds)
  done (took 3.400972898 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.117013885 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118386544 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.157834528 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105130456 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.116627861 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112158377 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105217898 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.115034119 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.122311624 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095390619 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114987147 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092474821 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125874968 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116780533 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108189852 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11790221 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116922995 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.099985076 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116393507 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096443228 seconds)
  done (took 3.146062114 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.197872893 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115079145 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.134831437 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.145124597 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131298797 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113634188 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.143456197 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132479231 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115174352 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.151345588 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.132647656 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.131908906 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.145852993 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124586145 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132244262 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145421607 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.147001618 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127757562 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.133867395 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132950845 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14905712 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115625232 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.145061444 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.134133435 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114158155 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134360684 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134026329 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.141122486 seconds)
  done (took 4.681903113 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096230683 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114293563 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.097514421 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.11536726 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09804019 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.116293216 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.097806313 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.115101632 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.0971182 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117150585 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.097648565 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.115212395 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114717926 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097090868 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115250769 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098556379 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114269618 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097791383 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115958343 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096935377 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.116754661 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097216038 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.116118217 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114899648 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097630157 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.114269817 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097951359 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113754606 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097174971 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115674228 seconds)
  done (took 4.087839877 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.113790044 seconds)
    (2/2) benchmarking "in"...
    done (took 0.146100425 seconds)
  done (took 1.140369207 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099224059 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135589233 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.095080937 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.123583554 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12660321 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099690686 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.128661805 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.126758281 seconds)
  done (took 1.817984768 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.173937649 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.173278918 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.105868862 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.132319317 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.173395005 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.165171877 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.188794729 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.122190282 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103756464 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.115257041 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.170971843 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.112339524 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10613159 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.121474251 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.122923655 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113585199 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.115918839 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109681387 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.126770105 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.117601201 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105772326 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.13476318 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126589482 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109864061 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.117079432 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.126026884 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108889459 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.127624158 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11858757 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110319298 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.123479566 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094056647 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.122865039 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.123386575 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098434908 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.171703664 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.137014696 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11945837 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107327914 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.125232085 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128740265 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096492067 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.127627927 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.102199087 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.128282837 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.123589113 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106250069 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.115694534 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.114237081 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.101429645 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.115279948 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101304778 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.115403751 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.124590305 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109963033 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.136259048 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.120950864 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101410533 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.120315467 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099292294 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.122714112 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.119666263 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109425903 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.12237472 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.124942712 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107752326 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.123701073 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.114894947 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096463493 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.115403301 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107807126 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.14214695 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.128025057 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105228963 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125657046 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.113576495 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103344401 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.122820322 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.123739495 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10915589 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.123850029 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107982788 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.1269779 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.119263596 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101204747 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.125729726 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.115935649 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101057162 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.11294127 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.13862183 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102859776 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.115984871 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097189407 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.127745737 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.118550133 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.104070027 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.1157205 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107394268 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.115387423 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.124861552 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107521908 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122394245 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.129653983 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10709289 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125358238 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105969022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.165197855 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.123055139 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.118309244 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095070261 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125306484 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.09807432 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.12509254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.113974909 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102811926 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.121070874 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105505464 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.130067055 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.118040041 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.105890227 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126086834 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.127074038 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.103542025 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.114769967 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101040056 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.124530196 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.127652231 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110632793 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.123140083 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112851095 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.098189718 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.127272078 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104652843 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.124155104 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124905791 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103330488 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.116622281 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097536386 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.12677119 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.129321848 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100792875 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.123140584 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.137146577 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.105764275 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.123099131 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.125871435 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100242008 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.116511054 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.126854955 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10411493 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.116174211 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109731676 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.119770062 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.120666653 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103872102 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.128597848 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102053004 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.126123789 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121406834 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106973341 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125046358 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097388521 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.124622248 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.121418628 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111667365 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.121859364 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.116529734 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097599366 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.126320489 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099294984 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.12460227 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096785303 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.12226923 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.124364234 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098908472 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.122954944 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100465433 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.139073551 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.134226369 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107934795 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.125755216 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.128615103 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105471085 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.124753546 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.124264545 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107155355 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.126701931 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.106732437 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.126925023 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.125591396 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102612654 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.120149001 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.124090866 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109809083 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.117113046 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100603706 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.116828847 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106372493 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.13063158 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.125070753 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.105693678 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12311569 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.123231723 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11170177 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.121478044 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105176958 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.11712899 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.123333505 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122591075 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.126776451 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106889613 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.130185661 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121039058 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.099473061 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129461561 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120596834 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107849029 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.117279896 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.095485016 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.115646793 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.124638595 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104527258 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.117085453 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097072239 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.128787965 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1265151 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104786911 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.117823393 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105939472 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.13496862 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.11862069 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107348865 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.123695572 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.123404722 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119831298 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.117722765 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.122388965 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111484895 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.12230406 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.112702788 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10579334 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.120451997 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100982286 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.12437308 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102463293 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.123144352 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124192173 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.100681539 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.113252877 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.114459425 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102138539 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.114811144 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099778403 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.127100032 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.120439598 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103522926 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.134741526 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124803904 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.108575861 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.123414684 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105813864 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.127870396 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.124997944 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105644642 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.125706342 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10145178 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.118585695 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.122483725 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.098679257 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.118797778 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101849531 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.127152859 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.120561999 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105261922 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.124663916 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128700116 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103989558 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.12724122 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.148656339 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099976429 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.121344199 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.123529108 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107577283 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.123482948 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.119484365 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101300505 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.128506178 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105858828 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.128763348 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.119630172 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098399094 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.126493564 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10269247 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.126486303 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.128516542 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.110055119 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.121078484 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105992963 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.124126504 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.13419206 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100542476 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.132415976 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.125492282 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106393431 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.124064697 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.12366072 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.10354203 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.117136116 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10315625 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.128052909 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.122777594 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106663238 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.125876229 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10349482 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.122072091 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115999447 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108497393 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.125265895 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.125777522 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099307059 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.117794963 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099165825 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.127541203 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.127445414 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107984271 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.117344477 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103576037 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126502616 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101797305 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.116426517 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.12819221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11052185 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.126394004 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.129986066 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.098370585 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.122960158 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.135596089 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099597062 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.123844256 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101450111 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.119733777 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109495953 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.128660041 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.128784387 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105436792 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.119145617 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.115364512 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108014788 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.120930837 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099463051 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.120410277 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107525346 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.122049085 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123213943 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.107173964 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.124922983 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104224948 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.127085437 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120486192 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09819961 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.123793557 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.113599904 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098295707 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.113027972 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104123241 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.124132172 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.113368001 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100419234 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.121344919 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102664742 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.124724461 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.124035152 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.101992067 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.124343011 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100949953 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.119582654 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12660488 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095337182 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.120395738 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099707318 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.123722557 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.112593263 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.100254277 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120433814 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102635958 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.12473357 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.121095823 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104465304 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124888708 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.117755008 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.108108452 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.122590841 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.107253885 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.120056697 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.127776873 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110837202 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.118218832 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.105114366 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.12680277 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.120597593 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106089439 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.129927643 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.123731399 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1136035 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.127650081 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105552826 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.128648627 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.127158518 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106286731 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128779086 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102735281 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.131726817 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.119157911 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111814439 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.12759305 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.126558814 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103093583 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.120964752 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105575031 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.12881363 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124912253 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.111470165 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.130030534 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099294329 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.121591814 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.121093565 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10501904 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.133452877 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.130867455 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104685631 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.126711076 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100328984 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.122219396 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129197239 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101720379 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.123256036 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.107458171 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.131521461 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.122944669 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101023165 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.127292379 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.12972074 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110383407 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.123775217 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100195941 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.127698192 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.129231464 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105794585 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.123493172 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.119552622 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110166533 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.128389987 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103531985 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.121953091 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.134796483 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111994808 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.13117596 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.118151501 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10477418 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.119487457 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095851812 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.126533619 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.119848359 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103307229 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.122333448 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.123714294 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117583239 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.120017639 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10320541 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.137826815 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124530854 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111470585 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.122875125 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.120953563 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110883302 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.131111592 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100389775 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.122663783 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.120737685 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105999691 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.121502356 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101190797 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.138657882 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.131835751 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105354041 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.127238085 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120191183 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102815936 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.121950177 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.098072198 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.127061249 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.096865002 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.131304075 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.115707643 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097899032 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.120766048 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122165098 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103048739 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.123607052 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094911295 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117050733 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.094925438 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.122714773 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.128434129 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10050281 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.124748323 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.121852846 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.099654096 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.118407186 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126499515 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097439322 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.119896718 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112147768 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.126472765 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.12245744 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.103868634 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.127518543 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.124350647 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096512445 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.124861308 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.099794246 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.122092152 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.123473665 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105438242 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.140981461 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.122021574 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.094753763 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.123158758 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.118319399 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.097004966 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.130341472 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104625045 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.126890802 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.121188914 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.096946952 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126914421 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.128068071 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102245705 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.122349381 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.119718274 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101878245 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.119932381 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100435706 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.119703043 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104418621 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.127169562 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121857423 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106088527 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.117291564 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.132927918 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107247099 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126863969 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095381102 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.117499723 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.116143782 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098353477 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.125840343 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.096112133 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.121991863 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.120109628 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102204888 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.123266043 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102021777 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.123357178 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125241069 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102878306 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116500854 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103552805 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.121993167 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.124443088 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094624216 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.124793823 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104231013 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.128615427 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130686837 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103429927 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.12141202 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.119015449 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103411735 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119598885 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.102250456 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12630232 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.119838137 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.096598025 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.124606934 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104773907 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.123244256 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12615693 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106612693 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.123032093 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.124451461 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107001609 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.116794287 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095419718 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.125731208 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095758926 seconds)
  done (took 70.53533899 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.186026149 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109275585 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126345069 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100438878 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.154731265 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121074082 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118846987 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098849112 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118784264 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133351142 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09695112 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116273084 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.145073031 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.153073653 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.153000891 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.120175268 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124712109 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124373618 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099434753 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120413816 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.14447663 seconds)
  done (took 3.617789025 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.128059712 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.140022328 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.138114864 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.142606582 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.129731502 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115233363 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.140401173 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138652554 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.142672839 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.13586664 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.146012531 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122636273 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.134048132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.135692914 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.139245476 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119004926 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.148646178 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.138695212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.142548295 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.144474865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114546813 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.138823901 seconds)
  done (took 3.925423897 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.113867364 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.12345752 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104910926 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120823176 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101742109 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.122269365 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.13091206 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098687794 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.130198684 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.100021053 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.120854274 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.119809806 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.1057037 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.120632878 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.096770658 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.120390927 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128988114 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10209982 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.125861505 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098728973 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.147254683 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.122921833 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099367312 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.119721193 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.134800839 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104772913 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.125421988 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103097009 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.120596979 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.125118265 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101468887 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.123233251 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103835876 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.120872378 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.117857448 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104228697 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.12504919 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099152241 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.123378259 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.104112804 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.123082561 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125606019 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107751563 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.122593096 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098299913 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.124379331 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.125411221 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099504441 seconds)
  done (took 6.492816764 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.174944913 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.191538146 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.111487441 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143503887 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.148352895 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.139401938 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.128770157 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.170420233 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.106103987 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.143873728 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.15307575 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.148220757 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.129661075 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.1213227 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.13200524 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.138359909 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.115469602 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.13574112 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.14339825 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.113819473 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.161406965 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.136136211 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.144176104 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.147113563 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.117744639 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.12874977 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.131850563 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111442321 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.145044364 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.145427508 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.140724553 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.140181355 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.149245883 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.12927513 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.132261938 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123049606 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.149649784 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.140476969 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136453137 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.111751026 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.136407163 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137749934 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.132533544 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.155491098 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.131217039 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.130666067 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109771397 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.133722713 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.145859282 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.117138083 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.145937342 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.154737367 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.140022385 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.133626707 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.138359147 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.146358106 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.13586606 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.113015026 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.146609912 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.146090418 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107774309 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.135708517 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.146294441 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.128649986 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.126849794 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.151081846 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.13253338 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.131921174 seconds)
  done (took 10.427411061 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117672632 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.153877355 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.147001719 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.146032741 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110460957 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.134243054 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.134757307 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.136809516 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112440713 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.142785859 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13615356 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.227192688 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.132641177 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.146202572 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.118197397 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.140854238 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140118603 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117983601 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.140520177 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.141835657 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.139703432 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132286341 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.140884267 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.15288785 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.156031186 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.132605559 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119110796 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.140800218 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.154355534 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138876908 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152442636 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115467438 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136212235 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.14911868 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.154626114 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112970351 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122807828 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132107442 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110071308 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.133314124 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125545187 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.148447697 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114849385 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.128829415 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136350653 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117177898 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.146737313 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.150179093 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.143419525 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.147587126 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.136822427 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132248336 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138136856 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.136140472 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.149802052 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.156503579 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145277149 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145430694 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11143614 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.145905047 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.146168274 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.155757601 seconds)
  done (took 9.530391219 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104752539 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.122399824 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101734029 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.12333306 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10023254 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.124398047 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099884456 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123775147 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099577042 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.123771836 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121956138 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100830546 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121692444 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100067275 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122298061 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1013725 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124575585 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102216671 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123178038 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099802444 seconds)
  done (took 3.211588216 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.122133402 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.15075275 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.126921576 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11172199 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.12697548 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.134905171 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103593969 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129623913 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126607176 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104837714 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.138854094 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137975262 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105052413 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.136778918 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.139321283 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.135080741 seconds)
  done (took 3.007269867 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.134967354 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.139497957 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185513917 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.132348127 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124385487 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.113544145 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.125286922 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099576399 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.123342697 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.132780797 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108538729 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.135481836 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.122387504 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100622309 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.127912882 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108735534 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.123868653 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.131034642 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101099197 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185814324 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.135622595 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.130138937 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103373511 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.12816469 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.129561543 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.110385335 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.135136698 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101601213 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126800801 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.124083241 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.110448851 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.135884767 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123838496 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109981524 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122548036 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.101681288 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.127040825 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.125114387 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107400137 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.124013224 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.121543171 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108051575 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.12430206 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.102882809 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123408113 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124297922 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099876715 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.134629278 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105557412 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.131493535 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.124519675 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111384364 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.132502282 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.137840468 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.114039447 seconds)
  done (took 7.741544078 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120854828 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1299544 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132641907 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099735441 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128483901 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113279084 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129095955 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130011163 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106852983 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122023431 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107268355 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131174432 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.129969401 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106341434 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.131039322 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128265392 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099649678 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.129936007 seconds)
  done (took 3.163682379 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117716287 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.127612627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109964347 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12849863 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.127675546 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104855606 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123393046 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100028596 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124832763 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104381114 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128376536 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.126432488 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100548915 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.128434506 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10518066 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.128610591 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.127074844 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100181544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.127372986 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099530633 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12939188 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107483768 seconds)
  done (took 3.560693337 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.133065076 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.205519368 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.150785718 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.21487325 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.138212692 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.130470773 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.117916936 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.129632008 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.148647928 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.10427164 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.129675264 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.127659505 seconds)
  done (took 2.719081042 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142168497 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171033873 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126274245 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10562122 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14066355 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135284579 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111808002 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135989142 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146854163 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149848597 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135053188 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146195574 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121609097 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146056437 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138361901 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141103103 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112609946 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136737247 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128917429 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157757179 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134058904 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123073824 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134033943 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132388721 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111587353 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14821469 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144378618 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150017104 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134885027 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145524041 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118229229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136139461 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14550222 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.152147564 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127123148 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122329094 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134611148 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157981292 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140050145 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146700142 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10590082 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140876744 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144157538 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141174964 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144984547 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111253329 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142478689 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134566881 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110832159 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.188924056 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118666922 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147909286 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140156008 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144568748 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146339614 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.166749068 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.153374483 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146781405 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116787409 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.152057227 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146851577 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141043295 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145986455 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152247526 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140667035 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147645126 seconds)
  done (took 10.131684256 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16002511 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127883441 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135794608 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150915958 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147530299 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110771399 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135352497 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135399059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111577211 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13304095 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.188214744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135101109 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147039284 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147319925 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112860318 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135105077 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135674068 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14808665 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106398361 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.166916427 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133724031 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148200591 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149952141 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148068298 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150610587 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117412248 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137230449 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137185722 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111135441 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136780008 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146140706 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135581538 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147685155 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10398125 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147903126 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136101122 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111327327 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143445026 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135325974 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142648154 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147954664 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.157915095 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112276453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135664892 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153293944 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134739672 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11255629 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131523465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135930685 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107989039 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150900295 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.151777276 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151352606 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147968276 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135653239 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111558904 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135342068 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135708686 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111970011 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142699261 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14809067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135966917 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167792162 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135319142 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111506974 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147881555 seconds)
  done (took 10.040612472 seconds)
done (took 189.464635585 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.180372612 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.197461724 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.169262669 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16205185 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.122230955 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.156824508 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132981497 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.168270147 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.12273708 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.098939938 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.12280783 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.102264365 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.189461207 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.121077311 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.098338376 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.126171958 seconds)
  done (took 3.276774165 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.236918761 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.33182818 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.146270214 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.128506768 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107691109 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.127821636 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103418469 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.130350101 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.123974823 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.113948347 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.126909985 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.12609251 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113068667 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.127270472 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.123361477 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.103051908 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.137866152 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.125170901 seconds)
  done (took 3.536432605 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.133192725 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.18006256 seconds)
  done (took 1.318607817 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.146573656 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.236700297 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.322014535 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.187796313 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.156804418 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.151105848 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.188084238 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.143542867 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.226964546 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.152004904 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.150730907 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.107783358 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.159205787 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.137152899 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118230307 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.130403378 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.161227068 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138915617 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115775323 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.13203268 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.153947288 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109946522 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.137745846 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138347757 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.216895604 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.151001477 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109461345 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.134457862 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.133905261 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115643997 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.137375177 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.14987133 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.152803074 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.230349077 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113691941 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.226190825 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118126894 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.130045716 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.138182898 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.106580376 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.136423292 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.137721307 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.149106122 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106517691 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.133910581 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.141663438 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109224179 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.133785213 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.140293962 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.143049385 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117525561 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.138482969 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.225209567 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119515446 seconds)
  done (took 9.102110059 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.985441748 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.175730994 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105626779 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.125610313 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.162110407 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144961474 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.957459241 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.15704996 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.305775357 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.966449048 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.15125512 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119368215 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.31542183 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.297174166 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.219200042 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.406943822 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.829109142 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.144615225 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.163415943 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.182886633 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113885776 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.159989139 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151407451 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.452701764 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.132514221 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.128553085 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11285612 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142266192 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.229124519 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.105383388 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.133939149 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.225948603 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.331061608 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.253634064 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108276629 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.12832459 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.126732628 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.212057946 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.337768754 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281639052 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.201630226 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124353317 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10450172 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.142788644 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.153117882 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124148494 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.206313784 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.238247138 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.217843746 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132667826 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.143078187 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117126806 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142108291 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.229353286 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103048739 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.398660384 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.429481349 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.105358065 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139212485 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.148136477 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.325815027 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103955828 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.30988341 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.158689029 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.26890266 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104319042 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.87923155 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.232183957 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.104699798 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.139528179 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.137100842 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111921899 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141629932 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.197332824 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407016712 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144893053 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.134604178 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10318666 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.274918433 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.127972133 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103440576 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.229454083 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131206411 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115965409 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146090624 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144603561 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.21483503 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.316894411 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144382602 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115363663 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.135251348 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143087634 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.109360903 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.279624506 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.280829595 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.201554034 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.280593701 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142939054 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.208009367 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.232316287 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.140622255 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.216202956 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.138760119 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.148117248 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120204124 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.299878301 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.172371658 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106463017 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.134220567 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137911471 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.178179733 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108201076 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137853537 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.210742753 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.518877491 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.232185286 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.104258545 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.132532123 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139353095 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205021874 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137264912 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.320299181 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116788073 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.237195224 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.138036906 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.102079312 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.140122516 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.206951326 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.145231143 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140423404 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143739074 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13759122 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.29698152 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.283196741 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.145184473 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.287931241 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.217309578 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.140224471 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.218894814 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.138438411 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.212349835 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140814508 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142277281 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109713745 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.892507004 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121403174 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.139868006 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13402763 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.22265595 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105762491 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.130357733 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.127794678 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103251174 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862213488 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.131200164 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102840755 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.130625713 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138859122 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.115259959 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136709579 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.134416491 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.205506222 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.296025205 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.142611448 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.137472655 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103991991 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.228135249 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.133525271 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105417445 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.128234334 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104909874 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.139707631 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133668067 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10819868 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.239279564 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.203191539 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.280070287 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.599780644 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129907094 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104384666 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.314548797 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105012377 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.369625855 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140015715 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.287910186 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.234060619 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102613157 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.396807373 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.238413923 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.223246626 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.131949386 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.216310881 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125201275 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113576524 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.230088143 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.127600688 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115639509 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.224917292 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123199944 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146114642 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.219269799 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.130661779 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.293264633 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10417675 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.236015487 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111120136 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143131841 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.371033167 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.128539759 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151600798 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.205012499 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133906419 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105943673 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.673673723 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.129186206 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117315624 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.140019442 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.28378781 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.231804994 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137541766 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115396714 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.143543357 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.22815311 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.257405121 seconds)
  done (took 52.390923793 seconds)
done (took 70.623985363 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.345899517 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.303735786 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.366295503 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.253384682 seconds)
  done (took 2.399011936 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.25249738 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.179233832 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.232598788 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103201842 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.246128131 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.10395476 seconds)
  done (took 2.160812395 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.57605457 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.47378047 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.378846789 seconds)
  done (took 2.480861628 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288614444 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.322502258 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393268357 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.55655973 seconds)
  done (took 2.727680945 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.273104902 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.153575644 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.147459257 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.202357051 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.238698415 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.242965371 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.171521809 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185774187 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.155473649 seconds)
  done (took 2.878692955 seconds)
done (took 13.697843317 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.348401153 seconds)
    (2/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.383501331 seconds)
    (3/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.183083117 seconds)
    (4/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.263929021 seconds)
    (5/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.346564784 seconds)
    (6/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.264942216 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.19594919 seconds)
    (8/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.137484091 seconds)
    (9/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.108562706 seconds)
    (10/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.153531287 seconds)
    (11/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.362981893 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.167743813 seconds)
    (13/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.360402243 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11089255 seconds)
    (15/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.201349422 seconds)
    (16/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.184241679 seconds)
    (17/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.359248947 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111185278 seconds)
    (19/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.121590855 seconds)
    (20/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.230052844 seconds)
    (21/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111014101 seconds)
    (22/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.155532918 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.14736023 seconds)
    (24/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.246623661 seconds)
    (25/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.186801745 seconds)
    (26/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.218263083 seconds)
    (27/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.224783253 seconds)
    (28/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.282881265 seconds)
    (29/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.189261474 seconds)
    (30/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.140810632 seconds)
    (31/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.186922389 seconds)
    (32/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.100498277 seconds)
    (33/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.28249668 seconds)
    (34/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.229863705 seconds)
    (35/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.156196755 seconds)
    (36/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.094910681 seconds)
    (37/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.184811019 seconds)
    (38/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.254417129 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.172799494 seconds)
    (40/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.138428547 seconds)
    (41/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.135372221 seconds)
    (42/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160818939 seconds)
    (43/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.132934092 seconds)
    (44/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.227521604 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.168859559 seconds)
    (46/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.094565939 seconds)
    (47/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.15392924 seconds)
    (48/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.215904826 seconds)
    (49/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.222547867 seconds)
    (50/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113341843 seconds)
    (51/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.139361213 seconds)
    (52/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.136623231 seconds)
    (53/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.264691926 seconds)
    (54/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.231243618 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.221468204 seconds)
    (56/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11262975 seconds)
    (57/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.121104309 seconds)
    (58/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.186820388 seconds)
    (59/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.32603821 seconds)
    (60/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168572868 seconds)
    (61/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.218572027 seconds)
    (62/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.1628974 seconds)
    (63/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.130846386 seconds)
    (64/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.345357968 seconds)
    (65/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.190608476 seconds)
    (66/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.112103508 seconds)
    (67/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.185179693 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.169877946 seconds)
    (69/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.234193434 seconds)
    (70/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.218811995 seconds)
    (71/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.111704171 seconds)
    (72/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.144396048 seconds)
    (73/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.23306055 seconds)
    (74/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.185360643 seconds)
    (75/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.190221726 seconds)
    (76/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.161692217 seconds)
    (77/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.122567481 seconds)
    (78/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.094328014 seconds)
    (79/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.150067622 seconds)
    (80/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113628632 seconds)
    (81/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.129147198 seconds)
    (82/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101066754 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.136315011 seconds)
    (84/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.098887585 seconds)
    (85/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.173081228 seconds)
    (86/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.226682945 seconds)
    (87/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.150734825 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.153185242 seconds)
    (89/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.227374828 seconds)
    (90/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.114342442 seconds)
    (91/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.149634127 seconds)
    (92/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.220542083 seconds)
    (93/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115811746 seconds)
    (94/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.184505581 seconds)
    (95/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.095072904 seconds)
    (96/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.228568421 seconds)
    (97/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.19507332 seconds)
    (98/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.12902016 seconds)
    (99/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113231588 seconds)
    (100/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.20099773 seconds)
    (101/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.188898644 seconds)
    (102/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.138638807 seconds)
    (103/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.173734342 seconds)
    (104/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095419162 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.138186675 seconds)
    (106/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111849181 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.152406684 seconds)
    (108/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183440927 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121495884 seconds)
    (110/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.132928085 seconds)
    (111/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.095076716 seconds)
    (112/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.151894612 seconds)
    (113/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.147485908 seconds)
    (114/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.095826696 seconds)
    (115/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.129184682 seconds)
    (116/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11485042 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.147415535 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.104142528 seconds)
    (119/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.211071952 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.14747152 seconds)
    (121/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.12101326 seconds)
    (122/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.114177073 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.137317429 seconds)
    (124/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.180117498 seconds)
    (125/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.103992674 seconds)
    (126/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.094528872 seconds)
    (127/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.233956088 seconds)
    (128/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.136173937 seconds)
    (129/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.112030204 seconds)
    (130/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.12114715 seconds)
    (131/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.208257015 seconds)
    (132/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.09491005 seconds)
    (133/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.146352563 seconds)
    (134/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.094867141 seconds)
    (135/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.127494447 seconds)
    (136/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113933666 seconds)
    (137/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.120881196 seconds)
    (138/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.102044191 seconds)
    (139/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.121355226 seconds)
    (140/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12355781 seconds)
    (141/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.123555083 seconds)
    (142/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.140113359 seconds)
    (143/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110544953 seconds)
    (144/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.121707022 seconds)
    (145/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138776875 seconds)
    (146/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.139167162 seconds)
    (147/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.106612803 seconds)
    (148/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.151200811 seconds)
    (149/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.12182302 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111723055 seconds)
    (151/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.121811839 seconds)
    (152/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.095944937 seconds)
    (153/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.121372274 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.11182862 seconds)
    (155/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.182187198 seconds)
    (156/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.182570656 seconds)
    (157/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095759742 seconds)
    (158/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.121435684 seconds)
    (159/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.095020862 seconds)
    (160/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.120354919 seconds)
    (161/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.096621134 seconds)
    (162/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.228678301 seconds)
    (163/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112519995 seconds)
    (164/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.122466266 seconds)
    (165/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.218639817 seconds)
    (166/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096222385 seconds)
    (167/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.12154519 seconds)
    (168/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.095350311 seconds)
    (169/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.154810286 seconds)
    (170/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.152745397 seconds)
    (171/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.112084582 seconds)
    (172/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.145501959 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.136445901 seconds)
    (174/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.096517115 seconds)
    (175/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.142180978 seconds)
    (176/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.104030374 seconds)
    (177/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.129307923 seconds)
    (178/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113380838 seconds)
    (179/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.233041688 seconds)
    (180/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.139082795 seconds)
    (181/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.096438056 seconds)
    (182/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.120307589 seconds)
    (183/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.190453979 seconds)
    (184/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.141512352 seconds)
    (185/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.12475608 seconds)
    (186/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.120455394 seconds)
    (187/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.140724615 seconds)
    (188/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.216261202 seconds)
    (189/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.112154503 seconds)
    (190/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.121285524 seconds)
    (191/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.138888487 seconds)
    (192/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104439804 seconds)
    (193/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.171417356 seconds)
    (194/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.099538885 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.13717099 seconds)
    (196/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.129468433 seconds)
    (197/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.094953825 seconds)
    (198/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.121646387 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12407989 seconds)
    (200/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.138819288 seconds)
    (201/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.123506559 seconds)
    (202/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.120770344 seconds)
    (203/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.153116408 seconds)
    (204/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.11494383 seconds)
    (205/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.120400621 seconds)
    (206/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102178398 seconds)
    (207/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.126644025 seconds)
    (208/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113540389 seconds)
    (209/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.119661085 seconds)
    (210/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.095558404 seconds)
    (211/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.120546647 seconds)
    (212/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.09562724 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.137335057 seconds)
    (214/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.122078653 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.151874197 seconds)
    (216/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.095717922 seconds)
    (217/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.152656007 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.137896472 seconds)
    (219/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.095003817 seconds)
    (220/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.137584115 seconds)
    (221/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.09401412 seconds)
    (222/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.121351033 seconds)
    (223/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.095922819 seconds)
    (224/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.148975423 seconds)
  done (took 36.173033652 seconds)
done (took 37.234267657 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.548768063 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.149075193 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116331342 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.143094334 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.203328935 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.143473692 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.125004835 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.146460674 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.146709102 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.11151425 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.131865004 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.145882295 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.116743841 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201547472 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.144403142 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.13457607 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.107014259 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.147790969 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149508727 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125160104 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202830959 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135401727 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.147372144 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106804034 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.202283443 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136564004 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.141623934 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116245371 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147704402 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138613483 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116877883 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.13436176 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.149907678 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125315231 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.132724783 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112587465 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131554415 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103568624 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.140376323 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.140670355 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.121042026 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.140696339 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.146216128 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108842224 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.141090609 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.139913827 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104928571 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.146572916 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.130041709 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117495092 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135734659 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.124997051 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.14017605 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.131852437 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.106415193 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.134472721 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.146221929 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106682594 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.149369105 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10762888 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.136139304 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129993204 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.116589237 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131665964 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112520025 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.134562827 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.139066468 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117007219 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.139446262 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108790295 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131473689 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.138559495 seconds)
done (took 11.225183286 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.118288587 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.194621419 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200000339 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.207742003 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.166103216 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.151445276 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.154311627 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.165036509 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.124097601 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.160031516 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.172814183 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.164277519 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.210627847 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.147397255 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.151990359 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114715139 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.14784323 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.144758244 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.211072973 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133350529 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.169540502 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.149006204 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.169040584 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.158643765 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114428596 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.174347535 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.1441718 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113882781 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.139085585 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.14963869 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.159595951 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115230796 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.142763026 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.179254363 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124254633 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.146777697 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.153053662 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114675 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.141262572 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.137932783 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.126699246 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.156267035 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.139683323 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.151958458 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11500281 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145854213 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.147139805 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120614847 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.141960168 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11613655 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.142346164 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.169184525 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.148169291 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12068915 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.148377284 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.147540226 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120347868 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.146813116 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.14317152 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119162218 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.140347419 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.14026805 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11606234 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.16708936 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.143351078 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.147101906 seconds)
  done (took 10.863132274 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.137154346 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.175224736 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.149996751 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.150734051 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120011837 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.130431821 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.129908296 seconds)
  done (took 2.107818182 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.111834105 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.206524805 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.203354368 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.230344769 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.19663952 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.216364654 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155525132 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104998333 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.169601296 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.14495551 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.204842604 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236847981 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.139844907 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.151429764 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207760773 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10536985 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.23423253 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.105805089 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.146174537 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205251817 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146989699 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134552319 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.150260197 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.132265415 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.198770964 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.107572744 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.287336563 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.149822298 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112203504 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143490535 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117955442 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.247378081 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.200325732 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.121751089 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136962476 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.201230902 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.197637299 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.147152793 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.217296538 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.138027071 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.198739916 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.142733343 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120733043 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.146762854 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117544824 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.184874868 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.150016272 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146394897 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141885945 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.204984923 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.119183907 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.198856853 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141362787 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142668597 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.118386249 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.146856262 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152237422 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118265113 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.204942406 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148396555 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.201173055 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.198903594 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.198564257 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.22824735 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128273164 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.198172373 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.223542263 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116572121 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.143120872 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118208128 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.226912584 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117809748 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.147706491 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.186938268 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147736232 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.220033294 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.199821749 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113943467 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.148819851 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.137625214 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11520749 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.132663014 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.187526493 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143102245 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115176781 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154488026 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148514464 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.119271064 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.137630501 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.161725237 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117035378 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.146814804 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.150147152 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.144257504 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125667645 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.203642536 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.147625324 seconds)
  done (took 16.785613785 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114878515 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.1340541 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115281704 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.136259646 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.133903703 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.109185126 seconds)
  done (took 1.888643969 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.147264566 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.14667135 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.156727055 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119476019 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.202647465 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.233380015 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.209617839 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14550246 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136507246 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.157835041 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.205912951 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.208862992 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.204175233 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.15112199 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.208028123 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.148702605 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.208002291 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.144443281 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126977318 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144564894 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.153520199 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.148198865 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11593948 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.199879959 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.147198276 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.149322014 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117610683 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.156484407 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.155119591 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.144432793 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.122143499 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.147606978 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.142767027 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.118560202 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.235401852 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116609897 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143158978 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.151173159 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122551737 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.148111328 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.210520943 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14219032 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126437188 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.152646195 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.145742501 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.14214095 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124327989 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.145773766 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.208096306 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.150412972 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.150324047 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119938007 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.14871025 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.152211012 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.115931062 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.146451353 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.150364813 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.209678129 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.148603125 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.117243207 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147979682 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.149533309 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145637685 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124043234 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.149086516 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.150004275 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.115564036 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.147978917 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142919114 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.121223557 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.152525093 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.146886181 seconds)
  done (took 12.191137297 seconds)
done (took 44.946062468 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.130151042 seconds)
  done (took 2.264978926 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.049066454 seconds)
  done (took 2.18848615 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.228957957 seconds)
  done (took 19.412213052 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.628248344 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.694764836 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.060263375 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.191623129 seconds)
  done (took 3.716099491 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.057971219 seconds)
  done (took 2.225004346 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.400081105 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.280607343 seconds)
  done (took 1.827831577 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.960119515 seconds)
  done (took 2.116517851 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.503698693 seconds)
  done (took 3.653254725 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.409341551 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.214905441 seconds)
  done (took 1.791310152 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.70456062 seconds)
  done (took 1.864154087 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.572344468 seconds)
  done (took 37.730998087 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.280123121 seconds)
  done (took 1.457598954 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.336791335 seconds)
  done (took 1.502719624 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.782594543 seconds)
  done (took 4.944989441 seconds)
done (took 87.843227055 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.123547186 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.150410858 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122566261 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.146606369 seconds)
  done (took 1.700306429 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1356645 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.149616701 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.153159705 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119871379 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.160256627 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.149023915 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119653186 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.157319832 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.145231898 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.122748472 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.150164872 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120398692 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.151260969 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.146665867 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11858448 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149423589 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.15299848 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120495256 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.149851669 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.149408789 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118364286 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150473663 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.152692123 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120769689 seconds)
  done (took 4.533785683 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.124906966 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.14187434 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.115105171 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.14095101 seconds)
  done (took 1.7022914 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133929094 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.170051939 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.167658174 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.128832988 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.168881059 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.167729338 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114735326 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.143146201 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145998746 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129987629 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.148126895 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.172498762 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.168375695 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.113769172 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.159830393 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.108645844 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.143242213 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.169239708 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.129316232 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.158335769 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142827226 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129517813 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.154083761 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.162111202 seconds)
  done (took 4.706106158 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.238291581 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.132284933 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.172368803 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.201071556 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.174234458 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.144277916 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.147224341 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15439389 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.154347346 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.122211865 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.150422422 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.209587726 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151564004 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.125229623 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.150157191 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.155769463 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.153686644 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124593416 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.154419112 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.160522644 seconds)
  done (took 4.351212689 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126731723 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.140553842 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107763272 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.14043378 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.148009447 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.115163057 seconds)
  done (took 1.955056504 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111828146 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.134283272 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.107113621 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.134211073 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.110959383 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.134919036 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.104934592 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.134789253 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.105880527 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.135817999 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.133002848 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106302102 seconds)
  done (took 2.634738198 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.351847892 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110845636 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.144135296 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.138325943 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.144725428 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.11016716 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.157372431 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.110280765 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.28505934 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.140998718 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.127509596 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.249890212 seconds)
  done (took 3.253248475 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256227518 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150434514 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286842938 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.425910062 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198575774 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202240924 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.312654324 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199632113 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.254642114 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142715228 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26484081 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191070381 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189439254 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219031297 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142449476 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.222378655 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242012346 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243025349 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181682009 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251275182 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201526619 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204676446 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250500557 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155903479 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167719686 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204482039 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.148207263 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163059884 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21082333 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206262821 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213041198 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182257812 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173562418 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242079333 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299930406 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215711578 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.387785453 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15422207 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.253251309 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.224485664 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.318233344 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145566092 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.265346844 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189323325 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135566769 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248997482 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19054767 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.222232834 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.16391119 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143997588 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256666097 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217048443 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.223392695 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187666801 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345129279 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182749759 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.178323127 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213300172 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259478805 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235821373 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206950212 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150436558 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219344351 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222170675 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220068192 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.179184292 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.207984688 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157670821 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213730735 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.266949084 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227900773 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204591119 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.23167491 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167273894 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201748662 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206385819 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187839286 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218410956 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197672447 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.150220312 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185954384 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175027269 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127306344 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.224643262 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151856383 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249991796 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167094413 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.22629317 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244942006 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192045508 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197668048 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230445785 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204287431 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181186711 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.121246248 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179710496 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.196205461 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193182654 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161935436 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192209882 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176217149 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128710196 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186699787 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.150888632 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19724465 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.165349697 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202936778 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20323369 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.138726426 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202480944 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183264621 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.198602984 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207467049 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25527808 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132457242 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168819058 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236163952 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193544926 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.168850054 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213317291 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230042774 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.202410159 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174431093 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210428521 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263015486 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17366651 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231230752 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192046497 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140819875 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.187774976 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195512965 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190602912 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.187719726 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158700776 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.191887067 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234024236 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.162462243 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168181551 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214467094 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128543122 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157837257 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176486219 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174843876 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.17598255 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.18563441 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143264291 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192242469 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197325777 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189937785 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194710403 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177031954 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274104422 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133061877 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197990333 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181474965 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.149806262 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.222867328 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227355921 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165567133 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224031068 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.207281079 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261831053 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202292909 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159630719 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21932007 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132587402 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.151659946 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208154743 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200579993 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199918512 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.228023331 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256718317 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.207543911 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.19245952 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185035645 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20465693 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214171189 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194043643 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.179354384 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201244883 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211623013 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150464529 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12547337 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.160250385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171237487 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166325456 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132637998 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251217125 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201254926 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223465215 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199455883 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171613704 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225527106 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.157046004 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200067334 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.216016037 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171639191 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.230739269 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223071553 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205587854 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173868604 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209279499 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.150766584 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154247866 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.138251046 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235464114 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132595894 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171667867 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182281886 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225253767 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21594124 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184285409 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26931637 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206266795 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23607364 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.153607486 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.198858018 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207148659 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195502239 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.220021244 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13662428 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.197129385 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218863293 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194139247 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265049794 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202808584 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207647168 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242877429 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.19516956 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166542243 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183323918 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205408707 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179310082 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199849272 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1793867 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139807091 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188709304 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.170481384 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159690708 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222880435 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177591129 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220964534 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.191637957 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241966085 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126864671 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183782467 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197734862 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180935699 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.147388179 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208607044 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228694996 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180380371 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194282126 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214071211 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166529909 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.351434663 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229193168 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25450738 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156559941 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181133228 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199780917 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19438144 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20026091 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.251370361 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153087787 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250600139 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166231458 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.175876903 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170118605 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181861222 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184672097 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.189627136 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.166387568 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.191180779 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145899016 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254621731 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147381923 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19756253 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20962224 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.180025047 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.19076442 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174233319 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245430131 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197440496 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214903803 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.193035526 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.204559235 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255010178 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123720082 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15813037 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.127152268 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.250891078 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132374455 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198518332 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.245449057 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233814513 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198863794 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20703467 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171601745 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.155162496 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198369316 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153447446 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265731801 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17683146 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.170130113 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233194449 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.186456827 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137339301 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199467106 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351249889 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179748807 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212164244 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.119781674 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.340392443 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127727849 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168243797 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195543477 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209469396 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.181721634 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.21868883 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206695978 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148042302 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196448969 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175817764 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25421621 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248536685 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215874516 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214849101 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.176730687 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19496583 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199023815 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244183391 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145045998 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.185456483 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197951386 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225755052 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.258078792 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.138378686 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201350464 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200345173 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198745014 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244403073 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135590505 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225362429 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161640541 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204818684 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180042955 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15720387 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195983967 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217594059 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164910181 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213771157 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196330378 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161929341 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128095558 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197062841 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195391231 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192889388 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.165779057 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219834212 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158218894 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20311837 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222063295 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129193249 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195902368 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178901387 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162988391 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182825313 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177509686 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138311158 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.206434189 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221296673 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.163084991 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215146214 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241488609 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203112135 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196474161 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147406248 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.697639464 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.160798629 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225269296 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184259062 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231757336 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184667367 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209046451 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201329252 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186156814 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212395178 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184380795 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.264652966 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205701707 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.199982342 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167737596 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178583377 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179974364 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.135701474 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186756341 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201875809 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176905176 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.172083498 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197845504 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1787828 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148494611 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170839723 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227423162 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183128531 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224453125 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.253499886 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158327669 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205639601 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246689674 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128785408 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.202291852 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241629539 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144524791 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200313505 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16319431 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.169203565 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219988413 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12232106 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198762098 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198366078 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199537562 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202532987 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.169273076 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198166251 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18107689 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199824443 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159587045 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.193687132 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196825848 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13360958 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.159357445 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193745924 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196177045 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.197339026 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160617883 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177344913 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22038174 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.154279248 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172527698 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321190429 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196166406 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235424174 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.190302916 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169078352 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177876281 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198684386 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.192706186 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196508099 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131672321 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165347806 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.166394972 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.218036945 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.191866898 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194360256 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2190441 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197493836 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230390222 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.178222126 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.310317656 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142738693 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194710531 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.170864846 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.162552172 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143170428 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172160652 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196410202 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227781341 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219421414 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190825424 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.178327056 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160852027 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12280944 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163168604 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200409657 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191142566 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198166727 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188488143 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.119007488 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184365519 seconds)
  done (took 95.920697149 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19408571 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.170225921 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.177640952 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225739656 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19634278 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288158295 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.23560162 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255998438 seconds)
  done (took 3.029386281 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.156301709 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.135918898 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.171263507 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.153607748 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.154469944 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.488768307 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163906535 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121789222 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.222684046 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.192043106 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.120234188 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.744893569 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.149003064 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.151550296 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.140959435 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.150542333 seconds)
  done (took 4.687701077 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.751694929 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.596778494 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.286835211 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.291116785 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.270229231 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.217209489 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.808761301 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.201290118 seconds)
  done (took 13.695377682 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.156232785 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.171965959 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.385122775 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.245420977 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.190173593 seconds)
  done (took 2.442863305 seconds)
done (took 145.774225905 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129424303 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.173604966 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126336991 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.173799222 seconds)
  done (took 1.872771259 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.178489247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.140006573 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109820748 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.13740568 seconds)
  done (took 1.855000333 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.607595824 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.105546839 seconds)
  done (took 2.03409342 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.16128052 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.172807236 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.177965057 seconds)
  done (took 1.810682115 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.140088475 seconds)
  done (took 1.427679271 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.144981661 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.158289892 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.209663579 seconds)
  done (took 1.809582085 seconds)
done (took 12.102128378 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153127141 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.46435956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.439390489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132722957 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.747933013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.431378897 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.069719832 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.188298372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195882541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112597456 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.167052155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.693765879 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.093122595 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.397895265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.043115972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.394611196 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.743360678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114372594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.151993232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113596897 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.044456308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141852936 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11417656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146090538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.71185799 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.44838226 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143005997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.410966704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11173642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1483489 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.402732247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.142055806 seconds)
  done (took 18.09040883 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166330326 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.214154426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.153173406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114014804 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.149416398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.145083209 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12524484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161139679 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.210156317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144169002 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135312599 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.143064514 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148677471 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113456604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168862874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112253411 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.146526555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146329298 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122428537 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.146794633 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164650956 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11188672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.149838539 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115088507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.142518446 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.15747978 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112955307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.160535726 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141615899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119772823 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.149063863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112704308 seconds)
  done (took 5.90313667 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.169815468 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.224178922 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.153649485 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.181258363 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.198652602 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113954105 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.241656203 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.18962389 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.211224958 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14410402 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.166792972 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112259263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.187455663 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.14378178 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139315539 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.142556109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.11629075 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147541864 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.152819861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115909745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165826091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.14283005 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114835564 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146961859 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112738408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157986486 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144755724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128789193 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142889316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.150033351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119137583 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143080008 seconds)
  done (took 6.223945399 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.13248056 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.159744495 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.137310964 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.168182015 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.154378561 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127254817 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157294384 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.149474524 seconds)
  done (took 2.482509029 seconds)
done (took 33.99111668 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.143520191 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.165026726 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132175838 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158468803 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.222748083 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145879044 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131845291 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.14762372 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126779232 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.168002685 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113473096 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148933903 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.16575028 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121676597 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.20464436 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.159155108 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.21229498 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.20578946 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.118402181 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.159901956 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.148809396 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.214000432 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.125235775 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.151553368 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.216956354 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117175665 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.202389031 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.153460239 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.153217136 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.117752645 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.204464948 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156230222 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118998267 seconds)
  done (took 6.51786343 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.225883421 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.235819243 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.115079362 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.147949837 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.23423711 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146372688 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.22195442 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.114990044 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.147276075 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.11485515 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.145970225 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223770328 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.231591564 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.244661199 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.262746664 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.232960886 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.219484583 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.23061857 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.216894862 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.235630155 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.221614384 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.145423589 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.231650457 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.23747681 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.147082838 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.115140414 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.258451668 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.262008729 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.260956503 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.220334899 seconds)
  done (took 7.362837711 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131213075 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.163268044 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.1414314 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.222880362 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.19029445 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160772927 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.12731218 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.171446458 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172834497 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114712979 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.158343937 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184826541 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13372075 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.158683126 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119535821 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.166582214 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.175313178 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.115767952 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.153819623 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.167876319 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133779263 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.166075045 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.162015961 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.12675205 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.145572845 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12532259 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151786809 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.160329669 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12169212 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157398824 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.148980921 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119652268 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148975758 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.125621034 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.150248766 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157921424 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143892641 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156765998 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.159931283 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151868438 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.156446434 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.152249317 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137600986 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.201898205 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147546207 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126883133 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.161601239 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.125683074 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.144371485 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.166536301 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130092328 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.148378872 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.169445562 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113957811 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.146240286 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123432889 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146867866 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.148166222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125473236 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.150131119 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.142754002 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.155087 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154171461 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117635765 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.154419149 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114312784 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.146037962 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.152192068 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.140631866 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152119785 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182399882 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114859032 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.15864286 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.123837157 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151820304 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155860499 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11383863 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153554327 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123461521 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.151747503 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.156679264 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118146868 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.151044775 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.133891333 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.169070543 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.158999799 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.156587734 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126680202 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.151448492 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116363416 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.161578424 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.148514437 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120244657 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.15694011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11673853 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14954986 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.158647983 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125867401 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.146294465 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135040543 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.152928851 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.146676661 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.133072784 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148652257 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118653403 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.15793107 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.159673365 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116402397 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.157733949 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127358853 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.147584652 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.153291652 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119935806 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.147013651 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132669938 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159830525 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152157166 seconds)
  done (took 18.43581298 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.33801416 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.342607944 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.234295454 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.438835984 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.143774581 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.257524149 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.303151474 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.256560017 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.148407792 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.196745828 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.212433317 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.298290179 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114935442 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.181357287 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.338640509 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.411188986 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.181696593 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.201092366 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.199214217 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.175156246 seconds)
  done (took 6.294831722 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.145841306 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.192717256 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.181785933 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.181605822 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121654473 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162264694 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.147052198 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140186095 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155303567 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.155479768 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114648629 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159941622 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.155786594 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126526458 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.167335929 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.195598039 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.11939323 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.156370121 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169356964 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123797951 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.155668757 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.177417361 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.157069737 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146663629 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.158169943 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.162121024 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113862919 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.157257839 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118340774 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152684419 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.154029418 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13742601 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.155417132 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.154766236 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125305373 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.162513684 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.118501876 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.149920222 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116917044 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151102767 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.167833261 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126930067 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.152609839 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11283646 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.161283894 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117687372 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.160343538 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158501533 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.127978424 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.164072253 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.157713801 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129495665 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.154928145 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168381947 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118740554 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.165395978 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12892902 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.161185401 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.156169036 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.117335305 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.146057311 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.151241558 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122323011 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.161734126 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125708697 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.171186179 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.162662131 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115325551 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.157524309 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152225472 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.12038438 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.166977537 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.177226021 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12056533 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.152102613 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.170731911 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119864344 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.140205738 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127353072 seconds)
  done (took 13.00562975 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.159968912 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.153740111 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139502704 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.188259382 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.276936176 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121623425 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154751648 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.168904527 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129598899 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160262936 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.160740071 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132967115 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.179866226 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.163578257 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120799758 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.165847983 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126079727 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.198676384 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.171987245 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.187938413 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.24212076 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.154569611 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.165279257 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.131267175 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.191272129 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.162247127 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.156715783 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.159993266 seconds)
  done (took 5.977551927 seconds)
done (took 58.88770403 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.487335666 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.631041337 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.405935241 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.418893675 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.45544774 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.433388113 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.423605789 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.600264987 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.176100877 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.390723601 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.40981902 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.403062993 seconds)
done (took 30.605495818 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.487802888 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.049628485 seconds)
    (2/2) benchmarking "String"...
    done (took 1.798079546 seconds)
  done (took 5.18266728 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.400562467 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.398849142 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.644317937 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.403745055 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.41859084 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.42346418 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.414604205 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.419597116 seconds)
  done (took 17.450267393 seconds)
done (took 28.851669469 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.402244068 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.615222776 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.659730549 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.415033644 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.39670314 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.399945746 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.407967003 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.447372365 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.412027384 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.389218225 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.398680879 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.665154877 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.400856451 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.790937957 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.389830538 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.406670816 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.41792968 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.640782158 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.398903699 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.403937311 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.404374728 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.404098241 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.409162681 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.426553799 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.417586108 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.400418427 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.446102847 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.390751052 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.623969249 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.419834966 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.396295059 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.415876558 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.448255024 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.409732461 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.507403089 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.424802457 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.585618828 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.430349198 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.395281205 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.404804467 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.575721008 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.808570544 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.401294808 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.390045797 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.402674844 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.478785676 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.393586753 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.184928478 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.404730678 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.399217397 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.410846169 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.789669122 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.408573999 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.399310569 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.406289999 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.648032773 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.409537082 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.444555386 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.439204305 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.407072586 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.405625604 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.400989819 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.417751576 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.418014441 seconds)
  done (took 156.394477827 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.404704175 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.401824839 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.405757822 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.461310385 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.405050885 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.406329795 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.406085327 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.404074599 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.401157081 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.434208374 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.407259803 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.405233163 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.407485936 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.370796176 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.409836196 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.42449072 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.406320272 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.40424072 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.408932848 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.404709136 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.431324342 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.405884637 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.415765701 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.400645245 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.451837516 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.49667888 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.446375897 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.404449056 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.41202169 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.400241446 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.445272956 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.467330077 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.037048869 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.26142337 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.412039716 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.425040659 seconds)
  done (took 87.825352279 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.403886532 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.403858668 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.400163111 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.406049647 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.43674437 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.401779347 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.989121196 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.989101852 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.137759707 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.65815606 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.780716081 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.70176781 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.40784805 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.504332427 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.418226602 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.40332507 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.4202202 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.43403219 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.40346952 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.404396492 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.985371079 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.422032371 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.627084598 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.592866273 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.415185839 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.435332973 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.806945809 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.400100794 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.438176009 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.735660092 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.44925183 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.39985788 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.782126212 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.153909386 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.521339142 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.404279357 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.4368674 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.403573493 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.689433834 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.403262333 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.405229746 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.406495083 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.084118945 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.406257278 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.975764528 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.404768026 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.366911943 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.401154246 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.403754781 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.405096804 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.648615871 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.110928181 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.418568828 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.402501874 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.403796699 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.405032281 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.401671073 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.434476838 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.622354478 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.51453128 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.42007598 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.40681548 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.437385475 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.402302103 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.61482022 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.397463386 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.888369031 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.461258698 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.51433068 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.976229802 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.400996203 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.497897023 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.521241375 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.401070206 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.401460349 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.400442483 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.400522207 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.518124283 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.398433937 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.81732579 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.574118247 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.414370656 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.751308174 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.402295076 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.499446169 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.399838983 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.403517562 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.400168706 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.403874781 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.77975477 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.182947872 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.501085321 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.400970015 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.404505054 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.407504411 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.812833377 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.963976055 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.618761957 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.402416225 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.847571516 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.404686136 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.824118122 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.945803078 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.094282512 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.400481348 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.517628169 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.57430617 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.41722931 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.403580671 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.722646444 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.403027328 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.464718034 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.404905196 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.801255671 seconds)
  done (took 389.793232039 seconds)
done (took 635.344556671 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.147743195 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.092888232 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.231952486 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.120217142 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.087242153 seconds)
  done (took 12.005720406 seconds)
done (took 13.337200954 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593584991 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.586247446 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.457621506 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.590698105 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.428224564 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.613099112 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.57222226 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.418777343 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.504592369 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.479494385 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.501316902 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.447918537 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.436340012 seconds)
  done (took 20.960922683 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.684971562 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.405148576 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.469625489 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.64425832 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.446118975 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.69703861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.690041681 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.407583499 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.552599123 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.423084726 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.424973645 seconds)
  done (took 20.169889749 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.700671179 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.404609914 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.470408199 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.65125259 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.443093535 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.656091701 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.696218979 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.406841846 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.542443515 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.425417582 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.416623783 seconds)
  done (took 20.141588509 seconds)
done (took 62.605515021 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.446651315 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.564873976 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.428944016 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.423507795 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.416325776 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.416483006 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.423599204 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.418223855 seconds)
  done (took 12.87602046 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.417326297 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.416996185 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.420556191 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.419147714 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.41738451 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.417645891 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.415710276 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.41627498 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.414198326 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.41757083 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.414924378 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.416561037 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.416865142 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.417815226 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.418228556 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.422201629 seconds)
  done (took 24.012310196 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.419974544 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.41336469 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.415668503 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.41602535 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.41204486 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.416943578 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.417632933 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.419766282 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.417880927 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.41653661 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.420488591 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.416241459 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.419386166 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.419680539 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.416557093 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.415022204 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.413519206 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.418793326 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.419812746 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.416141938 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.419694996 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.417303765 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.412051275 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.416940207 seconds)
  done (took 35.355591324 seconds)
done (took 73.573863447 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.404802636 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.401957178 seconds)
  done (took 6.13672164 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.478742745 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.476299603 seconds)
  done (took 4.283465148 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.418513683 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.41922641 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.41558728 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.415617297 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.416731173 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.4141198 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.413020305 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.41784087 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.416090027 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.41655224 seconds)
  done (took 15.496555185 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.41839364 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.417390952 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.42108173 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.419273745 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.418063318 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.418661962 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.416828861 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.419917257 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.419017189 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.415191365 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.417816369 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.414938621 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.41432857 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.420076519 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.418810951 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.419567199 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.416231809 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.417019266 seconds)
  done (took 26.852841124 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.432252472 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.439631884 seconds)
  done (took 4.204150491 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.558169866 seconds)
    (2/7) benchmarking "second"...
    done (took 1.458661024 seconds)
    (3/7) benchmarking "month"...
    done (took 1.53343937 seconds)
    (4/7) benchmarking "year"...
    done (took 1.523116438 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.460287985 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.435428385 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.460151437 seconds)
  done (took 11.760067406 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.421108186 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.613295292 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.726988285 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.980332801 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.419560686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.462920703 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.280648735 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.466233593 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.452645156 seconds)
  done (took 16.157499833 seconds)
done (took 86.22370368 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.412188903 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.476772704 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.425499143 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.428506664 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.731276228 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.410804669 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.409102166 seconds)
done (took 17.629535547 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.401980588 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.395067461 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.409697112 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.417459276 seconds)
  done (took 10.957034706 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.406470464 seconds)
    (2/2) benchmarking "read"...
    done (took 1.757352226 seconds)
  done (took 5.493737563 seconds)
done (took 17.784509033 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.415890394 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.417772166 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.415172719 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.419935197 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.417788935 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.418205317 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.419745692 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.419887411 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.417139224 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.416220946 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.417587261 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.418470223 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.416961434 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.418252744 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.421436075 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.418843527 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.414803068 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.417247649 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.418431198 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.419004942 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.415403474 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.419978436 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.415809584 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.418243123 seconds)
  done (took 35.358203834 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.41693678 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.419426493 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.418929986 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.415591011 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.41573008 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.417833317 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.416039857 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.419109707 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.417492267 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.425233835 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.420856074 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.418700484 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.413328427 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.42191361 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422143909 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.419659638 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.421050064 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416593256 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.422286353 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.42396932 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.421595927 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.418660858 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.422467179 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.420523761 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.416838445 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.421206784 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.42068654 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.421163001 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.421922633 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.421489994 seconds)
  done (took 43.918892513 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.425154289 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.42582261 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.41827581 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.420244113 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.421458973 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.419009818 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.418222201 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.421180434 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.420242941 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.422189212 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.420583979 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.417435179 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.420044265 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.420522134 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.420851383 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.42247628 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.418586998 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.417641407 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.421801163 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.419596521 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.4192076 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.424349876 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.422990127 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.420311836 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.422721846 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.416257899 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.420415786 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.418585446 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.419974872 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.420873322 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.418534778 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.422426582 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.417043596 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.422893144 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.422886192 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.422477066 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.420899284 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.426095813 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.423508253 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.419046734 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.419146746 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.423217335 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.422039139 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.420944718 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.423068494 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.424420736 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.421415716 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.424691462 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.421003396 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.425640372 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.424889257 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.422353371 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.427881064 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.425656762 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.421374289 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.425668684 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.422597667 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.425045083 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.425594466 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.420296077 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.421278033 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.422650809 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.423074023 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.420568688 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.426064573 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.423740061 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.417513187 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.421340307 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.420865513 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.425050049 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.423871024 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.425280074 seconds)
  done (took 103.707544122 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.422273164 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.421406372 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.422590294 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.423580908 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.423422137 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.421018346 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.421508584 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.42422899 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.42343674 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.423496786 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.42368247 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.422110345 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.418868486 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.424431326 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.42116857 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.424234551 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.424344402 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.419931561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.422959469 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.427127117 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.421850216 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.424398714 seconds)
  done (took 32.634088354 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.421495431 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.424505574 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.422658031 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.430466353 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.424212894 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.424253268 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.424130592 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.424405174 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.426059193 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.42603811 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.426663062 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.424325029 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.427512495 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.424978129 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.425626446 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.423748893 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.423167872 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.431346376 seconds)
  done (took 26.992225407 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.421809773 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.423275833 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.421873345 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.419399582 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.421419571 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.421356614 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.424696981 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.422642375 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.421370648 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.422090845 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.422070641 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422600014 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.419519709 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.425362066 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.42127047 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.426660206 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.421514001 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.42477122 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.423196688 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.423238326 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.424087487 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.41783212 seconds)
  done (took 32.631328235 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.422119665 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.421530965 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.421117546 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.421020427 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.428950479 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.418980328 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.425626984 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.42115 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.425333796 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.423185332 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.41936765 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.424913842 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.422835019 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.421042648 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.424333759 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.420463451 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.422701898 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.4191326 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.42458093 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.42206492 seconds)
  done (took 29.785046437 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.41982178 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.424041935 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.423608539 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.421203396 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.427948852 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.42362033 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.424044947 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.421211607 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.422787188 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.424591855 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.424959398 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.426279513 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.418018154 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.42287212 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.423153113 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.423323959 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.422382975 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.421273861 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.423194048 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.424057577 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.421782549 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.422561159 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.424058955 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.420648857 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.424207169 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.421973369 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.421305117 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.424012054 seconds)
  done (took 41.179279478 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.419045585 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.420732573 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.418895732 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.425838182 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.420990832 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.421298185 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.417555581 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.421230206 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.422252572 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.423168004 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.422388664 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.420138582 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.421654822 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.422960522 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.419475419 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.422300876 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.416575194 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.425582715 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.424031512 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.420757578 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.420150253 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.422330157 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.422645801 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.422367229 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.426387956 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.426814844 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.423283403 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.424015763 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.419779031 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.421495407 seconds)
  done (took 43.994543408 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.472060036 seconds)
    (2/2) benchmarking "in"...
    done (took 1.468687958 seconds)
  done (took 4.270995927 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.416733195 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.421756924 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.419025308 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.422139583 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.424597857 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.423400238 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.422731234 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.416574638 seconds)
  done (took 12.696239442 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.417421479 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.423851091 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.423061189 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.416913171 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.416887847 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.414743368 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.424030207 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.437956041 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.412171566 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.422138665 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.420038615 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.424037939 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.418048913 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.414569105 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.413388456 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.414148268 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.419252786 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.426546096 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.41501787 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.421388101 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.418615924 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.415811616 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.413841254 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.423658913 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.416652811 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.423592265 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.417367552 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.420579634 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.415678398 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.419988201 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.415004841 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.422240814 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.416865511 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.418593248 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.418141897 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.418942624 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.424280051 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.434665541 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.424752415 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.421122478 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.425473284 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.418245338 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.416809224 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.416264831 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.413821865 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.419873316 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.42064337 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.419786916 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.413178733 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.420104084 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.432403745 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.418568001 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.420390883 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.416595033 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.418049602 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.422462571 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.439700711 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.418095937 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.425067039 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.427507944 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.425118201 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.43856006 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.415565678 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.420158877 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.42454401 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.431483052 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.423139891 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.436344015 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.419903877 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.420579608 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.422097597 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.425525835 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.437188223 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.419116309 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.41726131 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.42193375 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.416283192 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.422645819 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.427752842 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.436366383 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.421231378 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.42198618 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.426598934 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.433795001 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.419675587 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.417502538 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.417647955 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.420465428 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.419796647 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.431949997 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.437239952 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.421784764 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.416621659 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.418013708 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.420049102 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.421766343 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.416698853 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.418482772 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.422120093 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.422799714 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.422323078 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.421680318 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.426728194 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.426223961 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.421950082 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.424601129 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.424143589 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.422627177 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.420514513 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.422756918 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.422136016 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.417753373 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.420783361 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.42176543 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.419420442 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.427194888 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.420016259 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.417954284 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.421292036 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.422735387 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.424652417 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.438283017 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.422383981 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.424293426 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.421889967 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.43391304 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.423052614 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.421840485 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.42198684 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.423348586 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.420715171 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.422938721 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.424558156 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.417556549 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.421826401 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.419094004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.423650156 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.423243462 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.421057133 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.420512299 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.415430439 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.418934487 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.417141463 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.420227915 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.422737191 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.418943515 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.424465899 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.420974451 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.419598954 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.420882236 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.423769289 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.423662001 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.422023817 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.422097322 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.421320482 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.423710589 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.420323849 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.424150312 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.42472617 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.426495816 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.426441603 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.41965523 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.426239691 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.423478283 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.424450614 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.422534159 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.424217682 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.425788254 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.425352048 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.419622058 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.425253632 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.41709644 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.422757589 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.432228685 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.42846874 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.426470667 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.422271826 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.424495183 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.425516552 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.419665443 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.425203171 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.431145396 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.427995199 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.429050151 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.427340796 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.425654172 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.429163902 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.418546221 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.424091528 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.426977695 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.423785759 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.43314766 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.431179579 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.442493818 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.422098853 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.42879211 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.420936364 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.429703453 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.425741163 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.426678154 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.421691084 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.427678549 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.422901583 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.427338651 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.421053705 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.42694889 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.419447148 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.423447852 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.424955825 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.427077143 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.429178877 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.421418726 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.425852045 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.428109163 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.425403543 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.425383473 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.424617315 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.428575945 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.421527731 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.419602391 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.429515599 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.424651276 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.430397401 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.427092977 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.423172323 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.425237498 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.421570105 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.423711135 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.430718791 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.42407655 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.419738191 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.429128181 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.437743307 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.424480294 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.429141967 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.443643933 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.420104572 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.424827765 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.428484688 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.429085724 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.422571115 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.435543271 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.427788983 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.424243795 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.428967144 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.425709737 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.42896805 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.428543491 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.428300372 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.422178111 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.42957436 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.423665978 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.432045164 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.425881441 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.422041688 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.425734656 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.426757542 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.430393133 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.430569722 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.427098143 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.430120198 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.425219226 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.428118013 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.425556053 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.434320391 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.430455384 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.42376741 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.428691233 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.424265184 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.434209726 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.424502687 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.426737723 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.423688814 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.437290034 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.448507659 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.43019593 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.443225762 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.428173437 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.427588095 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.440878695 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.430015368 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.427746966 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.424642804 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.427771627 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.425026646 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.432004145 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.424884384 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.430425009 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.425113442 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.427033799 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.43347036 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.431224124 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.424263616 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.428846572 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.432450726 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.430250015 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.427078788 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.42998764 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.429627117 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.42739485 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.424064793 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.425825807 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.433543428 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.440118795 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.424228769 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.426790599 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.42397962 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.4221841 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.429295293 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.431666821 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.427944893 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.438757631 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.430341725 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.432993976 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.429201234 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.437562483 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.42938265 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.429892376 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.438068257 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.431799356 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.426451036 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.423336706 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.43260045 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.435047585 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.447868741 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.430444969 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.436831001 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.434256882 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.431721626 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.432076715 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.433079205 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.430822137 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.43307749 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.437868977 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.44859164 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.431982591 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.429604412 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.433240339 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.429259265 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.43370891 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.42807931 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.427844992 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.424762571 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.425544676 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.427189863 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.425692124 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.432164304 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.434543429 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.43432602 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.432293029 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.430478448 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.435296733 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.446628211 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.436065989 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.434042207 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.432621206 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.428322872 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.433865869 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.45077035 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.427186372 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.431359836 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.434956158 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.431658416 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.429603251 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.428955357 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.432127771 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.42800973 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.437264448 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.437658419 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.434480409 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.430675954 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.435481092 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.43097373 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.436927763 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.452093115 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.432736527 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.440067849 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.433446587 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.430094173 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.438486122 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.434682545 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.42505405 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.430711569 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.435755801 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.441951759 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.432690401 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.432562199 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.431645745 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.436588781 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.433433148 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.435086059 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.433209789 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.431495421 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.430647834 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.436921794 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.430171326 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.43087808 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.436199928 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.430201308 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.429149968 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.439087478 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.432273001 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.429487798 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.435318595 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.434051184 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.430698882 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.430329263 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.4354983 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.432576654 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.44028091 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.433782222 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.437770106 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.437427296 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.430977524 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.43026186 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.434903732 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.430410974 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.431157591 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.433714472 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.433440359 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.435495462 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.432009584 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.434944881 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.433345726 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.431389629 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.436096504 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.430376815 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.436996854 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.435080078 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.438433074 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.429570532 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.437342707 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.437047177 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.43610135 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.433922739 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.434873385 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.435656313 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.431522456 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.440595363 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.441326776 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.435185582 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.430135582 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.435603799 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.436727701 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.43273949 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.433166887 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.43802381 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.430935535 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.433979171 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.435303426 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.437841334 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.437901733 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.430673007 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.432430639 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.441425556 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.45040576 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.438016103 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.435049447 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.440606384 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.433118531 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.439601197 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.438419147 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.431642483 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.443073399 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.449287304 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.4395848 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.4319387 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.43090044 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.437308923 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.441428057 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.438047132 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.433867552 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.437918368 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.436953717 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.439060449 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.437506997 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.436129725 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.434885932 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.43035014 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.437123922 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.437569542 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.437895247 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.436243972 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.431401206 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.432743669 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.43866551 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.436920947 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.435103972 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.436810079 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.435790492 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.438909825 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.433676067 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.436914104 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.435983062 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.435332398 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.445849176 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.436731435 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.436940043 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.441467079 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.446212829 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.437556327 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.435510081 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.432215825 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.437986432 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.43562382 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.440884347 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.434629218 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.438402653 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.439374931 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.43741347 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.439377083 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.437071645 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.447375985 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.457486941 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.437755709 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.432292394 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.436423232 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.441037092 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.440173793 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.436154322 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.436915542 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.436209538 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.446083781 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.437053691 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.442961993 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.453623318 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.437419368 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.444120835 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.442716335 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.440796789 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.437478921 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.442465086 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.43974954 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.437752661 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.450442084 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.441846998 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.443235895 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.459724522 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.455664403 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.435627365 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.437935857 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.436640895 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.440577853 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.436136125 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.441825646 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.443276266 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.442131801 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.441227339 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.440407424 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.442274828 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.438667471 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.438750819 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.442190385 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.43755297 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.43875759 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.442037951 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.439683586 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.444638957 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.441801657 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.440359305 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.442665684 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.435293128 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.448372498 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.460618068 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.441411532 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.445024359 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.443405266 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.443620777 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.439823852 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.449168912 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.450282161 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.441293354 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.441312875 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.441419089 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.442645543 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.44720195 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.439519575 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.440891482 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.43760301 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.444345586 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.448202912 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.463275722 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.444575222 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.438928247 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.443665634 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.44461535 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.439717512 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.442262669 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.442058187 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.437572166 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.441557573 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.444523367 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.445520306 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.440730941 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.440888188 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.452674123 seconds)
  done (took 853.973495767 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.445890256 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.443103846 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.444467437 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.445099372 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.443482992 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.441989124 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.445224001 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.443427916 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.44515312 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.444630295 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.447892143 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.440912585 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.446906986 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.445001764 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.445536057 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.443376242 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.443886755 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.444002956 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.44450814 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.446724108 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.446017143 seconds)
  done (took 31.692420123 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.445965377 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.443942447 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.440356919 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.446655778 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.446719189 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.443513742 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.444839417 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.443274358 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.445909493 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.447483734 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.448291187 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.443767912 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.44593984 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.445105425 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.442857982 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.445739217 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.446490992 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.446219771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.446010106 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.443766075 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.440858735 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.44323441 seconds)
  done (took 33.141942655 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.446201691 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.445346069 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.438316893 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.446231579 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.4477439 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.445663073 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.44387215 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.444630742 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.447245274 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.439194156 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.437388128 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.441528058 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.447812179 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.456059935 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.441737209 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.444830889 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.445363721 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.445650001 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.446754563 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.445084211 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.446079295 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.458935144 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.447221246 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.441781529 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.446565889 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.449088607 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.449733564 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.447028612 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.445783708 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.451685897 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.44676644 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.445478389 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.443485315 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.438440995 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.442661312 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.451026832 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.446805075 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.449065565 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.447115041 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.450559075 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.466560743 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.444425937 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.448232972 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.459841314 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.449438601 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.446434772 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.458241201 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.449586209 seconds)
  done (took 70.823424916 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.055183821 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.060480438 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.069958202 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.061834265 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.068711149 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.063346384 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.06073596 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.062769295 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.084021694 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.064361895 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.072893098 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.06803702 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.060944953 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.064834697 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.071344761 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.066785792 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.070554106 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.070729839 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.08292241 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.062450773 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.069844716 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.07136388 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.068076186 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.068926361 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.07442604 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.076269171 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.069962458 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.070491473 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.091688781 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.068424722 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.067389081 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.069303417 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.06554842 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.068902498 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.06935563 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.068565078 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.066630223 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.066463509 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.084261418 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.071045219 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.068761369 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.071213249 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.079578256 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.071557213 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.078373759 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.07746513 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.068714069 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.070567214 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.095278104 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.069179572 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.074845745 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.081904491 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.074721623 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.081248629 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.083382601 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.078326841 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.078795775 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.085428408 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.09591084 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.074744844 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.076431232 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.070567847 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.075586368 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.074271106 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.078615101 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.079634628 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.069306105 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.070410406 seconds)
  done (took 142.283297372 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.450144749 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.450862208 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.453470761 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.44877588 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.451830775 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.449956275 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.450309844 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.452702964 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.450926162 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.450795278 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.452778216 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.448522816 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.448329589 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.452020372 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.449664132 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.450360357 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.452832436 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.453749063 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.454127103 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.45031686 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.45102549 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.451950062 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.448784333 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.452542447 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.454616278 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.450344181 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.448599735 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.451802504 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.45180469 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.454211422 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.452439306 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.45035626 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.452597669 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.456674828 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.454035317 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.453736198 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.453395647 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.4487812 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.453841185 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.451201851 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.450969092 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.452745389 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.44968358 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.455109613 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.451731889 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.449899436 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.451100748 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.451073588 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.454055752 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.453729061 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.452109415 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.454193206 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.45258441 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.451011031 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.453807892 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.449773176 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.451974036 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.45486615 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.452818239 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.451737071 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.451983464 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.455074201 seconds)
  done (took 91.38462084 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.455323633 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.458699021 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.454810603 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.451835566 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.452099236 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.455161032 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.453615073 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.449187909 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.455174128 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.454606031 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.453211763 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.451796157 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.454641077 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.454613031 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.453303422 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.455027227 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.456260563 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.453223235 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.453750624 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.45483366 seconds)
  done (took 30.445669401 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.456317046 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.455152024 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.454045574 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.454672674 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.452921283 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.454212365 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.452872418 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.455213054 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.453273459 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.455000869 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.454254917 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.456862188 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.451989425 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.452921552 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.454225874 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.456900333 seconds)
  done (took 24.633464434 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.456399161 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.453904533 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.454243752 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.456984038 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.451639672 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.45555035 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.458269181 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.456366617 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.458408782 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.457736674 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.454780677 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.454113921 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.455119308 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.454410617 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.457590276 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.454337985 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.456246123 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.456793229 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.454783967 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.456194749 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.457936396 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.452476534 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.456392139 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.456006177 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.456463176 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.456922415 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.456737453 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.456726549 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.45497427 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.454549015 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.456707249 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.457645686 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.457733335 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.45909687 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.457609137 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.45435928 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.455322187 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.457667995 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.457681735 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.458243148 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.457751438 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.457279642 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.451545528 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.457176865 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.455166378 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.457474287 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.453350807 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.457627719 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.45792482 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.455984608 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.454728122 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.455547857 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.455395812 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.459487396 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.458255345 seconds)
  done (took 81.457002915 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.457182446 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.454920872 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.457523954 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.454163884 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.45989728 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.455091394 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.454684575 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.461491129 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.457764598 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.460931578 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.458484864 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.461465598 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.459032697 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.457511418 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.460845347 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.458118284 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.458125327 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.454645885 seconds)
  done (took 27.606748621 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.461496787 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.459059 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.461810337 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.456577379 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.456452641 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.457557672 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.457004218 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.458606454 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.457676559 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.458270727 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.457956121 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.457241378 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.460421261 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.458484724 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.460035547 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.460541262 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.455336468 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.460267521 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.45946886 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.458411101 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.460421346 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.462091991 seconds)
  done (took 33.461562037 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.453578784 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.454642812 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.456195084 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.467324682 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.474053964 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.45038409 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.450632215 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.454642652 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.471818289 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.497883956 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.49728107 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.472793503 seconds)
  done (took 18.966630627 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460560909 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458919837 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.458188343 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460687514 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.458035735 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.459239759 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.461504791 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.454396904 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459971355 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.460728747 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.46052862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.458320537 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.458888752 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459772779 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462764385 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.463043189 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.46110914 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.464432874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.463727826 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.459712719 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.461399349 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462299199 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461446232 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.459650646 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.462450741 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461132809 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461217089 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462199817 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460104615 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.457494963 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.461812992 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463926539 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.461010115 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.459382212 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462069646 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460516612 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.457596293 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46338186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460482529 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.460411579 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.464706343 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460503703 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460293345 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.464351744 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.461097373 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.46399031 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461558762 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.458849105 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.46352531 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.462653141 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460666561 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.465537677 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462961304 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462085422 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461250037 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.462858216 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.462904184 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.462880559 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.46152729 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.459238976 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.464445227 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463471106 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.460005976 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.460968765 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.460588725 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.461862876 seconds)
  done (took 97.811088633 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.46305854 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.460301326 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.464962374 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.46523494 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.462652458 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.46670008 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463907593 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.46089788 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.463875807 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463693824 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.463314906 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464525248 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.460283786 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.462314982 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.463082787 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.465064408 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.463482731 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.462846382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464055452 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.461984536 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.46209948 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.465189086 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4633474 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.466064633 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.462865673 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.462126932 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.463039366 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.464256718 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.465391695 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463737752 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.46684795 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.463329517 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.463820403 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.465045351 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.461043035 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.46529834 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463814296 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.463499794 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.466332918 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.466505607 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.463592154 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.460124886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.461544809 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.465494355 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.465119731 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.462075128 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.464694097 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.461815144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.461928927 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.466655286 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.466406191 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.465789412 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.465226116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.466042304 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.463083601 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.464687325 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.463257049 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.465769232 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.470110136 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.463611668 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.464441668 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.467198102 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.466250243 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.465870968 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.466333901 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.465042198 seconds)
  done (took 98.005560105 seconds)
done (took 2044.185713314 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.622953028 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.581176837 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.461939309 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.474651222 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.451494852 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.456228208 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.467979001 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.455663379 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.459047838 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.456816813 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.46043881 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.647226887 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.515497358 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.455569494 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.460529452 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.558832725 seconds)
  done (took 29.367083185 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.487142301 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.468464733 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.574370668 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.482056272 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.488980075 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.652217947 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.509297321 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.466751793 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.62718131 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.478318458 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.463250815 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.478134959 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.468114106 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.461940431 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.476719036 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.65387739 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.692886916 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.457305641 seconds)
  done (took 31.754249726 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.882832751 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.452883317 seconds)
  done (took 5.711534937 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.486345725 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.466696469 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.463362861 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.464507711 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.456261728 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.456206596 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.463486666 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.46036489 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.457810659 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.581940268 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.47103707 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.478837599 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.48356075 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.466173341 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.468439598 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.505130456 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.63081364 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.468922841 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.468840679 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.472698435 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.464640665 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.554152361 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.509705278 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.461958444 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.581047967 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.46137936 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.468438122 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.47107181 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.61767512 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.46993402 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.463121678 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.463513193 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.464704431 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.459827054 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.930071364 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.483054628 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.484979566 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.475800461 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.47075584 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.61765456 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.471361795 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.471194727 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.456758736 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.929522275 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.623729571 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.576415153 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.47167735 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.465577919 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.465947514 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.530056998 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.463100559 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.465635831 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.523461991 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.253415021 seconds)
  done (took 92.598314416 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.507215765 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.459910189 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.64283612 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.472427954 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.452706577 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.454715849 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.456753975 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.724728228 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.456835671 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.458445516 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.781357734 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.016135361 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.479478174 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.516605365 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.327962183 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.537556774 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.462049612 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.472432883 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.465659148 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.46304396 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.002934816 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.452556657 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.452318293 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.552765361 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.49606678 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.960917599 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.464343437 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.452960678 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.457933169 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.455942009 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.970955782 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.486880188 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.528772012 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.454702337 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.727782027 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.813444127 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.77426995 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.460326964 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.511073556 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.451981479 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.468505563 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942415833 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.796442615 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.455322325 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.454132381 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94497074 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.453450903 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.470943605 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.471252949 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.713039562 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.457753174 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.462947894 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.475191794 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.455688199 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.46362706 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.468358346 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.486257134 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.95857642 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.454853948 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.465612344 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.47582703 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.462939767 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.456125197 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.465342883 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.477214201 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.79603429 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671414952 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.469104609 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.798937544 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.962402608 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.469944919 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033787625 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.471195286 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.469187319 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.64885751 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.467077116 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.463600044 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.943889029 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.48508178 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.454786597 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.786300866 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.45918529 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.779528438 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.472688801 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.457735924 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.012009392 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.467077222 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.467519996 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.462798367 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.471875018 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.458438218 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.469335469 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.724667928 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.486417624 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.464136448 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.463466896 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.469901525 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.457037752 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.458759287 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.46848564 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.026679751 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.482779399 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.465618164 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.458875972 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.464484513 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.460843395 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.465501106 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.465328935 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.732830581 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.475980914 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.470864251 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.46503962 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.456476689 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.476455132 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.561243189 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.472005247 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.752013243 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.460442874 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.462000784 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.463912849 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.465058774 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.502009149 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.459180797 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.463474757 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.343762398 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.759735651 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.481553788 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.476710856 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.466146675 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.463716576 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.45946109 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.46190195 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.507813184 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.464453707 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.238472822 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.506507734 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.50451878 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.464957355 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.477241364 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.465145794 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.462793952 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.467309453 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.753146687 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.72858534 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.659701682 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.461530738 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.463524811 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.228129503 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.521036456 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.643511831 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.478100401 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.464919338 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.719650748 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.668328027 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.462640809 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.460256342 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.463391949 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.722335732 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.468999567 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.779362768 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.003558534 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.477995337 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.474240347 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.247615071 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.178174755 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.46203172 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.46811648 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.785447933 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.478294478 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.465801963 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.465154065 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.467745445 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.478691293 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.487650386 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.472394399 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.46249154 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.467032308 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.484138919 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.65787526 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.47977194 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.475007256 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.9593197 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.481214081 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.46623644 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.464730664 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.468547106 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.468781557 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.536087109 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.47730126 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.500946447 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.469829506 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.470316777 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016661999 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.461872772 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.462008795 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.660721161 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1499111 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.483994007 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.469445747 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.480912257 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.3703181 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.980194889 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.488861874 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.760283985 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.472525931 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.504934539 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.466451827 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.509340098 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.978711845 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.465670314 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.483678017 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.119025309 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.480289246 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.891372066 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.460930773 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.467730337 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.057806031 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.479610955 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.471610838 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.460702848 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.463040239 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.768451481 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.46933333 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.492934534 seconds)
  done (took 526.951709208 seconds)
done (took 687.753841851 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.467108433 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.465728821 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.460659307 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.464589222 seconds)
  done (took 11.246053158 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.481974138 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.476338713 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.480609454 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.472823022 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.483968332 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.471868927 seconds)
  done (took 10.254573472 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.469350791 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.460878225 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.472102026 seconds)
  done (took 8.786503862 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.670176981 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.488672512 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.788111179 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.487266662 seconds)
  done (took 9.82235862 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.479933584 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.480862931 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.479317573 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.485221879 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.482657978 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.48840488 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.482369467 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.484563005 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.48547814 seconds)
  done (took 14.732179017 seconds)
done (took 56.227265191 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.225405251 seconds)
    (2/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.220671096 seconds)
    (3/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.471139519 seconds)
    (4/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.5644952 seconds)
    (5/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.598811723 seconds)
    (6/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.474813164 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.530998775 seconds)
    (8/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.498677547 seconds)
    (9/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.637147603 seconds)
    (10/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.515254431 seconds)
    (11/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.508383971 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.567757914 seconds)
    (13/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.582795151 seconds)
    (14/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.566394447 seconds)
    (15/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.473413286 seconds)
    (16/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.584417485 seconds)
    (17/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.642447861 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.506323379 seconds)
    (19/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.203089358 seconds)
    (20/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.617998165 seconds)
    (21/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.55682782 seconds)
    (22/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.488040592 seconds)
    (23/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.507618056 seconds)
    (24/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.531874235 seconds)
    (25/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.224945886 seconds)
    (26/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.135805168 seconds)
    (27/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.54382952 seconds)
    (28/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.546714918 seconds)
    (29/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.556916926 seconds)
    (30/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.660920532 seconds)
    (31/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.566364393 seconds)
    (32/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.575079056 seconds)
    (33/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.464792228 seconds)
    (34/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.688239452 seconds)
    (35/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.694781628 seconds)
    (36/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.585707268 seconds)
    (37/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.58084074 seconds)
    (38/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.469219035 seconds)
    (39/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.541467078 seconds)
    (40/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.502509715 seconds)
    (41/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.524896419 seconds)
    (42/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.52464908 seconds)
    (43/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.50639755 seconds)
    (44/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.624527055 seconds)
    (45/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.599082248 seconds)
    (46/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.463028288 seconds)
    (47/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.501920265 seconds)
    (48/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.63698277 seconds)
    (49/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.457790873 seconds)
    (50/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.505249431 seconds)
    (51/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.512728552 seconds)
    (52/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.502491125 seconds)
    (53/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.651858563 seconds)
    (54/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.243248949 seconds)
    (55/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.701639799 seconds)
    (56/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.505079239 seconds)
    (57/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.473486092 seconds)
    (58/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.529903034 seconds)
    (59/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.645194598 seconds)
    (60/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.474699032 seconds)
    (61/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.615626071 seconds)
    (62/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.500964239 seconds)
    (63/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.471953631 seconds)
    (64/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.781101141 seconds)
    (65/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.525253605 seconds)
    (66/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.505547479 seconds)
    (67/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.519745815 seconds)
    (68/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.574325536 seconds)
    (69/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.212039957 seconds)
    (70/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.19741986 seconds)
    (71/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.568724765 seconds)
    (72/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.672592729 seconds)
    (73/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.610464779 seconds)
    (74/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.577381666 seconds)
    (75/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.134622306 seconds)
    (76/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.620002652 seconds)
    (77/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171201701 seconds)
    (78/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.545646377 seconds)
    (79/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.508498148 seconds)
    (80/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.512351207 seconds)
    (81/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.550199564 seconds)
    (82/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.667805607 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.597545421 seconds)
    (84/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.463032919 seconds)
    (85/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.487902403 seconds)
    (86/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.559093721 seconds)
    (87/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.486328709 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.566687796 seconds)
    (89/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.614667087 seconds)
    (90/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.383677674 seconds)
    (91/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.688119563 seconds)
    (92/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.683174357 seconds)
    (93/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.529653938 seconds)
    (94/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.534204576 seconds)
    (95/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.586174713 seconds)
    (96/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.703188679 seconds)
    (97/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.478281939 seconds)
    (98/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.567143097 seconds)
    (99/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.501529951 seconds)
    (100/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.512421932 seconds)
    (101/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.644343167 seconds)
    (102/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.514364939 seconds)
    (103/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.556026719 seconds)
    (104/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.627604533 seconds)
    (105/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.573806531 seconds)
    (106/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.477776768 seconds)
    (107/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.550053809 seconds)
    (108/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.522941268 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.558058453 seconds)
    (110/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.584346877 seconds)
    (111/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.573785124 seconds)
    (112/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.8067685 seconds)
    (113/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.496862046 seconds)
    (114/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.676061678 seconds)
    (115/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.597199999 seconds)
    (116/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.508561723 seconds)
    (117/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.614744878 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.533941682 seconds)
    (119/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.480005557 seconds)
    (120/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.509086894 seconds)
    (121/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.575373808 seconds)
    (122/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.532267573 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.607631804 seconds)
    (124/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.497268367 seconds)
    (125/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.510279706 seconds)
    (126/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.512079751 seconds)
    (127/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.611843015 seconds)
    (128/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.827699693 seconds)
    (129/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.576784727 seconds)
    (130/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.257746759 seconds)
    (131/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.384655866 seconds)
    (132/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.701985775 seconds)
    (133/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.695054052 seconds)
    (134/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.598794025 seconds)
    (135/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.621007857 seconds)
    (136/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.532530339 seconds)
    (137/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.477817924 seconds)
    (138/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.642008103 seconds)
    (139/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.506554349 seconds)
    (140/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.514368484 seconds)
    (141/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.127960267 seconds)
    (142/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.50951978 seconds)
    (143/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.477196613 seconds)
    (144/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.550466104 seconds)
    (145/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.606184222 seconds)
    (146/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.514516825 seconds)
    (147/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.469618484 seconds)
    (148/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.553393516 seconds)
    (149/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.472183999 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.586825882 seconds)
    (151/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.392952281 seconds)
    (152/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.638165317 seconds)
    (153/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.250107548 seconds)
    (154/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.637004145 seconds)
    (155/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.518576904 seconds)
    (156/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.560527967 seconds)
    (157/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.464082643 seconds)
    (158/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.820115224 seconds)
    (159/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.563232954 seconds)
    (160/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.283923249 seconds)
    (161/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.466971894 seconds)
    (162/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.672670469 seconds)
    (163/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.523272924 seconds)
    (164/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.257514393 seconds)
    (165/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.481876922 seconds)
    (166/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.683859 seconds)
    (167/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.610434283 seconds)
    (168/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.673828878 seconds)
    (169/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.621882498 seconds)
    (170/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.551343732 seconds)
    (171/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.508755844 seconds)
    (172/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.6804492 seconds)
    (173/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.587540737 seconds)
    (174/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.585043953 seconds)
    (175/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.774740003 seconds)
    (176/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.576395695 seconds)
    (177/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.578180488 seconds)
    (178/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.510718703 seconds)
    (179/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.617649614 seconds)
    (180/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.6369749 seconds)
    (181/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.170093374 seconds)
    (182/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.348427029 seconds)
    (183/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.644139225 seconds)
    (184/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.549088672 seconds)
    (185/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.168207374 seconds)
    (186/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.683858157 seconds)
    (187/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.685547301 seconds)
    (188/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.181963898 seconds)
    (189/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.508926993 seconds)
    (190/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.470882396 seconds)
    (191/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.473241689 seconds)
    (192/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.635031663 seconds)
    (193/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.52531891 seconds)
    (194/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.540601251 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.568279309 seconds)
    (196/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.534272458 seconds)
    (197/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.470510507 seconds)
    (198/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.611927521 seconds)
    (199/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.662611184 seconds)
    (200/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.516930999 seconds)
    (201/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.592860479 seconds)
    (202/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.290324129 seconds)
    (203/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.588419639 seconds)
    (204/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.560635147 seconds)
    (205/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.227814924 seconds)
    (206/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.749057463 seconds)
    (207/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.631171256 seconds)
    (208/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.537299344 seconds)
    (209/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.562277693 seconds)
    (210/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.629514378 seconds)
    (211/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.578757646 seconds)
    (212/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.605509341 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.704274094 seconds)
    (214/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.499213395 seconds)
    (215/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.694884128 seconds)
    (216/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.16946817 seconds)
    (217/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.540990808 seconds)
    (218/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.622826041 seconds)
    (219/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.497457959 seconds)
    (220/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.620509153 seconds)
    (221/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.518660874 seconds)
    (222/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.134305253 seconds)
    (223/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.623938458 seconds)
    (224/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.510251544 seconds)
  done (took 404.271445094 seconds)
done (took 405.656131529 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.540690556 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.674844466 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.489178264 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.489736377 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.535878315 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.484497364 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.530214451 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.501427472 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.502278427 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.503495687 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.48585131 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.498325268 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.504509968 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.528362106 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.606347445 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.506647854 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.49351713 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.496761181 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.541152513 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.559830583 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.533899818 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.539519868 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.513997802 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.490052529 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.535206861 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.54083021 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.499354478 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.482441546 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.494693753 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.538178788 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.484902352 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.493851703 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.548205812 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.549845556 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.53523998 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.49874572 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.536880762 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.673977514 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.534295662 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.533610155 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.502466601 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.548516748 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.502233971 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.505226456 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.546773277 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.507734911 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.53592598 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.614507237 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.483367706 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.491557412 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.534195827 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.553710245 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.507008617 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.49853634 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.491378027 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.611041395 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.502967497 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.543451056 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.499781078 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.537419099 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.609986373 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.538824919 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.556197828 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.541817552 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.503045637 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.508848178 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.495558812 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.559044333 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.497377164 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.53489797 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.533249821 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.501961335 seconds)
done (took 119.332063679 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.616950636 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.486571859 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.633400817 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.489389754 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.656996217 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.632535255 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.49236215 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.491973798 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.490075515 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.350558174 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.493248739 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.496507611 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.492041723 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.498747298 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.62537679 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.495136133 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.496934377 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.235997994 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.496028727 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.6397146 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.489247981 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.498237715 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.495213573 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.34518893 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.490678065 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.489742369 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.638736286 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.494100578 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.232512612 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.486739369 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.490905677 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.228983292 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.640144025 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.516008298 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.507045469 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.503973344 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.653634829 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.508824311 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.623132537 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.624644479 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.636533679 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.538944296 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.486221378 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.491729001 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.496597807 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.498343655 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.494180741 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.524093794 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.491995269 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.498359948 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.238682057 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.509002377 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.508960644 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.497650433 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.494937578 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.517861328 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.498734018 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.49575416 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.640747349 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.498166005 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.622152225 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.344048942 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.355472234 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.49881583 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.488427645 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.498353557 seconds)
  done (took 119.533958852 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.560421021 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.571024318 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.604874381 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.503237548 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.544576693 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.610879538 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.491120336 seconds)
  done (took 12.285010008 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.499383225 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.496950877 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.543977615 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.547682589 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.498029478 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.650690603 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.501879831 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.504211189 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.500359549 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.545141703 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.500776798 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.499289958 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.504361997 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.492458837 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.543199921 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.502783035 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.611107534 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.494575738 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.494958929 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.646629218 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.496322064 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.507084016 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.545426209 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.503980603 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.497524459 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.502227045 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.259009081 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500886097 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.499283715 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.498940681 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.49824919 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.545534515 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.496332579 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.496737212 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.502692503 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.610116836 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.501111273 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.50211305 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.502540763 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.495433949 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.501149402 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.498028105 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.497886965 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.498522645 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.497275564 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.522456048 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.501085626 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.498551426 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.49612188 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.499703047 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.545628699 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.503633747 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.501436052 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.503691951 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.554380329 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.511368528 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.501467341 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.504990267 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.502892173 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.500062597 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.6501993 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.543302287 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.500848446 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.54451316 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.504103063 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.500341135 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.501269255 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.4991816 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.591836128 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.497150528 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.545909002 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.503626329 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.68055848 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.521073629 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.503291007 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.499601437 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.500558798 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500746978 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.489471024 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.503602928 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.49980433 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.497774783 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.500658845 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.5038221 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.500222903 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.652835721 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.60494166 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.501646092 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.512582661 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.506293144 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.499469883 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.550196443 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.499690544 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.498437652 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.546436128 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.61373272 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.554238389 seconds)
  done (took 153.707984912 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.509453513 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.507202013 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.500731867 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.52562514 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.49636598 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.49783253 seconds)
  done (took 10.44037356 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.497107284 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.50329268 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.504133076 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.499209403 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.50184038 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.500665071 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.506218702 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.499736045 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.508024851 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.503073114 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.505825597 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.507364155 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.504738855 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.507100663 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.505866088 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.506415101 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.500734816 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.499441623 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.504087292 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.503213356 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.498400978 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.503652033 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.50228151 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.499320703 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.507047419 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.508112236 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.519532305 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.50448714 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.501881021 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.506216677 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.522198975 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.507892919 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.501367752 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.504613136 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.508851795 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.502196479 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.509445338 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.507808508 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.503455025 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.503911372 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.50450159 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.502211377 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.504959564 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.508033372 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.500448579 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.505400772 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.511889424 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.522956519 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.504677155 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.503460354 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.505582627 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.508105962 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.50642491 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.50853495 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.508071827 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.51565564 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.512794313 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.508927854 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.506454709 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.502781029 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.513104743 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.509989189 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.506699683 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.514992262 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.505250354 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.506238476 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.504641009 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.511240571 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.506148135 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.506405959 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.508466014 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.509543633 seconds)
  done (took 110.854476146 seconds)
done (took 408.220758907 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.350343605 seconds)
  done (took 4.758732718 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.599573894 seconds)
  done (took 4.00856937 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.253195971 seconds)
  done (took 22.668685765 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.532913991 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.498649447 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.528446323 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.49880036 seconds)
  done (took 11.463454068 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.79555782 seconds)
  done (took 4.203306451 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.502048649 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.515781662 seconds)
  done (took 6.429729557 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.812922982 seconds)
  done (took 4.223233328 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.023906146 seconds)
  done (took 4.435472616 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.527086297 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.514089986 seconds)
  done (took 6.458761116 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.490419588 seconds)
  done (took 3.899724557 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.301356959 seconds)
  done (took 38.708553977 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.511129513 seconds)
  done (took 3.924050093 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.5196286 seconds)
  done (took 3.927465456 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.049209465 seconds)
  done (took 6.456279917 seconds)
done (took 126.975176323 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.49884049 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.494136289 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.491880726 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.493243415 seconds)
  done (took 11.383573384 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.561762692 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.561931466 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.561739378 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.56314464 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.561792828 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.562089797 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.535746873 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.536008237 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.564529316 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.56018976 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.564117708 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.557376232 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.562566019 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.548890664 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.560649414 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.559289479 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.563497937 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.562522348 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.549777356 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.561552784 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.511049999 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.561134669 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.560279938 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.511048 seconds)
  done (took 38.714283209 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.0012294 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.576153744 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.660627437 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.557642625 seconds)
  done (took 8.205898093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.587014539 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.58522141 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.613532617 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.641001388 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.648585406 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.599890355 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.536831087 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.534855661 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.514435161 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.586250705 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.642554988 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.589398341 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.66764335 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.508796449 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.716146138 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.511123091 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.51313793 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.587409354 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.63904324 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.643711875 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.512337228 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.59067455 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.593297001 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.590039502 seconds)
  done (took 39.56467864 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.515467158 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.527174389 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.510686504 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.526942073 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.510636536 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.507891593 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.513917806 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.518011351 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.513046775 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.514118886 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.510400275 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.527351494 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.515742988 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.511464279 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.515935486 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.507973654 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.517488978 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.514897379 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.51159411 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.515206809 seconds)
  done (took 31.718415855 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.499794031 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.50070003 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.848819694 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.753852861 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.497415506 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.49386163 seconds)
  done (took 15.001231572 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.574982557 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.726371434 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.498907679 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.84724086 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.932988622 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.507474563 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.504839854 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.750133888 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.048929338 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.015512378 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.55978552 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.569629715 seconds)
  done (took 21.94563158 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.505474523 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.499959077 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.501028074 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.513247247 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.561204094 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.509192085 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.513549198 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.498682293 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.56108069 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.56119611 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.510968519 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.559067056 seconds)
  done (took 23.707638623 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601675291 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.507050151 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502306169 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525822553 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500943966 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.349937758 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.538623248 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.246573499 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.526601145 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783462369 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50365266 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600717757 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.75943558 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505824364 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.505040727 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.490594852 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.737976036 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998878367 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509227809 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505354217 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53770692 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517955924 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500732811 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.713888891 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.50595583 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509302187 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.770545871 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.509497596 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.783796656 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516674994 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518037209 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507605381 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.786756903 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169673724 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623235944 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714775583 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505138015 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503105843 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.497578444 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.506243542 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513592746 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.505942674 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518642932 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50637523 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507615007 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516434214 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242423383 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.528761191 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.50613696 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.508952009 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.761835764 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601773045 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.514942063 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509178989 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528699157 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502126236 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.514196632 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640844501 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105034388 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509080492 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524551663 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.503402197 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.506129533 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523755515 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103373611 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.51309355 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.515440753 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.518630302 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509928181 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.503776485 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528910128 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51015696 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.531241279 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511489987 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202601752 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.51421259 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512743199 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063718533 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517850579 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.506376076 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744952388 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51332736 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512047262 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.508474486 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.50975128 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.235246874 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520254544 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.498649289 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573399948 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.272357102 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.737395602 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533723536 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541297659 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.734506118 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.495823616 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508135754 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.510589667 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512798143 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524832125 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248334781 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519029707 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.510412935 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767250758 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.717907742 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520207778 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.489906235 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990420821 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525554319 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.528164224 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.520627932 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.710791743 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.083624002 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.519202871 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519053977 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530398561 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.51264191 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280233434 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529941864 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.611201521 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.520801825 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777235995 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.329949348 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514689636 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583464328 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516637591 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.516590038 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515935807 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516218912 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.514257092 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.715298431 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.542232277 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517930213 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.513428419 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512632561 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.50387181 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510134215 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.535387969 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.739837659 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525756385 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780907662 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513837307 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511448278 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505170832 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.734568487 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.519243125 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.846722645 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.774760063 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510414592 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.526067226 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533838012 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527873441 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614620981 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536161471 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.510831833 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.778476443 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.518122739 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.516614296 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5173909 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.51493754 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515442293 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.518778327 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511849509 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556716383 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501012199 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.515313664 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407006346 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.531071883 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581310123 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.520217658 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.722915849 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.519114535 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510204329 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.524418315 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.517889904 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736904336 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521549593 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.516726504 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589501677 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.995178433 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092749764 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528780623 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.512796974 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.512895154 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.514055414 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512254189 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512104446 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514607776 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718297875 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.530301519 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.529877848 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.081373025 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516786153 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519412274 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.522737588 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527225628 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.52394134 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514639873 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.519978728 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528417331 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530764425 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.520034752 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662275154 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.530895936 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.516120433 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.034214935 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.52290469 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.513559183 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.517468874 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552023394 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.518570121 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331742728 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.772278393 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515032375 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.778981329 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511437394 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.535775118 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.514897063 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517117455 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533005512 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.516445989 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536896499 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.527619892 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.522389755 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520877328 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084504653 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229066582 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034563362 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.519291114 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.528902243 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.512147097 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244048443 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527665489 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516497575 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751544766 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235093991 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526770756 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988802307 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.527083035 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251559829 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.76645734 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746984877 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517510659 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.511594622 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770870028 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.724757367 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551667725 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.529393087 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511824117 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.49856343 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062085449 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526097647 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.594466743 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267790022 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53405421 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517072545 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.596760911 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.517563147 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923134832 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.53070966 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516506495 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.511016305 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.538025642 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32912345 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.51809558 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517740168 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122305241 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.52790303 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.986412566 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529569166 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.72814945 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.529962626 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.522085127 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.523395017 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.519508371 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.770284519 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766789845 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514808779 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.524395664 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038638282 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.386506578 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.525357251 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517258243 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280361273 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518604009 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80616146 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.518273685 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.541342764 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516915186 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.516240465 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516881779 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.512872477 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.521205182 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498099072 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010599311 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.521314971 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519325133 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516159178 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528192545 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.775184533 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.531622306 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091072446 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.751870238 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518474501 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536839718 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.523699924 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53052989 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.50466721 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.519637551 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520157189 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55928967 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.741297078 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.526991928 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.506957015 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.60618388 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.723895346 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.518504672 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.53086389 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.757658276 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.518890579 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.531834965 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236617488 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554727583 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.517311591 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538977135 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513831453 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575124609 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58928085 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730755781 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.53147614 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.53003513 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921612376 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534520381 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538933789 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.535584182 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616329587 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530899984 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.533514374 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.296250911 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096405345 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233056441 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.099237167 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.77146464 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.519443065 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529824164 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520990837 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676429704 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521028396 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798800373 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519581818 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.511447989 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560970116 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530292599 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522808869 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730327612 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798413418 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517574366 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522463901 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515564579 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.522725583 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531838784 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.734150427 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019190496 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085580112 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521186255 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.517317211 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.265242296 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813579601 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521370705 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521454953 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521922277 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.533864876 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542219467 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.533981886 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523063098 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667130628 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.77088942 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189128848 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.550156251 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.5512786 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.040953171 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533017143 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.775317675 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535685122 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.734732426 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098042613 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.21114161 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78869225 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590894378 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731239395 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.522877959 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.686729996 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.536155321 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.523094146 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.525206198 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525908254 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.522204068 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.534253411 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10562003 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795265164 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.532843773 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.532248278 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556813133 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.535771968 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.752250401 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263825929 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.75432983 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534798462 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.531216685 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.529662194 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103878823 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784005421 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519903131 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.524360122 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761249416 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526478399 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551885791 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.046213088 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.527341928 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092630749 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.501191471 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549379718 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528676722 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208820075 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09588473 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.531350529 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031055722 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530969925 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528229366 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797324912 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.533838957 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.531490698 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79599279 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.533804373 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.528597254 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734305918 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.095600832 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279898944 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.541241544 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552588479 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.531193711 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526480125 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608842043 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524045716 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.522750459 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.94677091 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.544329598 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528779986 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534464935 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.540842634 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537022091 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.524261295 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527885742 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.532208742 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.528108361 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.525826555 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.534854721 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652694151 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084315483 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539858415 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.206090769 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.851187803 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.784398922 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.53242067 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.509237641 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.537215439 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527684599 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528568392 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523528325 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520482074 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107831009 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.533664048 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.533694797 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534080012 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.526778226 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.736508987 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.53006001 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740422424 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528064411 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562295316 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.513386737 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528189149 seconds)
  done (took 1045.431866408 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.563458342 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.558946398 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.538096314 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.545426698 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.577733378 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.656278302 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.601909714 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.559070987 seconds)
  done (took 22.03106637 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.528621738 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.533153083 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.527736098 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.533323195 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.527126505 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.99836857 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.53900532 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.529282209 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.548733804 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.525558712 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.525822736 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.515332364 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.534968775 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.530043816 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.53356546 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.536790626 seconds)
  done (took 35.405072969 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.468206284 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.644030178 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.350737009 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.542720935 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.555804743 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.530647221 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.724269853 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.539177929 seconds)
  done (took 27.793101663 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.535423735 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.536678326 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.534908192 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.53574024 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.537388233 seconds)
  done (took 9.115729818 seconds)
done (took 1331.430649961 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.53779725 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.534068999 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.537651546 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.53600452 seconds)
  done (took 7.580345786 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.515366936 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.51816834 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.515676488 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.533474637 seconds)
  done (took 10.513060053 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.223854319 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.167487883 seconds)
  done (took 5.824161908 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.045247457 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.046551974 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.059345472 seconds)
  done (took 7.582683323 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.818315224 seconds)
  done (took 3.25172545 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.454347575 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.527458625 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.228354911 seconds)
  done (took 8.639881923 seconds)
done (took 44.82441477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.53521011 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.766904097 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.677548047 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.534932134 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.713234791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.678727688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.263365344 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.522021406 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.516281077 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.54043174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.521205409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.717183172 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.312908953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.779571553 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.313771871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.779138991 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.717562919 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.526834464 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.521056713 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.527794593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.256264842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.526514977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.529010067 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.518825452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.69758033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.668293436 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.525269265 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.771695333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.54193289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.520842722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.664984494 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.525947525 seconds)
  done (took 87.648889684 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.53039892 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.520221321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.531163438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.527201206 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.520395414 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.532086422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.521491843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.518671988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.521952445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.522397175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.526727496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.533090692 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.520659875 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.516697111 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.538780389 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.519403732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.53488573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.531542402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.520671095 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.533977159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.520812729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.520132762 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.521564637 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.522331067 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.53064164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.520200961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.535194042 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.521890329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.516978061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.519636745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.519246503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.547417958 seconds)
  done (took 82.253285662 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.529000941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.523225056 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.522396557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.52264586 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.547559694 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.518201755 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.523226551 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.525605817 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.521035822 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.522985788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.522425655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.550030522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.518121007 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.520712147 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.52385915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.520326259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.522274449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.543744218 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.522672002 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.535278409 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.519643759 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.519877305 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.523885099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.522697393 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.523860978 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.53420198 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.520527514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.520122217 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.528317113 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.522374578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.52113315 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.52384262 seconds)
  done (took 82.254511033 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.812312286 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.541166836 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.544118308 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.536319126 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.540699005 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.540836007 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.533714301 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.818667955 seconds)
  done (took 16.307449319 seconds)
done (took 269.896680102 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.534318819 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.047317955 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.575696971 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.542236464 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.552124631 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.563710283 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.760968321 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.577028695 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.75948317 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.549156527 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.566448809 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.534491862 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.319482638 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.689596756 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.373100235 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.484535774 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.40259924 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.544070845 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.102517629 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.813183672 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.558643654 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.5264083 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.365270644 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.424272865 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.520393195 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.609492987 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.632282376 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.756466294 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.691288024 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.614252267 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.053155679 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.543163571 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.533946811 seconds)
  done (took 69.558087446 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.533872597 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.668882273 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.541908854 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.541260874 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.67263643 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.561047263 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.534731114 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.53996691 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.540208602 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.542049577 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.544714911 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.54132499 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.546006881 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.606428978 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.681837497 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.552192143 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.537503436 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.665541417 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.53651903 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.539076277 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.618254546 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.540841688 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.542522244 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.59599694 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.5431365 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.542257898 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.669978323 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.561972168 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.546751422 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.700532388 seconds)
  done (took 48.730237154 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.54558258 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.128927762 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.286921844 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.546975331 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.539508317 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.540665211 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.814884243 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.542719093 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.544043658 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.54302982 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.02615546 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.544435123 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.571199227 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.314242043 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.540655439 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.54267568 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.540189269 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.541530592 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.133332344 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.548140624 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.833892707 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.5430363 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.819430709 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.550219109 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.558668908 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.540071628 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.54602969 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.37324927 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.55583374 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.027405643 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.286779889 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.812254691 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.294489513 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.312848018 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.288346743 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.545615384 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.545318368 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.033053408 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.53258127 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.54062604 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.817796047 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.533544963 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.295840189 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.248176357 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.560328754 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.545267856 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.390966437 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.041588744 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.7736557 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.5427834 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.319627929 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.546052868 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.54872896 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.544985736 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.775865968 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.539593064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.539051255 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.409812151 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.558136482 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.82000604 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.54517592 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.542325138 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.154715916 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.539342638 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.139628914 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.542348045 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.550503096 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.56015738 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.303111758 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.543955889 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.269842244 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.559250203 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.547004078 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.034939951 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.142556672 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.453672868 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.535416487 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.143769725 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.328090967 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.831829639 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.549311867 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.349868593 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.837896596 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.545801162 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.548930384 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.547050279 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.548395522 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.622964135 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.81743661 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.197250026 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.26014082 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.433127572 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.843501161 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.552089435 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.543535527 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.417890028 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.567603571 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.548020163 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.297252912 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.266058468 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.561823819 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.55386045 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.276962434 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.563049374 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.822389088 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.550724283 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.307612608 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.545282698 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.624191711 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.550268679 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.552761188 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.566165878 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.821502556 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.54587602 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.549173573 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.250474036 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.0654513 seconds)
  done (took 212.944128122 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.553548418 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.531899426 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.553693873 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.530157202 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.539895508 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.543797197 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.537240045 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.538647023 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.545133645 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.538234404 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.535780665 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.545122246 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.546583586 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.540735665 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.546688064 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.536064387 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.538662029 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.544485389 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.535789133 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.540002552 seconds)
  done (took 48.26551274 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.553821568 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.085196086 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.051907633 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.550355263 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.550678091 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.546725416 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.601090969 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.547508385 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.553987427 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.844136815 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.708481704 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.556081075 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.552554093 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.551692341 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.059693114 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.545872956 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.837391244 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.083833675 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.543516353 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.089646831 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.534703036 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.550763704 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.546492322 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.088573946 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.840211076 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.817037234 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.60409376 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.091560991 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.547429316 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.54877999 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.092793152 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.54677637 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.550119109 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.091970987 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.562609562 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.566154217 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.551342214 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.60526812 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.604822463 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.83331366 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.532435372 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.825659312 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.557081013 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.727347512 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.54716525 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.538767792 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.10089577 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.562918198 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.543440014 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.554317361 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.555915058 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.070097528 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.557581116 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.07289099 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.561592784 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.553595152 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.092607271 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.068485603 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.073387845 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.70430114 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.550911803 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.827751455 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.547093364 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.096574926 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.563009694 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.552619974 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.553758281 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.713949521 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.105014253 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.819962038 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.833128502 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.835903938 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.545900642 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.611998807 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.569639204 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.543276582 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.605391878 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.962090891 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.835937621 seconds)
  done (took 139.512867302 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.822219786 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.659161194 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.943175807 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.149110264 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.55137532 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.685805574 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.65861662 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.805126013 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.553364647 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.628364933 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.175948659 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.656794779 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.29405522 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.636384245 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.649806544 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.695662179 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.933663452 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.524932804 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.276232001 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.15109641 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.548773327 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.652482877 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.118724279 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.766125258 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.55848971 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.144433081 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.49616462 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.211892516 seconds)
  done (took 58.399351915 seconds)
done (took 578.845353485 seconds)
SAVING RESULT...
DONE!
