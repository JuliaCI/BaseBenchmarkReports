cset: moving following pidspec: 21733
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.852052786 seconds)
loading group "string"... done (took 0.560481037 seconds)
loading group "linalg"... done (took 8.867455204 seconds)
loading group "parallel"... done (took 0.187460073 seconds)
loading group "find"... done (took 1.338494055 seconds)
loading group "tuple"... done (took 2.129394605 seconds)
loading group "dates"... done (took 1.343134852 seconds)
loading group "micro"... done (took 0.214493436 seconds)
loading group "io"... done (took 0.60351143 seconds)
loading group "scalar"... done (took 42.327936433 seconds)
loading group "sparse"... done (took 13.220765559 seconds)
loading group "broadcast"... done (took 1.087227775 seconds)
loading group "union"... done (took 11.734267734 seconds)
loading group "simd"... done (took 2.49842452 seconds)
loading group "random"... done (took 10.0156744 seconds)
loading group "problem"... done (took 1832.639448088 seconds)
loading group "array"... done (took 25.101758659 seconds)
loading group "misc"... done (took 1.126876117 seconds)
loading group "sort"... done (took 3.626064637 seconds)
loading group "collection"... done (took 18.500641335 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.750125845 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146273528 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.21053944 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.365079331 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.239370408 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166966946 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.17405759 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.576963687 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.011639732 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.283012408 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155654244 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.576580522 seconds)
done (took 6.363256785 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.269781826 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.394774808 seconds)
    (2/2) benchmarking "String"...
    done (took 0.181130575 seconds)
  done (took 1.201789545 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.080588739 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.184329802 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.117007497 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.115216162 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.100364133 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115694795 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.11369851 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.115047083 seconds)
  done (took 1.492641551 seconds)
done (took 3.684088733 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.540466969 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.882510565 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.520966558 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.175627143 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.20537853 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.180388891 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.321593937 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.167564538 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.133848432 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.113402086 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.201640599 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.364022004 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.493065408 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.989017127 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.107399167 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.120243172 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.104010119 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692637167 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.086594844 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.142159616 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.581586957 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119641292 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121837529 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142233779 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.207083899 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.122063213 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.174188135 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108104137 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.682533145 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105539834 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.234174626 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.088662375 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.181533194 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.25174438 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.085409546 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113316548 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.68159216 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187562851 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.121380566 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.117604238 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665809864 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084655118 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.241822502 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109975589 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.113560059 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187789459 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.125770573 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.100634825 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090652846 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103655177 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168040582 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.476100752 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109249692 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.183289726 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.096770219 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.699449043 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099649728 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.159688551 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.146277073 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.114112657 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096773776 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.100504789 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.175042555 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.115793597 seconds)
  done (took 20.268882523 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.162722551 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165720672 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097118793 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157613986 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142494149 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085900026 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102164991 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080179063 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128325872 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.204297613 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.124566245 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.184659529 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077806684 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.107212152 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.144943371 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.254097378 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.125434866 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125625594 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090501852 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.110896162 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.145168262 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113539577 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.096442011 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.113322041 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174924397 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223635155 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114277919 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12685718 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.105010874 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.118305039 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144562394 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.167729002 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.078714242 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.103243142 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.187542664 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123997147 seconds)
  done (took 5.461620548 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.185178507 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.238230896 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121092656 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.233662353 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178675815 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148648811 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164821759 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157707194 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.294652037 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.231438966 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.190239341 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135138993 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114909915 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098451287 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083996429 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098895811 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.644564245 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183527777 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.153189089 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.149201329 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123282115 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085727572 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.386802785 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104860175 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099824171 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090205211 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.098313169 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.217950424 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089552031 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.334544623 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103522412 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1119111 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13695792 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212532318 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.119819648 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143119293 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107540023 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102825127 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.219908133 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114603311 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098319369 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113511917 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139363099 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134334801 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104344835 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.113915463 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.244031159 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086255995 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12434921 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.1201957 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.218595356 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.139669851 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.085416119 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.374418763 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103019114 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107544729 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.100970256 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.31378155 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.141572828 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085590456 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.099003565 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105204105 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.082393528 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.441799432 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111011216 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.130670254 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084657402 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.176229071 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102707345 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093654367 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106179049 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104969724 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104556048 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.100753319 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081275479 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.100488235 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099537671 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08764856 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.125292106 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103672188 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098931767 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087010243 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164733237 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.122726194 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.102759947 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130330136 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10347492 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.099775506 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131345252 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08536765 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104697354 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172364497 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108042577 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084556134 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.125947483 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10406472 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.149427566 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100080274 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.2253079 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.100826125 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128265074 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10464623 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116791296 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.122802138 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102267235 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104286541 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082717427 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.101858402 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162521578 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087819539 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101657723 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087623076 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.103206053 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.115028265 seconds)
  done (took 24.909111928 seconds)
done (took 51.26817953 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.494748383 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.125366397 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.123396423 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.123771735 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.123174835 seconds)
  done (took 1.713282665 seconds)
done (took 2.406293399 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.367808898 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192844907 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.125691346 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185859286 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109794399 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.212468278 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177563073 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.123764376 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.226381648 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.089719789 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.19933656 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08873184 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.109297661 seconds)
  done (took 2.931850612 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.107520306 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.129635512 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090531176 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122134647 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.101315187 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103724991 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116855242 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.135626025 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101545195 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111328687 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100107621 seconds)
  done (took 1.910321149 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102132938 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12432129 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089867593 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116631966 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.100220854 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099176296 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116315926 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124474199 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099574494 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113044947 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084110998 seconds)
  done (took 1.859143153 seconds)
done (took 7.385179298 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.114819197 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.48370076 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.14960147 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.213505926 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.385265413 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.242153187 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.581653121 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.162805731 seconds)
  done (took 12.215245468 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.135636289 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091559256 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.10696362 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09172674 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.107535015 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.14469679 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106540307 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091349931 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105323923 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10543961 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090926923 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.1040019 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092232361 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106683705 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10506574 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091833224 seconds)
  done (took 2.437206019 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139508437 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138436448 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096055071 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.116991748 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.110546037 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.095817416 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.1144477 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.110709929 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.108479038 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.095091457 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.11625825 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115556518 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099939851 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.108928094 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.11296739 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118115554 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095030983 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.11375007 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11261091 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099641488 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.117157424 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.110454962 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114274348 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100365089 seconds)
  done (took 3.447710532 seconds)
done (took 18.792545482 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.179303848 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106874809 seconds)
  done (took 0.987924984 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.156665513 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.157742074 seconds)
  done (took 1.022043826 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.119622632 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.103427449 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142230761 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.121328618 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.105198282 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.090143494 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.137941554 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105400582 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.10519187 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090160877 seconds)
  done (took 1.828566347 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096546043 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108552559 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.115350611 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.150185754 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115881666 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094502301 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.111246583 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.108147322 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095869212 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.106132063 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112513979 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112452001 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.11196941 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12912436 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10965526 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.114469442 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103084087 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.111508438 seconds)
  done (took 2.717317905 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093323718 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.10753196 seconds)
  done (took 0.905421809 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097412456 seconds)
    (2/7) benchmarking "second"...
    done (took 0.107286816 seconds)
    (3/7) benchmarking "month"...
    done (took 0.109041768 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095858662 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.105875573 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.105516864 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091436392 seconds)
  done (took 1.420009305 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.535624183 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.278031136 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.372034797 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.12664212 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14408947 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.387636898 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.145225205 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.120988413 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.120678144 seconds)
  done (took 2.981108814 seconds)
done (took 12.56993812 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.098592527 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.244152426 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.580603508 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130301296 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.106344808 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.149269685 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.312509125 seconds)
done (took 2.337181287 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.376254146 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.161766241 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083939254 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.1051392 seconds)
  done (took 1.43761592 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08775708 seconds)
    (2/2) benchmarking "read"...
    done (took 0.112629174 seconds)
  done (took 0.915192645 seconds)
done (took 3.07753868 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090271329 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.102079659 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.088299387 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.102873841 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.087994943 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.103313178 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086837983 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102933801 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.134759508 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.103840015 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.087707215 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103240981 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088193375 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104154415 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087063096 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103282289 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.102603636 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088392684 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.102931552 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088998291 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102939821 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087832385 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.103497035 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.102250576 seconds)
  done (took 3.110526273 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111173691 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.107386441 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110013154 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093795816 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.11153101 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108884169 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.108959298 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091305818 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108858223 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.105222684 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09486136 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110046499 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.105902366 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095886146 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106469019 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109753058 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094840859 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.1067413 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105674418 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096119717 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.109393822 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105986541 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095248833 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110263104 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11007146 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094321328 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.107361696 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106917933 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093745652 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.110905561 seconds)
  done (took 3.845162313 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100208819 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.10061331 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087053702 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112972585 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.101079363 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090515976 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10033407 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.087011009 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.102051399 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085587837 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.103945922 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.100645431 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.08596707 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.102489517 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.086925745 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.108509035 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120097636 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08670846 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.101746098 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.086602917 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107662863 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.101704838 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089262768 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.101466719 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.086609807 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.101545865 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086319837 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.101572318 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.101310556 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086467464 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.107098751 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09256931 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.101987152 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.114864984 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093731087 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.10247913 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.110503838 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.086910849 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.102197611 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086274139 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.101635304 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.086364123 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.101985585 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.112951562 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.090683126 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102737947 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087773616 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.103975751 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.102680005 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090693963 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.101595962 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.086988926 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.104983362 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088481518 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108663888 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.101982741 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088572148 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.103158838 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.088153632 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.106108996 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.101183682 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.087147522 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.109124935 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.087448901 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.126849189 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113394171 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086884503 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.104917025 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106716212 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095152929 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.104589348 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.121679554 seconds)
  done (took 7.846922122 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094178836 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116204962 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091968167 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108024414 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103344874 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0874492 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11146468 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10267833 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092695364 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122070578 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.220885919 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091967175 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107238332 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091557486 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104440785 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.106583384 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09794304 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103780262 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.102931979 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091730287 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10406845 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115374162 seconds)
  done (took 3.101149582 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.258152711 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098060534 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154407105 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121813712 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.126743268 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121129118 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094872851 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112377498 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110420744 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116022606 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101563533 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110669877 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.127094084 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116297046 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101383143 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120057903 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111486598 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11859749 seconds)
  done (took 2.952309171 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.109401727 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.108984834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.131041857 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093582282 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.110357041 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109374534 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100020277 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.124529218 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109312639 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093573579 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.117753874 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10915477 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.092969837 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109933315 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110042116 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094091797 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.109072576 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10886186 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102170881 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116927007 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116937511 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118312988 seconds)
  done (took 3.133286131 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110797377 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109743948 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.14330424 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096506566 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.106149832 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104208074 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098883212 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.110883103 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116366169 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092944702 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11030344 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.104772111 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.100602748 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109086091 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.114758665 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094437873 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109696029 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109862338 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09265423 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.104686575 seconds)
  done (took 2.88000317 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.184489669 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123293456 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107523522 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1338017 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122726953 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107356307 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134830389 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123174975 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1225718 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137801762 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106805935 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122626693 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134664569 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130035922 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107046302 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134359711 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135283173 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134410989 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.123305256 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10738816 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137368951 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123896332 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135939754 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107059254 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12449956 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1234949 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10774647 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130997288 seconds)
  done (took 4.26813466 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092551192 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10604307 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091259828 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107003493 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091498704 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.107148899 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0903626 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107246879 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106214293 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090971292 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107484201 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091120322 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106448378 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090005153 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107932806 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.105935688 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091345462 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106859215 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091440407 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106796269 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090031522 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1074935 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.10622686 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091812019 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106487573 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.090684303 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107936755 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091220584 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10700578 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106910793 seconds)
  done (took 3.751418047 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10611238 seconds)
    (2/2) benchmarking "in"...
    done (took 0.134753807 seconds)
  done (took 0.984353706 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.095242878 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127829467 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087839542 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114417686 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.118120617 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091223703 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117892255 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117945798 seconds)
  done (took 1.62233713 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.163036733 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.164281986 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.099562264 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.123831369 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.155498092 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149024395 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170710449 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.114105473 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112764847 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08885841 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.150954789 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.105695457 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.116117814 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093787762 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.114204281 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120473355 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.089470064 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.120199442 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.115933355 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094119989 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114125014 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121383073 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099761422 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119534827 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.108022867 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10045396 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.120436627 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.121227106 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093795095 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.117002539 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113244872 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.088714891 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.11423753 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.114660192 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090283842 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.155187154 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12350438 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110092751 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097465689 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115538895 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119027698 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.090391779 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.117005064 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.112795466 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101236845 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114712782 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114159516 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.090718341 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.106916458 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.09224243 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.109032577 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108663046 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089996058 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116022538 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.115269107 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106905707 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.112604741 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.11109597 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.093302821 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10965897 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.113063791 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.093211174 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116994652 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.113908469 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098468189 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.116418884 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115049497 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090308805 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.106893648 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.090094959 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.116835498 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.131048891 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11814868 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.098510335 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116741635 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.091134879 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112427638 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116203862 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096575079 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.118454558 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.116265169 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100291495 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117136996 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111167061 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.092517304 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.117719168 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112432186 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096970791 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10734614 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127203713 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09584681 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.109092886 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106951357 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.100786553 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.111338196 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097124485 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.107543618 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115592538 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089015054 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116127614 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116202115 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10437088 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.119159313 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116082958 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098463162 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.115533948 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.149740294 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.1123141 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092569828 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.108478672 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116484623 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.092047119 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.115687603 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090170363 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112318801 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.110491268 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09804181 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.118196799 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.112610289 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098376686 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118451968 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.118409532 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095097195 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.107858331 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09342514 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.114944407 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120566532 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.119352026 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09635608 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.108350951 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091089814 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.115597343 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115335539 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09536327 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117065166 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111892265 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090483379 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.109436767 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0983875 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.118185936 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.110999862 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.096569972 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.117559401 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.114624254 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095965745 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11684597 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110373923 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.090017763 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.11850995 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.112960386 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091143849 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122300461 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.111885049 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096602033 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.11265581 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120384311 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.094692742 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.117777167 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114315634 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09927001 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118388593 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090158068 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113705159 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.113287413 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.103240929 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.112420114 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.109975534 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.090890829 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.118493558 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.090611088 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.116504395 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.107314208 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09462504 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.118304959 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.109829914 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097376657 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.111548334 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110558761 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.125597664 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119136672 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.116530693 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.102105912 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.117072057 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09748548 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.117389177 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118742305 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099572227 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.117044607 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.115318462 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099194048 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.112477709 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.110991425 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09667291 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120557269 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.090350924 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.110908971 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.10887013 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098790029 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.121243461 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.117124398 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099263705 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115025701 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114993443 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103808382 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.113458183 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098077639 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.109080291 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.117665016 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10465084 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118838961 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119075382 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.102147729 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114843305 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.111455707 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103603983 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115241428 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116509042 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092352973 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.109261521 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.091610581 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.119683144 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.115112543 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.09324027 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.109074935 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100044563 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119912351 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.115028312 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090295555 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.11729324 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123950148 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.093275491 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11820902 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.113842602 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.098214377 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127575037 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.109910686 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103362407 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.121840389 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.119115285 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090513511 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.116800301 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115438359 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094178901 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11647856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096452637 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115161226 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121132655 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096305798 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.109187803 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.113140496 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096517954 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.109588058 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09339806 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.119212537 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.114640026 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095682495 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124135302 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121568494 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10028602 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116767247 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118412505 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10059831 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.119852614 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114902754 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100942206 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.11287758 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090821143 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.113508943 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.110757969 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.093745051 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.113243139 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.118546191 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.097115281 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117359098 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117385346 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100649028 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.116055206 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.119409534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.133236402 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.092713184 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.111378441 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097344599 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116949781 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.115511487 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.094980426 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.112376265 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121456172 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099014617 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.122588394 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.113765491 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.092417526 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.121048775 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.094857485 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.120553773 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.121588501 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101539089 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.113450305 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.118792279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.095445163 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125801191 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.111881688 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.103451649 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117419967 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117040317 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.096033532 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.115900093 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.113375072 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.091994681 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.115592969 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101386252 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.115784538 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.118528679 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.098217015 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.116239597 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.114823677 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094278078 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.121045147 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.116170261 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10102964 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113278003 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.092704055 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.112315414 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119335815 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100189345 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.120902437 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.113544411 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09880284 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122268703 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098444498 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.111747742 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.123644071 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10323457 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.120351004 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124144951 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.09196496 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.116272013 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126199793 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092510007 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.117964712 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.093692341 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.112907154 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.121861008 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101695381 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.122291524 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.116461092 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.092287771 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.112959746 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.122627791 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099252715 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.11212282 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094651824 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119822087 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.11339934 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099000478 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.12093741 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09905157 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.122346881 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120052354 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098990297 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.116710507 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.120529383 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.093966652 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.113747147 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.110863595 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.096524731 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.121873477 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.093095615 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.113438986 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120090689 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097131136 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.117332715 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099764865 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.114429092 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.123491399 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099767745 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.116938572 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126867788 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093964052 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.117244954 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.119235266 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100359818 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.111559509 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.098309608 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.118353158 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122806831 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.101826715 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.119665306 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119150939 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100604597 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.114894529 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.120613473 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100570891 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.121781433 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.092166409 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.122313703 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.122607021 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094796201 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.118343729 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.117067397 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.094920114 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.118408182 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.120955395 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.097186647 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124218516 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120415243 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.097525677 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.120657879 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09990996 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118860524 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122375483 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.095277839 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.121692365 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.111993093 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.104892959 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.121367471 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.122259952 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.096933577 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.113312445 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119638187 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100384153 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119248109 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.102834703 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.122030038 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.113281445 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.093287585 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.114014606 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.116551519 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106527467 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.124033668 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.116760697 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099379061 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.114896492 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094150941 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123158704 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.113384692 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.096021247 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.119579429 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121006691 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.097814585 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.115167822 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.118509716 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.103190529 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.121741397 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.120418503 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.094950928 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.119577557 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.122287829 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.098464434 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.115195012 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.097209393 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123168926 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.119348864 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.097066102 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.112663403 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126259839 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.1032462 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124129785 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.116245349 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101199185 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.117809979 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.116169713 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10313743 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.118144267 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120445803 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.098579389 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121304411 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128024552 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.094080681 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.117053313 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.128808699 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101878141 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.123347103 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095069591 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.118877349 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123450417 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103597069 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.116378494 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.113316733 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.095623354 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.11846544 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.093335008 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.115840456 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128186007 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.103267887 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.118721328 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119461705 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10013539 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.11507934 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.114118394 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.095093213 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122766908 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.097306831 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.125948017 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.113437185 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093753998 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.115650128 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120377917 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099369135 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.12022247 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094200123 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.116728005 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.113962584 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.099900552 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.124936131 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120129017 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102319189 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119532088 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.118116668 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09732856 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127781384 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09412194 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.120375057 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.130745993 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.1028909 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121326031 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.121145223 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.12521176 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103959655 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.115957941 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103746442 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.119193212 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.119526516 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103659614 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.123242493 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.134256898 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099269189 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.115246142 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120638645 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.098771147 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.115104504 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.125740838 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105871909 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.124180921 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.121037883 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.097614511 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125410473 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.125139177 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102081052 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.119128384 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.119050886 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101837792 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.118021095 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100396079 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.117274176 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.124479613 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103848454 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122358897 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124458196 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.095143726 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.129518157 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.125075521 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105012842 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.114822059 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.094580875 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.115477438 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.116332332 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104818577 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.116394558 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100800104 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.121510401 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.120438282 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101581009 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120780112 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.118656162 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105325495 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.122611158 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094546763 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.123341041 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.118816584 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101738139 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.115594524 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.122197826 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105106507 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.123821359 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126972303 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103805763 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.118836493 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.117334105 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102203178 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.116900182 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.102375607 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.121487935 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.117227961 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.094698993 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122236094 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122893541 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101553874 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.124297262 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105175283 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.119754507 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.123130479 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105626792 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.116572976 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.115879562 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.102920581 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.117152096 seconds)
  done (took 66.94489729 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.179182467 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103627758 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11747996 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096065439 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163680759 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098656197 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116866422 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09821867 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118491075 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.131439005 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096814932 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117227605 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.139727116 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146068474 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.143370277 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.132898078 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097212924 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119358195 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117050961 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099182381 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.139097834 seconds)
  done (took 3.397061047 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.12643968 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.137646409 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.135517793 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.138397119 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.129446974 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.134818608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114281591 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.133004023 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.138055929 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131428119 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.138647973 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.133848502 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.110881236 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.131029084 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132110472 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130730842 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.137818899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10953988 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.134846703 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.135284678 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.130918486 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.135131365 seconds)
  done (took 3.705325368 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.113227533 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.122579627 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.104575985 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119856181 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.122548041 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099834152 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.129195341 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099004199 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.128510723 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.119935883 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.096849123 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.120069614 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.124404363 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.100144483 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.118690456 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099934075 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128318698 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.123952342 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105622959 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.119948927 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.141729611 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099873677 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.121576793 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.117100125 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.112799178 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.125882809 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.102838135 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.124514018 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.11723306 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104027877 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119923382 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.100824552 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.124518353 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.116656436 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.096703964 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.124156766 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123095022 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.10008137 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.119519277 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.102320785 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.122324127 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125270586 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106021908 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120594777 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119172149 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.102009031 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.124552108 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099261585 seconds)
  done (took 6.341139491 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.166439859 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.173250997 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.134101222 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.164545742 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.140757143 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114482693 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.126179066 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.163028467 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.128120368 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.110302044 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.145540511 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.142652822 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.132500089 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.132889263 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107988524 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128393355 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.129154246 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107645129 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.137483889 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.130599812 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.13685621 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108386731 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.144892535 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.143202119 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.129369473 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.126733212 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106153271 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.132559408 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.142206816 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.139308428 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113713578 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.13404855 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.144892893 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.132553185 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125942976 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10829918 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.142781411 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.130717797 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130555842 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.109475201 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.131337523 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.130243451 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113021063 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.145695532 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.128571783 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.129141016 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107569365 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.127750522 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.143617507 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.132798413 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.118081218 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.142853518 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.135834248 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.131532688 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.131310968 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120600151 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.129633638 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.128618922 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111022123 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.145187911 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.13294262 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.130314993 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.146841563 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110202399 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.135428233 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.142351082 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.130249796 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.132956362 seconds)
  done (took 9.910335997 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117663118 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.150604113 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.142869312 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142694518 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130054659 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109957196 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.131516693 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.130823384 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110715109 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.138114427 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131579984 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.235103199 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.105619813 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.139975269 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.131291915 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.110544874 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132286923 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131167841 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131601793 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110867688 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.131188043 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.143264378 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.131402566 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.143101029 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145604665 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104533979 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.132030246 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.131155842 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.143478359 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111589831 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144764791 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.132292268 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131431907 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.143481483 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.144414784 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.110945978 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121576734 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131855653 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110704158 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.132823906 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125096047 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.143764792 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111358638 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.12751406 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132297298 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131875186 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122715324 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.146734107 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.139613378 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.139294115 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.132167883 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.143677732 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110498423 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.134095626 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.144477708 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.152566385 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.143519088 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.143927215 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132735186 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.144547586 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.14378969 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.153153162 seconds)
  done (took 9.130110414 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106618313 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.122287585 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10194969 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.123750632 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102563323 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.125363845 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101366376 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.124946972 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.123290473 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101895495 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123142577 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102003877 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123868023 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101695655 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.12585685 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123143248 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10258628 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.12302767 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101755225 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.12381826 seconds)
  done (took 3.135372531 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.119484523 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.14540558 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.127138745 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112924197 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.128912622 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.133414001 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104893141 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127437226 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12804769 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105547066 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.13844751 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.137113928 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126724974 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112856862 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.138206956 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.134191466 seconds)
  done (took 2.871935225 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.131624488 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.139075796 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.178434721 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.13133584 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125682188 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.113237514 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.12642055 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.122462695 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101540789 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.132610345 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.131341046 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.114414659 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.124545458 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100265775 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.129104119 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.130713589 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101476666 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.132052799 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.125668021 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.181534465 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.11022886 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.132543187 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127178803 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104272077 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.13089029 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.133245639 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.135555467 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.104624894 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123934179 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102617761 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.131600172 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.135308236 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101381171 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.134390453 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122486206 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103049696 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.124736482 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.126424601 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109959814 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.124211755 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.1228741 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.108103524 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.12495623 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104890485 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.124770314 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124575801 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.102096293 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.133401827 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.129249646 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108930829 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.12469004 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.13271297 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111194999 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.137747884 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.135740678 seconds)
  done (took 7.674543468 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.122537907 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129474261 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132607946 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10046222 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.128859499 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113868961 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.130155192 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.132028225 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107865275 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122963674 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.130495418 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107744871 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.129722778 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130490162 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109043637 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.129521986 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122876799 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108090064 seconds)
  done (took 3.051695725 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11776839 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.127908814 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110411779 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.129517003 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.127296468 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106057694 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123682614 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100884918 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125958885 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126526951 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106297633 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.12857801 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123223896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.106492168 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127490817 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106615075 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.128439843 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123735911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107950665 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124146693 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105785554 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124405746 seconds)
  done (took 3.478569148 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.125330569 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.180446572 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.139538192 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189203133 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.128742411 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.126723842 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.136905953 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.105333968 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.144797731 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.125021168 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.103497292 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.126273735 seconds)
  done (took 2.501302274 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.139786591 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.165814536 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126904045 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106006705 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141445676 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133430643 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133330847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112184953 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144565015 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146233492 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133145888 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.142771968 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144367689 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145185413 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117167377 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139384303 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132569629 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133585446 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107873397 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15600056 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13310244 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143386508 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134237429 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112326639 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135038192 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145368218 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143754776 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148587018 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133891201 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12193131 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141240906 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132928099 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142877046 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148261318 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106488479 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145079748 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134453616 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15353253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139455679 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1456104 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107521248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139783234 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144415317 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14132881 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144653665 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111871476 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14146656 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134494323 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135018196 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.161547584 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138715694 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146120529 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117591578 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145114874 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143344114 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.160308732 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148597797 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146748329 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139485257 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.148460439 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.145101326 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139512398 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145988412 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126872538 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140029847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149261187 seconds)
  done (took 9.958093378 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174810319 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105243104 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13423485 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150342909 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146140635 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1125629 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135228697 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133814769 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133471289 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108498412 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.179120988 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134991676 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146075006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146201123 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133729876 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112494707 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135689747 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14563796 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130899073 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.160773767 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133944403 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12335368 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146344331 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145969887 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147690822 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138814471 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13518188 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112552736 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13535152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134037493 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141674754 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112520667 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146888213 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127535126 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145114132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134401961 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112992743 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141766931 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134787951 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140424148 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146983113 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154441644 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112869614 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135331929 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148429921 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135572961 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112855384 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132519817 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135168511 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108828758 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148873965 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150111103 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150714066 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147166294 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135383478 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135049422 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112831803 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135746974 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135175465 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14062217 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146308615 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113338294 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16097713 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137285664 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134710609 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146659277 seconds)
  done (took 9.887045998 seconds)
done (took 180.198101954 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.172424909 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189002804 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.165683552 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164405067 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.125505506 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.158923664 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134259953 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.164291284 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.124610645 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.12393913 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101012973 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.128155051 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167335658 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.12427747 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.123712158 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.104985343 seconds)
  done (took 3.1553131 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.22669609 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310885616 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.14606077 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.130373442 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108175541 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.128301334 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.128764984 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108133924 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.12614392 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.138079187 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104724714 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.127295956 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.137580075 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104583841 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.125679481 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.125792044 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11550416 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.125972234 seconds)
  done (took 3.409673 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.13177052 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.173653819 seconds)
  done (took 1.195365674 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.143728156 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.229579213 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303918983 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.18273963 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.155017671 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.148896752 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.18311201 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.145627929 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.214694002 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.147508857 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.146339476 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.131780534 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13393589 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.136569266 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.141749201 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.108309259 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.158985391 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.140585521 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.13966987 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.110392743 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.15426038 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.132734957 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.136806469 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.117815504 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.226580892 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124469602 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.133865309 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.132964578 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.133251808 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117949288 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.137710196 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.148029944 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.146063871 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.190983321 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.138295818 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.208611261 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117162123 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.131612848 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.140168391 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.108030084 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.135718683 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.134839788 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.147483835 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.108078074 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.133810061 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.139718539 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.133034919 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.109481007 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.139578062 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.141966242 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.139882141 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114804186 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.210773661 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.141346011 seconds)
  done (took 8.898791406 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.917395222 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150150603 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133141296 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.024897097 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163055301 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147159172 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.882520221 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.154786521 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.264414734 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.896514239 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.149847493 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.144173613 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262827782 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.279234893 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.20998117 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.373709589 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.74131539 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.145328723 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161207053 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.177946017 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137199995 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160425213 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149216648 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.462476773 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.13105276 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107823646 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135623545 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.142217832 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.186723966 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.130082192 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110375774 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.233217621 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.315629011 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212355824 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132104935 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.128830309 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106175707 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.218491591 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299092505 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.248715853 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.197374328 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126204249 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106266537 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143175337 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.151008215 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.125700672 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.191117074 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.222420653 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.201485804 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.134034204 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.14315803 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116154044 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140866071 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.211458925 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10481432 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.375133582 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.398252629 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106426821 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138561109 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.148941636 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.296393605 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129215874 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261297056 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.157249051 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.244162174 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106803942 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.818032886 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.217760195 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106238951 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.139698891 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.138133087 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135773701 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119134546 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.214597526 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406575017 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144899575 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111232759 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.129334653 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.28015759 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107651249 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.129942372 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.19089995 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131805238 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1387618 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145863171 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121402 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.220292692 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278162538 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145560626 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139395644 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.134707918 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119820865 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.132858483 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.263858221 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.252983425 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.187264096 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.264988288 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120248657 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.215717237 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193062453 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.142736121 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.220763723 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.137730453 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126070995 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143086696 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.249591752 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.166657689 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.131523136 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.135630882 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114018732 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.193481629 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110625225 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138705384 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.196388164 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.518776435 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.216378866 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.106940108 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.134994899 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138570121 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191035293 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138927857 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.295379326 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139891223 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.196859996 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.138020943 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.104840103 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.140061888 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.214132919 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121746067 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.140227098 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143374348 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138662145 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.27906449 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.25371066 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.145997459 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271518955 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.210027067 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.140930901 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201273202 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139885445 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.220118077 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116717017 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142693484 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132231714 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814291164 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145245803 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.137848183 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112789238 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.222315901 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130463439 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.132111772 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107355843 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128097027 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838369637 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110378863 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.128637365 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.131541964 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118796021 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.139174372 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13720963 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112355578 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.213695979 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266180195 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.143285304 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.139217419 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10721064 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.211793555 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109392202 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.131914097 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.131451512 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108993315 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.141121268 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.135799134 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10932974 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.225171389 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.186220846 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.255442561 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.584136902 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.131603556 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.130187179 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266779352 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107496681 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.343043276 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139354396 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.261236844 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.217846375 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104657767 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.396254357 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.198328384 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.2245358 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.134523096 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199216012 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.129410017 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138225182 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.189527628 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.131450572 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138217871 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.188633188 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.148817359 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.145240524 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.198859498 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107244842 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.280370229 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.128216812 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.199387933 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133316025 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119597489 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.36775355 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10735716 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.152856689 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.212520638 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113226052 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.13265275 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.712012801 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108472871 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143590432 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.141891597 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.258138202 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.19313662 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140155618 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139652644 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.145108409 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190137494 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.26364095 seconds)
  done (took 50.594040906 seconds)
done (took 68.141566672 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.32385943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.287470364 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.350563759 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244758597 seconds)
  done (took 2.221221402 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239906772 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.176317016 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.229107171 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106704628 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.238026915 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.106393633 seconds)
  done (took 2.025061676 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.523931482 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.433914792 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.374773553 seconds)
  done (took 2.268612572 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27701916 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.281036682 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389478881 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.489110843 seconds)
  done (took 2.505736261 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.261190033 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.152663193 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.15004678 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.199116237 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.255667385 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207101416 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.169929142 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180633683 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.157290185 seconds)
  done (took 2.723508342 seconds)
done (took 12.678499998 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.36879733 seconds)
    (2/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.174827903 seconds)
    (3/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.347165194 seconds)
    (4/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116612977 seconds)
    (5/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.22635235 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.288142442 seconds)
    (7/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.181799799 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.179796002 seconds)
    (9/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.277424535 seconds)
    (10/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.157907621 seconds)
    (11/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.190582837 seconds)
    (12/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.18161316 seconds)
    (13/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.315500441 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.142021594 seconds)
    (15/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.208776352 seconds)
    (16/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.270078011 seconds)
    (17/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.276995344 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.243349046 seconds)
    (19/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.127607668 seconds)
    (20/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.12619338 seconds)
    (21/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116427916 seconds)
    (22/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.327963019 seconds)
    (23/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.16430892 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.168322798 seconds)
    (25/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140464607 seconds)
    (26/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.150843081 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.165573267 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.168206235 seconds)
    (29/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.232306219 seconds)
    (30/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.198852263 seconds)
    (31/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.267355594 seconds)
    (32/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.228983168 seconds)
    (33/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.235723651 seconds)
    (34/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.149904847 seconds)
    (35/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.230232365 seconds)
    (36/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.229568236 seconds)
    (37/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.172955123 seconds)
    (38/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.1213162 seconds)
    (39/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.278113674 seconds)
    (40/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.155155801 seconds)
    (41/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.183279324 seconds)
    (42/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.232843269 seconds)
    (43/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.181996969 seconds)
    (44/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.225485292 seconds)
    (45/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.233774907 seconds)
    (46/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.224222871 seconds)
    (47/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.127654558 seconds)
    (48/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.141579943 seconds)
    (49/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.136652163 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.112939067 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.155824319 seconds)
    (52/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.266738366 seconds)
    (53/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.185367017 seconds)
    (54/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138879698 seconds)
    (55/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.128900099 seconds)
    (56/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.140507345 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139465178 seconds)
    (58/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.469545825 seconds)
    (59/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.217456936 seconds)
    (60/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162697071 seconds)
    (61/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.184645059 seconds)
    (62/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.139051027 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.138096576 seconds)
    (64/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115227717 seconds)
    (65/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.126034178 seconds)
    (66/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.236633376 seconds)
    (67/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.125147743 seconds)
    (68/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.231447388 seconds)
    (69/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.12528268 seconds)
    (70/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.114374648 seconds)
    (71/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.181810785 seconds)
    (72/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.194798798 seconds)
    (73/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180941466 seconds)
    (74/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.141584585 seconds)
    (75/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.208694801 seconds)
    (76/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131052282 seconds)
    (77/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.134528447 seconds)
    (78/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.11264133 seconds)
    (79/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.21457998 seconds)
    (80/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.24358257 seconds)
    (81/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.139373766 seconds)
    (82/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.240616144 seconds)
    (83/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.195325286 seconds)
    (84/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.211692262 seconds)
    (85/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.229389305 seconds)
    (86/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.119210138 seconds)
    (87/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.131648766 seconds)
    (88/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.119047348 seconds)
    (89/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.150966532 seconds)
    (90/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.149443554 seconds)
    (91/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.101026758 seconds)
    (92/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.141009891 seconds)
    (93/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.101253574 seconds)
    (94/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.231306197 seconds)
    (95/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.133288673 seconds)
    (96/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140049182 seconds)
    (97/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.122771152 seconds)
    (98/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.153401255 seconds)
    (99/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.125360883 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14373755 seconds)
    (101/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.125234848 seconds)
    (102/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.183292645 seconds)
    (103/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106803007 seconds)
    (104/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.131209709 seconds)
    (105/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.190229099 seconds)
    (106/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.100800247 seconds)
    (107/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.14004866 seconds)
    (108/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124526713 seconds)
    (109/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.126447569 seconds)
    (110/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.141752814 seconds)
    (111/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114249449 seconds)
    (112/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.152589573 seconds)
    (113/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.150044354 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.11429878 seconds)
    (115/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.137950883 seconds)
    (116/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.172311763 seconds)
    (117/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.118640886 seconds)
    (118/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.169975977 seconds)
    (119/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.16272411 seconds)
    (120/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.126462199 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122877739 seconds)
    (122/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.141431214 seconds)
    (123/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.216859375 seconds)
    (124/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.152176771 seconds)
    (125/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108412578 seconds)
    (126/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.142082401 seconds)
    (127/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116358988 seconds)
    (128/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.215116209 seconds)
    (129/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.126882262 seconds)
    (130/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.10202828 seconds)
    (131/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.177419017 seconds)
    (132/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.140466865 seconds)
    (133/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110722994 seconds)
    (134/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.216411985 seconds)
    (135/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.17942252 seconds)
    (136/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.150508274 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.11448112 seconds)
    (138/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.127025839 seconds)
    (139/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116122176 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.138921824 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138117213 seconds)
    (142/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.101028698 seconds)
    (143/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.137288156 seconds)
    (144/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.139101002 seconds)
    (145/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.100222559 seconds)
    (146/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.126561192 seconds)
    (147/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.101232119 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138522109 seconds)
    (149/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112672293 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.138205493 seconds)
    (151/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.125851367 seconds)
    (152/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11582949 seconds)
    (153/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.211615943 seconds)
    (154/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.138438585 seconds)
    (155/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113265475 seconds)
    (156/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.125432028 seconds)
    (157/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100586338 seconds)
    (158/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.140128677 seconds)
    (159/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.099346567 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.139264829 seconds)
    (161/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.09940336 seconds)
    (162/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.157661244 seconds)
    (163/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.138904671 seconds)
    (164/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115515076 seconds)
    (165/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.143053015 seconds)
    (166/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.101484348 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.139139826 seconds)
    (168/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.126071917 seconds)
    (169/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.188400749 seconds)
    (170/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.209414727 seconds)
    (171/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.126941457 seconds)
    (172/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.101998631 seconds)
    (173/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.127684856 seconds)
    (174/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.213198372 seconds)
    (175/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127991709 seconds)
    (176/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.153944727 seconds)
    (177/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.142790477 seconds)
    (178/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.100622034 seconds)
    (179/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.220127163 seconds)
    (180/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.158261734 seconds)
    (181/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.133015055 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.113491464 seconds)
    (183/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.141308542 seconds)
    (184/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.100417258 seconds)
    (185/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.126187845 seconds)
    (186/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.101175135 seconds)
    (187/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.125331298 seconds)
    (188/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.100925426 seconds)
    (189/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.139174501 seconds)
    (190/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.102042001 seconds)
    (191/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.133636629 seconds)
    (192/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.106812416 seconds)
    (193/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.146061096 seconds)
    (194/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.152951545 seconds)
    (195/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.101414571 seconds)
    (196/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.127039189 seconds)
    (197/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.101093557 seconds)
    (198/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.132253737 seconds)
    (199/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.100811841 seconds)
    (200/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.186172368 seconds)
    (201/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.123848823 seconds)
    (202/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.127990469 seconds)
    (203/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.150614456 seconds)
    (204/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.102118172 seconds)
    (205/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.141715473 seconds)
    (206/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.128634431 seconds)
    (207/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.128303855 seconds)
    (208/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.13291032 seconds)
    (209/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.102150703 seconds)
    (210/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.107645754 seconds)
    (211/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.12678092 seconds)
    (212/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.170323283 seconds)
    (213/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107351347 seconds)
    (214/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.137215061 seconds)
    (215/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.112940757 seconds)
    (216/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.127499345 seconds)
    (217/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.153770189 seconds)
    (218/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.101723265 seconds)
    (219/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.142006449 seconds)
    (220/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107807138 seconds)
    (221/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.126677264 seconds)
    (222/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.131587659 seconds)
    (223/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.12653327 seconds)
    (224/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.101781976 seconds)
  done (took 36.447529562 seconds)
done (took 37.390443754 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.516256107 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.150556375 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.117380932 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.144333722 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.196635936 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.147601499 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151453354 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.121623857 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.149698932 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.141030286 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.108745147 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.149487706 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.144220373 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.19867504 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.120332324 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.138219278 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.13772536 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.122760113 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.151745705 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.152839414 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.198536803 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138328997 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123529446 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.137555791 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.19941708 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13875312 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118109632 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.145829355 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.149714035 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11657885 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.144612511 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.136884397 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126597761 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152990429 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135200631 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116151731 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135340004 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108968478 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.14286523 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.143423475 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.123468441 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.144793716 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.147664603 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.111081082 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.144000442 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.142605543 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10931661 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.14883195 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.135001302 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118775641 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.138989968 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.153345541 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.115353141 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.134955816 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.135253209 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111661882 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.150644878 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135948574 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124860449 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136774043 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112682396 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137264473 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.144830793 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110396426 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.142093329 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.13802075 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116726816 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.145562704 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.159196569 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114479621 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136511962 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116011161 seconds)
done (took 11.311517449 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.121570317 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.193682096 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.197541028 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.233034006 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.139835898 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.153336109 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.157096579 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.16687349 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.154539855 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.134808311 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.172344755 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.165545775 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.204590308 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.152964868 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.153247582 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.118804754 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.153346876 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.150452933 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.208467837 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.163651634 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.171310654 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.150376668 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144693107 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.16049406 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.145021316 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.175321809 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.118910944 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.146160537 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.144162904 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.124354057 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.161899939 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.144755454 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.144358364 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137758489 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.155893832 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.150026683 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.153591241 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119774277 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.142669292 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.143119952 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130158692 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.161179678 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.143502187 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.153551932 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119300047 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150105357 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.151653978 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124942532 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.146647115 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.146401446 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.119810348 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.170998503 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.15092663 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.151611903 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.125276058 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.150647648 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.151093441 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.123398809 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.146934956 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.150018749 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.143194726 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.118693927 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.146955359 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.168369754 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.14594344 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.125648001 seconds)
  done (took 10.944218329 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.14126433 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.175167386 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.153879413 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.154545234 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.148936874 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108937061 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.135612386 seconds)
  done (took 2.036887745 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.116056785 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.203286997 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.201396834 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.230205547 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.197059536 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.210814132 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.159340981 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.110025464 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.171426924 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.149316709 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.202066627 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260515203 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.117533799 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.15458156 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.203078174 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.138321785 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.204163744 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.137456091 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121356569 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.228304689 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124010365 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.165834106 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.151554013 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.110623673 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.196487654 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.140452481 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.278460927 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125517251 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144572583 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.148646396 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122885109 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.242233875 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.19833846 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124377443 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144613663 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.199018045 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.197484606 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.150206824 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.212093552 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.143104005 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.198270187 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.149074866 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122700653 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.151267423 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.148766791 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.184811884 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.153665043 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123506179 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.149161109 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.205079861 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.150638646 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.198968113 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.146915809 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121613092 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.149717588 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.150876843 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12877143 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.1497789 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.204379537 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.152714105 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.19739137 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19798983 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.197613792 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.197403332 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.160048119 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.19878519 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.196557828 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.149361173 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146460522 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121638378 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.22699394 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.120784065 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.150490888 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.187342159 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151388086 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.199997607 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.198343259 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147493479 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123003352 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.14437188 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.148001813 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111108916 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.18542121 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.150305384 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146854669 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128584186 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.152014253 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.151239138 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.114929392 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.162882323 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.149870532 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.150976632 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.153720299 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.123088807 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.155188914 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.199660787 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.150735222 seconds)
  done (took 16.941313734 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.118929664 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.140671761 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117683244 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.141725398 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.139322922 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113205911 seconds)
  done (took 1.809443 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148492615 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.151957662 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.160853183 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.152650576 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.205555361 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.206111349 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.208111253 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.150524662 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.139644577 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.161934977 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.204801713 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.237069211 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.205849161 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.125122355 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.237590343 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.127248887 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.238269301 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122403158 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.160760406 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.148391188 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129713636 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.154330499 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.149287205 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.200544544 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.154327116 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.125210861 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.151062167 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.159652225 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.158685998 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123177056 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.153518723 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.152470962 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119680024 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.149721389 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.208413468 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.149296923 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.148031544 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.156999148 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126734583 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.153578664 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.208035679 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.149250191 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.159501515 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.127989045 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.150706805 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.14769189 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.156517559 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12257318 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.208390553 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.156685379 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.156962937 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.153026477 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.126089755 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.156455053 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.148672242 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.149949541 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.147230775 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.237404702 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.128117103 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.149836673 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.152909649 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.126191421 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.151130339 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.156629354 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.154317124 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129045451 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.148157791 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.153093241 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121375963 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.153713414 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.157699092 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.151883827 seconds)
  done (took 12.460223855 seconds)
done (took 45.204391137 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.152282405 seconds)
  done (took 2.19153242 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.96060956 seconds)
  done (took 2.001769096 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.612936293 seconds)
  done (took 19.690920429 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.576894438 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.656053844 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.959939462 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.189714901 seconds)
  done (took 3.425069174 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.034764864 seconds)
  done (took 2.093394192 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.379850722 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.272647539 seconds)
  done (took 1.699597849 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.910777812 seconds)
  done (took 1.96808526 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.460224638 seconds)
  done (took 3.509339028 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.390472922 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.216205125 seconds)
  done (took 1.669682578 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.67947178 seconds)
  done (took 1.73544157 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 37.176635314 seconds)
  done (took 38.232161366 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267121793 seconds)
  done (took 1.336620357 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.332783585 seconds)
  done (took 1.391505813 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.831444128 seconds)
  done (took 4.894877698 seconds)
done (took 86.88721529 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12907189 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.155055166 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125380673 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.152481789 seconds)
  done (took 1.616519828 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.13751395 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.153271936 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.155048021 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123937639 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.161106754 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.152853542 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122102234 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.159682421 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.151088563 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.125238001 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.153768802 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.153104621 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126080516 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.152532122 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.150002672 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125603222 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.156438328 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.153649708 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.15200408 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125393992 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.152225288 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.153253485 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128237728 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.152687657 seconds)
  done (took 4.548693753 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.129497783 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.145567037 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119098775 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.144979645 seconds)
  done (took 1.606913235 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.137380266 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.168063582 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.166493723 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.130635192 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.167993329 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.166814938 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.148335003 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.120532272 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.151717576 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.159771095 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.123032664 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.171158417 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.167523541 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116302649 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.162761244 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.142561673 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117959646 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.169624371 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.160331202 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.160931456 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121651649 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.160524251 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.130039394 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.164822689 seconds)
  done (took 4.662939097 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.235089812 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.136036336 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.175007328 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.201423988 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.17718398 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.150776193 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.148969735 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.159231717 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.159494756 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.155150979 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.126664652 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.210115065 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.156989359 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.15708683 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.153124629 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.131426895 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.159733821 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.15610312 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.156100845 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.137296842 seconds)
  done (took 4.322568046 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.13051657 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.145748898 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.112952214 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.146331883 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.152595549 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119671335 seconds)
  done (took 1.890885175 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.119765831 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.138945811 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.112588652 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.139871952 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116488502 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.141074287 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.138345002 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112924717 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.139725305 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112262165 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.139362427 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110995778 seconds)
  done (took 2.606909317 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.329087649 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115881339 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.14893459 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.143232628 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.14976384 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115093747 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.160126013 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.144497959 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.244918677 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.14651384 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.160451257 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.216171321 seconds)
  done (took 3.159468513 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247429803 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153814999 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271344397 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.409899944 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190088984 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199239595 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.332630705 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200306896 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222341541 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174154241 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229340627 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190051021 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186911197 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212325349 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172815509 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.214183388 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208148626 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232427423 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180089637 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268154184 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198406028 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201929095 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215540802 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185736489 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170636384 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191653604 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.152794751 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131437949 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235867576 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203673009 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207511654 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181046101 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174586394 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233995637 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277430877 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212006744 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.371025097 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138694489 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.255871681 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.218274031 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.303585415 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144494843 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259760047 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18860272 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165675013 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215765818 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189593764 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.21428186 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.166792918 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17330685 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21948265 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208991268 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.246490433 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142049738 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.359590135 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180107628 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.181156726 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212533318 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224178891 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252897586 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199970491 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126756978 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247687034 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217434536 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216077908 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.181362206 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.202967171 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161714896 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211332332 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230178685 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244729871 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202834859 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21932512 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166654989 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196555289 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20394862 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187547408 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214752222 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224667373 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.124952953 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18409114 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170417718 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160299559 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190559927 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157632025 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.266339646 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138947525 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.220345638 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267994762 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192988561 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195453325 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198308339 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201734214 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181772781 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.155295127 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1789524 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.195689781 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191277608 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134836906 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192244686 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178954676 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.162660693 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186987278 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.156786374 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193605813 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.141015125 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231334184 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199075305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.135366482 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199151112 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184244436 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.196193149 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20492508 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252677674 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135933417 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16709354 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228246749 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191542427 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.172528037 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211323436 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.254618798 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.202622279 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140349201 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233447303 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231321011 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177139364 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224082811 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176246587 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16741018 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.187488089 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193404909 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192373865 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1898074 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132315693 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189083093 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259864145 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.160348951 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140679263 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207706695 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161700469 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161904908 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176879322 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16938894 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145974204 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.186259431 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.175378083 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189180066 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195247938 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188210817 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191143073 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176274329 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256390349 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137112409 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.194079871 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183223379 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.15570826 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218262066 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219840877 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163840849 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220310187 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.235454974 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228706868 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198343817 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164431959 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217946976 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164820781 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125473419 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230533297 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196819745 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197311987 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.220725315 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226725201 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.234402361 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190973618 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15251779 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232333381 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.211060857 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192738445 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.180448323 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198096644 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204591622 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.15662141 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.129528091 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.164097877 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173758459 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165375818 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136456482 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246641942 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199394619 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220892882 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196002935 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17435703 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217522335 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.160932794 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200180315 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.209393441 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173528085 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.220902559 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246217577 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201614309 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176430182 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206531994 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125135911 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160368902 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.169691072 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205062036 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16654841 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13755603 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177718416 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248482574 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211161013 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184058656 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237031286 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234329048 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229665631 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.156924474 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170060407 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20457601 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191847031 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.226133713 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166392655 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.195164439 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.214188059 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178137353 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226554283 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230112758 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203416692 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235837273 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.192881053 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165748047 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184995795 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203376171 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175388799 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201054076 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179996807 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169782172 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188227024 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.142656727 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162843702 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2140722 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178004442 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245724023 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.192797872 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21008261 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16145237 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178175071 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19619411 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150379908 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.156198308 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206013239 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25236795 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179489528 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192719128 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211530986 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163733629 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.349916777 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227171537 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219014703 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173691333 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178209321 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196795304 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194761692 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198276404 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217846265 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178475017 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245822396 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165128624 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.179690048 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171191999 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183468504 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186654734 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.190104386 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.170567384 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.190676551 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146826442 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.251492474 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179233349 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194301484 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200087378 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.182456764 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.161126292 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175643001 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266592449 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192847958 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214378296 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192310917 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206440845 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223401099 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158924576 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1312866 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.164908147 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218415331 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16806949 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194740301 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217869579 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26089016 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196081452 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205511365 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173983865 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129652292 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195597475 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1838991 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262652747 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178266078 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.174075145 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22899009 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.189148582 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166042207 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200397551 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31760069 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180134664 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210290319 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.12538277 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.340741656 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131911514 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166941707 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19691621 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207227992 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.185052754 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.222662905 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202584589 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180390868 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197891605 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173323709 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223753415 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270130679 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208369029 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21209759 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.179551981 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19508406 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200010668 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213374049 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178844955 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.183487139 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198169996 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219578339 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.224448175 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.17233426 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199450893 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198147281 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195985354 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239011899 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139200037 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224148316 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166320169 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201282508 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175311204 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163235287 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194971646 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217639762 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169092075 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212073712 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195398746 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166556821 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164515119 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187229907 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193661771 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178479748 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.135141484 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244613496 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.132469738 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199967355 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218120837 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166808975 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193957337 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182640916 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169457333 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14729479 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180639022 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171709094 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.209916727 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219907666 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.170665839 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213281571 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208544968 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200720748 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195211674 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181953401 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.700955756 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.166708484 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219118647 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185433025 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227175852 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186510806 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202714042 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198870057 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186242534 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20454371 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185910618 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.259160474 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201795556 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.197716868 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167916122 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181159926 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181075517 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.138474265 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190594822 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198126912 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178894155 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.175108412 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.195242657 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183591303 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.181919709 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176162949 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222656881 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18541266 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220221982 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222466189 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177711055 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202949446 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209981141 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166349153 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.20102556 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209370766 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18009566 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189881996 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.170079114 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.175054677 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218422183 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130220977 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198479212 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196844823 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19782351 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200290916 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.173436799 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197214491 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179157935 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197519385 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166413417 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.195257455 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195024757 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138408298 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.166465985 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192860606 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195470205 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.196215766 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165843111 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.211197259 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221211837 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.128726142 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170902802 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.32259421 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193522243 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263333609 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.193657589 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14029707 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180833688 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193943896 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.193293185 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197225265 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.168787511 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167416612 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139312651 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.225160375 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.192876538 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194353705 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217974469 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199106541 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257147944 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.150734414 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.304671402 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176374796 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192492888 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.16980802 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.137574008 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177275682 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172194447 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183526504 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22728002 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24825424 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.160076709 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.182147318 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167282172 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.161821943 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13824208 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19980022 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189540765 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195335436 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182538151 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.157434274 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181770129 seconds)
  done (took 95.546602361 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.184789888 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.175865023 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.181325355 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.230359802 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202358553 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291042985 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.240635073 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262836856 seconds)
  done (took 2.957598476 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.163192017 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.139929128 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.175645348 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.156250404 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.159990991 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.456020725 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.16890061 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.127737589 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.21911821 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.197617606 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.155514745 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.658948539 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.155522181 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.158725543 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.152181784 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.156084091 seconds)
  done (took 4.582938782 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.550345624 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.596827037 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.362793393 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.289698516 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.266439953 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.212281834 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.821319524 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19564694 seconds)
  done (took 13.482094658 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.162214298 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.177117491 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.365008636 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.241927462 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.193210224 seconds)
  done (took 2.336608656 seconds)
done (took 144.379827292 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.13614132 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.178756608 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.162175296 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.148163728 seconds)
  done (took 1.808009966 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.180036164 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.150242236 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.119220485 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.147917979 seconds)
  done (took 1.793934589 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.547653759 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.115434567 seconds)
  done (took 1.892107592 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.166100181 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.180996655 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.178580319 seconds)
  done (took 1.727810917 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.14190771 seconds)
  done (took 1.3358355 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.128111078 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.162354879 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.211256654 seconds)
  done (took 1.699863483 seconds)
done (took 11.45300701 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156878656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.457371433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.4477767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.169188185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.729087992 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.440524541 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.076967697 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.188659521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.197592288 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11972885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.171560855 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.733053838 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.069259594 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.407494043 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.08634585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373495605 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.735024948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.154184115 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.127255807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.15461889 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.055705436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119853504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.153956689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122138858 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.733014595 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.456719584 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120411238 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.417532279 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.151448288 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124861083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.441137709 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.152119675 seconds)
  done (took 18.231222862 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.17063787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.213949963 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.161635322 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15391939 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125303698 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.154646306 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.161238739 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.134708361 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.212323203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.152485212 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.173047005 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120031516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158360745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.151839563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143750225 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.152587342 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123454756 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.155449983 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.160151591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123006053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.172109439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.151931479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123380086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.154936578 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.152278172 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133988582 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.154052559 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.163453727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120850424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.157994209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.15719919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122470828 seconds)
  done (took 6.068535466 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1745966 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.223193275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.162659433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.188915822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.203473069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122434352 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.271865846 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.189713946 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.217351321 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121251262 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.173867724 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.150493762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160248146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.153914491 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.175142004 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12110155 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.156203242 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.154086342 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.129164089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.155670451 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.17154313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121545488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.155276581 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123671932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.152855027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167874961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122253167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.165878395 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.153748902 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12718679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1592874 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.152921999 seconds)
  done (took 6.39371726 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.139509718 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.16727977 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.174524599 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.144398922 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.16345958 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132652205 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.165611785 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.160732547 seconds)
  done (took 2.455365708 seconds)
done (took 34.346215716 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.151945532 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.172852261 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139269341 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.166562329 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.226206976 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.157420635 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.137229474 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.15676938 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.135594175 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.17665315 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.153836615 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.127206885 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.174110225 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.162209486 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.209028967 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.1372929 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.212032168 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.208466555 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.161300629 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.166694925 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.127427945 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.215444643 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.165038515 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.126606937 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.253922461 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125362878 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.205171526 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.163379362 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.129948925 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.157235225 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.209320513 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.170106441 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.126966647 seconds)
  done (took 6.708750913 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.226819193 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.242611229 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123312258 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.157287655 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.237492895 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.157458742 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.226006835 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.12335006 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.157048421 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.156509587 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.124290072 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224348624 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.231642302 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.248985132 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.298637967 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.237617531 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.224187439 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.234180157 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.221011482 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.239960532 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.225816592 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.157800235 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.236731478 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.23801233 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.156467674 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.124054642 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.262910644 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.232958874 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.295582309 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.223037561 seconds)
  done (took 7.475216656 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.139065002 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.172576959 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.179237491 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.195007688 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.197328456 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.171314309 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.168885867 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.145743319 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.182175338 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.155720378 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.133909446 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.191846297 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.173852312 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.133549609 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.161917095 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.174618992 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.146995592 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.157728438 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.163915977 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14287178 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.174145741 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.173544187 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138857581 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.167176782 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.154956626 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132316069 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.160770338 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.170705196 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.131491375 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.165797826 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.159544236 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.127519747 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.160101639 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.133296391 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.158788908 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.167912214 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.180884381 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133888258 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.170038741 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.190773526 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.133602871 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.161392524 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.179816981 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.206749953 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.125839679 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.16966826 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.133702665 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.167985081 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.156999999 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143315768 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.17189319 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.157177202 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.144101671 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.157068261 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.155243653 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131478622 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.15820653 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.158039564 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134678985 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.162139076 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.180905199 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.132886875 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16494721 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.125887421 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.164763752 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.15644181 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122921456 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.162406892 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.181786229 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129548355 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.191323329 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.157965047 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.132952849 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.166942173 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.163448363 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133782483 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.156889079 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.16473886 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133090198 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.163819961 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133022352 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.161294296 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.161623792 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142253996 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.176144673 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.168964156 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.166019404 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.13523488 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.160684569 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125797326 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.171430818 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.15974251 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128595397 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.167848555 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.158814545 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.126975568 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.168352376 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.132656052 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.155302866 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.178107709 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.129334841 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.15786187 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.175908585 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12457739 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.163274297 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.16749939 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.136998962 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.15839062 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.165057476 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.136221199 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.157046899 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.13103362 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.161665488 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.157530343 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.141457885 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.171088637 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.163525149 seconds)
  done (took 19.548506931 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.322631745 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.337425572 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.265916792 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.39309134 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.181261478 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.222388713 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.298474848 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.286348616 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124402891 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.199246356 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.215929116 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.292697737 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.159310989 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.156619481 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.337004839 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.394828569 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.191325846 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.200253933 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.198731038 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.179611715 seconds)
  done (took 6.19855942 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.147677257 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.198820879 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.187620988 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.189621722 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.164468424 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139438758 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.15731078 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.180303155 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.131869758 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.166366345 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.15488138 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.137558566 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.16714722 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133866546 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.175637634 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.206101453 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.163048723 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.130863772 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.177388145 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.163943488 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133027588 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.183763517 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.168876092 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.185976688 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.16902864 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.140243187 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.157636678 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.162858925 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12892227 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.163545011 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.13115481 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.176300896 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.166458327 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.132817932 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.166709963 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.171028806 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.127707928 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.161208338 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126493187 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.162175879 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.175758562 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.136278558 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.162922092 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12401823 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.172336373 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.130491657 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.170279116 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.169616643 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.169118418 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.141385345 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.169343614 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.16845943 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.133281903 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.178451461 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128152169 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.173056 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.172129644 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.169762755 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132376272 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.158567347 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124063047 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.162121136 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.163843968 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.137194388 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.167297033 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.17959989 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.170606 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.126257689 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.167666815 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.129379077 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.162243926 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.177988443 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.183434042 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.130868621 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.16266367 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.146550575 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.162995201 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.119585979 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.171023679 seconds)
  done (took 13.731602706 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.156372325 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.165509663 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.177137716 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.161929421 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.179723418 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.167088149 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.131085638 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.181685515 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.169070388 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.1409442 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.172494377 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138997188 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.182680446 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.173536588 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.164402683 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.142247166 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.170893018 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.201790619 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.143427657 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.192419082 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.176122683 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.131400149 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.173797283 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.172746302 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.191609441 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.137461595 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.190913133 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.17056526 seconds)
  done (took 5.925852108 seconds)
done (took 60.798390719 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.455261532 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.562385076 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.334366504 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.334262997 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.369096983 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.377127782 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.334642028 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.527373783 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.147234082 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.323392966 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.337631602 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.350994953 seconds)
done (took 29.739254107 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.510175909 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.986459814 seconds)
    (2/2) benchmarking "String"...
    done (took 1.650582513 seconds)
  done (took 4.897156561 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.32906666 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.329951428 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.5772003 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.332066825 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.351909028 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.351326071 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.331052627 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.334065634 seconds)
  done (took 16.862665789 seconds)
done (took 27.853583315 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.332644566 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.557373415 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.594120403 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.350164638 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.354416409 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.332548638 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.328137909 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.381573602 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.337658238 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.325577048 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.338504176 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.597258796 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.337778546 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.726526998 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.338721528 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.335817408 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.350481628 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.592893219 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.335124912 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.385064863 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.32478507 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.347402501 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.353600192 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.356335913 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.353702311 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.343223474 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.364455901 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.326757273 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.531525561 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.33944768 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.385635571 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.33850097 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.371121208 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.336076102 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.467932292 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.357811504 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.532347268 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.346666681 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.331528124 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.34153355 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.536413692 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.764709955 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.336488401 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.333408484 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.339334461 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.416503248 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.328311683 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.132351649 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.34560657 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.336504398 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.349277063 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.730713623 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.339934613 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.352850795 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.35180241 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.572788481 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.341799327 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.393868138 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.366363231 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.351364529 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.341070383 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.348334518 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.366007312 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.342438034 seconds)
  done (took 152.358205803 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.335034918 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.338287398 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.339687681 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.365384899 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.336266022 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.339401531 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335813584 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.335284435 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.339619136 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.359031466 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.337182149 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.336802339 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.340533669 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.341230522 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.339301007 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.356902883 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.339714847 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.358906022 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.340035125 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.335421225 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.356326609 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.337807564 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.356325429 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.338219842 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.3509635 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.426242883 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.403687276 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.353282238 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.343560823 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.33789692 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.351989953 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.34181138 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.018436746 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.197095485 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.345333942 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.371455336 seconds)
  done (took 85.337884416 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.336596385 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.336713674 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.337601392 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.338224267 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.374678653 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.337246283 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.975741351 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.976920722 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.086411906 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.593977577 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.884648923 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.655830527 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.336176777 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.433924571 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.351457726 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.337261968 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.352281578 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.380621946 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.341493922 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.338375609 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.968175756 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.353059731 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.455738591 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.538574886 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.353518569 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.371490194 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.741444375 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.336030871 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371939801 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.67732839 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.392083507 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.337023311 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.7812547 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.975304261 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.453776148 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.337742425 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37210911 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.337726185 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.625984599 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.335697172 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.337101195 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.33996566 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.079678601 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.340187709 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.96584297 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.340330548 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.362703985 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.337626721 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.337859951 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.975374079 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.071349665 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.355202652 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.337413594 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.340353288 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.33737922 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.335451137 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.372434429 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.769356213 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.458117442 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.356621128 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.340639379 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.371876396 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.337565471 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.445351787 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.356703253 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.560139181 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.39931002 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.450073247 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.960531346 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.341403092 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.436778365 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.46019303 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.33748018 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.336190706 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.338094626 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.335959312 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.450111264 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.335814438 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.789687118 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.520594748 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.356107167 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.335650436 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.846405664 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.438092236 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.336985209 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.768340537 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.339903776 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.337139029 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.118388372 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.434465263 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.337074734 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.336504962 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.335607466 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.337198656 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.786619634 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.952676557 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.63992463 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.340481697 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.920694212 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.341162537 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.792243901 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.936488829 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.068798972 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.339561131 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.45362912 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.520342368 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.357894979 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.337128026 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.847297125 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.343269241 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.397238697 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.338107032 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.337839301 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.740336807 seconds)
  done (took 383.995065968 seconds)
done (took 622.946525839 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.073569206 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.015641894 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.159339733 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.048082757 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.009648176 seconds)
  done (took 11.565745436 seconds)
done (took 12.825149762 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534701913 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.534719558 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.402189533 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538321985 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.370952389 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.55850498 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.524752089 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.359282396 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.445691968 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.425454509 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447866751 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.395861209 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.377945285 seconds)
  done (took 20.1756217 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.621138992 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.346918651 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.425208505 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.59207476 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.386684027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.612900703 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.677116675 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.348945442 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.485461962 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.354118128 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.355485838 seconds)
  done (took 19.467728175 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.615340702 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.348471539 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.409696671 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.60714111 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.387578571 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.622249067 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.660473542 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.347833974 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.491160547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.356468045 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.354881223 seconds)
  done (took 19.460277834 seconds)
done (took 60.365375088 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.38364316 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.510342147 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.373004156 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.356800232 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.351820197 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.352786137 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.357747834 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.35201863 seconds)
  done (took 12.300847832 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.352704128 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.350115548 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.350664102 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.350222326 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.351311934 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.35057167 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.349707427 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.352610239 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.350629726 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.351202277 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.350092867 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.350869473 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.3506471 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.352033758 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.352380211 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.351797116 seconds)
  done (took 22.880397493 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.353215503 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.352406727 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.351065969 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.351136216 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.351248675 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.357172383 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.352599798 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.351318292 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.351474534 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.350830895 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.352125324 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.351784095 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.354230566 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.35129932 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.353022629 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.352915997 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.352677333 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.351513771 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.356430359 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.35162964 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.356081999 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.353298512 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.352386659 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.352719491 seconds)
  done (took 33.729282539 seconds)
done (took 70.171490635 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.34872573 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.34635018 seconds)
  done (took 5.95878313 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.412155345 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.41459322 seconds)
  done (took 4.094557491 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.353572812 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.352933829 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.354110749 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.349901136 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.352746581 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.352071542 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.352522256 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.351427917 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.351280728 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.352278666 seconds)
  done (took 14.786023927 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.352837032 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.354316124 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.35305752 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.353669493 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.354007281 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.352796597 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.353245691 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.351918873 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.354103093 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.353855989 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.353545574 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.354363178 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.353933886 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.352141592 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.35381649 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.353538027 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.353645489 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.354891413 seconds)
  done (took 25.628658115 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.367321619 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.374593578 seconds)
  done (took 4.007763425 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.494361405 seconds)
    (2/7) benchmarking "second"...
    done (took 1.394578929 seconds)
    (3/7) benchmarking "month"...
    done (took 1.471862084 seconds)
    (4/7) benchmarking "year"...
    done (took 1.461663475 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.395106974 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.374228011 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.39601784 seconds)
  done (took 11.252996759 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.355054776 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.566249007 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.684357744 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.979937319 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.357085441 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.398946555 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.229114808 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.400214673 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.388038065 seconds)
  done (took 15.623740831 seconds)
done (took 82.616323134 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.345736597 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.411968265 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.371690429 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.365613115 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.69582396 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.382117859 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.348636562 seconds)
done (took 17.189152959 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.339213767 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.342557375 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.36645667 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.352956057 seconds)
  done (took 10.668000849 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.358888349 seconds)
    (2/2) benchmarking "read"...
    done (took 1.704801181 seconds)
  done (took 5.331237777 seconds)
done (took 17.266498207 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.357054803 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.355473701 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.357268839 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.356955658 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.35694909 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.356165282 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.357381399 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.356869861 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.356524765 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.35707974 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.357217644 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355598463 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.356769912 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356646333 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357719825 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357268193 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.358372222 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356670302 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.358010129 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357390952 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357563257 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.357126335 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.360393004 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.359403751 seconds)
  done (took 33.841305947 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.357710756 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.359519403 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.358613281 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.357474299 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.357155463 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.359395788 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.359165128 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.358881448 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.358193158 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.359572221 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358245259 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.359643684 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.359026689 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.359096471 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358048448 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.35951821 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.360708471 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.3602571 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359240453 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.358845749 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.359372273 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358012683 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.360210148 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358769657 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.358948074 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.358252363 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.358803288 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.35997409 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359513198 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.358023988 seconds)
  done (took 42.036450285 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.366189445 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.367130934 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.359403345 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.360281098 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.358941805 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.35981769 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.360075829 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.36078336 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.359747211 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.361281827 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.359979557 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.358712635 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.36160583 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.359542444 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.361313691 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.360416083 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.361161845 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.359171132 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.35905092 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.362679724 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.362332242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.362054876 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.362038438 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.362134712 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.361665469 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.361113729 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.361127082 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.360947643 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.361366117 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.360861276 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.360978469 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.361666065 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.361464726 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.362000864 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.361921339 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.362184583 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.365504461 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.367771307 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.363446115 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.362270497 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.362807472 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.363901879 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.363000862 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.362208006 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.361652927 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.363079875 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.362963472 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.363929218 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.363523303 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.362956582 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.364374563 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.362483994 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.365267373 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.363300902 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.363626486 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.363385822 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.364126867 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.363608448 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.363201013 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.365664904 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.365192109 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.364761425 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.363654887 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.365568002 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.36478117 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.363322095 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.363961973 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.363940369 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.364335011 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.363792916 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.364073963 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.364455529 seconds)
  done (took 99.375490499 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.365542187 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.365205318 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.364740329 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.364662449 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365692224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.364778601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.365157001 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.365291079 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363755499 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.363843375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.36414114 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.367676044 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365385626 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.364908253 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.366552088 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.365479038 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.364738007 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.36590848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.366722633 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.366086702 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.36427368 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.367816446 seconds)
  done (took 31.315739857 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.368903589 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.369206797 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.366612885 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.368371131 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.370611505 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.367850381 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.367725568 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.368910866 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.366279803 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.366492923 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367608291 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367189136 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.367736481 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366468135 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.366034934 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.369241881 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.366904881 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.368861464 seconds)
  done (took 25.897712359 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.36911363 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.369104578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.369149284 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.367320084 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.367168558 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.368719457 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.368069942 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.369144773 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.368051498 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.368433503 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.366970349 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368261917 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.36865012 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.369987706 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.367684372 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.368103576 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.367575167 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.370244117 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.368320735 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.368401487 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.369748883 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.366611478 seconds)
  done (took 31.382506177 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.368111276 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.370259812 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.369316899 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.369290906 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.368882518 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.369646833 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.369155394 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.36997444 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.371579844 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.369716145 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.370764502 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.367928299 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.370397559 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.368863672 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.369492958 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.36945106 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.369542456 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.369828007 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.369556123 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.371010434 seconds)
  done (took 28.670432221 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.371392674 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.371826965 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.373148402 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.373663976 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372217277 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.371714147 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.372176574 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.372487768 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.372383634 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.371592383 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.371666902 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.372054573 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373049366 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.372508193 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.372596347 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.374398502 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.37317946 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.372627098 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.373096782 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37355074 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.373761813 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.374300593 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.377617528 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.375680953 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.374221346 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.375011537 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.374941912 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.374074818 seconds)
  done (took 39.731267139 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.374856668 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.374065268 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.374651327 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.372889322 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.374806799 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.37349738 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.374011363 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.373592913 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.373241783 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.373752698 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.375475621 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.374848442 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.375800264 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.374137666 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.373627726 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.373091718 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374106709 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.374322471 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374833017 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373234296 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.374808125 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374779458 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.373387332 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.37322295 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374701715 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.376553409 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.375866438 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.373520788 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.374474092 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.375967021 seconds)
  done (took 42.514518924 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.424177855 seconds)
    (2/2) benchmarking "in"...
    done (took 1.416453553 seconds)
  done (took 4.124287617 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.374487651 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.374434898 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.37437988 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.375775264 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.375003602 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.376224916 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.375305955 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.374997088 seconds)
  done (took 12.284857455 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.374689777 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.37575505 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.37502023 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.373954748 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.377259093 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.374860399 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.381415547 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.39883622 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.374206917 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.376853439 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.382054889 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.380761056 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.379100135 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.374183615 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.375483389 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.376801001 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.380348786 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.378459221 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.377106897 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.379180952 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.379781572 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.378648781 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.37773319 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.381765283 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.378457709 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.389778254 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.399816008 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.382226552 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.377375482 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.379562516 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.380210812 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.381923314 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.378977846 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.380546331 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.383250535 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.381061289 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388826218 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.399440161 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.385528542 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.405012503 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382249884 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.382601112 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.380887224 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.382526686 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.383335052 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.383396435 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.383065313 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.381190906 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.380500025 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.38179868 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.388526511 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.380986273 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.381015126 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.379184794 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.381592297 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.383090142 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.402338533 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.380340934 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.38993611 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.39095493 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.414448569 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.408606851 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.384983064 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.38539996 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.386402359 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.39701387 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.388317578 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.403764006 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.384303282 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.384190713 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.387000376 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.416105624 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.410104359 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.383944261 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.381861922 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.387393849 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.379615922 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.38518685 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.388161041 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.407570804 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.385757616 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.387687352 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.389860893 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.398708486 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.381035887 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.386350053 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.384453228 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.38665144 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.38598375 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.393646186 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.409999124 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.389136204 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.382708209 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.382828794 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.382991926 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.385972006 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.385024168 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.384841652 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.385932602 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.384759251 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.386192455 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388280774 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.394489141 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.388512436 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389898385 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.395538352 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.407115736 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.383547752 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.389986121 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.386683 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.388213099 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.387843524 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.388444149 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.388691234 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.385471995 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.396022659 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.386207847 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.387760103 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.387133728 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.39149755 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.39047107 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.401226665 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.392141979 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.388956419 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.387374672 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.399858531 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.389731865 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.387703944 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.392686891 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.389721022 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.390785008 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.385873436 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.38937952 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.386987309 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.391414337 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.386109811 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.389878633 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.390039386 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.387127617 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.388270975 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.389855997 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.387630516 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.386167219 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.387074401 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.390835022 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.389996088 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.393304313 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.406401485 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.389559372 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.389869713 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.394090785 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.390047582 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.388743406 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.394232434 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.389389669 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.391765782 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.389618997 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.390120568 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.394647181 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.393250889 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.390761974 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.385577241 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.393022563 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.391938338 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.39220614 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.387494789 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.390765224 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.38902838 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.391772529 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.38980772 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.390000336 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.389199752 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.3922813 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.400666388 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.395478298 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.39133694 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.39101665 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.393393392 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.39277879 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394541626 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.39377176 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.400487406 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.394126264 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.397857476 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.413966663 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393824446 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.395238723 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.389037392 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.388411196 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.392913283 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.395819883 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.400213643 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.400523268 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.419237238 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.390166604 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.398618711 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.392574547 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.396919305 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.395149551 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.393803297 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.390603757 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.389773422 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.394001556 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393845601 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.396205866 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.391403157 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.392507556 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.393236807 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.393450743 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.396321015 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.395288362 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.390268628 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.393625975 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.396217597 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.393398811 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.392886006 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.392147162 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.39534715 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.390822455 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.390837985 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.39507482 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.394225243 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.398149851 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.394210013 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.39423042 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.391833735 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.393263948 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.394088377 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.395041414 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.392511783 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.391692527 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.39786442 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.413070364 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.392331935 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.398995126 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.413484614 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.393222361 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.395697033 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.396763452 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.395871284 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.39753117 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.403484348 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.397895734 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.39594251 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.39818811 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.394382034 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.396710633 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.398429453 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.418540994 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.391851152 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.39824552 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.395897984 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.399751133 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.396612039 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.395868709 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.396935706 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.397777056 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.397356487 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.397697788 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.39471676 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.398587953 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.400362837 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.398150397 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.398492993 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.406674848 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.401520089 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.396247626 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.399041013 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.395855906 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.403218828 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.393842907 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.398890171 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.395249421 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.406172378 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.428307594 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.402100872 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.417246554 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.398145442 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.401280515 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.415317751 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.39925939 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.396336061 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.397779612 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.398395902 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.392982159 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.400187182 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.396509838 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.398592322 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.397373066 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.39706016 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.406755692 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.400242206 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.396638766 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.400658904 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.402152936 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.400322499 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.396992524 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.40380654 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.399895539 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.399996215 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.398075727 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.398477739 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.40573902 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.418364508 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.398747606 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.398895724 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.401283232 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.397100635 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.40155805 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.402294415 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.404831271 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.409927292 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.403269595 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.410126737 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.400958228 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.409500738 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.402113933 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.401551335 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.409633672 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.402634472 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.398980439 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.397500334 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.40351178 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.406899752 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.421172394 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.400813707 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.406498794 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.401991853 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.403696332 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.403741034 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.402545812 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.404138057 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.400721595 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.408715504 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.424290692 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.406294625 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.399824084 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.401524273 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.402040711 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.404229975 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.398391463 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.403682066 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.401112945 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.401649845 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.402591544 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.403678978 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.404742678 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.402596232 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.403723807 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.402212281 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.40188873 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.409152007 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.423705258 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.404833696 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.403475547 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.407698065 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.424765743 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.410459471 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.427160187 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.402107541 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.406028053 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.404285036 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.403006945 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.402240113 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.403601886 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.40725324 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.404359992 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.409126847 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.403714712 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.402066232 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.402328456 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.404903011 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.405027559 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.408338129 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.419488479 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.403696188 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.411647861 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.404970419 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.40665091 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.410519234 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.407644256 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.405459691 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.406428184 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.4118576 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.415904181 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.406741537 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.407873573 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.40606849 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.406346841 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.40456411 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.406413119 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.40509876 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.407403341 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.404654782 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.407503425 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407704619 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.407896646 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.40222462 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.408492932 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.409875308 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.413353797 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.426545672 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.406275435 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.40884575 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.41043791 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.404906399 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.404956941 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.405710282 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.407970588 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.409092794 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.406379278 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.411754262 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.411539665 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.407683209 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.406373815 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.409973466 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.410278452 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.405410404 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.406269393 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.40920641 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.411010507 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.406577126 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.410272827 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.408953111 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.405851682 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.409097353 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.407857126 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.411582052 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.407923767 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.415671834 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.408941626 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.410439167 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.409356792 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.411669329 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.408200348 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.405301043 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.414115164 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.430519008 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.416857101 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.412749039 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.41127333 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.40814529 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.412994021 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.416579688 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.404401268 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.408052726 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.411262396 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.409779426 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.410286481 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.410064879 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.410315581 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.417236232 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.429906618 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.407326404 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.417647674 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.428896694 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.41277285 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.40944519 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.413602338 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.410034675 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.412321551 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.412197026 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.409043852 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.416514136 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.428790659 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.413429784 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.410994947 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.408611356 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.411929555 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.418877504 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.414838595 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.410532106 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.411317737 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.411940359 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.413852031 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.414442588 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.411873025 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.410194537 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.410020448 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.41119428 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.417068948 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.411556611 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.411806429 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.410815822 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.407105885 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.414981784 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.412870523 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.412288555 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.412841326 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.409861814 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.414939973 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.411889792 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.413270205 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.413236975 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.410266996 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.419534577 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.412788669 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.415129728 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.423909729 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.423654761 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.415537225 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.410018275 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.410485109 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.415230568 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.412675389 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.415747767 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.410672457 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.413521887 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.411353718 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.413660756 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.414313027 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.41359057 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.427748859 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.436672176 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.409737115 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.411981477 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.416901178 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.412490651 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.415758575 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.414631756 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.414004892 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.413964113 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.422285704 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.415634416 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.418534522 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.435676283 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.412233491 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.420789236 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.41496255 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.419864351 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.415086891 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.416709515 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.417963392 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.415524865 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.430619048 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.418354587 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.41819379 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.43483282 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.435542594 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.414094449 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.417539592 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.414730682 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.417118593 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.41574717 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.417081065 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.417440123 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.416723972 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.414642246 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.414734251 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.42185435 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.415823562 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.419894633 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.418701228 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.416836157 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.414074573 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.419109702 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.413536831 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.417294596 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.417579793 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.420587677 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.4169069 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.415771531 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.424678925 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.444403556 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.418082141 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.416760924 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.416750752 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.416715051 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.417057985 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.430208008 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.428664572 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.419714131 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.417999839 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.418528079 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.419056426 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.42086246 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.418118026 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.415961778 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.415758526 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.418664623 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.426746049 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.446328375 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.421806644 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.417215439 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.422151258 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.42030267 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.416121362 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.42368444 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.422073579 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.418450407 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.418820077 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.423870709 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.418531575 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.419787638 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.419599016 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.427483741 seconds)
  done (took 836.883243368 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.419882473 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.417753162 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.419992823 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.420371492 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.419015784 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.419766202 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.420146839 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.42270496 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.420305878 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.419718887 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.420733079 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.41993053 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.41944373 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.422004483 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.42313294 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.422360024 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.424014722 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.42106613 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.423320656 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.421160683 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.422133606 seconds)
  done (took 31.158985794 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.422622796 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.422628633 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.422837474 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.420895013 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.422824091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.421824266 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.422434083 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422084493 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.422120117 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.423606924 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.422293397 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.424769322 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.422343538 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.422333482 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.424338219 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.421005368 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.424672097 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.421888124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.422676202 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.426598232 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.423941795 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.425475738 seconds)
  done (took 32.628998935 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.423209918 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.426493728 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.420647977 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.426892015 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.425257651 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.427045896 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.42574809 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.42488553 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.428013951 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.420938626 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.422819989 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.424352718 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.429830081 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.433488332 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.426679845 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.425460896 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.425646732 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.427882689 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.425445664 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.4229284 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.430506371 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.445145064 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.42478113 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.419733689 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.425185169 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.424967622 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.427124243 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.42556769 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.422744852 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.43049203 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.425042638 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.422503782 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.426404765 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.424976521 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.424612553 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.429985847 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.42537792 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.425251336 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.426741485 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.428652413 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.44007067 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.424908271 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.428583347 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.445172923 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.42540183 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.427183372 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.435858039 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.430023214 seconds)
  done (took 69.832022578 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.07458644 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.097165879 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.096890456 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.098494083 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.099404274 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.101550932 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.104424164 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.101826549 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.109046983 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.093036727 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.099903872 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.104996235 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.101807971 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.100129682 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.097651693 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.102870341 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.099465857 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.108092718 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.100007255 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.099834509 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.106957805 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.10358424 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.104063814 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.106490051 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.106057762 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.097663559 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.107927628 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.099169002 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.10374213 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.107020111 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.108098873 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.105950458 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.105167882 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.10369517 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.105203648 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.107771967 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.10407436 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.099543523 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.10567069 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.102414684 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.113541442 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.107481169 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.106387627 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.112179435 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.117534872 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.107189894 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.112554878 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.107069124 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.108592274 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.111076112 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.111508293 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.110266068 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.099010045 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.109112311 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.104425837 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.101348434 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.103870572 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.099972268 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.104704583 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.106352398 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.10913592 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.102973322 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.113967255 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.101093111 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.104027424 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.106862793 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.103365614 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.113146457 seconds)
  done (took 144.419640745 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.431222735 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.429404532 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.429463569 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.430980961 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.43020858 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.433282774 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.433759728 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.431262784 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.428311334 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.430802338 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.433095791 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.430841206 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.43141606 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.433803507 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.430665313 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.433717822 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.431698868 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.436417579 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.43356886 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.431804966 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.43160951 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.431141259 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.433745419 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.433439106 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.432688609 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.433094203 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.435000571 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.433585667 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.433170496 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.433983199 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.433587562 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.432054261 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.433563598 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.434868203 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.434216298 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.434586919 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.433224263 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.434799192 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.434198198 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.435318805 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.434054065 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.436351497 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.434461507 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.432127087 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.43439545 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.432880515 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.435971218 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.435493481 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.435395425 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.434868446 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.434438122 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.437124851 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.432968496 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.434973495 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.432659633 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.434610613 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.434683514 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.435199567 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.435036982 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.434373314 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.43753522 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.436135037 seconds)
  done (took 90.205987539 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.433974814 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.434867991 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.438678506 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.436648154 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.434810626 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.436149324 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.433334524 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.435216752 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.433510531 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.435489578 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.436525121 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.436358327 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.43618627 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.435990383 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.435868213 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.437982879 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.435695781 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.437066985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.438416096 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.436777665 seconds)
  done (took 30.051570355 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.435154068 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.437888461 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.436699463 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.436789763 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.436771715 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.435656093 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.435559005 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.435758892 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.436091682 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.435542881 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.437152871 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.436044967 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.43631923 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.435472343 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.437016147 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.440579013 seconds)
  done (took 24.318164523 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.436996768 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.43845166 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.436829082 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.437024121 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.437331421 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.435494019 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.435672687 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.437523723 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.43657054 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.436871439 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.438462535 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.438991442 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.435911723 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.436388375 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.440852711 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.438823205 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.439411862 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.437466457 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.439558386 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.440492523 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.439588092 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.440807448 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.439978397 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.439227193 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.437403802 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.441198036 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.440259821 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.438098851 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.438766694 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.439016426 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.437417819 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.439802804 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.440027551 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.441654059 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.438539999 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.441913616 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.43941222 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.441636378 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.439705217 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.440458431 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.439344652 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.439777881 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.441088356 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.440261196 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.441633166 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.439747392 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.44240797 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.442450391 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.439247456 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.440897664 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.442903784 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.440186269 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.441755816 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.440960925 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.441354901 seconds)
  done (took 80.498987379 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.442922511 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.440913178 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.441917193 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.440952616 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.440707453 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.443332227 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.440549527 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.441927017 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.441439314 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.441965984 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.441948335 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.444216513 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.443630024 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.443858141 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.443729435 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.442103901 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.445015332 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.440474127 seconds)
  done (took 27.300553749 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.442266719 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.44276882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.443283553 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.441341524 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.442735719 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.441848553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.444106858 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.441979254 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.444244295 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.442192895 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.444125691 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.443960983 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.441509736 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.443978828 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.443634534 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.443759828 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.44302031 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.444093882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.442289644 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.443315401 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.444274598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.444679214 seconds)
  done (took 33.088730511 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.439077845 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.439766902 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.438763585 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.452330372 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.456020835 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.440211273 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.439854371 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.441435895 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.45639739 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.491584847 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.489111928 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.456141782 seconds)
  done (took 18.78129804 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445995543 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.444088941 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.443836822 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.442142787 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44551068 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44361847 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44434677 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445867227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446104055 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.444917569 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.443990781 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.44520029 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446410002 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444472208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44595182 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.44788777 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44556515 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445823222 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446485965 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445762037 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.44692026 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.444678397 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.444778726 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.445183525 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.444453749 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447555368 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.44361947 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.446160975 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447251748 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.446173503 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448016897 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.444859195 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.44729031 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447380283 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.44647322 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446846306 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.448227472 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446970462 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.446313357 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.449058215 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.448085565 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447611699 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447573222 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447901368 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.447241117 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449679005 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.446095901 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.447207209 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.446751251 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.446514223 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.445911462 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.44874718 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.446719621 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.447633774 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.447396964 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.448049956 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.447858024 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.446614432 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448105026 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.445738063 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.449464005 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.446736602 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.448732531 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449494959 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445670713 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.44906395 seconds)
  done (took 96.813582755 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449621043 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.448322388 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.445836712 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.447393774 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.447628633 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.45073982 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449925649 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.449281207 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.452047916 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45153884 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449414002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450617525 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.447922213 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.449300914 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450537777 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.449669219 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.448915898 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450290019 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450059507 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.448980901 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449949455 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.449132154 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.45046906 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450413 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450045371 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451756903 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450534261 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.451191083 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.450567486 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.450177355 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.451757207 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45302495 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450906686 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.452025244 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.451253635 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452598421 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.450982055 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.451804009 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.451858028 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.450580964 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450994802 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.451765028 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.451968393 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.452775189 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.453076153 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.449784486 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.452732729 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.450096351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.45175374 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.453436581 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.454671662 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.453748672 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.451402255 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.452257074 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.45154734 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.456037645 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453312493 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.450921506 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449466256 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.454250687 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.451771389 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.449449089 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.452107433 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.452262975 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.453680673 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.453937659 seconds)
  done (took 97.118327183 seconds)
done (took 2005.542908873 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.615271554 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.567528174 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.449120497 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.461827452 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.445574884 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.475773105 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.458907292 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.446568134 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.450905213 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.451748258 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.450557999 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.636736591 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.44570262 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.444543144 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.450403997 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.549262862 seconds)
  done (took 29.150456202 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.478325352 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.456495579 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.58554726 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.472052821 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.478956521 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.662450247 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.512550438 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.456412358 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.652109831 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.475223872 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.444071534 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.498750096 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.454880421 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.462333893 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.471929609 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.660452316 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.733298816 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.448525054 seconds)
  done (took 31.753053322 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.973541185 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.477180535 seconds)
  done (took 5.799617358 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.475547412 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.455319199 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.457344746 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.454565277 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.448568537 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.446063548 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.453670097 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.452041587 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.473461339 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.597763052 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.455526765 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.46276405 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.478084621 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.456410015 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.459143512 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.497948365 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.615926398 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.459914845 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.45642842 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.462514853 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.456424955 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.549551278 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.501804716 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.460560143 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.603777302 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.459145366 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.46006763 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.46466298 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.607357647 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.459308896 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.456557195 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.457729311 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.457631204 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.376465986 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.932012471 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.486240479 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.464307347 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.484747336 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.460376614 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.605339306 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.462387105 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.461203654 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.45225537 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.922216484 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.628459693 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.590546151 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.483530575 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.457924843 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.459361855 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.528247529 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.457573312 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.460995482 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.503494614 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.301346814 seconds)
  done (took 92.250759346 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.454971813 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.45250489 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.635389855 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.478248697 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.452213862 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.469863663 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.447530057 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.785806164 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.47606916 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.45282159 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.75947465 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.074383126 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.476641006 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.511437794 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.315354543 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.539941753 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.455876298 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.46961583 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.452947002 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.450255668 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.03936947 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.455706507 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.469222425 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.628368521 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.497419419 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.016000604 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.463642372 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.454627168 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.471638419 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.453008239 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.029352393 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.478754828 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.452495713 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.453967225 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.749587394 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.877652043 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.83751444 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.454785205 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.481407703 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.45546435 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.454074654 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999725334 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.85801237 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.456519027 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.452406404 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.006144733 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.453602063 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.45475079 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.456293939 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.710722549 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.454455897 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.45740875 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.475744088 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.454535975 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.454744445 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.541775834 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.546052425 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.01783922 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.453725702 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.452178081 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.455292278 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.458738345 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.462167597 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.458996541 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.478015066 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.862029562 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.601728816 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.457430437 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.862970331 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.022471188 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.47223196 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093013294 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.471320218 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.472984544 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.672676354 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.460635448 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.453744334 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.026316829 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.476990259 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.454917026 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.844983245 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.455387491 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.773645901 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.48971354 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.453253458 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.05545066 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.459048382 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.472255471 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.457649514 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.456346622 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.456580251 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.459403229 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.756541235 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.505873386 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.456139712 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.460511182 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.482272431 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.463525042 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.455888889 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.46533537 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09500206 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.484304287 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.460739139 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.463243407 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.467285237 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.460111625 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.461978681 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.459279671 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.732157909 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.458483565 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.482909037 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.461539352 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.456730905 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.46472774 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.627836466 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.467698877 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.815576913 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.460601224 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.461222992 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.483649906 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.46062913 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.459364508 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.458007481 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.465509623 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.368117046 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.737275904 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.483250167 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.477626699 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.460854168 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.478199632 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.459750536 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.459883487 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.531857182 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.465371274 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.304598944 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.482418813 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.496343485 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.460147488 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.46428991 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.460686121 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.480506015 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.464391459 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.767835536 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.75602338 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.608622789 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.472256868 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.47331333 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.273054804 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.505890227 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.646792528 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.484385736 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.459331706 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.72015592 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.692419841 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.466820515 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.458572109 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.463041927 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.730721432 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.463705261 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.781225022 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.07536938 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.481832308 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.470224777 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.318255953 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.187408043 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.466198794 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.46868154 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.768658719 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.480295624 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.463667236 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.462755823 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.465134309 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.481185635 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.484647798 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.46801385 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.462414905 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.464247134 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.517800837 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.657371537 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.48463761 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.466333698 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021136067 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.504565633 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.46821105 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.471354784 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.467049528 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.466356313 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.542115588 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.46860236 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.477256388 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.467602399 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.466429129 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.039682382 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.461045926 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.468926802 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.661304888 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.228703242 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.48559836 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.467936872 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.481214409 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.383143054 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050013732 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.506161659 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.820824905 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.4737703 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.50569711 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.468247469 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.479084988 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045952996 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.460150054 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.488675246 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.182798043 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.48215505 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.939930956 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.462652268 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.468049603 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.139269694 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.487459955 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.471591331 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.463275957 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.475462997 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.798297667 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.468450337 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.496424564 seconds)
  done (took 528.922138701 seconds)
done (took 689.225583411 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.468963183 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.46965266 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.462699041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.468891459 seconds)
  done (took 11.239039372 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.479556108 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.473337152 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.477875664 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.473004269 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.480997073 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.474123283 seconds)
  done (took 10.227597323 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.467058046 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.470463667 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.470182375 seconds)
  done (took 8.777064087 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.707186051 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.49280714 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.840101372 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.489452411 seconds)
  done (took 9.900949719 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.479603445 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.479554731 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.479614991 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.480551331 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.483242568 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.481833919 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.481565769 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.481263162 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.48386174 seconds)
  done (took 14.69794681 seconds)
done (took 56.21219355 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.293409924 seconds)
    (2/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.518998107 seconds)
    (3/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.587557253 seconds)
    (4/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.507665686 seconds)
    (5/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.516143016 seconds)
    (6/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.569603018 seconds)
    (7/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.576003334 seconds)
    (8/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.548267016 seconds)
    (9/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.536559902 seconds)
    (10/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.489849216 seconds)
    (11/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.255679636 seconds)
    (12/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.716021454 seconds)
    (13/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.446551623 seconds)
    (14/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.522103957 seconds)
    (15/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.692867463 seconds)
    (16/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.708450272 seconds)
    (17/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.156420054 seconds)
    (18/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.486834221 seconds)
    (19/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.521288649 seconds)
    (20/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.159805644 seconds)
    (21/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.507623327 seconds)
    (22/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.286548521 seconds)
    (23/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.508896737 seconds)
    (24/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.628056772 seconds)
    (25/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.84255877 seconds)
    (26/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.509021341 seconds)
    (27/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.627325692 seconds)
    (28/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.575113827 seconds)
    (29/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.532990685 seconds)
    (30/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.700107946 seconds)
    (31/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.464119653 seconds)
    (32/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.674818705 seconds)
    (33/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.510469597 seconds)
    (34/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.529824433 seconds)
    (35/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.64405188 seconds)
    (36/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.587002961 seconds)
    (37/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.47372211 seconds)
    (38/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.517591485 seconds)
    (39/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.614584659 seconds)
    (40/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.530213526 seconds)
    (41/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.588951508 seconds)
    (42/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.668574036 seconds)
    (43/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.51029918 seconds)
    (44/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.588282065 seconds)
    (45/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.778054029 seconds)
    (46/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.69998132 seconds)
    (47/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.565382534 seconds)
    (48/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.507257319 seconds)
    (49/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.397898911 seconds)
    (50/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.637838816 seconds)
    (51/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.487932561 seconds)
    (52/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.465465213 seconds)
    (53/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.471243286 seconds)
    (54/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.62934459 seconds)
    (55/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.487121454 seconds)
    (56/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.50876711 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.474835354 seconds)
    (58/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.580530327 seconds)
    (59/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.553434465 seconds)
    (60/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.541841693 seconds)
    (61/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.647950669 seconds)
    (62/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.555438929 seconds)
    (63/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.631151407 seconds)
    (64/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.505714181 seconds)
    (65/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.754574699 seconds)
    (66/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.580815133 seconds)
    (67/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.528266035 seconds)
    (68/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.134920769 seconds)
    (69/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.40737244 seconds)
    (70/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.68625478 seconds)
    (71/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.483853423 seconds)
    (72/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.538147854 seconds)
    (73/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.612772779 seconds)
    (74/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.507862869 seconds)
    (75/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.493543247 seconds)
    (76/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.491818116 seconds)
    (77/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.466424681 seconds)
    (78/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.52132974 seconds)
    (79/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.270607338 seconds)
    (80/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.253702759 seconds)
    (81/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.598573985 seconds)
    (82/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.882339997 seconds)
    (83/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.701723636 seconds)
    (84/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.640471263 seconds)
    (85/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.13524711 seconds)
    (86/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.821131276 seconds)
    (87/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.596634173 seconds)
    (88/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.60367598 seconds)
    (89/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.607814389 seconds)
    (90/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.476491958 seconds)
    (91/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.61754364 seconds)
    (92/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.518047399 seconds)
    (93/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.232996739 seconds)
    (94/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.173147404 seconds)
    (95/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.553971445 seconds)
    (96/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.485507625 seconds)
    (97/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.709695923 seconds)
    (98/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.565662262 seconds)
    (99/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.887436845 seconds)
    (100/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.728581743 seconds)
    (101/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.640563488 seconds)
    (102/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.537635998 seconds)
    (103/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.586907854 seconds)
    (104/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.540999101 seconds)
    (105/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.526672484 seconds)
    (106/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.294067432 seconds)
    (107/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.60271596 seconds)
    (108/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.700206765 seconds)
    (109/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.172525129 seconds)
    (110/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.537323754 seconds)
    (111/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.669116323 seconds)
    (112/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.551171212 seconds)
    (113/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.49101729 seconds)
    (114/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.71779074 seconds)
    (115/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.593330851 seconds)
    (116/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.557960445 seconds)
    (117/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.562932782 seconds)
    (118/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.509084381 seconds)
    (119/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.629267753 seconds)
    (120/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.60714641 seconds)
    (121/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.579736891 seconds)
    (122/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.506257943 seconds)
    (123/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.623367788 seconds)
    (124/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.562954254 seconds)
    (125/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.604792657 seconds)
    (126/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.508938227 seconds)
    (127/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.504874393 seconds)
    (128/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.327986893 seconds)
    (129/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.484874034 seconds)
    (130/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.3272367 seconds)
    (131/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.530281358 seconds)
    (132/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.504240297 seconds)
    (133/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.594822526 seconds)
    (134/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.471497057 seconds)
    (135/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.560682336 seconds)
    (136/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.538651799 seconds)
    (137/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.718990773 seconds)
    (138/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.678448875 seconds)
    (139/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.52415504 seconds)
    (140/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.595761684 seconds)
    (141/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.577213652 seconds)
    (142/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.473222403 seconds)
    (143/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.478800638 seconds)
    (144/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.500506153 seconds)
    (145/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.660427849 seconds)
    (146/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.701372871 seconds)
    (147/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.295184029 seconds)
    (148/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.617055768 seconds)
    (149/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.567091287 seconds)
    (150/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.565617225 seconds)
    (151/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.617046349 seconds)
    (152/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.53720785 seconds)
    (153/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.149180326 seconds)
    (154/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.599891841 seconds)
    (155/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.556342308 seconds)
    (156/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.626699818 seconds)
    (157/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.585210874 seconds)
    (158/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.523860712 seconds)
    (159/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.653504795 seconds)
    (160/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.630165521 seconds)
    (161/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.542899774 seconds)
    (162/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.732244985 seconds)
    (163/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.652018558 seconds)
    (164/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.517145702 seconds)
    (165/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.522607525 seconds)
    (166/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.511629856 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.48207339 seconds)
    (168/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.677343726 seconds)
    (169/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.643050164 seconds)
    (170/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.489334925 seconds)
    (171/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.59750019 seconds)
    (172/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.656004971 seconds)
    (173/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.749551405 seconds)
    (174/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.207818996 seconds)
    (175/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.553574549 seconds)
    (176/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.605278598 seconds)
    (177/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.687984416 seconds)
    (178/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.656196422 seconds)
    (179/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.480804141 seconds)
    (180/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.500506392 seconds)
    (181/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.593773466 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.593307939 seconds)
    (183/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.513210783 seconds)
    (184/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.48171172 seconds)
    (185/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.26934797 seconds)
    (186/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.284226378 seconds)
    (187/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.537855219 seconds)
    (188/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.221730359 seconds)
    (189/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.712407662 seconds)
    (190/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.475774004 seconds)
    (191/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.481812578 seconds)
    (192/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.547919671 seconds)
    (193/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.715397095 seconds)
    (194/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.498441995 seconds)
    (195/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.476878164 seconds)
    (196/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.474104411 seconds)
    (197/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.606568954 seconds)
    (198/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.561369551 seconds)
    (199/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.155171986 seconds)
    (200/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.667312085 seconds)
    (201/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.733623972 seconds)
    (202/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.709543347 seconds)
    (203/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.621210934 seconds)
    (204/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.479785915 seconds)
    (205/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.533757913 seconds)
    (206/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.58745766 seconds)
    (207/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.626342292 seconds)
    (208/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.568267188 seconds)
    (209/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.656105543 seconds)
    (210/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.66255243 seconds)
    (211/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.587080211 seconds)
    (212/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.551476512 seconds)
    (213/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.673381921 seconds)
    (214/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.486832927 seconds)
    (215/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.477651121 seconds)
    (216/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.647971246 seconds)
    (217/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.704543041 seconds)
    (218/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.564498647 seconds)
    (219/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.534917883 seconds)
    (220/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.697748156 seconds)
    (221/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.581887677 seconds)
    (222/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.526463854 seconds)
    (223/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.581311562 seconds)
    (224/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.489994435 seconds)
  done (took 407.533502281 seconds)
done (took 408.905056593 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.539087175 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.677743451 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.491920111 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.492722835 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.532429708 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.498764654 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.53127451 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.499226333 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.501170352 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.502262677 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.499837372 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.501082608 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.504444935 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.534231658 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.60699549 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.502231971 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.495178627 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.497438444 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.539727632 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.559292044 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.53801419 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.537681064 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.511906356 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.491777386 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.541809607 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.540142749 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.500074217 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.496313596 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.496541509 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.54378851 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.487680496 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.498387338 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.550067052 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.550210808 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.536701789 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.499973568 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.537380033 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.677548757 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.535088982 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.533362248 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.503081362 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.549003413 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.50675729 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.508868646 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.549601012 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.513349486 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.541466272 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.618593119 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.487801398 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.496745979 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.539104372 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.562288454 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.505151765 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.4984438 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.498697445 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.613800913 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.501793426 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.543779936 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.501583783 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.537273064 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.610202397 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.547659856 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.56125378 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.543633717 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.502193857 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.509102048 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.500728955 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.558812895 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.504064574 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.541459396 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.540147765 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.508907522 seconds)
done (took 119.506976031 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.623803519 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.498069232 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.638701366 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.503025059 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.661198346 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.644312706 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.502167567 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.501335317 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.50040208 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.310345851 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.503434187 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.50176651 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.500790861 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.504200642 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.627292714 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.503732502 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.501497762 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.20688309 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.503344588 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.638420089 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.497721254 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.500589646 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.502048739 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.296563711 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.498778602 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.493756424 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.640456593 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.502741733 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.19375547 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.496464234 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.497248648 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.191821216 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.642778833 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.521359644 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.513394829 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.511556527 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.665848211 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.520276218 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.624350861 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.620671141 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.64062419 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.540234976 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.496021693 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.498556717 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.504304484 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.504270719 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.504662192 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.533895783 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.499138979 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.502093397 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.208256679 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.514910075 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.513193845 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.503242895 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.504928625 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.522703096 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.505811412 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.504292782 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.643231181 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.505230213 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.626106409 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.297085464 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.317347247 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.505687294 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.498657273 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.507480822 seconds)
  done (took 119.598607625 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.569553842 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.577076451 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.62677645 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.520615053 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.552028268 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.628903228 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.520940123 seconds)
  done (took 12.389786679 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.508733664 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.506022862 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.551890471 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.552416427 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.505748081 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.662277936 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.505727175 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.511905412 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.507937115 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.555809706 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.507614416 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.507784478 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.515488747 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.501374807 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.55169124 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.515947391 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.621554366 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.505011429 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.501470539 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.657933828 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.508246666 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.511229715 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.555641843 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.515386439 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.507411903 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.511776932 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.276340882 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.508623648 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.509288532 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.507562898 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.505626562 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.559610552 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.50839657 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.504047798 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.507595415 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.62286597 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.507737027 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.50824014 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.508591866 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.498644402 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.5081731 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.507082921 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.509240298 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.508896334 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.512244686 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.531780177 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.511145395 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.509182413 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.509851214 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.507562782 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.558744271 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.508097473 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.511337727 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.509740888 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.561886056 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.518065548 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.508991959 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.508415067 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.511203364 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.508364255 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.65671913 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.55470943 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.508427488 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.553892383 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.510672032 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.510726946 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.510327891 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.509653134 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.596725675 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.511570413 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.555372354 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.510808966 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.689883853 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.529516294 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.512067364 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.511085767 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.512236642 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.510137043 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.504222813 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.512087457 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.512074473 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.510162224 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.515271484 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.511993992 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.510477059 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.666740569 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.620319988 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.511628951 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.521522683 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.51378364 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.513414341 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.559751614 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.514298784 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.509617138 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.562131417 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.624235379 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.561926661 seconds)
  done (took 154.626623201 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.521254009 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.522299062 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.51769781 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.53573077 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.510878621 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.511366793 seconds)
  done (took 10.51818261 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.512384214 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.518132232 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.512413799 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.511569122 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.51280245 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.514235376 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.515805517 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.509924181 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.518346858 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.51260956 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.514029337 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.513491212 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.514126511 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.514129769 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.51427295 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.513716194 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.515131602 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.513823116 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.513781532 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.514857285 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.51284338 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.513326929 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.51607413 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.513659905 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.52142821 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.515542334 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.532860854 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.517069686 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.515400383 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.519141813 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.537158726 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.513393171 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.51616252 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.517860279 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.518483303 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.516097494 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.519674003 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.51522536 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.515929474 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.513103577 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.518379463 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.517358033 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.518716804 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.516532839 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.515714894 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.519286141 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.522811104 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.532749699 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.515727435 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.51728052 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.51761042 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.517568372 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.517610233 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.517154709 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.519565757 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.538209733 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.522750456 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.517664746 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.518367788 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.514800577 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.523116096 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.515563168 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.516262428 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.522020828 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.518875723 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.518567443 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.515946782 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.522525237 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.518080901 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.518649951 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.519634037 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.518305633 seconds)
  done (took 111.666109387 seconds)
done (took 410.189344076 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.523273208 seconds)
  done (took 3.924808938 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.63542241 seconds)
  done (took 4.043981278 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.680625946 seconds)
  done (took 27.090547414 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.584498798 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.618373016 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.531157838 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.513570249 seconds)
  done (took 11.65399689 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.947206006 seconds)
  done (took 4.354196588 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.51430074 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.510963422 seconds)
  done (took 6.433826863 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.901577691 seconds)
  done (took 4.307150634 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.083137425 seconds)
  done (took 4.496118371 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.512054355 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.534598175 seconds)
  done (took 6.46315108 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.519610289 seconds)
  done (took 3.927300287 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 40.414825038 seconds)
  done (took 41.823463292 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.514052747 seconds)
  done (took 3.926660141 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.553774127 seconds)
  done (took 3.960740569 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.827740313 seconds)
  done (took 7.235868595 seconds)
done (took 135.047930891 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.511321104 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.509386051 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.509093109 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.50811568 seconds)
  done (took 11.444401011 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.573399224 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.572820033 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.577314257 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.571393749 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.571240765 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.571344662 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.545940065 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.545942131 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.573178572 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.572408645 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.574726287 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.57011469 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.573636931 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.562518511 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.573404184 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.576119623 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.573119797 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.574759397 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.560931351 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.576196134 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.521351965 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.570007334 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.575775117 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.523741367 seconds)
  done (took 38.989894052 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.034339216 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.588082511 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.673281648 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.570707374 seconds)
  done (took 8.274184009 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.599198016 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.600176349 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.625037413 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.656259912 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.674690012 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.617118291 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.548025226 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.542567597 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.526709921 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.598581089 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.651201225 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.591062716 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.682059242 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.522125611 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.728525291 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.520025613 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.522425319 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.599153644 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.652070589 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.670301092 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.523102505 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.598781365 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.606670479 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.593122187 seconds)
  done (took 39.857004311 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.53274868 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.539051155 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.52574342 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.540341649 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.523123425 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.524919797 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.526588723 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.531818005 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.52521943 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.525005915 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.526757658 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.536836212 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.529148842 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.527103567 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.535349884 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.525565028 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.533855926 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.528757867 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.526218316 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.53441735 seconds)
  done (took 32.006933839 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.515096689 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.51468142 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.867066186 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.771886158 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.51677332 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.511189463 seconds)
  done (took 15.10851464 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.606445512 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.790889781 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.522101711 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.959913283 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.051703571 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.523794544 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.524529987 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.822834631 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.211061616 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.190245212 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.589738826 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.603510883 seconds)
  done (took 22.811123883 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.532336271 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.514849689 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.533037395 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.530094839 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.588261704 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.544447031 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.530937185 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.517529435 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.589044309 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.610983397 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.548065878 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.591339454 seconds)
  done (took 24.047124391 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616093273 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.521765945 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.52073054 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579139855 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52260839 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380245928 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.594060542 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344019534 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.547345228 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798636559 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531389418 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621637495 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.779208569 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533045285 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524487976 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.512408638 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753601936 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113699952 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527545119 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534623279 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.556070944 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.530719585 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.541506364 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.775087881 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.544134332 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521012326 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.874570209 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.525094581 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858689754 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538840083 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533595109 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.525773263 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.801691966 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264012245 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643986082 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771101663 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548087291 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524749518 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.528870548 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.533644752 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526477464 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525177495 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533067657 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526546738 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.525141291 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.524373083 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383356779 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.553035639 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.524619629 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.527541812 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835724182 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620640552 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.529521851 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.527109899 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564558974 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524998623 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.5300035 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.620043496 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106999636 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527410456 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546148992 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.525907791 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.546684291 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544217643 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243843244 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.550928721 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.532418902 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532547686 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527192159 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.534113375 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543813656 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525374718 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.550061786 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527852625 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389046115 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.560076355 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52824334 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166068096 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536336332 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.525926144 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759319863 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52863874 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526493232 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.526959897 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526413348 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384225936 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.535399512 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.518330592 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544628427 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.351860011 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.80198001 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565047733 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560349717 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.752435155 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.51602287 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527256666 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.538909957 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52916937 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547385877 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352296375 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54863551 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.532019709 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787510275 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.73753557 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528935817 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.519145129 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094500695 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55069916 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.569695657 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.527727926 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.7994866 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.229147301 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.560850285 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531678779 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.564117363 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.528497248 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431112176 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547331319 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.6332028 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.529129779 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.865713037 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.476639968 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532601239 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597623725 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.534033351 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.528716451 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.529691729 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553230959 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.529675987 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.777140206 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.551095468 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540185151 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.530270221 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.531678867 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.544732809 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545876577 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.534056708 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.753368678 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527482779 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.811618299 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53074228 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.532067327 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529131622 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.751345506 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.532425247 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.867230607 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.795336295 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.533459852 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.532338402 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565775656 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550581897 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636677754 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550745408 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.53385609 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.810553987 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.538730467 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.536522404 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.532586574 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.555944939 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536813388 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.539391658 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549624748 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217178834 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52579705 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.537560367 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.468514825 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.54860168 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599518351 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53835344 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.782480959 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.561252786 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552014355 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.540802248 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.550135512 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755536171 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544986066 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.533502428 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.638340634 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.096430466 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240782767 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567711068 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.535104244 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.535385871 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.536888973 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534285551 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.534070843 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.535266291 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787970786 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569723984 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.545307799 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.231505381 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557340837 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.534058577 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.564128933 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548451095 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.545033218 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537917023 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.543068873 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532735919 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.555614845 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.548013482 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680883563 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.550074994 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.537738661 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.055295323 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.544694263 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.537944636 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.537251786 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571379449 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.535565188 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522968754 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820145609 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.538657495 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843734325 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.539324911 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.555563787 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.535289727 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536590971 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538883094 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.549032307 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546434508 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.547968084 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.539418436 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560401169 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108574445 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375564692 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1630607 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.554348522 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.540188358 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.538716657 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373694673 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5549566 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.539614497 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.812562904 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388039326 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559072056 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103601286 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.565486498 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.450052365 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854053091 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774345576 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.543208189 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.556398213 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856898779 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.75144582 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574225782 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.538491165 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542833022 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.526403 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175405037 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.570939501 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622836235 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372264677 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560309316 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.566390786 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.566569882 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.545111939 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023691579 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.560187527 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539362429 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.539710622 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.551800015 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441463393 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.56335865 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.540103465 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24109977 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.571242378 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.109072248 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560858363 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.794125917 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.572095254 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.548217713 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.541490732 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.546012414 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.792855208 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856792489 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543535677 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.558781425 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173023685 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.42895832 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.547554552 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542277412 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.440148715 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542627574 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909062523 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.562973877 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.557128852 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546034028 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.544902768 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541969621 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.543779191 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.546994435 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512783848 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135132824 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.53814631 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561621126 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.546102296 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566974107 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.800668525 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.559039409 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.237640805 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798573091 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.536958473 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.563796489 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.550195036 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544365985 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.535267654 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.545989807 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.54515043 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575899591 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.768087987 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.555657092 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.536893799 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.606456188 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.757162025 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.545677193 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.544977247 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847091519 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.565706979 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.563040333 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382836366 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592422121 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.544572648 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566281949 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.538758832 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581531689 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614675611 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796355477 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.578116126 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.557623234 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031311576 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.568442202 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54738423 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.561460928 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643000968 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556660733 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.547936274 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.344895721 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243090253 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403596339 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232236906 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880516218 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.549941514 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.555937208 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547244829 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70669218 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54908154 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82401632 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545943486 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.550983514 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569270288 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551946221 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565353112 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759137798 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.824483896 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549026425 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.565341803 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550758989 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.548134134 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559678001 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.758205594 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138583179 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208098825 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547220223 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.548499774 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414097221 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.845476901 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548916273 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.547640072 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548336071 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.568003927 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562156778 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.559938005 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548287877 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693300637 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865501081 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295995089 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.57708174 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.581021394 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.070460032 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552009261 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.808097555 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550168223 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.806542188 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264623836 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.391677788 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.818849239 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620050635 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804490882 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.570865657 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.7104658 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.568363333 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.547874939 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550513301 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548867268 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.550087672 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.558545698 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259850342 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.832493226 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.55589849 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.563210434 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578006061 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.560349095 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.777604914 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.424464377 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.777364923 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561698671 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.561739608 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.551334017 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24574661 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886683463 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554232689 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.5541508 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835150906 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.570707309 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581091866 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.072282423 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.553836851 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196241718 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.553340063 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.575475091 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55368992 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385933326 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245275884 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.584576255 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144382465 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.551449274 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551742143 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85078372 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.557635451 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.553399633 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.85548349 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.560602757 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.572346896 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8110805 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.266624173 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.486344794 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.570416901 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556882665 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.554586779 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553091486 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.631633167 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555556728 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5506642 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.064407324 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.577033344 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553834213 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564442094 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.556879322 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567713643 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.556110031 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555741068 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.556924839 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.583940948 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.556152289 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.558312506 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.654414608 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198741372 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575977123 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.23048273 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.890149658 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.813126555 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.555018971 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.547440147 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.562858348 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55447467 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557654737 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550981762 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.568089931 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215815984 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.558127723 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.567272525 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562313466 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.558554244 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767792125 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.557177004 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815959717 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.594017378 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577386902 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.546856144 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555517393 seconds)
  done (took 1064.95491934 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.595633663 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.591573703 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.574323107 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.622586755 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.608010642 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.573765601 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.576958661 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.624131078 seconds)
  done (took 22.210408713 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.557154887 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.560676354 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.555197606 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.578810042 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.562389729 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.105235146 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.58398219 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.559123022 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.571523164 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.571845629 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.565023743 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.545920871 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.562261591 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.563114348 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.559388258 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.56087596 seconds)
  done (took 36.015296382 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.959715824 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.882699353 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.298399006 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.593028075 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.629219479 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.565064652 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.009378598 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.572809328 seconds)
  done (took 29.961064412 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.567345016 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.566448012 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.568680739 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.570325493 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.567816188 seconds)
  done (took 9.287101064 seconds)
done (took 1356.373836111 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.565781078 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.564949761 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.568105534 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.566656693 seconds)
  done (took 7.711125536 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.550281787 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.548919207 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.547635157 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.561922312 seconds)
  done (took 10.655736044 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.419287946 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.331932765 seconds)
  done (took 6.199761825 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.118689764 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.11578092 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.111670001 seconds)
  done (took 7.795384684 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.856245439 seconds)
  done (took 3.304362645 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.536188385 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.558195811 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.301660102 seconds)
  done (took 8.84583832 seconds)
done (took 45.958739624 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.570949682 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.818604284 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.715913561 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.574108265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.718825177 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.739900875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.32998443 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.5584375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.56896137 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.564183617 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.570830759 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.723171833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.386293874 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.81510152 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.385119635 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.844503119 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.721677334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.561556601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.557036779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.573310553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.328759822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.559066562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.563858788 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.562215538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.718048794 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.709878794 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.565604838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.818837997 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.561913639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.565284928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.704934956 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.578261216 seconds)
  done (took 88.985169876 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.560324946 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.581635336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.579107122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.578273221 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.566815261 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.561098968 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.590608833 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.562501979 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.568142303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.560339507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.559853946 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.583265893 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.557378775 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.579723151 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.563087326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.57968605 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.559964449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.579259318 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.578899882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.558903384 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.577045038 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.558717446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.573844069 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.556543018 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.555444101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.580212518 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.580211966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.574503815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.559344859 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.55848555 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.558950088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.595775841 seconds)
  done (took 83.690360302 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.564552613 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.582582287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.567935339 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.562250396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.561550437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.589651134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.559742233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.560132722 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.590428164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.576032042 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.559427091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.56419962 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.559099227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.560488119 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.562636589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.560178832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.588229439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.556811068 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.567266918 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.560992921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.580707232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.567946505 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.558974853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.578479701 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.566852187 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.564532439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.589433808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.560231934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.577704558 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.562034062 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.565831988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.586978427 seconds)
  done (took 83.668619757 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.849292485 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.573631474 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.573415203 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.570329702 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.576497769 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.575329038 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.56983889 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.850599249 seconds)
  done (took 16.591310788 seconds)
done (took 274.384042562 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.569917145 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.156755654 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.610301177 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.570530416 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.591497494 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.598576799 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.83076405 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.612665124 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.827068054 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.590337762 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.58988091 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.574197148 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.539669227 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.735401109 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.518436918 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.581612816 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.569875297 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.569483393 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.24298216 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.895192605 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.596983998 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.570774634 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.501098207 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.596082443 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.555607344 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.684281145 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.690783022 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.817930501 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.752053144 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.666049184 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.180273204 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.573417528 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.568355843 seconds)
  done (took 71.979835404 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.573492171 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.700407116 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.573252503 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.576765792 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.702679701 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.60121551 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.575296029 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.576730718 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.577785488 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.578790884 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.577986289 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.57986311 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.579304566 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.630313541 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.709966371 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.5982379 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.575189178 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.694672599 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.574605105 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.574131163 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.627059564 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.577839342 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.580350639 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.62742987 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.579407239 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.579017567 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.697372214 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.603256851 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.582705793 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.694497482 seconds)
  done (took 49.739402777 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.581020972 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.289254263 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.457772118 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.582337716 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.57784805 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.579739164 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.935224706 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.581834315 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.582440873 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.580327875 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.159494654 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.599942167 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.6181011 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.494365864 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.582940378 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.58039378 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.583381288 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.579839669 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.299519327 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.587953992 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.9597822 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.581807642 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.937434915 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.589422893 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.604405508 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.580148754 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.584188363 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.494140806 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.600639998 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.168522107 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.587155368 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.93242691 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.423180763 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.493944344 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.569901541 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.585726294 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.582943139 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.175533779 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.59971918 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.581522008 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.936212506 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.582513895 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.470587106 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.317086774 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.599207773 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.581737674 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.507860705 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.184478089 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.901839503 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.586873595 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.496653775 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.582561317 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.586768358 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.58525579 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.887774464 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.582754474 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.582422448 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.560656187 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.608734563 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.942691622 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.583740203 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.585365015 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.300029626 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.582125112 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.294008032 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.582411407 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.591916153 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.603360764 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.481444272 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.584906689 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.337450339 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.599846935 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.586384761 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.1635453 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.308391686 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.57973044 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.583078878 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.301380399 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.447236059 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.952489754 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.584846126 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.467144058 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.957682459 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.585222026 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.59128562 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.590021265 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.585551369 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.682738 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.936574407 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.279263675 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.334070903 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.568709364 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.960087512 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.588636677 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.58567217 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.54720943 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.608144991 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.589139866 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.470316852 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.339130677 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.606560242 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.594253322 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.352163043 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.608444959 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.939321678 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.588287336 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.487083458 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.585561706 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.66315937 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.590512241 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.593743674 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.611437311 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.945489028 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.588462118 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.590287896 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.325753283 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.207107523 seconds)
  done (took 222.796184991 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.587470365 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.578624333 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.588772767 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.578957151 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.581520802 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.58798725 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.578431765 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.579556985 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.587432496 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.580283463 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.582089226 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.590844972 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.588078639 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.581144182 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.58265162 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.598827077 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.58153754 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.609327165 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.595042921 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.580302347 seconds)
  done (took 49.185966206 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.592479509 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.268953446 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.257155059 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.588885462 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.590712432 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.58854277 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.6559841 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.60559094 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.590808864 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.954381735 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.798165461 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.606998158 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.590537417 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.590243499 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.251649811 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.585741931 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.956286635 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.267780814 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.587991532 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.270772198 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.582557352 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.591662532 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.590698115 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.265942034 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.975002825 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.936208706 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.658171461 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.289315402 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.610438635 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.593399053 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.269302496 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.589686908 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.591805908 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.272243644 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.610502997 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.607547025 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.593821015 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.660141486 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.676325097 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.971932467 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.341645561 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.962977188 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.601561806 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.784925463 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.595460604 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.585330559 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.276284206 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.610027481 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.587897268 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.596936049 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.601321616 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.250309128 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.606804872 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.254268328 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.607298076 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.594858194 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.271265501 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.249277559 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.261854327 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.800031575 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.610559318 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.945305908 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.592639914 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.280297911 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.609613524 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.596208089 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.596629923 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.806419196 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.290673658 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.942335734 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.954898403 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.953977047 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.592850242 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.667113554 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.612208186 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.019808723 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.664480818 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.03137898 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.958563655 seconds)
  done (took 145.774388105 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.906723456 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.72485564 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.063124645 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.263125243 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.585964599 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.767429657 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.716551147 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.879219592 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.590868471 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.671145673 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.357788469 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.722022541 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.439626072 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.696437401 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.731980177 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.757258814 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.072539959 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.593843745 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.335599205 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.334356427 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.593443513 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.706655674 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.196708679 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.83521078 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.596803592 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.232572697 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.612799091 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.381068119 seconds)
  done (took 60.838814616 seconds)
done (took 601.770340666 seconds)
SAVING RESULT...
DONE!
