cset: moving following pidspec: 29960
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.228978529 seconds)
loading group "string"... done (took 0.54993772 seconds)
loading group "linalg"... done (took 7.594025183 seconds)
loading group "parallel"... done (took 0.16889882 seconds)
loading group "find"... done (took 1.164059973 seconds)
loading group "tuple"... done (took 2.084333227 seconds)
loading group "dates"... done (took 1.313952078 seconds)
loading group "micro"... done (took 0.242364358 seconds)
loading group "io"... done (took 0.694253981 seconds)
loading group "scalar"... done (took 40.313984456 seconds)
loading group "sparse"... done (took 12.600233797 seconds)
loading group "broadcast"... done (took 1.128398367 seconds)
loading group "union"... done (took 13.33473763 seconds)
loading group "simd"... done (took 4.744033149 seconds)
loading group "random"... done (took 9.641913968 seconds)
loading group "problem"... done (took 2.128110473 seconds)
loading group "array"... done (took 22.448548013 seconds)
loading group "misc"... done (took 2.085874707 seconds)
loading group "sort"... done (took 3.441549563 seconds)
loading group "collection"... done (took 19.396069885 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.577754874 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140837467 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148664722 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14630945 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185709966 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.15354983 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158018099 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097987501 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.944727994 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172857818 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151703474 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521780036 seconds)
done (took 5.128392233 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217530374 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094515414 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103725971 seconds)
  done (took 0.871919134 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076573936 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144677231 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094240304 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077945579 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093775124 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079364773 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093930408 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077761529 seconds)
  done (took 1.340655492 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085631519 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097160909 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081083267 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095289073 seconds)
  done (took 1.038905781 seconds)
done (took 4.234203105 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733923311 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272949379 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205840278 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464091858 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194239 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215388993 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678156797 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.374359406 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250490117 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099477972 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141476848 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38310992 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136290245 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685932015 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088940002 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123295379 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176208479 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.480242018 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08153877 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108827427 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116266577 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141271536 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130128393 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090151711 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183333975 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08116716 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192793989 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108120452 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080610512 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285621481 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199874905 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695228674 seconds)
  done (took 10.915184807 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109901265 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132604157 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096675749 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137348056 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132780726 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098895377 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083882292 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095706235 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120269131 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174630388 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113228667 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134757217 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094095913 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081796871 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114068716 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244170068 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120486342 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104101302 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099193505 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.102492274 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121225406 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112799063 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108173407 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091862022 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16537708 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219936242 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110691525 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124778111 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095878146 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110260937 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142744016 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14147227 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093575331 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080036127 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17109954 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122708293 seconds)
  done (took 5.096732243 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.074765343 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189158206 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121578877 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168625899 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080415208 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141926922 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094255157 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112959984 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256092383 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.180675197 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.173465355 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140515732 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099255556 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097301641 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081954759 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096493156 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.628342786 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156031245 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133625102 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096644206 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103871373 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098954 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367584609 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086439518 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095147021 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081321906 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081709082 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159981079 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080853276 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.152891977 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.100981257 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100009625 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131463044 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190186038 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124894241 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.109192925 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13460959 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099329899 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077685663 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174148561 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103287865 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.074760015 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096679271 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11970132 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132830745 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.117910208 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097394528 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094980621 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203225443 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094646054 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096707645 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.932698213 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.120476156 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179478481 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08857799 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095251806 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076088799 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323082237 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116652724 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096409941 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077211345 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279350377 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188232455 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096775698 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078961994 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097035485 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079635241 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395968298 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079936336 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.919664043 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082592949 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106120444 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081256469 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095613219 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102154912 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086028633 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114715123 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078291449 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097769429 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078201685 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097694912 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080186548 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10735595 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100902047 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07951579 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164082254 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078171727 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114034879 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125811379 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083127681 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.0940741 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128048852 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082093203 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.0963543 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13132472 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080295542 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108395106 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098263748 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141474718 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080445308 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.155857428 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078891697 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124031528 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098033844 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113391342 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109409316 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097654796 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083407101 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095227988 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075884218 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163332413 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080420383 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.096794755 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080109376 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108425538 seconds)
  done (took 22.541736293 seconds)
done (took 40.306263496 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.314911209 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102083898 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101672031 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10088226 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099078692 seconds)
  done (took 1.47263165 seconds)
done (took 2.202581703 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284773187 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.171183688 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094607223 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166485397 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092823716 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171868031 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158634659 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110326774 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199295831 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093400562 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161521605 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09337514 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075891694 seconds)
  done (took 2.628426279 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093149093 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11375999 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081866803 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109293649 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075031003 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109948841 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091214807 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117398234 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108698009 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083962153 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092101848 seconds)
  done (took 1.801823989 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092975796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111539918 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081340449 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109077024 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075365129 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109478604 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092252872 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114811624 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108336282 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08514816 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092084873 seconds)
  done (took 1.79288284 seconds)
done (took 6.941432824 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089682409 seconds)
  done (took 0.810862863 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.910985295 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.848509057 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112010658 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148837782 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297601342 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.18908302 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469724038 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123937632 seconds)
  done (took 11.026075959 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.113222333 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099753888 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.112246159 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081240154 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09913556 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082946492 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100456137 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100900194 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.082509847 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100281661 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083813608 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100255039 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.09783065 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.082447063 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100706618 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.084532436 seconds)
  done (took 2.31200748 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117961776 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116982228 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104866547 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106697586 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085560729 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103426328 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104919396 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087683154 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100424847 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101931036 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088012162 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103538769 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102517997 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078082114 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10471908 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106789959 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083729078 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104030222 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104638305 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089010442 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104781968 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093811379 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085584302 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.10413188 seconds)
  done (took 3.218144536 seconds)
done (took 18.093647379 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155657714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107460674 seconds)
  done (took 0.989168409 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093468861 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111344736 seconds)
  done (took 0.936094564 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095747964 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094465223 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119393019 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107276157 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079292961 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09499639 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117129169 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07902272 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094936906 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079391031 seconds)
  done (took 1.696396579 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080638856 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108624496 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099546805 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093658646 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102392395 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09314991 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086835002 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098108193 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108413024 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075134773 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.099945975 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111798942 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085462125 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11372502 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10312614 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082892746 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0995102 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09732517 seconds)
  done (took 2.477424495 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077925994 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096009944 seconds)
  done (took 0.908383254 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079746455 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09217426 seconds)
    (3/7) benchmarking "month"...
    done (took 0.0797083 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095152901 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091605452 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075164815 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092423208 seconds)
  done (took 1.34050901 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487248678 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134743886 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259433359 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.100449594 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118167366 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299101864 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096526761 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083818662 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101457768 seconds)
  done (took 2.454331143 seconds)
done (took 11.533523446 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092880871 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114801422 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110478753 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.45803748 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105609553 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096573175 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146376257 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.243279184 seconds)
done (took 2.112546293 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.14768133 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323688165 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112672872 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06616823 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094320872 seconds)
  done (took 1.341499474 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079219614 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098259089 seconds)
  done (took 0.920305082 seconds)
done (took 3.156244705 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079813108 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.095716064 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077358143 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095726982 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110436325 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09440713 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077321265 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093469016 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079714974 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09687116 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.094675199 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.078277347 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095115945 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079577676 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095754764 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076694304 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092517102 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078638691 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093310861 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076481043 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092824795 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079398095 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093037459 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076636797 seconds)
  done (took 2.880804408 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098459251 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09579169 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101128881 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084921803 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.099863317 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086186551 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10038914 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095497284 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08494062 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097594829 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098990183 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083021478 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097621934 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083263989 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098017715 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099157312 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085348273 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095866724 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081084694 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099336097 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.10038264 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080156123 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098953774 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100704614 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08246203 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099222351 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081203891 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.095597633 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100370239 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.082229729 seconds)
  done (took 3.535086041 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083195159 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092450851 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07739659 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101545626 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076171359 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095472885 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077283959 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094210487 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077810238 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093846266 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077818247 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093475779 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076875251 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09483584 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078184514 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096588734 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106444147 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076892627 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093367617 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077458503 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096413346 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076092123 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093418894 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076342204 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094410447 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077029649 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093723698 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076395359 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093516642 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07664821 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096344265 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080285216 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093652016 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083759932 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097866915 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076939255 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097521339 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077285959 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095600156 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093058239 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076963337 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093873049 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.076523751 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100742831 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077545653 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095609655 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077049379 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09509872 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077434039 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096456117 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077072683 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093996116 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079322234 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09521379 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081227412 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093570896 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094019176 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077077505 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094638271 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076539858 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093133284 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076614164 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09648484 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077405461 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109090556 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084238095 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093812501 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079065892 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094985611 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079494182 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095814098 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108510306 seconds)
  done (took 7.056836475 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082717403 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104722376 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079423485 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096034992 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075853253 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09500657 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097025748 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078305879 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095422725 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083906465 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093897209 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078943815 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09626682 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106341792 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077855892 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096200829 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084206936 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092489685 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077947602 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097561758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078736916 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097211835 seconds)
  done (took 2.711886913 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.205280624 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104025188 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139850402 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106359585 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081879388 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104861481 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100877573 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085910944 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101253594 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082232943 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099208611 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10159849 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08222506 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097993088 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098754957 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083994966 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10064094 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083931458 seconds)
  done (took 2.611484251 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09228452 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096722258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101811643 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097164888 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.097295963 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082382376 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10216674 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105275745 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08223109 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097472593 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089416232 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099519216 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098745501 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08090354 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099187734 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079493323 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09879106 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079729163 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10491403 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102275332 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10218369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089150679 seconds)
  done (took 2.830993389 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095975892 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099357713 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116362212 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083301147 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093561543 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078730583 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103873084 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.079531001 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105232597 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099169171 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079984556 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095204494 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086993261 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097206281 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102039953 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08002204 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09858776 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080476911 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098865767 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075877193 seconds)
  done (took 2.604408155 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100091181 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.207664138 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0977141 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090988256 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098771673 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082148378 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108179954 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098138123 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081274782 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122752266 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098174842 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082221057 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107551989 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104069819 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09804638 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090859897 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107813215 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108386967 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082207048 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098673554 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122483242 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081855793 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107588567 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099468862 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082591036 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09832506 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09790913 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086986011 seconds)
  done (took 3.598918007 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07969365 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097249016 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.076839589 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095612056 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077450371 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095286152 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077428053 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094457055 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080456327 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094199899 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079881485 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096722949 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082001075 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097834262 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080477528 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097361102 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079882499 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095166669 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077506403 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094768426 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079965693 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097411752 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079948602 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094464223 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07776162 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09778677 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07792515 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094225478 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079469163 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094222529 seconds)
  done (took 3.381284208 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090996678 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10428734 seconds)
  done (took 0.95209935 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078505483 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113059306 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077503826 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100956135 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084363033 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098412877 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105604882 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084524986 seconds)
  done (took 1.499997893 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094996005 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108694885 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081619877 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110856877 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.107704718 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096755472 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167700553 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099169059 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085904864 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096112561 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111476216 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080033495 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10422772 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081143767 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103063049 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086306948 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095851779 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103656589 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083099607 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096435128 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082075254 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107373982 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082980488 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.09473592 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099304344 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08982051 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110435358 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082088313 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102155945 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105380608 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086733764 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094482346 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080779449 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099399615 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078350986 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10745681 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114771039 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084434939 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.106930697 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098758109 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091872495 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09385103 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085660857 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104155183 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108038509 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081528412 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099521736 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075990225 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.095451495 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082662044 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094468812 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080725353 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093173456 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088301219 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101212924 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109309552 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079832497 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099897685 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083420755 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101653807 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087167706 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100776677 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100715735 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080307131 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105698409 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085829577 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108459386 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093871916 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.074851387 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098328312 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090566132 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121912716 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.104325267 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082172553 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099710852 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079646688 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102398292 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082663617 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103713383 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104833246 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080982837 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105711833 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088444202 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098832608 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101155988 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089224381 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096657491 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083355127 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096268162 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116158494 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079726127 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095570813 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078613971 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11006482 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084496094 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098045291 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.07912243 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105841886 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092768095 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082317189 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100284958 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081333603 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109815475 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104604104 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087314642 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10758059 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.087668819 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098955835 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.101878823 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077712698 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099854718 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083249082 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105420323 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.074458321 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101798644 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081552183 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098574257 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107671492 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079260445 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098971478 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088135459 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.103898046 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097314622 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07763307 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101883919 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081364991 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10271726 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.089189472 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097721419 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076519667 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095179257 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.102198014 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080478661 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102111306 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086807921 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102141097 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075472612 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09664982 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.102382126 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089917224 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099467422 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081789952 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105655872 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100633471 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080155867 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.104812514 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084198318 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098109438 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086677854 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099469793 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075948364 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102326971 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101933653 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.079675792 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102457738 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085472787 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101530787 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082003215 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097822765 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105202009 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081891115 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.09801988 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081089905 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097991937 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108399593 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.083230715 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093654588 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077924485 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106305614 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079583671 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098939517 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.07983329 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.100986792 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099996827 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080234531 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098366574 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082506904 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11112997 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103467287 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082557675 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.104285652 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092873068 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098836627 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083546449 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099119336 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100600906 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082509463 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108188329 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.086555888 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104408163 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100963791 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077595718 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105220821 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089170944 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098442552 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079055594 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097925546 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084376789 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105152343 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.102304569 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.082241216 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098201163 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081428207 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102930144 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101457649 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.081663959 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09817927 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.085557204 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.098435837 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.087911511 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100851332 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109913229 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084904197 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095110838 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085001728 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097330197 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104994253 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078036693 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096837022 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080562721 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100589495 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080704527 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102362036 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075632864 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106662146 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088889932 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099572056 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098463701 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08179613 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106262296 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082513298 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103060463 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084508121 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105473793 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110319766 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080419363 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102817903 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092380935 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099360338 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075894028 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105310053 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097175351 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080597009 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097719335 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079560154 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102633623 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108723835 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.088517932 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093124388 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084170848 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097852688 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080272421 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095522105 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.085833324 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103264455 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100426634 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08862533 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101379888 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.082654634 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103353181 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.080700049 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101140107 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100280987 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084782417 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100078444 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084178118 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098784782 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085121959 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09863471 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08122995 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100835084 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100559441 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081266831 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10492711 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081738381 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099130545 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08479553 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101078336 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082273532 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100579076 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098664706 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0850893 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10014761 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081582459 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102534074 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078013806 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107706317 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081552299 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107704701 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099777867 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078928229 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104660758 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084378554 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104740058 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101096957 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082245911 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100864554 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081648733 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10232975 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088450003 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097415039 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110580587 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089981885 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100520928 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085412362 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099645453 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.082782124 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099192729 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082573591 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099877875 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099749679 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08133015 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105154325 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085367164 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099708952 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082561204 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101065204 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081949493 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101153 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094509875 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081282728 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099556203 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082210272 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11020074 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.0830152 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103550766 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098305972 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083434222 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098618171 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.07857528 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108474014 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108853081 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082978266 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10764596 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081307394 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102179822 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109726484 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076212082 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098291819 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080257631 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097841264 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089714369 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101359424 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091710639 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099058996 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081632493 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097546466 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100656754 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080419825 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094348986 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080625955 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105161486 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085491692 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099065874 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08274012 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103193669 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101340272 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099915532 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099511808 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082287713 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101652413 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079352311 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098681859 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080580032 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102491024 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100652255 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.079680765 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09701798 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082368043 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100956203 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083517739 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.099533517 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083269325 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107404412 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099976544 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085547653 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103814887 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076298441 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102826282 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08125137 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099883552 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080748263 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.103873451 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10341709 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08321114 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108779835 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082224685 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100597321 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081554181 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097966418 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099455112 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081720613 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101207662 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081358104 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101758978 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09057323 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098109254 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103307097 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082611043 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100639823 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089813184 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101510302 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084941324 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108112895 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103278536 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.083635412 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108636824 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.085635608 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103555215 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10152644 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084042628 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106413354 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080862441 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106259546 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081339107 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100855589 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083725665 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098004704 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100229615 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082309053 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098737721 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087991476 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101214745 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081182683 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099248222 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.07957691 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.100673093 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104281164 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090208286 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102611807 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085516808 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096400342 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079121143 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101863896 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07951674 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.102520895 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.103244217 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088323979 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.102778018 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083094324 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099401791 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090866325 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107165317 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104389593 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08022703 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104628161 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083274462 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.102977189 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083683727 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100967016 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101995026 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086722099 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102656835 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08211658 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108461501 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085481428 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102337025 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10178498 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.082830566 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101101923 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077703885 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.100598131 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084758145 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106363767 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085139739 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101488789 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111238018 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082933466 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100772378 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085893005 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100569832 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086968616 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096359357 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.100986262 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084037958 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101388476 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07719763 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100410675 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080752374 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103828927 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081387957 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096428676 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111363541 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091103472 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103534441 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081955451 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099287741 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077942722 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096075351 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081845893 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102905288 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.101852874 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.0943678 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.099939137 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082168239 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096110186 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082878707 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105274043 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085792872 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098604124 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096743389 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081645657 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.103852588 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088342176 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09909113 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082010286 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10508781 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084542446 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099732588 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104085605 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079247672 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104667462 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095218123 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102668054 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102176473 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088743678 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109213968 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083201285 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096748976 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083135792 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.10445859 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.100961828 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084570664 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10215642 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09857197 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104277313 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099917745 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081674757 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103244255 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083245729 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109897069 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083605807 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102665973 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106500854 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085013322 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109747979 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086018146 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110294798 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103937137 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085770722 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.09981566 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08260331 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.098556202 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080916638 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102330005 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083442556 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105914732 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109462119 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081900903 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112081496 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109712795 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087385403 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098319498 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081800442 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10135794 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078688234 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10272465 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081345182 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099751763 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08061741 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09969141 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083088726 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107310418 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101877708 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083483214 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101755523 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077314103 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105227926 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085245291 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102340928 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.079598719 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.101481457 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101595827 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086345337 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105429904 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083590681 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103943784 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084428299 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102612212 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078540362 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.107598759 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100578063 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085676255 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100421223 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083107268 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101852063 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086479111 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107753112 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102967971 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084558474 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114071464 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085369681 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099003141 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.079448923 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107524624 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0992158 seconds)
  done (took 56.908041454 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144681999 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079486133 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096987066 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078362197 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111465464 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097259592 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07775024 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097610927 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079697764 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100823285 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078220747 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096526989 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107607585 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12169458 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091675816 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102965207 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078518242 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097745094 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095885355 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079543108 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107897699 seconds)
  done (took 2.825847725 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102797846 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114880484 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112745199 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116976209 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08801329 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11393125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112416948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113049488 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098178536 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109446376 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116485183 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113066634 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090041442 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10898122 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108580897 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092266743 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116750621 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108286143 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114386853 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094141915 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111705061 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11244648 seconds)
  done (took 3.174660091 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083435559 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101458406 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.083907405 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096947953 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082077395 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096438174 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086918418 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100378169 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086224157 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100976768 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080980112 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.099852741 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102632349 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078457115 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101361378 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080174612 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.149347118 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105243689 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081279667 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102975867 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077193207 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104106687 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096513063 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.077840272 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.099774186 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.086463012 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10193518 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080636891 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100921907 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.080860575 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101876574 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079573487 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.10252439 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.101259362 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082050197 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.100286438 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082097403 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100961443 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078098592 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099060332 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.082773748 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.097159909 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083791752 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103205952 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080302271 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.099839615 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083631587 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101743044 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096050692 seconds)
  done (took 5.370909956 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102704025 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15869333 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084398064 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141252673 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118892319 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111067712 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086841824 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140185999 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100883234 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081113953 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120106005 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116969056 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10192062 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088322034 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109379415 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102368015 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08446806 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100995921 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106751706 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083478129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106817586 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089825622 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11831476 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115345804 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105743257 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082396091 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101634417 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107235561 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09509651 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107200552 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107609856 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089636385 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.118586956 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107262978 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082571837 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105127844 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119583854 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102337056 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085418878 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099696476 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084968902 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.10810252 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108837512 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.100998069 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102590497 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106857486 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08297258 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.09961381 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116057764 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086094595 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110999965 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117397915 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106365558 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083265113 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107461242 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117217774 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.082893855 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101190887 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087604692 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115847244 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100011165 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087640478 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117842151 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10402918 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.110893322 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098154423 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107813484 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106433926 seconds)
  done (took 7.996530674 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092298502 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109466277 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118248959 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119056765 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090183718 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109943349 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109300433 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.089365982 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108506992 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114705795 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109510327 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132228248 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084959219 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112780291 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108705217 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089359627 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109817454 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110235227 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090894732 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10949914 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110204114 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118197783 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08995243 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118754815 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140567134 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103734185 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089705886 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109530574 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119172222 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109338151 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122487267 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090230986 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109873141 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119038607 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121832631 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090475456 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102518863 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108756555 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090916521 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110525959 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103847274 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099476453 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108760217 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103875838 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09093294 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.109065309 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118377356 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120913038 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11371627 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095078171 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109671718 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118930036 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109210515 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091095984 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118637679 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146026629 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119325789 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119865774 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108857757 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099074167 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119106576 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127364772 seconds)
  done (took 7.564919136 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106485686 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11268211 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11627118 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099112826 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081508663 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107220515 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081279477 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101664685 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112403877 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.092594622 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116005427 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107542096 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091465155 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115704167 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107071105 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110291473 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087425501 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107459274 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111980997 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.107012195 seconds)
  done (took 2.894068096 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092632543 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122217704 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083668163 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110849266 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106228752 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089717657 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106418902 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105931237 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084800729 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106602463 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095273462 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115795679 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104135799 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091266301 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114929048 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109810829 seconds)
  done (took 2.461768496 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094024484 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116710585 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.1187109 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083302019 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10260979 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.07916803 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104773958 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098923874 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079965635 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119453483 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083558653 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109633561 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103220105 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082792865 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.099625186 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087112864 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099139907 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081794405 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103391762 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117858938 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094648243 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102679407 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104922089 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086397142 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103043574 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088684581 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104764336 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100999123 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08248756 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104368048 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083990766 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111600869 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100175761 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083276801 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101524402 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081973156 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104121183 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084282459 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107269248 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103229741 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082829194 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103685782 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084403511 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104940692 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080082854 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104766814 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.078943471 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.110353665 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10170539 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084301742 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103765907 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085374123 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.104991967 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.1140527 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088015118 seconds)
  done (took 6.157145273 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098073957 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107334581 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080119778 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101680071 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086970766 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106243888 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107022302 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086978119 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105176556 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081961395 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105764894 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089276909 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10683091 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107036469 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086125993 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10831068 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080215187 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105648602 seconds)
  done (took 2.582008749 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09022349 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103514924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091817054 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104487171 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083053526 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107204348 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079218176 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10352055 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102430981 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084530442 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103461279 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086232537 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102237648 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086026039 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103704626 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084139784 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108048781 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10228834 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084528927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099682831 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087075295 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101883807 seconds)
  done (took 2.928655065 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117646582 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123853467 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091874225 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228150275 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102184344 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.130034661 seconds)
  done (took 1.623958957 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107506799 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120052517 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105175519 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106432783 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113692875 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085643134 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106153938 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105780965 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116401214 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100699096 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10689701 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116335772 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116370191 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095914234 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113698334 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113025685 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105621695 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087024042 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104474144 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125911279 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087761318 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116277207 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106326044 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08618638 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106665436 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11549724 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116019674 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120604987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087198149 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116178145 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112583329 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086732441 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116704061 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121342271 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106811562 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096868859 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106618543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126608926 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112184395 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09607348 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108076502 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112503266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095956005 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112298473 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117557954 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105858074 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091686003 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107559289 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106447117 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134007314 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092926714 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115896149 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112686926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117726546 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096702846 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15174027 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101252344 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11629569 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11375393 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121732819 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116275686 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09345786 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116214169 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121749679 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113581615 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115734017 seconds)
  done (took 8.037324998 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101240788 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124951317 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106870184 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120359391 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095677176 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106979429 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106199364 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086308012 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106843249 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105262062 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149955684 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086653341 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116007788 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115312422 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086653393 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106997069 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106519703 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115873729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086394233 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133768853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10674925 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115672109 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11655814 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095303199 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121668168 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113611625 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106394939 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086760447 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107030338 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105716629 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092626214 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107643974 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115417769 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085728206 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116488628 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106573627 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085751374 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113215916 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106553578 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11397768 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096241075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126638944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107404241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106588643 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100208695 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106847911 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10676971 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085547099 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107623712 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104980341 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099998908 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120544745 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120735236 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116582772 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106650377 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087286856 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106429482 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106967393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086919778 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113196031 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116001259 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086862254 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133074439 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107419072 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107563712 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115509005 seconds)
  done (took 7.90169577 seconds)
done (took 152.832854532 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219250593 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.229094106 seconds)
  done (took 1.282796387 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097054901 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.134856853 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09450986 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167087465 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104738315 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118560829 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136692165 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096469785 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.104788014 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084299991 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105485328 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085637476 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170278692 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.083986966 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105994006 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106412912 seconds)
  done (took 2.638451169 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197580758 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.252586939 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10125145 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104452474 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087613501 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109579218 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103601944 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090124956 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108478021 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08489147 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107031031 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08576977 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10439 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085288289 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109126532 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086351379 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105561391 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087287716 seconds)
  done (took 2.85183828 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112077213 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144886667 seconds)
  done (took 1.104003863 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118062373 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17856814 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.313431759 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154127864 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105688354 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125041736 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155267872 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129070702 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195150129 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122113794 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121113715 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096519698 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138815225 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114513916 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093000884 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117670712 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139991685 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092111679 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11449319 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113634146 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.114934094 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105331264 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113659625 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092785137 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178881081 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117514324 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083784342 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105977955 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114620839 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094022354 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112136047 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123096719 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096413332 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175505431 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101505162 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172921209 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096765581 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110909437 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113336481 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090699307 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118542893 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.116069904 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103778064 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116226034 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083723118 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117350987 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104163172 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084124091 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112638503 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096648716 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113287596 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111960571 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.15323507 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11702133 seconds)
  done (took 7.443655943 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787357584 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154508833 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089329711 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.876904154 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134730261 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10233983 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.776459577 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111043925 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253132 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757185405 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132086727 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119310419 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205255373 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257323014 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.951385216 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289356587 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.687916661 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101621228 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149850617 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151208021 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116936904 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134845718 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10851032 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424666042 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11614857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11002263 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095001253 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118362649 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158104614 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12468844 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112385014 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175993489 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246809191 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203175592 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092847264 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110369161 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109062863 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166227763 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263749749 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191414229 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177473138 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108100985 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109000676 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099933198 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131075153 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106447891 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162060495 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173267768 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16723631 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11391805 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117257201 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097353172 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120020142 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161504245 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120057141 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314238761 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308762625 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088653216 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120954819 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124115897 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258398825 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.100922023 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223146306 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13806649 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208725639 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088920876 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80388642 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16804514 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110710442 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094093592 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118839833 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114564325 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097922553 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164543725 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39063652 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122529865 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112986522 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089042698 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224300064 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122305731 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090034605 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159336372 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115868963 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118852111 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102195597 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122303401 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166628809 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247862145 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100565839 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118829778 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114203866 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10192277 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115458626 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208869406 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21726552 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160483824 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227543745 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09919464 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184517295 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166500458 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117603809 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17199798 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117940889 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101134156 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121579939 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216723038 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143739082 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121833892 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092741511 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116959175 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146549531 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125388188 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095502328 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.18976502 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45503607 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167470208 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108581697 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125202686 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096593507 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.180167501 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094403325 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256545309 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11994605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168569676 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117649383 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086576294 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11918442 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16091822 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121190937 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119757892 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099781276 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117602178 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232245947 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215644546 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119379046 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219762456 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181327998 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117499556 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16861609 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120580557 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164457328 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118600806 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118916075 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094292173 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797164793 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121623352 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097061119 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114884232 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185289249 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.109390401 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101392395 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123242129 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085399609 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772031206 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125718081 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119547819 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101514223 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116903642 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118491361 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095747164 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115155251 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159062497 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226979595 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118194696 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117391739 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102528882 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157061772 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115458267 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12267368 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123485343 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101833517 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120987225 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113964578 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10200857 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187827618 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162397724 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217626082 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566164778 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111270768 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122644742 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224316327 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089317773 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286182988 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117518117 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202614289 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182949126 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098330825 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312112004 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184627224 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185080276 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105196814 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192051055 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086823132 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117158593 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164221447 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110545492 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096148803 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181627443 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.101910155 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122975207 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956188498 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090400103 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.243535784 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087783315 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167572872 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116544585 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118120383 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.2924043 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090490554 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126707814 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163448617 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115289847 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124909387 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.699509622 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124110273 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09930783 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116559859 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219680434 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162164088 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118669631 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117683272 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0966178 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181700918 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205342547 seconds)
  done (took 43.552171691 seconds)
done (took 59.712087798 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274418848 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214426216 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260995003 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168961885 seconds)
  done (took 1.867149852 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173954409 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148593016 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141895259 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084405764 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149495779 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08356122 seconds)
  done (took 1.654600209 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.354646044 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.27096275 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238780305 seconds)
  done (took 1.737580761 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.315897451 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246108577 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472218938 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.322508312 seconds)
  done (took 2.327340763 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208022876 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131243101 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109192539 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103644475 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.194554372 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245604018 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139385972 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199061757 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098467583 seconds)
  done (took 2.347318522 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.193092731 seconds)
done (took 11.003688708 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.32360913 seconds)
    (2/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.122806826 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.292926069 seconds)
    (4/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100829037 seconds)
    (5/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.184794474 seconds)
    (6/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.155860168 seconds)
    (7/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.239084657 seconds)
    (8/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.199731599 seconds)
    (9/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.206369829 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.124074418 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.190902247 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097943738 seconds)
    (13/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116000693 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.134783553 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093309276 seconds)
    (16/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.088120865 seconds)
    (17/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.099706892 seconds)
    (18/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113068486 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.148787786 seconds)
    (20/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173286331 seconds)
    (21/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118030769 seconds)
    (22/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.214224204 seconds)
    (23/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.108528038 seconds)
    (24/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.167468362 seconds)
    (25/286) benchmarking ("sort", Float64, false)...
    done (took 0.146642316 seconds)
    (26/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110486951 seconds)
    (27/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.239000138 seconds)
    (28/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.115618171 seconds)
    (29/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.214743829 seconds)
    (30/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.138620211 seconds)
    (31/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.127029288 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.151424928 seconds)
    (33/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.115583035 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090640543 seconds)
    (35/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.181687765 seconds)
    (36/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.208337051 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.214551457 seconds)
    (38/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.11807577 seconds)
    (39/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.192606906 seconds)
    (40/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115383572 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094138224 seconds)
    (42/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.108532573 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.225426462 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113062945 seconds)
    (45/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.171406303 seconds)
    (46/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.117283886 seconds)
    (47/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.094439088 seconds)
    (48/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.2036856 seconds)
    (49/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.17555765 seconds)
    (50/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102768197 seconds)
    (51/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.185789249 seconds)
    (52/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.172533699 seconds)
    (53/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.092304627 seconds)
    (54/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135620161 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.13666455 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092644975 seconds)
    (57/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118551378 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094098804 seconds)
    (59/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.113927082 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.136065224 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15746615 seconds)
    (62/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.182037958 seconds)
    (63/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121447781 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087104656 seconds)
    (65/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.159981389 seconds)
    (66/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083252982 seconds)
    (67/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.115458404 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.168446445 seconds)
    (69/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.14769163 seconds)
    (70/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118423799 seconds)
    (71/286) benchmarking ("sort", Int8, true)...
    done (took 0.210635049 seconds)
    (72/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.086855545 seconds)
    (73/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.11027342 seconds)
    (74/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.117241628 seconds)
    (75/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.203824179 seconds)
    (76/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084856699 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.209194324 seconds)
    (78/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112986136 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06623235 seconds)
    (80/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115841947 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087021806 seconds)
    (82/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.222720055 seconds)
    (83/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.140950722 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.08634863 seconds)
    (85/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.186019699 seconds)
    (86/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.145112068 seconds)
    (87/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.095560396 seconds)
    (88/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.120687168 seconds)
    (89/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115669394 seconds)
    (90/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.075913516 seconds)
    (91/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.171323536 seconds)
    (92/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.086374331 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135226736 seconds)
    (94/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096690484 seconds)
    (95/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.194330238 seconds)
    (96/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114831704 seconds)
    (97/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.20258287 seconds)
    (98/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093299592 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107649564 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085507329 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.115954161 seconds)
    (102/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.066715254 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119032701 seconds)
    (104/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09640212 seconds)
    (105/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.115835972 seconds)
    (106/286) benchmarking ("sort", Float32, false)...
    done (took 0.171338513 seconds)
    (107/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113406019 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.138435081 seconds)
    (109/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.11078964 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096325612 seconds)
    (111/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.117823448 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.091289055 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108006702 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.178507983 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094076455 seconds)
    (116/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184014276 seconds)
    (117/286) benchmarking ("sort", Int8, false)...
    done (took 0.187109172 seconds)
    (118/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.100155169 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094329504 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114513749 seconds)
    (121/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100353821 seconds)
    (122/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142464686 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092331045 seconds)
    (124/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155788895 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065796888 seconds)
    (126/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112525496 seconds)
    (127/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.141003155 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08559628 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.108861306 seconds)
    (130/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112987063 seconds)
    (131/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.115654291 seconds)
    (132/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.117332626 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093498859 seconds)
    (134/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.212363873 seconds)
    (135/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.156752323 seconds)
    (136/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06588256 seconds)
    (137/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.184879293 seconds)
    (138/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085146634 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10827474 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093522806 seconds)
    (141/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110232864 seconds)
    (142/286) benchmarking ("sort", BigInt, false)...
    done (took 0.218905951 seconds)
    (143/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.083815055 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10807826 seconds)
    (145/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183098282 seconds)
    (146/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066198274 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.116632547 seconds)
    (148/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087348647 seconds)
    (149/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117935054 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085478046 seconds)
    (151/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.088959295 seconds)
    (152/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.069633441 seconds)
    (153/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090483429 seconds)
    (154/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116340722 seconds)
    (155/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066170527 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10795754 seconds)
    (157/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067303657 seconds)
    (158/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.142885956 seconds)
    (159/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.09656003 seconds)
    (160/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.092238219 seconds)
    (161/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10237093 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.090527138 seconds)
    (163/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085941737 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111141995 seconds)
    (165/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149246374 seconds)
    (166/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.110946984 seconds)
    (167/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.171270055 seconds)
    (168/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087819014 seconds)
    (169/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114148021 seconds)
    (170/286) benchmarking ("sort", Float64, true)...
    done (took 0.221361003 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.114154849 seconds)
    (172/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.15300873 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093030994 seconds)
    (174/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110638731 seconds)
    (175/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137480219 seconds)
    (176/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067146014 seconds)
    (177/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066693649 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.117515221 seconds)
    (179/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067060886 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.333631479 seconds)
    (181/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.066475484 seconds)
    (182/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077053224 seconds)
    (183/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.18451549 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108412505 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.08613854 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 0.21146714 seconds)
    (187/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140854709 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085444492 seconds)
    (189/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135147311 seconds)
    (190/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116736105 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066743768 seconds)
    (192/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067426733 seconds)
    (193/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.097841909 seconds)
    (194/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.067992845 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.085916654 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165711647 seconds)
    (197/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.090388375 seconds)
    (198/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.06549902 seconds)
    (199/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.089869667 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.117768375 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11628638 seconds)
    (202/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.160839133 seconds)
    (203/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089677347 seconds)
    (204/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167276002 seconds)
    (205/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.065896836 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.065727105 seconds)
    (207/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.099228533 seconds)
    (208/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.076405313 seconds)
    (209/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157735715 seconds)
    (210/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.065081088 seconds)
    (211/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.06615759 seconds)
    (212/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116261343 seconds)
    (213/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067314004 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.113004995 seconds)
    (215/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.074930408 seconds)
    (216/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16161209 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084311565 seconds)
    (218/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166936779 seconds)
    (219/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.086795613 seconds)
    (220/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111358742 seconds)
    (221/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133665479 seconds)
    (222/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.112782484 seconds)
    (223/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.089630243 seconds)
    (224/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103629134 seconds)
    (225/286) benchmarking ("sort", Float32, true)...
    done (took 0.219849169 seconds)
    (226/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.088999886 seconds)
    (227/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.065220308 seconds)
    (228/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066563061 seconds)
    (229/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.089782423 seconds)
    (230/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085156045 seconds)
    (231/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108701753 seconds)
    (232/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092017132 seconds)
    (233/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.089171162 seconds)
    (234/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.075784257 seconds)
    (235/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066340602 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107975561 seconds)
    (237/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065837804 seconds)
    (238/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.161633956 seconds)
    (239/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067213658 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109175913 seconds)
    (241/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.065450922 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126416264 seconds)
    (243/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088468342 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.090197993 seconds)
    (245/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065996102 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114861389 seconds)
    (247/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075319224 seconds)
    (248/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066923614 seconds)
    (249/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114678692 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.156558309 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117305173 seconds)
    (252/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.108887909 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085378703 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108752795 seconds)
    (255/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.0663718 seconds)
    (256/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068112419 seconds)
    (257/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091093547 seconds)
    (258/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086175927 seconds)
    (259/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.115023926 seconds)
    (260/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.074784041 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108338928 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101645751 seconds)
    (263/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.065387639 seconds)
    (264/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.089639957 seconds)
    (265/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066879313 seconds)
    (266/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.089411101 seconds)
    (267/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090003956 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118936399 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084966585 seconds)
    (270/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115841303 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084489936 seconds)
    (272/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.184668394 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.1175906 seconds)
    (274/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108803681 seconds)
    (275/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.134324087 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.0658743 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.113913055 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099575693 seconds)
    (279/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.131316331 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085444395 seconds)
    (281/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.107667382 seconds)
    (282/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066780252 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.113931381 seconds)
    (284/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067301633 seconds)
    (285/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089690187 seconds)
    (286/286) benchmarking ("sort", BigInt, true)...
    done (took 0.190941765 seconds)
  done (took 35.647773773 seconds)
done (took 36.526486585 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098991643 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146244186 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095059374 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135194005 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122197276 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090445799 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116746427 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096787333 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121785522 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123674173 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097407308 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.091548602 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095130534 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11840864 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097735983 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137352321 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122227951 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09327785 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11674837 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08478494 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117748376 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085809112 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110839243 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069428898 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.12011211 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092997283 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.114309748 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118982072 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086466024 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.10948497 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089508921 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116814485 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085809247 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123039966 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092333665 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.116630185 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096093974 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118123799 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087643593 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109250691 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.116593724 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085729259 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115445867 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093064105 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115223486 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091242642 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.116347381 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098238395 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137024942 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114189115 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.093383241 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119126472 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094909483 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.115676383 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089807078 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.116922628 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090651426 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137126079 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117014533 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091152981 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11648574 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093874976 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.113892426 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094983426 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117668054 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119541508 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096950087 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114947404 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096284027 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11466006 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085611733 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118017931 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089499941 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109177744 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095067479 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.119643352 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085461592 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.114285833 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092859821 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115017057 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10919908 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088372517 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111325867 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09171405 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112018137 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.0695566 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090505255 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115335007 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085270594 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.11748928 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116185596 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093378712 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110822076 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098310369 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109247947 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091699959 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.1093378 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086165908 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.111428301 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089492881 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.109114922 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088912673 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.118012843 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088083813 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115055404 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097639655 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109020014 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115343775 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.084833582 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.10854018 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100902209 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11931166 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086449335 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114770115 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085116195 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.116326558 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085584721 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109003148 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085696529 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110072969 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092395364 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109298459 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088629083 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116956175 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123860697 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.085119537 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113235029 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089068604 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109737796 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.091720894 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109656709 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086713801 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111118335 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077231934 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112417854 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086179887 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117293773 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089057428 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.11775386 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088007241 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119443172 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09063769 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115801216 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091599648 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108930392 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073435795 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115505651 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08885704 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.111141896 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08605008 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111759627 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086420341 seconds)
done (took 16.718492636 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.085919661 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183290068 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149650477 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140630856 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106290341 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110431226 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121059518 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117549106 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11222135 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141678967 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.108966437 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130174173 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146704772 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085803937 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110661865 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090682312 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111928824 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101346817 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.143493043 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131713046 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.161518792 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085647115 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144807893 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133335604 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120004579 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113386861 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.110951986 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090121399 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113680342 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102701401 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130899722 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090432775 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.110880172 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132542078 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103434228 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117859529 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086695176 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117206536 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086911928 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110791635 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13923417 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107947203 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.115964064 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117062207 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090698541 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.112740924 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088634684 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119344096 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097175579 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115493449 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124626433 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154424414 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089934195 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120204455 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086069469 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121241503 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120776815 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.088903077 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111542902 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089804122 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110168226 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090496646 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.125422285 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140026581 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090546498 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120100795 seconds)
  done (took 8.513870767 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103053629 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138070461 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104382337 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129246488 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110758755 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087438526 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11433006 seconds)
  done (took 1.728766802 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088220858 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133514552 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110175282 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134780454 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131696395 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108424199 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122722635 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087795872 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129842317 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088190791 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133213843 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150066468 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088595912 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119561188 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.136452758 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087262302 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136160167 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087588973 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115278735 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110457082 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115481684 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134039706 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090026478 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111738019 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101885817 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112948923 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159622865 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093625821 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114578277 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091293018 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110409934 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164809099 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102203195 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123061518 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088332946 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126989921 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.126727534 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086083701 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128587309 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.109715494 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126325704 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088859468 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.112719139 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086024105 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116328517 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122934209 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.088552768 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113701163 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.090315628 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131942654 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088689474 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126234914 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088230849 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11575452 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08940668 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117980025 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121524503 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.088846063 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132260202 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090017371 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129638783 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104278987 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127390046 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128665774 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090930717 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126346953 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102273119 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114899446 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090096626 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116298896 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129599424 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08658122 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114493546 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09902716 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114592443 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111302897 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135557868 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089721398 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123101646 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113039596 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089557648 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113015811 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111794109 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117557148 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088076533 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119135357 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090909924 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11113557 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086816378 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.115642817 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086863976 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.113707261 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091155515 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.112241278 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115961556 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105102245 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114076666 seconds)
  done (took 11.706762104 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089233824 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113422577 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092215007 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113516965 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.088983366 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.113251872 seconds)
  done (took 1.5614232 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114004472 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115502077 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102998282 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118971981 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155017191 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103029757 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128563204 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122561804 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106914934 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125930999 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128623846 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10429776 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.133720284 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120593916 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10283344 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119340456 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103724186 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124150683 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.125713382 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096124572 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135098574 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120022694 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095985268 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131218357 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117281784 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094943944 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124934829 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102364594 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126555892 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122200879 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095083262 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117304077 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.0946336 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121307827 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128864948 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095658623 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119731799 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117513601 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100630459 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116622395 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103650501 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120210034 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126073198 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093192562 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.121753821 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120025256 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093176944 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124301181 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102729509 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.117479087 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.117659596 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094128707 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117358925 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092738812 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119537048 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121269141 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093281114 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128106962 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095434641 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120048767 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11702079 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092110919 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122145623 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116538495 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102680073 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117817431 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094420439 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119594436 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120452248 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095087792 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118164466 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092683688 seconds)
  done (took 9.114735661 seconds)
done (took 33.564015677 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.679059328 seconds)
  done (took 1.628177268 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.812913592 seconds)
  done (took 1.762217678 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.153774343 seconds)
  done (took 17.129874655 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.486124622 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.56964437 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992302029 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.177205525 seconds)
  done (took 3.174417192 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943282929 seconds)
  done (took 1.9118166 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282466332 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230521979 seconds)
  done (took 1.468277249 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.75506059 seconds)
  done (took 1.718783689 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.337317307 seconds)
  done (took 2.290943773 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324500023 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182622145 seconds)
  done (took 1.469106991 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54435281 seconds)
  done (took 1.506417856 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.650942001 seconds)
  done (took 7.617843421 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265294871 seconds)
  done (took 1.238563027 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297445262 seconds)
  done (took 1.262219343 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.338322026 seconds)
  done (took 4.30544963 seconds)
done (took 49.444589554 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097404804 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125127336 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100853902 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.121978327 seconds)
  done (took 1.405795168 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1003131 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119114335 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099740022 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118580507 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124714842 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095541186 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12116006 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099831864 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118546129 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094808794 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119281075 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118228265 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097407336 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121206129 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092501815 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122379249 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098225443 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119264132 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122256191 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095511379 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116730381 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096671795 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122883724 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093665778 seconds)
  done (took 3.59900851 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098512079 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117192701 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095641031 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116484495 seconds)
  done (took 1.403478203 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.09944239 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.140369046 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137251216 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.098976316 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.140994863 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134316877 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091243394 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115144167 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.0936166 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.122748988 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089482252 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.14720834 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134875109 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098912495 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.124375431 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088315297 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115525687 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135131943 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098721448 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124569893 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092049389 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122595152 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089733383 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137516094 seconds)
  done (took 3.74352607 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170046505 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125415426 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136829679 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094681711 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158882048 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139211522 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087066883 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139023302 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087091575 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129039743 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116612521 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132393956 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127377869 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087154541 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112771878 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086893796 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126522292 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126481933 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090250714 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12589722 seconds)
  done (took 3.377510341 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096494744 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11620225 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087647738 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11474329 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098398648 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119739555 seconds)
  done (took 1.609243799 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089515097 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.1128832 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089043507 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11307199 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093073198 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.112852685 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.086745943 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113122017 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088398313 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.112927858 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088294892 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11364559 seconds)
  done (took 2.189654691 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.49282583 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114596824 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.116987016 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087142266 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120707621 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088488412 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127890883 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091244501 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.13824304 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087736798 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.113547191 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089681723 seconds)
  done (took 2.646253093 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230940043 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123785038 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280971758 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364426192 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152647331 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1739244 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275940179 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15783277 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.220606996 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163379581 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200265428 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220227617 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15005795 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187387888 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135786235 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.117306911 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225608504 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243163846 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151231146 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205606484 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221532739 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16545858 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177986022 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149601327 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135686476 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16867454 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093478918 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127779646 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22994687 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174949799 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211834689 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159349358 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14431927 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206430921 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249299074 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216076226 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280122749 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133748614 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149278537 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164087013 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258429944 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135612261 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200077727 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153565412 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129118072 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213772629 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163960004 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173939032 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150530699 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136164294 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192336581 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234059428 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.189262288 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136868689 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299402308 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147254485 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.197185829 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191330854 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246228455 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196881907 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184041236 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118810173 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186047706 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215167295 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183088602 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171828365 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.204174521 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119198288 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221419476 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186141861 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161241369 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21710615 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183630204 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137832961 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167050364 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1705535 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169741521 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254684136 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207646714 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095039114 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164546849 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147624725 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131445039 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.191702387 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098133453 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235881988 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141154136 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135261178 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237521398 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15817241 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159070288 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200959443 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225706331 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146101661 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082843828 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151939446 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154304211 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189427771 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137740553 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156957997 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159386938 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128390211 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180970182 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122532616 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181874318 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.115937369 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17186988 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181074118 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124375001 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158942058 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149545917 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123911378 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197458746 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196982932 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140890632 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104923145 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233366308 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176148606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149564703 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175403371 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223846144 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115648437 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146964739 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223371538 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213676754 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138536615 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223801765 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154445935 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107535694 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.130071928 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180067419 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152620827 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160245822 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132502701 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.1808994 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228599342 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097651148 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136998196 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190068151 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13194908 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130496022 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161538505 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146264042 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110775668 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149482598 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152798202 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205966763 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175764906 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152312931 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163010021 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149720747 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250151111 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113278505 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.148922741 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146565077 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118221677 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.189934587 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195000578 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129592601 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227590121 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169331466 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201003974 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166234198 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133480085 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176204162 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128318139 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0924835 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217574322 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166015432 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159667014 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194410334 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223657932 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.178165531 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.180228327 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169421371 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19704429 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162982825 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153607197 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11108539 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158012734 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168151726 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.121637662 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143630632 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.130993001 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119970654 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13963796 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131702295 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192011236 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193298834 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186817859 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157465999 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147598488 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179465504 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126160335 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171504532 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175824952 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145421005 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196522916 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216963845 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183120365 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141755686 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197929357 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120025351 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096935629 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139584879 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167016231 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132677311 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133415071 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160434286 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179549992 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178026959 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199592027 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207312784 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168622874 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214746281 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094903463 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166271048 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183907199 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17533756 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188376594 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138427312 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.148889357 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17760521 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156106447 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251793315 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165902282 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174571457 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231000709 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122457248 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131170302 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149532998 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191866702 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151513043 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174475436 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144981005 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139640769 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16003841 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131518035 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158412768 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18133835 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160091305 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212599078 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147837226 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182704148 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124937446 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161341413 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158241251 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162224972 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080866048 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17215938 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228927401 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147189084 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165575217 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187861883 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129795135 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.304934936 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237153546 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193580356 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135714324 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154500272 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158460766 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162110771 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170661518 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177763882 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15719653 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185616064 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15692037 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134528625 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112773229 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146310963 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148665687 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129714027 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146311072 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175327248 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137333305 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183414045 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161321653 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157365897 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170004001 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147907711 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.142662002 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120533932 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239610346 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180766323 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236598213 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148684307 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177483628 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201853167 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124037601 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130131409 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104973124 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175750058 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135427946 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216558685 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.184929179 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224805906 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18038016 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192866849 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138393777 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.090323477 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155229421 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196639051 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205225678 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149459156 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156868441 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226424668 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117844174 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13073783 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1754931 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290130236 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142460844 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218284239 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079991315 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276533173 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123466191 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103721264 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161483645 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23276866 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133940562 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.162882383 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191204308 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168569286 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162124686 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147448883 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187762891 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21198064 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226175667 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176594923 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131641862 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15414943 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174936519 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215821571 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129080048 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138490494 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227226569 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193085535 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.192499153 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.140830201 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166596501 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16690959 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156883313 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210138357 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106035903 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231709237 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105091206 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219207399 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150777536 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142116096 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175216032 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.186263824 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139893099 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211869585 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182300792 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132454966 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104692343 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167244476 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205371143 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154701239 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098944065 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177471531 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.1237524 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191521648 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255665677 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133880596 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15428305 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145308019 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107338866 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152347301 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156056477 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139489551 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.160348436 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200838021 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133101284 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187997654 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227713827 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167707102 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171604211 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14311152 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.689314866 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129415589 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192628374 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157906378 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23066181 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120562413 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197416812 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156398758 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165624577 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194441895 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15919021 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229219782 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190057473 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.202272841 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103573153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15462098 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160843851 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142309898 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149217648 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166470142 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157822628 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152183382 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176222697 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19617561 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106745018 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138137073 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197001449 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157345856 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207117244 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177660953 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109858886 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171087241 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212659316 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131584095 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.177478932 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232090284 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112745485 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151230944 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132013325 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155088428 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259110189 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096168507 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2309968 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182825271 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15779093 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166590687 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144742704 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217744133 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155277437 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185047006 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145603798 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159153245 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153232066 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109280015 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12836143 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154129396 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167600386 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148426534 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158143135 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138155272 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215811536 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.094907814 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143093361 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286671488 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214304254 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213308801 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134234964 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133864753 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159493193 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148923371 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173919287 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176205401 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134780944 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107362451 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.134770152 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154552537 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111650304 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15450188 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191312711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162797344 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230651801 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134420515 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249728323 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138622443 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153498309 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086968405 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129818743 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148150436 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143662022 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156515187 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190380896 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26041811 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145567699 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.129951014 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121104756 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12441261 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13352102 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161863046 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161149687 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176157716 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142347361 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080243881 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154421854 seconds)
  done (took 82.118377968 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160638222 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129879913 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144308524 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199995364 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174124607 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267220062 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207833944 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251356808 seconds)
  done (took 2.601902161 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092355551 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144637672 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.155448946 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.130779948 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090686795 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118016366 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.339803649 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130336748 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.114516926 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120346496 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.169663334 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092907048 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.545474491 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089545629 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117105242 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105179447 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090362189 seconds)
  done (took 3.706838898 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.470610247 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.685029919 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.505038765 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.095885009 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.02931929 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112210179 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.504754619 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.19025913 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.112522032 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.466428181 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.77546508 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.154948479 seconds)
  done (took 18.174438708 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114031712 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134060056 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.12269029 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.150137153 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.13881728 seconds)
  done (took 1.737415783 seconds)
done (took 129.27506344 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.10324548 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.39690234 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070391726 seconds)
  done (took 1.571677068 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106448557 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135261601 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107526715 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133605962 seconds)
  done (took 1.56376462 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096809413 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124627212 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10779717 seconds)
  done (took 1.404285562 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.31858612 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188631358 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.166415104 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105583349 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127206402 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101420334 seconds)
  done (took 1.411286319 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096215451 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125502161 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096918228 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128903368 seconds)
  done (took 1.5259814 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093174637 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06987456 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.098700006 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074463245 seconds)
  done (took 1.409654472 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112689382 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13002971 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103283014 seconds)
  done (took 1.424363393 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.128187145 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137194859 seconds)
  done (took 1.344447895 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104879065 seconds)
  done (took 1.179640341 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117195205 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.166169447 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.187238417 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.161888032 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231173641 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16355508 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139045424 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113173372 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129278012 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.141763399 seconds)
  done (took 2.629333408 seconds)
done (took 17.313779751 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101366301 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.511786129 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.411393433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115511818 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719280629 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379768973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.050904348 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144074699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.162535626 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09187926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13767412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671376677 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.000347 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.464791951 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969299596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.369876845 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67553485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118358002 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116978734 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092895527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.037256134 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09100391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1207273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091585381 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701284108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423852444 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093690447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371319126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091415437 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123546562 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382110495 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119862476 seconds)
  done (took 17.022785559 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094656819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171088175 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097343622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135144348 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12102345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093309532 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122259171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092617884 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176544463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.119989857 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109576948 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118889359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123806247 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094040621 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139699342 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091018966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122470594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091606812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118842389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11963407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110638427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118445059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0941126 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119090167 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093710509 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133119263 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093455717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118606168 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118461527 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097196054 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12497581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094550541 seconds)
  done (took 4.748731908 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140265215 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18176752 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127073149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125285924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166603732 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122802443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197017953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116850909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179492684 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120986858 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13711953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091680446 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154891106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093675456 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140782247 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119000224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095734542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120118272 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09146659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120562459 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138147577 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092475793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120528647 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092359714 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12084615 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107684732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.121855844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118371063 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09265247 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123873171 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098894883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122002136 seconds)
  done (took 5.078674707 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096613961 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124580991 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108162297 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.136777296 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094593825 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123665794 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096581396 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.122664302 seconds)
  done (took 1.987474091 seconds)
done (took 29.914098118 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.109715984 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124704389 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106117915 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132378582 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101996608 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130317536 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090823219 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.131603449 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131462342 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101731741 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135204319 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091328308 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121009165 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091268011 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133288895 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096705397 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130752294 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102279496 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132200143 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130797675 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094139805 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131593511 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102353778 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131917138 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103374169 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131674764 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135037664 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099342062 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120671389 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094030929 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123079284 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.102974579 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122067217 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105691726 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124631535 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.095972114 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121419172 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093257819 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131230279 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13110414 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.098539083 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.130636303 seconds)
  done (took 5.927147265 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106921198 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138067222 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104372962 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079878399 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11476848 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079511476 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135745965 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078292708 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108235274 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106965139 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073050144 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.103732052 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077315272 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.099158934 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07660621 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075067192 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106349777 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075402307 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075153948 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104063733 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079045938 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071562484 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106231865 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077694741 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074145777 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.107993476 seconds)
  done (took 3.524576979 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098867215 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132807115 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112373315 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181438522 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157634957 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098606098 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129110471 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109780561 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135179972 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11839279 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095376166 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147173334 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108560436 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127038074 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090692551 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134992293 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133046795 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092908611 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125352811 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110700504 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13664418 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101687809 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138620989 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.130955967 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091427532 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120765644 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095414807 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132045576 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09660343 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129173879 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096570782 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122851681 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12044309 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103897322 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123076585 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093307946 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139388918 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101872819 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.12828925 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092404136 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127187238 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.119181166 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112629469 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158994572 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090378273 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127327678 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0945872 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13019644 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119137365 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110167213 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1293334 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091164126 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.123999541 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091440777 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120563349 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105861284 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.122432908 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093854524 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129685099 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124342311 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105114705 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123137383 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108079013 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12014115 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098143493 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119714769 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092384994 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118371656 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113804867 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120778778 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159430277 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.091806053 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121243743 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101111071 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127651061 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125770547 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092279433 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134414736 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101677786 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123886703 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101504229 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124410842 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094409494 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138034943 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09419926 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.1212105 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.09233441 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126185268 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121564406 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09285965 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134219128 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091038413 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123124221 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109957302 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119217333 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092714072 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125605715 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124973704 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09180402 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134616614 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.096929692 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120535575 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102028475 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119806297 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094537375 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130218597 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123966389 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091925607 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123503757 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098206666 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120220514 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092104883 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122351961 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09300205 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130284886 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099220897 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125073944 seconds)
  done (took 14.594090595 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.223794448 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212003748 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203155585 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.286366161 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133213597 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113589665 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.20829376 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153446891 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121964916 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.156478235 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172178549 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179509165 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139018889 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.208682544 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169252975 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092658335 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140181964 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.132947734 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.23964318 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.256173937 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141100123 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100136123 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.158583051 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.156986244 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133541178 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10055779 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137196567 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131485414 seconds)
  done (took 5.703695381 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105979613 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153308816 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096572107 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142975454 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145418404 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091991926 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125336069 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093432167 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13345298 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133516774 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091745737 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126863215 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099406904 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129528962 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120954821 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102101869 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128923896 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093381273 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124160332 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09579692 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131809203 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101016106 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124386358 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091222519 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.130380121 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119424185 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085352355 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139955921 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092478254 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.1427688 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.118527051 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100918987 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134954249 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092463696 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120953348 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094907512 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122946588 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.093436144 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122328645 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09057189 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119957942 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076469165 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119578854 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105733785 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126007339 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079156771 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127626752 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.09712849 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.122190401 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.118065134 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095978981 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123490315 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.095723495 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128081429 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095235607 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121642344 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096143156 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.112679662 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098328199 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12249751 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083952213 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090103588 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125423897 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.115621553 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100441218 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125530279 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090677653 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12346236 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096491569 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127070905 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094336409 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127312872 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090189701 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123269617 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095208453 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126496611 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095851962 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120696379 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092865195 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120962301 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074466185 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121377916 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073711427 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124453732 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091458609 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120272087 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094319098 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127843969 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13500465 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094453685 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129231416 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094368622 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120044349 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095823027 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111285133 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095520348 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137869999 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139919041 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092827384 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.119091131 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106767533 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.123964919 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09204062 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.103662953 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10128747 seconds)
  done (took 12.764859842 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126734669 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151774648 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094711037 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139438911 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154391277 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156061756 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100048609 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128332605 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094258462 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139787455 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092919659 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129278926 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09243965 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135354018 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155112482 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103772805 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122921826 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107071416 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125495791 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.166575107 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111056823 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.14084684 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110760867 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123072172 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098191768 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138929875 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159478092 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10698949 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.135099354 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140404538 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107309241 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158389499 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112692254 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.126216076 seconds)
  done (took 5.407993416 seconds)
done (took 49.005535349 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.207303332 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.41595676 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.182363743 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.066966615 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.219118199 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.18377076 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.213242062 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.181438959 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.426512672 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.182040504 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.422040283 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.751927319 seconds)
done (took 59.569030122 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.210166271 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.316122198 seconds)
    (2/2) benchmarking "String"...
    done (took 1.449526057 seconds)
  done (took 3.874743386 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.533881561 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.082279222 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.439694187 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.181587292 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.180228637 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490675733 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.724595874 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.445545701 seconds)
  done (took 27.652391176 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.188755567 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.257648275 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.204030079 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.188144533 seconds)
  done (took 5.94905632 seconds)
done (took 47.331297239 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.181554152 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.247128841 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.180622712 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.169912357 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.284118837 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.202457664 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.485848315 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.189403944 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.195040987 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.160275463 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.19843812 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.196543075 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.184131575 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.508262531 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.179659943 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.184018279 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.201735444 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.687608736 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.542120063 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.181466996 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.197408872 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.188873929 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.193523198 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.194702163 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.247056926 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.177301841 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196299668 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.181630581 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.180184223 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.182623694 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.275443242 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.680596977 seconds)
  done (took 189.363694523 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.175796209 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.211385856 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.310969098 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.205063189 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.536511458 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.378750771 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.312727059 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.691177153 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.194170535 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.1918199 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.417941856 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.180968006 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.479581378 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.150082668 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.205822521 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.280372677 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.376887779 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.477614493 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.225906892 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.354437123 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.199430588 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.407420524 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.319215517 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.392234433 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.2190925 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.295641432 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.230969238 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.181747054 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.365167434 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.324619486 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.183851551 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.217851738 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.713021407 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.039414432 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.194348163 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.180670162 seconds)
  done (took 148.926231074 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.222450679 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.177683398 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.177778955 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.178109433 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.205152663 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.177418824 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.664459894 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.669246968 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.671577511 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.685562421 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.273572667 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.365967062 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.178033735 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.268196012 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.190439144 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.179686102 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.192597311 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.218729482 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182957256 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.177639298 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.668061134 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.193187543 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.332622793 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.355419206 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.192399202 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.205589166 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.564389409 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.179604553 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.206181925 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.496333217 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.221440582 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.179232866 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.469549833 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.974286813 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287974309 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.180306525 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.180996839 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207677621 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.180335037 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.449993167 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.179577022 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.178678762 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.179935172 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.182504988 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.752281322 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.180955139 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.667868625 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.1842845 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.044891892 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.180970821 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.180047767 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.76211868 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.184674195 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.696197595 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.19726533 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.181225345 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.180601675 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.183470954 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.18114953 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.181239353 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.208185761 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.923683033 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.272508918 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.196840322 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.184546805 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209322805 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.182060024 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.290839366 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19655826 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.635426147 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.247524983 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.402298638 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.671910866 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.185407253 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.275671272 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2980828 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.182284089 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.181958534 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.181470453 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.181778058 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.28806359 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.182239135 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.546222213 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.345268985 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.197546226 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.290853943 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.277407294 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.182166694 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.48243257 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.185602241 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.181768279 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.856225564 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.276482013 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.183961511 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.182755475 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183113212 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.551320104 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.678780044 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.346719232 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.189961407 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.882972262 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.188529748 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.573603288 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.6686056 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.783459436 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.191678653 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294537672 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.350322155 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.202885393 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.188067549 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.286341148 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.192139306 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.247042549 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.187642868 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.582186872 seconds)
  done (took 361.869609749 seconds)
done (took 702.489684857 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.85080314 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.846703508 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.946672996 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.842319103 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.805046289 seconds)
  done (took 10.407628037 seconds)
done (took 11.524245601 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.360011595 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.357322386 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.242129926 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.360502175 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.214655031 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.373727977 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.337546679 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.208403296 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.281777296 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.261414072 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.282176667 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237101852 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21477789 seconds)
  done (took 17.84812672 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.487595958 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.480687024 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.253703323 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.494128583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229815459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.487112296 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388606227 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392584476 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.394539923 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222409112 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203361483 seconds)
  done (took 16.152751102 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.494604365 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.491481122 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257478335 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.489955913 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23161515 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.492682691 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384832619 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.40636778 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397004681 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222101648 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204097073 seconds)
  done (took 16.189714759 seconds)
done (took 51.30818554 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.199029856 seconds)
  done (took 2.317616335 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.233617395 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.39052097 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.214037153 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.206369238 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.200990481 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.201362632 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.206953255 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.20063081 seconds)
  done (took 10.973733907 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.197621134 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.196952132 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.199805301 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.196788954 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.196987789 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.197290768 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.200139111 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.19880478 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.197290617 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.199416517 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.199286862 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.19951561 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.197125757 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.196920817 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.198752882 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.200569237 seconds)
  done (took 20.29175269 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.199674068 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.197649561 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.196789784 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.198907785 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.198391656 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.19823516 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.199728052 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.198613745 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.198209104 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.198569384 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.198210861 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.198267303 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.198996776 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.198394383 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.198435002 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.199193062 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.199422771 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.199241956 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.203712968 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.199589223 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.199634635 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.198477128 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.199371487 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.200398613 seconds)
  done (took 29.897776715 seconds)
done (took 64.600328984 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.149783734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.708298748 seconds)
  done (took 8.978143137 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.201721623 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.20033415 seconds)
  done (took 3.523870807 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.202803043 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.202482472 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.201917602 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.202724645 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.20238999 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.202106853 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.201578789 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.202403158 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.201469081 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.202358124 seconds)
  done (took 13.143636644 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.201232491 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.202621688 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.199952261 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.201792605 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.201464013 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.199239918 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.202228879 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.201019357 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.202576226 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.19963647 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.202563811 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.200651809 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.202643661 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.201004265 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.202898273 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.201076874 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.200969946 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.200586252 seconds)
  done (took 22.746029022 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.203824167 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.203698508 seconds)
  done (took 3.529336653 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.20168272 seconds)
    (2/7) benchmarking "second"...
    done (took 1.20215916 seconds)
    (3/7) benchmarking "month"...
    done (took 1.20079199 seconds)
    (4/7) benchmarking "year"...
    done (took 1.200945091 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.201696882 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.199545281 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.201488793 seconds)
  done (took 9.530727296 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.204622879 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.374294845 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.450959222 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.825271798 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.206217127 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.207707532 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.03432033 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.207540169 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.210960901 seconds)
  done (took 13.845243104 seconds)
done (took 76.418028849 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.170650139 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.214603659 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.26350362 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.205486554 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.230929478 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.499688838 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.240585747 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.321147027 seconds)
done (took 37.270778738 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.212893599 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.1829958 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.811924433 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.183426645 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.156681205 seconds)
  done (took 18.460286792 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.139309319 seconds)
    (2/2) benchmarking "read"...
    done (took 1.53621987 seconds)
  done (took 4.799180752 seconds)
done (took 30.596471464 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205813346 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.205746958 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.204084712 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.204999311 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.204004536 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.203498495 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.202915841 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.203391166 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.207179977 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.205913773 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.207359314 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.206287165 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.205892513 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206209747 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.205602327 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202765371 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203251711 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205437871 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.204425988 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204319435 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202111954 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205989325 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.204229026 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.204366554 seconds)
  done (took 30.041447376 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.207058909 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.203136287 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.205440993 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.206708868 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.202268303 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.206835537 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.209871801 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.195730042 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.198326651 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.198732919 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194775388 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.195326687 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.198561194 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.195281176 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197282834 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.192615705 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.189735625 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187225432 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189688071 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.18766985 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.190071333 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18830368 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.187814385 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.191318604 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.180682633 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.179795907 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.182552243 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.181380101 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.183574213 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.180711047 seconds)
  done (took 36.933292599 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.187598321 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.188516384 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.178989342 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.179139207 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.179708756 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.178675381 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.179761325 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.180245172 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.179657603 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.18048982 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.177114989 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.176499325 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.177098198 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.177203303 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.175936187 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.177505236 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.17703357 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.176340605 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.177353846 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.174996831 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.175519449 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.174643634 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.174633878 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.175920102 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.174794077 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.17558594 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.176614364 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.173035405 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.1721778 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.173448209 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.17282363 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.172679345 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.172581847 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.172828386 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.173825598 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.172633641 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.176156589 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.177370007 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.172820905 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.172434121 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.172662829 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.173169951 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.172915821 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.172594369 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.172507314 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.172710893 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.174030397 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.173716669 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.173124331 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.173824726 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.173228666 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.172281961 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.172596764 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.173383021 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.1738678 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.173360986 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.173444216 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.173837904 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.174501323 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.174026513 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.174008489 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.172450529 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.172287625 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.172721702 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.172363119 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.172116668 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.173070926 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.173199765 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.172482366 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.171717195 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.169972127 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.169913956 seconds)
  done (took 85.70075154 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.170275101 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.168850452 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.167266644 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.167311236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.168303346 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.169707764 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.166651289 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170073474 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.167236186 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.170178743 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.170961055 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.169467895 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.167994288 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.170695254 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.170444273 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.167668177 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.170513936 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.167239859 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.170822314 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.17029906 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.170863662 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.167570053 seconds)
  done (took 26.811877974 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.171012969 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.172445044 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.167213661 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.170587423 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.168355411 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.170591344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.171610307 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.172594285 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.171090609 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.168900416 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.168244065 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.171510321 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.168587497 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.168339931 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.168973306 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.170549712 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.170626213 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.170783085 seconds)
  done (took 22.153050516 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.169774451 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.170179834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.172515434 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.168741378 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.169726034 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.172430508 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169839983 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.173520003 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.172855562 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.169771206 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.172160169 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173362666 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.172271201 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170145586 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.17289326 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.169437459 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.173471727 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170606635 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17244088 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.170567831 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.170237798 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.173844742 seconds)
  done (took 26.863437123 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.173294195 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.172749476 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.171804455 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.171206039 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.17057564 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.172064016 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.173796907 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.170179674 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.174400447 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.17209407 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.169895018 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.17253746 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.172273308 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.171420229 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.170444148 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.170833052 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.173574026 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.171332092 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.172102643 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.170243586 seconds)
  done (took 24.530319183 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.173419375 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173220312 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.174411412 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.174662495 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.174774929 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.17248231 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.171795281 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.172764512 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.172089213 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.172635645 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.173104638 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.171851462 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173368904 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.173240212 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.170466553 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.170889328 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.170320974 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.170693366 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.170998333 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.170849742 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.171580349 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.171485986 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.168259137 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.168186189 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.169140675 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.168901083 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.169765323 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.168505163 seconds)
  done (took 33.897286269 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.169041202 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.169452699 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.164502248 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.164042037 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.165869735 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.164746026 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.164373264 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.165437082 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.167796849 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.166208777 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.167957968 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.167885363 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.167309208 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.168046744 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.167114919 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.168961264 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.167032118 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.165609246 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.165578044 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.165002393 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.167470666 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167676932 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.167516952 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.164818795 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.165719787 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.167971026 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.166177833 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.165608945 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.167793696 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.166041312 seconds)
  done (took 36.088865491 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.186930382 seconds)
    (2/2) benchmarking "in"...
    done (took 1.187662275 seconds)
  done (took 3.462438741 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.166856164 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.169284402 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.168823622 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.166142884 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.165982249 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.168094266 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.169480915 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.166283923 seconds)
  done (took 10.429545872 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.169518246 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.169174676 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.167974357 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.168779789 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.169861369 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.169627622 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.174078435 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.187529958 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.170690354 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.171011678 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.175746736 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.176973812 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.173214811 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.170445762 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.171811714 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.172826134 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.170891506 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.170293465 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.172337166 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.171184637 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.171161136 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.173586682 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173777523 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.169175594 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.172750962 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.181272923 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.193769005 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.171755465 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.172417229 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.17522298 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.172245488 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.168979941 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.172281427 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.173119623 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.172448997 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.172528841 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.181236475 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.191728338 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.181462509 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.192881038 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.174504481 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.172164048 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.174476825 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.176034312 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.176219308 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.175199499 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.174887721 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.173267474 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.174924104 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.177256234 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.17824039 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.174312471 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.172879055 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.1791267 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.175989415 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.181455998 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.1935327 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.177509228 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.182755208 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.18504653 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.205469103 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.197906003 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.177552985 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.175659241 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.184031769 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.194751613 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.183117589 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.191556888 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.173156192 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.177203265 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.182717494 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.205232727 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.198928292 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.176917388 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.176249811 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.177141856 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.17584363 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.177727488 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184267648 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.195458362 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.177864215 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.177241516 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.186156753 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.195560692 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.176503268 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.177030026 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.177854748 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.176764219 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.179341421 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.186454721 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.196013895 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.178055963 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.178033605 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.177869462 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.179036646 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.178396996 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.177593401 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.178826614 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.175340958 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.178783188 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.178660846 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.180941494 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.184994061 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.177504228 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.178343901 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.184651065 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.196364139 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.178071048 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.184851459 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.178903719 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.179440187 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.180008783 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.183177984 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.177713526 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.181866237 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.186815996 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.179990733 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.180464858 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.179431576 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.180010568 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.188196378 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.200767828 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.179200025 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.181012159 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.183635073 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.188042263 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.17986424 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.181532098 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.180329833 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.177954352 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.178631658 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.181278463 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.1811588 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.181156257 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.180136261 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.180896673 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.177151858 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.180812758 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.180704136 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.181914072 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.181261587 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.180859267 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.181398722 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.182683289 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.18097923 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.182764625 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.181646867 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.193503835 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.17664558 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.17609941 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.174020457 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.175385226 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.175997553 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.180290932 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.172582934 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.172404421 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.172450036 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.172401164 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.174102351 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.17319672 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.17388142 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.173574011 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.176707223 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.169577556 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.172941446 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.169485158 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.166939466 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.169920406 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.170496448 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.170274275 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.171828661 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.1674397 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.171748581 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.17423296 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.170337088 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.168721993 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.171007186 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.169419752 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.169149998 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16955665 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.171984775 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.175373963 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.168567624 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.176299224 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.187260456 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.169253991 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.17016373 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.170729868 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.168988298 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.169732783 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.172700072 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.175553325 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181875414 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.191908711 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.170985562 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.173497378 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.170726707 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.172330266 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.174417224 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.16966169 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.17023449 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.169964449 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.171150752 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.17076691 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.171968879 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.170446445 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.169857467 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.171492901 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.171155434 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.170158589 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.171963616 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.172606165 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.172930105 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.1694467 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.171723672 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.171906265 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.172154521 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.170050812 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.170404616 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.171463692 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.172292946 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.171428017 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.179033139 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.169213988 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.173539569 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.172735189 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.17186026 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.170229242 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.172150052 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.173832129 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.172719548 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179664192 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.189571542 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.172921233 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.178344654 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.190431309 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.171626688 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.174840503 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.173129427 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.170476245 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.174236311 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.179342719 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.173348816 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.17316059 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.173360006 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.173295566 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.173145295 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.179495547 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.188528361 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.17278865 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.17414386 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.174955384 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.171745477 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.175846312 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.173952838 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.173647452 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.175766447 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173653006 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.17489352 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175469284 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.17390838 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.175435457 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.174743864 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.176747175 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.180613429 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.179658189 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.174183841 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.175380001 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.176608191 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.177944027 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.175067378 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.17449131 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.174809661 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.186219202 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.196951778 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181445576 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.193186385 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.1769026 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180692834 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.193267863 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.179039208 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.17615498 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176157439 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.1767469 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.177040676 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.173699949 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.176936347 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.176425339 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.176932497 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.176473599 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.179121223 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.177101594 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.176564023 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.175725402 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.176870921 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.176576064 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.176738945 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.177348061 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.179229424 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.178180413 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.176196058 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.17755781 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.183103595 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.194599372 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.178593651 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.176323693 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.176388877 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.17628209 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.178684363 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.177344159 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.179826249 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.183519986 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.180227054 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.184436504 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.178692522 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.186587903 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.177696239 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.180078002 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.183274202 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.175428738 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.177183979 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.17792036 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.177535504 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.18496644 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.19633385 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.178665013 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.181600995 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.178309478 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.178758681 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.178714882 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.178676682 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.179006287 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.179021622 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.186986241 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.196797447 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.182427819 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.179892343 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.176668467 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.179667229 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.180205451 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.178517607 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.181915322 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.179421052 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.17988483 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.179951799 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.179911186 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.17972332 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.179358239 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.180989615 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.17687822 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.180371531 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186503955 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.199530828 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.184303479 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.180562207 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.187550731 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.199346471 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187912277 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.198584846 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.181326113 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.18044252 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.17985381 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.182777725 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.18001886 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.180654628 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.180765106 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.181626108 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.183801805 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.180805404 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.18328751 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.182015431 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.181936594 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.180887715 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.191397307 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20189659 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.18238233 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.184707747 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.178892386 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.182349948 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.184628603 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.181618684 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.181591803 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.185244041 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.190542307 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187521464 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.182340412 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.181774534 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.182922176 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18323713 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.183981829 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.182737734 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.183753751 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.183428587 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.183183914 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.183111519 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.186303339 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.183124526 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.183446057 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184528021 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.183675562 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.191620435 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.202262659 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.18366003 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183465403 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.184150433 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.184668424 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.184236383 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.183409342 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183441401 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.184092644 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.18525277 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.189379342 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.189780744 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.185738772 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.18385539 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.18467689 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.184010906 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.18465111 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184207818 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.18477599 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.184856791 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.184819923 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.183875944 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.184652659 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.183902673 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.184963905 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.184291386 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.183997648 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18690683 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.190732469 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.184482942 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.18290245 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.184986112 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.185089354 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.183996389 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.184532082 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.19209027 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206369196 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.194283838 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.19243219 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.188100291 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.186496068 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.188941424 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.191489417 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.184804054 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.187692082 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.18476422 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.186931339 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.186573017 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.188108095 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.186665336 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.192280157 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.204372422 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.186061278 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19656822 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.20575643 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.186216768 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.187979621 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.191145827 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.187648735 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.184302715 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.187548768 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.186345361 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.194301027 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.20701437 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.186673679 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.188310018 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.1873321 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.189320398 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.191712595 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189093918 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.188911725 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.185540166 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.188880998 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.187816079 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.187185911 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.185994225 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.187486738 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.188416783 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.191594982 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.19329245 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.186302542 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189924543 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.188522092 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.1892833 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188055186 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.18871 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.187073504 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.186050963 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.188123732 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.188487697 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.188108589 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.190904526 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.188096601 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.189720346 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.189851443 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.188336275 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.191817487 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.196988336 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.194633327 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.186699497 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.18851522 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.190004959 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.192439436 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.188957603 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.189365633 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.190535984 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.190878286 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.189736782 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.190176518 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.190619622 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.192103287 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.203587365 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.206982692 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.190099352 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.190641209 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192955159 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.190413841 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.188327607 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.190523863 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.192270324 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.192252761 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.196497717 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.190968226 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.196575472 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.20823219 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.192151804 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.193897996 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.193714975 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.197006332 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.193150169 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.190203205 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.191433437 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.195063895 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.205469779 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.191945981 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.200003627 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.217168203 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.209465524 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.192395567 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.192189229 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.191578691 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.192696799 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.194761854 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.191422884 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.193151782 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193039856 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.192196403 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.193663131 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.196333734 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.193293197 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.194402334 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.192756985 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.192536603 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.1927424 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.190300362 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.192315479 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.193921487 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.192397682 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.192964937 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.192720317 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.193488162 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.203645585 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.217834976 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.194582905 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.194196002 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.191612726 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.195984107 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.196128487 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.201109483 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.199499945 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.193857855 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.192975901 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.194600299 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.194980096 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.192459883 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.194474981 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.194417158 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.193740961 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.191078154 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.205099883 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.217263544 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.198966846 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.194126533 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.194899659 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.194739193 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.195747845 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.194985187 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.195078226 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.195914483 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.197048032 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.197242723 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.195100345 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.195685272 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.197256489 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.200893315 seconds)
  done (took 706.082910655 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.193827803 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192136992 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193641012 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.192756198 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192818545 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193537156 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192492417 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.193038271 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.19278049 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.192808115 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.192903436 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19352018 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.193158673 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.194035573 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.193118636 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.193367958 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193258367 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.193211337 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.193827426 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193926227 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.193283518 seconds)
  done (took 26.170390052 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.197445187 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.194637652 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.194535835 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.19683882 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.194591623 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.196928644 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.193768327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197658148 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.196890067 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194465233 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.196853312 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196839027 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.194508208 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.194960728 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195040093 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196754558 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.198371595 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195101628 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.19742888 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.196134174 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198222958 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.196826612 seconds)
  done (took 27.428729654 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.198277603 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.197377064 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.196943566 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.194916447 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.197823104 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.195749544 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.198714373 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.198506774 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.198738508 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.198830269 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.198064002 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.19904036 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.204343961 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.201784214 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.200213019 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.198762402 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.343224888 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.198544641 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.198110414 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.198827545 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.197121051 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.203839908 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.216293946 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.197063989 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.198117118 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.198990168 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.199659421 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.1990973 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.199369185 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.199325616 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.202196649 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.199779567 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.198824496 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.201346903 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.198580013 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.201483463 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.202146302 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.200017097 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.197784503 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.199532177 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.209234065 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.216833267 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.199751862 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.206740525 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.219638818 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.200512629 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.202259333 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.206486892 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.197926081 seconds)
  done (took 60.103763978 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.200709606 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.201033931 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.198412211 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.201961428 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.200498748 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.201597778 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.201106515 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.201167755 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.198602255 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.199345386 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.201479462 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.198341213 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.198128763 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.201499463 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.201770326 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.199168417 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.199630823 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.199543498 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.200265005 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.199095945 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.199999224 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.203638644 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.203081931 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.199734978 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.202831921 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.200719211 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.19929537 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.202398567 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.200622163 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.200913158 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.201830199 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.203102492 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.202884679 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.201004165 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.200491955 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.202419572 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.203929944 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.199445823 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.202379749 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.200633855 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.202934268 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.20365726 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.202952864 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.202609898 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.200556306 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.200824696 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.200275946 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.200544447 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.20116231 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.203470857 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.203528147 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.201308116 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.203310045 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.201665258 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.204118558 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.203654358 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.201757018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.200900854 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.20387964 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.202475029 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.202091565 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.203538416 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.202828726 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.203919591 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.203894517 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.202771085 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.202340435 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.204963158 seconds)
  done (took 82.82617421 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204732423 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.204422338 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.204540576 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204682145 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203885494 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.204344549 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.204138896 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.20437307 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.204041498 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.205419007 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.203144963 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.205025153 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.204555332 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.204718506 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.205157366 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.204473075 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.205231249 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204372501 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.204156923 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204831502 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.204675258 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.205904275 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.20499342 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.205442703 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.20605903 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.205194338 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205983437 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.205656106 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20487011 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.204899579 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.205952458 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.205724073 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.205618752 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.205282387 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.205752703 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.205608065 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.20590077 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205097093 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.205339387 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.206770975 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.206517418 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206440016 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.206068527 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.207249346 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206622638 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.206614963 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.207653035 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.206799805 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.207520738 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207662077 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.207215648 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206954006 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206371729 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.206118684 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.207846952 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.208200502 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207150297 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.207253044 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207518053 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.207493783 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206732953 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.208369334 seconds)
  done (took 75.880475198 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208457104 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.207711175 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.205153198 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.206162825 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208391607 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.206025144 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.20818768 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.208333295 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208948284 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.208571117 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20826571 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.206762951 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206348912 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209117297 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206387497 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207119721 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206124812 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.20768414 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208896333 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.206208311 seconds)
  done (took 25.274311465 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.206978501 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.210203471 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.207601716 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207015863 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.210084848 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.206779584 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.210060311 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209954215 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206854625 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210417115 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.209752456 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.210140964 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207179303 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208040272 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.209958888 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.208355419 seconds)
  done (took 20.465556041 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.207607576 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.210142777 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.209939925 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.209555339 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.207110685 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.208835815 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.210119398 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.208518134 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.207962477 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.212396576 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.21098639 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.210625575 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.211178581 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.209972923 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.209361664 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.211741879 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.208891875 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.208355732 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.211766804 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.210984071 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.209410335 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.209010856 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.211585992 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.21190055 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.208821081 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.209284076 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.208787381 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.209437115 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.209513906 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.212219567 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.210152113 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.210876457 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.210140797 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.211044387 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.212140035 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.210561137 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.2127053 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.212315677 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.213449482 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.212631112 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.213196501 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.209977567 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.212050575 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.212534313 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.210097388 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.213136052 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.210064818 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.21145633 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.210241262 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.210577726 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.213203884 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.212499401 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.213274395 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.213734241 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.213265454 seconds)
  done (took 67.719589416 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213657441 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.213262151 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.211790424 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.213160851 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.215069915 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.212421847 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21547302 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.214552256 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212867785 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.214454039 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.212984045 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.215127646 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211811401 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214767482 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.212594885 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214604927 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.212170372 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.21204392 seconds)
  done (took 22.973516036 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.212190713 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.213040843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.214470887 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212197803 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.212549389 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.215254941 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211865162 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.214997232 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215437114 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.213248439 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21231976 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.215840581 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214958942 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.21534155 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21351498 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213293236 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.216098851 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215494525 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.212801696 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212917855 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.21661946 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21664147 seconds)
  done (took 27.842386821 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.215425457 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.214357676 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.215478412 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.229077721 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.231349276 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.235338831 seconds)
  done (took 8.473407092 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.222252683 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216674702 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213994445 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217720871 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218063803 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21414135 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214102773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213755849 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217562193 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214664898 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215134485 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217065238 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217237806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21450291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217139134 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216693515 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215505691 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215117609 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216228672 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217792997 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21557239 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217732293 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215364468 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215557425 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215496487 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215827661 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2180277 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215828138 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215612452 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218952345 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218338499 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215701478 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218071674 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.215474139 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219256391 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218824337 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216221072 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218649043 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218800739 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215126508 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.218631584 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219607839 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219318544 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217593118 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219023945 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216465295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21733685 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217067658 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216074943 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220181047 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219393521 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216607865 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218681816 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219348404 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219858416 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221120541 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218028808 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216690225 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22001716 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217331759 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217444718 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221012408 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21783497 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217794747 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219475956 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217273983 seconds)
  done (took 81.498922256 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218146307 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218114888 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217705172 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218986689 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217832401 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218712856 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217623523 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219486778 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218423261 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218953333 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221220517 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218447944 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218359047 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219533867 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21975447 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218481386 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218887468 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218552079 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219550875 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222048874 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219305282 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220266449 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220108545 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219733755 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220071657 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223299282 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219790201 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220254293 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219061426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219000945 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220030232 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22034315 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219580318 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.219987866 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219585744 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2188435 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220657158 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219699244 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220406642 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223236822 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220682408 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222188515 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219664071 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218820511 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220905178 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220175528 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22082674 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220293041 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220656862 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221262695 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221151626 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221758023 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22125359 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220591447 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221314481 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220665847 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221100202 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221701611 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221849753 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223863613 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221643894 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221708865 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225089471 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221275247 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221931758 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222180876 seconds)
  done (took 81.675572404 seconds)
done (took 1652.4534926 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.244401167 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.299970722 seconds)
  done (took 13.683566397 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.386361463 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.33966973 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.22261207 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.218286886 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.2227705 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.241363328 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.244699501 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.22322295 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.223208809 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.222173562 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.223417267 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.410908611 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.221478705 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.223792595 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.222922156 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.316932637 seconds)
  done (took 41.305259246 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.247015654 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.230719658 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.334962633 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.253119706 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.253461034 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.403501266 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.286460956 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.235227304 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.388580649 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.276356314 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.70774184 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.258502622 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.232765029 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.283201134 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.254354937 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.40342286 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.468364093 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.721449902 seconds)
  done (took 28.380773801 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.644094641 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.243802466 seconds)
  done (took 9.032935794 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.248850412 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.232605675 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.231620644 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.23053118 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.22382032 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.228914014 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.230480762 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.223326184 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.602002198 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.354043329 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.238968219 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.239141217 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.24953703 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.232220955 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.229666055 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.266093226 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.381728771 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.230112624 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.229568649 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.237844418 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.231764511 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.34891809 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.270973745 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.230272257 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.34876695 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.604752929 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.239456811 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.239850884 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.3649735 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.231509403 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.232314473 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.23220678 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.234494348 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.824887425 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.711995426 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.245792801 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.270250956 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.241596443 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.231037936 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.41943424 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.23555219 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.240046563 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.226394228 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.701335098 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.360952174 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.342450769 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.403534437 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.255564889 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.234836274 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.292759182 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.234409561 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.23414474 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.26093241 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.967081651 seconds)
  done (took 105.235876872 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.269545206 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.615944028 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.395757742 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.243713299 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.991190962 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.971142329 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.246966053 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.495438998 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.253591985 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.229963361 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.511016987 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.719566027 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.246407141 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.240351644 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.742555485 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.310133022 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.226971558 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.088547271 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.243462944 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.228606386 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.703148269 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233942973 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.232449489 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.35533779 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.265293897 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.665005307 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.517770398 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.750949621 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.249782735 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.228571885 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.679230114 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.251789039 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.247486906 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.233584228 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.480012016 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.564614136 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.555317941 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.24916095 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.23656214 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.235022117 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.252323238 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.658567476 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.566259434 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.24488825 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.244047223 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.66477443 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.245239054 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.236830759 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.234904119 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.436555536 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.945740331 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.229561994 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.521360138 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.236279214 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.516722971 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.278303495 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.318420771 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.692732312 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245892473 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.344204097 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.290426731 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.231473242 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.237841521 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.233274054 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.232445826 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.555879066 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.651571755 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.23596791 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.556165923 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.690649263 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.251067762 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.753442595 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.087532087 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.237426038 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.285428934 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.231487279 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.878278584 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.704977332 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.290211403 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.231833088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.542966567 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.250254706 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.498780391 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.246735663 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.232145949 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731537155 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.232514154 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.267131929 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.231956257 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.232370099 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.009688718 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23455208 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.506232359 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.293705538 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.232748155 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.233416262 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.248956375 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.23214549 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.249236112 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.231546741 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.740338438 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.257183264 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.189308558 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.251330775 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233516112 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.239847826 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.234284202 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.234385736 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.456886211 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.699415413 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.257139111 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.236774797 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.233713601 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.236455265 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.366611476 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.239797773 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.521287834 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.250328607 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.234138695 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.241191406 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.963096212 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.277767221 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.234596643 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.252688237 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.134097798 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.437038585 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.251882341 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.234316932 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.235306682 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.250423799 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.40981445 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.25549445 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.308981824 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.237896875 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923502165 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.272193225 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.243403499 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.579589561 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.239958212 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.056645175 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.259647575 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.23506808 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.514545584 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.491325924 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.520799817 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.238449964 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.25292606 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.9066452 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.259813062 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.380899629 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.253859619 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.220183338 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.432085315 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.441106002 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.236486834 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.850808545 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.236905652 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454718001 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.23610167 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.546045387 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.711050456 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.251202932 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.239214413 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926907289 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.92230226 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.993762758 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.238575599 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.502276067 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.208572117 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.70200532 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.236495714 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.237708675 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.818929072 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.238736607 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.238474339 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.238218602 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.237999252 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.309024408 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.40881139 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.451788668 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.240120317 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.668334595 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.29124594 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.238172515 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.265474635 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.239592389 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.584069798 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.25304018 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.240170281 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.278673692 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.239507889 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.246066338 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.691067068 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.169069201 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.244942499 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.390054135 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.851310273 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.26202695 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.238581009 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.861885877 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.460357516 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.764010673 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.283769974 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.529147161 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.262652458 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.276403032 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.980564663 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.257382193 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.732527685 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.2590841 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.245595413 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.819978831 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.255014623 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.311061439 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.240399445 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.240952962 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.763586319 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.254924232 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.240246843 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.392245649 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.257235227 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509156423 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.240884453 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.258327692 seconds)
  done (took 1087.844333028 seconds)
done (took 1286.623219437 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.240805906 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.246925162 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.229161163 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.246605207 seconds)
  done (took 26.124331268 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.254469735 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.24679111 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.248073685 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.245908187 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.25012943 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.246747076 seconds)
  done (took 8.654342769 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.271110088 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.247225374 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.248248471 seconds)
  done (took 18.928305447 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.440882544 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.492474392 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.58667113 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.376018886 seconds)
  done (took 10.058674435 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.25064741 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.248626838 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.249451541 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.251392044 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.252512779 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.254000458 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.250902744 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.251222774 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.253700116 seconds)
  done (took 12.424957433 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.25111201 seconds)
done (took 78.60343748 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.245873773 seconds)
    (2/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.307158021 seconds)
    (3/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.911448111 seconds)
    (4/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.372700791 seconds)
    (5/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.952578083 seconds)
    (6/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.361424692 seconds)
    (7/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.558638112 seconds)
    (8/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.224161754 seconds)
    (9/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.69164504 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.488760798 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.664870339 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.299872998 seconds)
    (13/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.269598581 seconds)
    (14/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.588665471 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.285207005 seconds)
    (16/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.225162384 seconds)
    (17/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.382841545 seconds)
    (18/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.672383679 seconds)
    (19/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.27225118 seconds)
    (20/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.22716293 seconds)
    (21/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.261236857 seconds)
    (22/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.22671899 seconds)
    (23/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.254312298 seconds)
    (24/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.260864042 seconds)
    (25/286) benchmarking ("sort", Float64, false)...
    done (took 5.522969916 seconds)
    (26/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.243920834 seconds)
    (27/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.257754671 seconds)
    (28/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.302511369 seconds)
    (29/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.98052204 seconds)
    (30/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.251405749 seconds)
    (31/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.255708849 seconds)
    (32/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.246417421 seconds)
    (33/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.979405876 seconds)
    (34/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.269725225 seconds)
    (35/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.618335779 seconds)
    (36/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.021951586 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 6.260606587 seconds)
    (38/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.423009178 seconds)
    (39/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.581657477 seconds)
    (40/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.579824799 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.347879453 seconds)
    (42/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.273570332 seconds)
    (43/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.227627656 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.129232679 seconds)
    (45/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.233368725 seconds)
    (46/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.232084749 seconds)
    (47/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.29662601 seconds)
    (48/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.228355344 seconds)
    (49/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.903677434 seconds)
    (50/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.947855551 seconds)
    (51/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.371906453 seconds)
    (52/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.226572025 seconds)
    (53/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.289821389 seconds)
    (54/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.271283258 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.871077064 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.362950179 seconds)
    (57/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.357263115 seconds)
    (58/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.508562568 seconds)
    (59/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.985811288 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.134253305 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.349397053 seconds)
    (62/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.617287747 seconds)
    (63/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.275844245 seconds)
    (64/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.303602197 seconds)
    (65/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.452901273 seconds)
    (66/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.815411337 seconds)
    (67/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.272277321 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.227577962 seconds)
    (69/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.58457652 seconds)
    (70/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.273103096 seconds)
    (71/286) benchmarking ("sort", Int8, true)...
    done (took 6.247197595 seconds)
    (72/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.289060035 seconds)
    (73/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.305210112 seconds)
    (74/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.450754932 seconds)
    (75/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.066201142 seconds)
    (76/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.598134735 seconds)
    (77/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.2355081 seconds)
    (78/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.353617113 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.227703935 seconds)
    (80/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.273566439 seconds)
    (81/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.269805834 seconds)
    (82/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.244109783 seconds)
    (83/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.830524814 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 5.396933159 seconds)
    (85/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.236222774 seconds)
    (86/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.273299212 seconds)
    (87/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.273819505 seconds)
    (88/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.258536561 seconds)
    (89/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.332919945 seconds)
    (90/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.407715726 seconds)
    (91/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.23440639 seconds)
    (92/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.253367704 seconds)
    (93/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.623930872 seconds)
    (94/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.373547737 seconds)
    (95/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.832354123 seconds)
    (96/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.04502093 seconds)
    (97/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.75089263 seconds)
    (98/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.275821527 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.971023642 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.868048442 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.47783965 seconds)
    (102/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.427175936 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.3502297 seconds)
    (104/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.24936801 seconds)
    (105/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.332654725 seconds)
    (106/286) benchmarking ("sort", Float32, false)...
    done (took 5.236119326 seconds)
    (107/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.347322343 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.792885708 seconds)
    (109/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.400798265 seconds)
    (110/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.251665391 seconds)
    (111/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.309708135 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.452522108 seconds)
    (113/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.851369553 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.768489738 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.287957801 seconds)
    (116/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.657780063 seconds)
    (117/286) benchmarking ("sort", Int8, false)...
    done (took 4.274436693 seconds)
    (118/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.603534229 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.551303738 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.972196758 seconds)
    (121/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.57299912 seconds)
    (122/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.074092481 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.532105932 seconds)
    (124/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.231004688 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.232146067 seconds)
    (126/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.320250116 seconds)
    (127/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.170027439 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.132519389 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.263021353 seconds)
    (130/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.083903663 seconds)
    (131/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.282882766 seconds)
    (132/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.33608722 seconds)
    (133/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.355148526 seconds)
    (134/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.250811661 seconds)
    (135/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.621313993 seconds)
    (136/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.46760446 seconds)
    (137/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.103168946 seconds)
    (138/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.721744743 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.001477991 seconds)
    (140/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.277728051 seconds)
    (141/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.354219414 seconds)
    (142/286) benchmarking ("sort", BigInt, false)...
    done (took 6.251064867 seconds)
    (143/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.805956127 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.131912941 seconds)
    (145/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.246273114 seconds)
    (146/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.235545919 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.274306472 seconds)
    (148/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.264568215 seconds)
    (149/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.33722208 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.655382507 seconds)
    (151/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.27767503 seconds)
    (152/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.253236394 seconds)
    (153/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.269105948 seconds)
    (154/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.338438164 seconds)
    (155/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.233240697 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.092475247 seconds)
    (157/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.967051749 seconds)
    (158/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.843566145 seconds)
    (159/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.309459853 seconds)
    (160/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.466218224 seconds)
    (161/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.956589028 seconds)
    (162/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.255064969 seconds)
    (163/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.51963205 seconds)
    (164/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.333050188 seconds)
    (165/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.233696734 seconds)
    (166/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.338358208 seconds)
    (167/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.178849907 seconds)
    (168/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.410252269 seconds)
    (169/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.27938327 seconds)
    (170/286) benchmarking ("sort", Float64, true)...
    done (took 6.252119858 seconds)
    (171/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.521698378 seconds)
    (172/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.023584236 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.287632984 seconds)
    (174/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.35879663 seconds)
    (175/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.252627674 seconds)
    (176/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.851713986 seconds)
    (177/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.241036532 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.30260018 seconds)
    (179/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.781645345 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.264468834 seconds)
    (181/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.61129137 seconds)
    (182/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.29372869 seconds)
    (183/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.25225488 seconds)
    (184/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.047814365 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.660855179 seconds)
    (186/286) benchmarking ("sort", Bool, true)...
    done (took 5.429601142 seconds)
    (187/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.061235591 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.317356481 seconds)
    (189/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.696416547 seconds)
    (190/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.378411101 seconds)
    (191/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.235005856 seconds)
    (192/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.566364331 seconds)
    (193/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.596590645 seconds)
    (194/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.251258443 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.258906629 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.254461741 seconds)
    (197/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.298935961 seconds)
    (198/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.938868601 seconds)
    (199/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.398499121 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.893842415 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.471849794 seconds)
    (202/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.235877657 seconds)
    (203/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.362223273 seconds)
    (204/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.37405996 seconds)
    (205/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.835558566 seconds)
    (206/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.259879003 seconds)
    (207/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.486431463 seconds)
    (208/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.495463429 seconds)
    (209/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.242057025 seconds)
    (210/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.336833562 seconds)
    (211/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.453342394 seconds)
    (212/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.298767623 seconds)
    (213/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.782289656 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.278178999 seconds)
    (215/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.661190931 seconds)
    (216/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.296586428 seconds)
    (217/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.296604438 seconds)
    (218/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.237000794 seconds)
    (219/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.32124369 seconds)
    (220/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.366283556 seconds)
    (221/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.285184925 seconds)
    (222/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.531478541 seconds)
    (223/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.243820243 seconds)
    (224/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.082739237 seconds)
    (225/286) benchmarking ("sort", Float32, true)...
    done (took 6.262081912 seconds)
    (226/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.074174047 seconds)
    (227/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.042692117 seconds)
    (228/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.785533347 seconds)
    (229/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.449840892 seconds)
    (230/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.345875683 seconds)
    (231/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.257458427 seconds)
    (232/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.283409691 seconds)
    (233/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.788381797 seconds)
    (234/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.512232429 seconds)
    (235/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.244282901 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.879835977 seconds)
    (237/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.444429602 seconds)
    (238/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.254502459 seconds)
    (239/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.267894448 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.462470382 seconds)
    (241/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.05131272 seconds)
    (242/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.568581039 seconds)
    (243/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.321123842 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.645963312 seconds)
    (245/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.259450392 seconds)
    (246/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.302516134 seconds)
    (247/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.658080849 seconds)
    (248/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.259278984 seconds)
    (249/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.370089201 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.275129149 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.637790851 seconds)
    (252/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.264257097 seconds)
    (253/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.86238421 seconds)
    (254/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.097329221 seconds)
    (255/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.245696123 seconds)
    (256/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.241681493 seconds)
    (257/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.243566429 seconds)
    (258/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.088221852 seconds)
    (259/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.290952237 seconds)
    (260/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.623799365 seconds)
    (261/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.604844458 seconds)
    (262/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.601163222 seconds)
    (263/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.422650479 seconds)
    (264/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.246169865 seconds)
    (265/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.240256814 seconds)
    (266/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.099108296 seconds)
    (267/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.264413344 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.431309429 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.342427351 seconds)
    (270/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.285763637 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.377031855 seconds)
    (272/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.357613646 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.091627583 seconds)
    (274/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.275799821 seconds)
    (275/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.094276606 seconds)
    (276/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.230885591 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.320117627 seconds)
    (278/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.436064797 seconds)
    (279/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.681185907 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.669617851 seconds)
    (281/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.394540171 seconds)
    (282/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.241822934 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.305042351 seconds)
    (284/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.240230401 seconds)
    (285/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.248005853 seconds)
    (286/286) benchmarking ("sort", BigInt, true)...
    done (took 6.277424346 seconds)
  done (took 912.150861164 seconds)
done (took 913.314998767 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.294684251 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289230719 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.271393637 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.29364667 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.381325341 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.295684479 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.281577767 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.274071722 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.319090432 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.320378375 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.270360024 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.294753003 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.272229416 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.272856828 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.271310502 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.28738183 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.271101838 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.273354655 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.288957989 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.281908594 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.289632416 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.270667998 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.322005539 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.295586298 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.276549577 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.276591034 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.275443246 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.291179056 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.38433218 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.275151263 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.27550806 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.284013785 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.279680151 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.27694806 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.268359039 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.292556073 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.286000301 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.283638916 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.277630474 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.305188084 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.670757739 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.295098351 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.27451543 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.273503092 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.275006531 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.279750192 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.274247842 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.279690919 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.288994354 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.289814328 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.674889494 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.311096208 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.278455794 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.27489457 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.285547836 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.275439584 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.278626565 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29286214 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.294789599 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292299028 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.272255377 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.286894765 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.277783607 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.292707123 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.282842484 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.684495545 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.286883664 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.279945226 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.65864741 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.297464821 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.683010142 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.300297803 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.276676085 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.290628445 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.307257244 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.272539488 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.270819851 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.27581789 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.283081375 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.275274775 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.285473509 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290216351 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.281577028 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.276234593 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291621393 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.299896541 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.287159639 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.277574984 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.286434486 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.296058302 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.284699659 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.288452638 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.280650543 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.273350778 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.286903536 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.281444334 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.280319409 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.279374085 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.282367357 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.288568422 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.661953371 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.311430444 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.275090871 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.275461825 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.276703814 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.291704887 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.662908254 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.294642852 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.300512911 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.325713385 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.27974818 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.263414011 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.28136853 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296898213 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.287967195 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.283008498 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.272908026 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.265057623 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.657638679 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.310876565 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.281933729 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.277247226 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297371553 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.281533447 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.2759667 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.278874106 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.281327513 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295197403 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.401820012 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.292135913 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.311852025 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.278032863 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.282390966 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.304879478 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.298571961 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.311351145 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.283082009 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29777322 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.295681348 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.277108366 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.291172161 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.291000286 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.283464008 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.286988937 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.274382107 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.305224916 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294274583 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.294627251 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.302602326 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.402278934 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.279242459 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.267408369 seconds)
done (took 216.14516967 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.339417618 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.27825971 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.364440502 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.278451097 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.378378784 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.37865473 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.276347632 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.276791554 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.275456228 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.658923827 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.274902161 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.277179135 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.277661814 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.276332988 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.362148302 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.278898308 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.275423596 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.620279906 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.279046592 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.349393239 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.280838142 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.276579763 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.279214834 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.662532455 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.274857362 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.275003472 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.349108533 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.279065229 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.625200685 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.272817484 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.277553112 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.626502385 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.369511887 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.29745517 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.289835516 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.287069652 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.380757338 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.296477582 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.362218791 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.360570292 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.366257378 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.318215667 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.274819697 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.28018081 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.281192326 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.280563331 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.278260673 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.306534166 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.274556965 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.278712523 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.623264412 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.29003447 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.288540232 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.279292551 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.280261273 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.301601976 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.278990207 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.281445764 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.370316769 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.282694853 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.344395172 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.664292823 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.661165981 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.28229712 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.277656001 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.279125592 seconds)
  done (took 144.815097009 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.346875823 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.354906431 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.391233709 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.299170017 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.334116693 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.396045845 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.299322785 seconds)
  done (took 10.616231667 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.288539718 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.283074686 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.332312473 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331936572 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.282544052 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.429767291 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.283087771 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.29488137 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.281215933 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.335313513 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.28398588 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.283917698 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.290172066 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.279878103 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.331616315 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.294812301 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.397666289 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.285161388 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.28380612 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.433019897 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281233562 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.290465363 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.335381704 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.295532314 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.285118312 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.288367993 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.849883858 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.28466729 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.281530686 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.283560217 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281363387 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.320579151 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.284656056 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.280366067 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.28270813 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.399468491 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.283902767 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.282510383 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.284188586 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.281528636 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.28545442 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.284721049 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.285627825 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.282710315 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.285602873 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.306784118 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.285754524 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.286183659 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.286113577 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.285625111 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.33642585 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.285776638 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.282712729 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.282911418 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.341461686 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.293576032 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.286175988 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.282199945 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.286420599 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.283362121 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.436144958 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33317572 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.28648784 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.333668507 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.286751975 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.287074011 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.285471886 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.285763067 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.340841172 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.287259863 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333906556 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.284380372 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.441538252 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.309533443 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.288449768 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.289609227 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.289390116 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.286747832 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.28171792 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.292049809 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.284688606 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.288188588 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.291978686 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.284468134 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.285370028 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.388878783 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394856673 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.285796233 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.299928785 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.293434799 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.284926617 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.33979389 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.288098194 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.285298133 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.339743532 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.402310851 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.340055669 seconds)
  done (took 148.43425942 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.292437955 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.296027193 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.288966387 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.304368705 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.288739427 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.287860875 seconds)
  done (took 8.958048772 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.290436973 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.289858689 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.289632853 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.289485227 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.288030173 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.290630969 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.289984884 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.290450015 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.293472375 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.289171618 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.290148764 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.291574047 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.290891789 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.28925903 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.29065446 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.28959729 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.290250804 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.287510906 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.290067072 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290196492 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.38428433 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.289912516 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.28948461 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.29050783 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.294455899 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.289723534 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.297763151 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.290609106 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.290385189 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.297796504 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.308100361 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.290893877 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.291913739 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.296582334 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.29359168 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.292171136 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.295756151 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.293268815 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.288957537 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.291652374 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.293478501 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.293826846 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.292850118 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.293183142 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.293356408 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.298163651 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.296878038 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.298958693 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.292927435 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.292644096 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.293142245 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.292642498 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.292296694 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.293425947 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.294134554 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.312422578 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.297520624 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.292121454 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.292776459 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.293834121 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.294245404 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.293867544 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.294242 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.296271965 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.300060067 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.294413488 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.294453348 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.297120776 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.29291223 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.292997575 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.295436172 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.291461275 seconds)
  done (took 95.399270788 seconds)
done (took 409.413127154 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.602225365 seconds)
  done (took 7.806222182 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.313135025 seconds)
  done (took 7.520239057 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.219640001 seconds)
  done (took 21.428274197 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.351784661 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.351551835 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.328533132 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.314749183 seconds)
  done (took 26.552901152 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.474168487 seconds)
  done (took 7.680241678 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.288404544 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.287800449 seconds)
  done (took 13.785194874 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.637438797 seconds)
  done (took 7.843459637 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.440796131 seconds)
  done (took 7.647674415 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.296952196 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.307598663 seconds)
  done (took 14.066232729 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.285324613 seconds)
  done (took 7.492040755 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.011931741 seconds)
  done (took 8.220883417 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.301908585 seconds)
  done (took 7.511568244 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.342461118 seconds)
  done (took 7.55090734 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.106344461 seconds)
  done (took 9.314393929 seconds)
done (took 155.625491986 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.289205128 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.295708302 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.297066589 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.29648577 seconds)
  done (took 26.386253184 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.330356809 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.330676987 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.332304721 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.342141602 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.333681173 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.331179769 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.324042339 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.323228951 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.341563285 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.334490443 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.332641665 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.333870921 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.332517741 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.323642885 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.333544663 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.333616067 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.342491261 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.332381788 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.324851355 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.335526593 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.299315021 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.342788937 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.334587293 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.299273316 seconds)
  done (took 33.134333194 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.820515889 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.36819069 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.453052466 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.350201254 seconds)
  done (took 7.201051767 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.351109854 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.353278037 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.363071538 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.402404451 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.429100223 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.361778063 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.322679528 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.32065804 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.307150708 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.352514491 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.429308049 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.368379512 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.436347001 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.300415709 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.486081644 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.299918163 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.299818402 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.352412953 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.403669086 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.421530564 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.300926576 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.352675067 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.356678366 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.369987857 seconds)
  done (took 33.952091538 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.301743747 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.319259971 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.299822686 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.299899113 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.30764872 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.300181496 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.300287392 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.301433808 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.300355457 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.306915518 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.299015601 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.314045119 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.299892195 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.300965064 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.306421747 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.302538901 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.307244968 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.300427755 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.30137775 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.307382853 seconds)
  done (took 27.288767884 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.294090249 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.149055387 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.647077525 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.550344052 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.295242495 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.294156439 seconds)
  done (took 27.442882854 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.369775833 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.516641365 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.302209031 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.648260516 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.748468766 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.321992694 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.302595537 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.537031559 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.84833383 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.84039884 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.365152017 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.369435185 seconds)
  done (took 19.383760471 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.309542473 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.301904312 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.303026628 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.336143559 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.355045244 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.322759464 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.30991626 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.296525515 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.362457762 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.376047412 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.321942011 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.35809824 seconds)
  done (took 37.167628945 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384473254 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345730267 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.200224978 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31431823 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.040832273 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510021894 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377318761 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.749987925 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.302566302 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572212655 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308025694 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393120573 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.553711836 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299820796 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.304715786 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.254964837 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545104765 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76984587 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301504711 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.274313773 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326973805 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.308799792 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.271016249 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.334269408 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510336709 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441216298 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.560891732 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.077666351 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589310852 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311101841 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310612811 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298653315 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.574531022 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955366097 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415464147 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310638639 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315443193 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.845798588 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.295665632 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.188959225 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.096588396 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.309401522 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31079982 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300775373 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.233980647 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299939018 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733368134 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.306815839 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.012770775 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.300549724 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313250943 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397538525 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.305495914 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.870150602 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302745433 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.311386051 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.298675726 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392473584 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889194266 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.672962882 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307009143 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.241467109 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.316885349 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.275718906 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930771363 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.420063135 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.306370884 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.305650305 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235600205 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.251105124 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325367805 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449971806 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.325213699 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952543972 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010860549 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.324179321 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.24004421 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.827650974 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305672756 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.242784985 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52973621 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.078598184 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238814726 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.248955493 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.237931736 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978204479 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313357303 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.670472215 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.323815018 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.748345011 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.313881829 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32070738 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326703001 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527240146 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.182274825 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303882021 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.15885055 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455143717 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32541106 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.730907161 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239722969 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.307840776 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559884552 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.514701006 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307341054 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.267928106 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520498283 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314173554 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.324675299 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.316975703 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.320541347 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.879811498 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.333038109 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.650795954 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329044442 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.081182972 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00734829 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307765171 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.429184129 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.318009569 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547892043 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.038747165 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.46682521 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372779935 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310869259 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30491877 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.278369554 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.904793018 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.464315932 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.720456904 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310533141 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.323620946 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.305929011 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251342107 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.303588241 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339307653 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.082555509 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.529399182 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307139964 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58810932 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239735996 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452977354 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.315985485 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.529497854 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.496722345 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.326013815 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565455265 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318977267 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323633576 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.325211079 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324569839 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407722126 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32901462 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.305001858 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.583743485 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.309404965 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.310062333 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.307900818 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.083506097 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308512521 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.313469582 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322266604 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890159984 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301282405 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309517057 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19645806 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.321059347 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374016715 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312661553 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.316743524 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.063368644 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331871424 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.313146684 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.315318035 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.530436684 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.317271365 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.185055851 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392411335 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.499157118 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.890053232 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344530324 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.241839448 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.019307466 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.000223624 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307959864 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.497311868 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30863471 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317124467 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317918572 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311646701 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88456326 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32912005 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.175406174 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.319007097 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31869995 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.313691456 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30818012 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.038927957 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.660521973 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315590939 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.325116536 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451785266 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.320759055 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.242355087 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.825187033 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.313637203 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.308515357 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.086800985 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344622393 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.172345342 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784639663 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.568373791 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310978939 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.325964008 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.270518677 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.347703434 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.312837153 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.145521054 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33367888 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.329516855 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335071517 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.320509703 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.180186096 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.67862091 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.875932954 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023480738 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865124703 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.232125007 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.316746789 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.196881762 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.740321642 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245751199 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.966824408 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.493206902 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.753966133 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255527229 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505351708 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.498088465 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077868565 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322034234 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.538440767 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209679576 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.151984373 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347145994 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.522091217 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345296769 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.315428626 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.243329798 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.592517243 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551049684 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.098784703 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393572312 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.73822209 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.122006207 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.110244905 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.338621091 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.631117396 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49568617 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.947003451 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.699367078 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311326537 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.327238343 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785764182 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.316491432 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.838021179 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920552564 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.332738891 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.512142174 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248010008 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.321729475 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.324079702 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.309437653 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.560741398 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.314517101 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.567693892 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324652699 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247062286 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316603319 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845550916 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.181512617 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.31943424 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31429657 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022446396 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325930712 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607269701 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.326752891 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.055494723 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332435723 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.247731376 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247594795 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.006802868 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324058157 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291277131 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793047284 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.320646311 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336470303 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318228411 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161025188 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.569638419 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.328648787 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.895924179 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556795833 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317849348 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356924218 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.415620072 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.193475807 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.315944733 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.195879454 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.549890443 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355908355 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.541985156 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.244454675 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.22170947 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.320931257 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530553338 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.197182724 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317684947 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562656684 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.048143027 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.32642959 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029681208 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358004366 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318179636 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.326565281 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326869158 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3359626 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404836767 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326498796 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.328038074 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.326541538 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483652155 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321914693 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319407699 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.330919851 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411824258 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.686595212 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.042541551 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.093185131 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902450894 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053508485 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.915711302 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345974779 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.318472615 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319446319 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251879242 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469402846 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.842756835 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591065932 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447799986 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.324643571 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34132093 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.179796358 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.337919159 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533459647 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593141185 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.29442411 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3185088 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108710447 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.477432044 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32877192 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.52986465 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79763353 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861056818 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442611107 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322863254 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.748191957 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595028804 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.410044546 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319288311 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910648278 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.339338904 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.645317379 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.343810314 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322521291 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468024312 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.328719259 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97480809 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.348157907 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.475737597 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.0941546 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.243698051 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.576072594 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.75979238 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.331695269 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906415911 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.032897884 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587699521 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390982281 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331501672 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.431135206 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469617224 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.321901766 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.218574258 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319739107 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164983233 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.030971718 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.330616424 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903276891 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604489147 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.319406287 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.3213585 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343312884 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.331062953 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.544887454 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995265529 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.547057124 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333092111 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.331543333 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.8915394 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90568381 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351463204 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256181773 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.32642557 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568940237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.579945501 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345620583 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.775947775 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.035050853 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851540487 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.294337173 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344239533 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335117393 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015374125 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908565508 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.078103198 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82059868 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.982106419 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323726301 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601729213 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.328066651 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323047326 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604544059 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.32816798 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.323552126 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338285341 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.907296215 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095655877 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.337881669 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.323265547 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.265907802 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.550304011 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3669142 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264031099 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324339607 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.49758976 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332454163 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455568453 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335651728 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.32920484 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331308005 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.063687306 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60857411 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.330911247 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.317482325 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.263256624 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338721781 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420437759 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558786185 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3311656 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.999225905 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.677834142 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581321101 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.327119533 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.309806432 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.328655947 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326332455 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.041836442 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334540144 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328242027 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892167744 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.331300414 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.342963742 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.329749191 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.541904289 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537845858 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329852093 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339705655 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335168084 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344515391 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.232990298 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.093287023 seconds)
  done (took 1626.696333496 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.338751492 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.337601185 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.336245013 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.347202953 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.364450349 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.387634067 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.386704888 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.368632114 seconds)
  done (took 52.10887935 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.328953334 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.481557547 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.357195282 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.332196166 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.33600711 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.328176018 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.774348077 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.345218914 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.335809735 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.336887636 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.329263991 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.339419869 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.964440781 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.337127966 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.327901148 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.322742233 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.336238707 seconds)
  done (took 65.156097837 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.328812339 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.821635442 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.419685501 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.336039609 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.280380772 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.361408238 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.967217933 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.395763061 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.331798255 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.601196551 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.001081808 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.34137347 seconds)
  done (took 84.429411187 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.344584842 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.344675009 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.345221833 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.345869663 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.345073898 seconds)
  done (took 7.969960401 seconds)
done (took 2049.526843733 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.334134892 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.003245379 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.935859176 seconds)
  done (took 5.182715714 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.473860262 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.524129114 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.643400846 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.650223097 seconds)
  done (took 7.533379686 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.608803892 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.707897756 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.514649986 seconds)
  done (took 6.073774494 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.598380342 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.33841076 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.358667521 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.329476588 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.331985686 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.330342868 seconds)
  done (took 20.235668498 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.332623016 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.33507687 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.331960769 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.334858494 seconds)
  done (took 6.57747566 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.309001661 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.013573931 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.310930486 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.329002263 seconds)
  done (took 18.20623637 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.079363133 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.090517714 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.076640113 seconds)
  done (took 7.490917998 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.36013885 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.356168134 seconds)
  done (took 3.96083123 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.628002147 seconds)
  done (took 2.872319057 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.346947144 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.384972879 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.332426474 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.253263581 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.689407918 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.568609283 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.88951107 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.50010693 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.226333825 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.451663263 seconds)
  done (took 29.887845907 seconds)
done (took 124.895029096 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.045932411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.690188429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.528687333 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.019691157 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.550807109 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.527926847 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.756344355 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.988658758 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.529781875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.517190122 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.06463557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.551115619 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.4930432 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.692923886 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.492570012 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.569954704 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.551179675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.072987865 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.739034083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.900425825 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.753239297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.650837474 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.890546904 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.692556876 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.558398147 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.478463893 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.233769755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.569744907 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.91265891 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.284841949 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.483349748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.071247006 seconds)
  done (took 191.109564235 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.330041234 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.330311505 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.34932151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.345555984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.344288874 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.334877336 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.333096401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.348660877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.327440591 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.339385991 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.332751792 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.324112983 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.338823659 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.333364519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.33612036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.333617943 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.330520417 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.317909156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.333375443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.318032347 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.335027793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.318094605 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.329043793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.325493084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.320434743 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.334393777 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.317794539 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.343375936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.316807186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.33269058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.318739061 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.318440995 seconds)
  done (took 203.839021311 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.319418264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.316520618 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.320028231 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.317160239 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.317172333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.320642811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.339514439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.33181902 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.323742021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.322917754 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.320639968 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.317692957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.318360993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.329695158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.317940544 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.319051381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.331842949 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.318891914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.318459988 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.322514192 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.32030383 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.338967641 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.3186935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.327174875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.330535331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.324117977 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.321411178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.33119594 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.319579569 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.337774357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.337384911 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.322749495 seconds)
  done (took 203.609118218 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.521277741 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.326413791 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.326964224 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.282961465 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.327862346 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.326941866 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.321042716 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.516258745 seconds)
  done (took 14.185728409 seconds)
done (took 613.987535677 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.604774018 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.325092691 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.527333978 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.348468902 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.081642434 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.366858576 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.350301965 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.512403627 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.232981792 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.520886182 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.537163321 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.364826051 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.678973866 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.348355669 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.598565826 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.446500758 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.199991104 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.308555467 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.656988539 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.835837794 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.607657795 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.777926736 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.536554898 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.238721435 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.69368986 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.769361772 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.024157969 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.185189278 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.367007355 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.662561423 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.889775445 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.271663183 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.408694482 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.407087489 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.465481823 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.444460126 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.239973782 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.405257152 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.544833403 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.547769553 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.862057638 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.062915308 seconds)
  done (took 90.496735834 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.315106779 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.315358466 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.314324569 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.31572204 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.316573808 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.315025109 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.314704263 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.315597968 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.315723571 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.31549299 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.315340029 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.316950039 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.315032128 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.317486464 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.314574155 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.316030573 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.316532791 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.317316196 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.316982161 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.31658953 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.316758754 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.317113972 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.317397243 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.316753231 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.317797766 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.317445568 seconds)
  done (took 35.462830479 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.33485277 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.577418753 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.734329989 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.340409033 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.336034926 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.338933887 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.411408007 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.336449995 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.338183039 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.337988935 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.48599723 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.339613959 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.371041692 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.762712886 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.339383931 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.337634621 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.338439767 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.337126565 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.586345078 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.348079187 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.432955277 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.337450505 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.412372614 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.348355244 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.356830673 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.337926313 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.34256718 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.907125815 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.355687729 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.489561311 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.100586588 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.414037538 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.87766407 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.762281298 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.0985522 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.343809094 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.338698578 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.492973468 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.340148958 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.337695305 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.414360556 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.338815524 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.751600203 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.002958013 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.359233459 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.338722385 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.928064113 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.511328057 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.574364776 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.351304493 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.771733215 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.345658706 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.341478238 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.340817665 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.574136463 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.350243105 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.338998311 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.938289193 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.36575712 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.414865973 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.341809805 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.340001639 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.60027191 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.343198609 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.582152332 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.3421004 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.3505237 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.359270507 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.750383405 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.349680391 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.026968797 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.362611913 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.342094353 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.491873543 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.587138587 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.958445528 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.362396886 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.599784248 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.89447737 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.431052201 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.347788727 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.898445175 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.436669469 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.345560211 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.346445058 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.344601412 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.342390557 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.401613066 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.413327734 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.96353868 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.040545518 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.966272654 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.438416407 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.356738781 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.34411789 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.939867064 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.36511838 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.342695589 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.745223894 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.031763949 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.363552053 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.352135264 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.027409885 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.365160685 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.419994818 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.351579283 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.759356811 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.347349927 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.40163076 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.343240033 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.352284169 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.365398945 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.420643601 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.347147878 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.345192872 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.002428109 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.517667454 seconds)
  done (took 177.26915642 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.337667502 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.33721261 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.338337669 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.337649264 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.33653921 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.345401467 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.337155299 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.338376126 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.343880925 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.337422958 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.336534643 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.336529789 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.337794727 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.343005233 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.368720268 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.344600885 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.996503146 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.340454691 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.339609056 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.337619571 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.124480058 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.343767459 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.339455483 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.33819316 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.339446895 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.340278911 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.344128648 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.341554865 seconds)
  done (took 152.235340406 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.346780493 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.88687683 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.36332353 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.471645467 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.371065119 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.343646834 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.472304541 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.401421982 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.363762202 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.342936099 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.34545354 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.634337024 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.347827751 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.842340057 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.529165027 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.493391669 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.841183109 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.363535615 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.344590615 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.346103485 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.473961276 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.350502978 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.636561081 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.893523026 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.368724671 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.892524126 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.335073483 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.348517167 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.346044766 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.895616086 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.364897604 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.639111454 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.421968565 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.404812785 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.911901571 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.866237021 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.867131398 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.494740607 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.346932719 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.34656418 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.345958674 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.332239337 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.896593835 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.368861075 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.347800035 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.887861508 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.369798741 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.349257021 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.354527752 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.347059218 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.406569297 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.421081799 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.661355105 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.908519628 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.44229491 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.361334303 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.475889471 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.70440793 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.352130591 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.850172105 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.336743615 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.90366415 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.372232924 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.333545941 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.349515272 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.356083564 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.493967349 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.476934176 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.846638858 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.366226687 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.845698376 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.509908674 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.34797511 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.349410609 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.350959434 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.902640746 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.867492337 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.511200523 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.479359167 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.535162943 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.338182044 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.348890958 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.335993812 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.425106825 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.349632879 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.903205013 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.867338294 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.368485308 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.352104348 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.352400437 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.351925547 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.518730466 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.924233286 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.447230476 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.836807648 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.662702772 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.649410037 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.356836855 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.408291568 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.368730833 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.649005014 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.357065465 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.406311802 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.76797949 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.649019118 seconds)
  done (took 160.629432507 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.587914744 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.594372199 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.443490832 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.493510547 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.943248171 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.913304773 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.577511894 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.50128531 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.458752772 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.603397615 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.474795078 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.447683276 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.570494502 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.424792035 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.070889893 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.439236372 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.456409321 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.496121374 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.505074958 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.357211092 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.004290928 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.647668507 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.543030843 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.167071921 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.44412078 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.130624089 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.905350566 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.907478357 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.526192879 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.708401347 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.906050092 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.470462188 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.307817111 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.026041707 seconds)
  done (took 65.314507812 seconds)
done (took 682.644985664 seconds)
SAVING RESULT...
DONE!
