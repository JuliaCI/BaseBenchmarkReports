cset: moving following pidspec: 14980
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.283773658 seconds)
loading group "string"... done (took 0.615466734 seconds)
loading group "linalg"... done (took 7.600511923 seconds)
loading group "parallel"... done (took 0.156794009 seconds)
loading group "find"... done (took 1.2105179 seconds)
loading group "tuple"... done (took 1.804301022 seconds)
loading group "dates"... done (took 1.270200199 seconds)
loading group "micro"... done (took 0.222213542 seconds)
loading group "io"... done (took 0.903783416 seconds)
loading group "scalar"... done (took 37.815710717 seconds)
loading group "sparse"... done (took 11.927404458 seconds)
loading group "broadcast"... done (took 0.940043733 seconds)
loading group "union"... done (took 12.790368951 seconds)
loading group "simd"... done (took 4.757385263 seconds)
loading group "random"... done (took 8.95658139 seconds)
loading group "problem"... done (took 1.824995695 seconds)
loading group "array"... done (took 20.734656945 seconds)
loading group "misc"... done (took 1.822972788 seconds)
loading group "sort"... done (took 3.269775266 seconds)
loading group "collection"... done (took 16.91943316 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.514635823 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124004824 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132738534 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119551491 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147112696 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118194773 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12528989 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087183969 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.861815501 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146901747 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116503593 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.401012123 seconds)
done (took 5.347443664 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176449394 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083771446 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08448541 seconds)
  done (took 1.302116538 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068441285 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126657564 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069597506 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07020324 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07008867 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069030607 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069139756 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072473666 seconds)
  done (took 1.682067414 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075447699 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071942992 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069207135 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071083262 seconds)
  done (took 1.422020672 seconds)
done (took 5.797450039 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.747645423 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.209366575 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185990609 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.380333859 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127423473 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.172498299 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648178292 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315077508 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18719525 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077436864 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108059235 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337184077 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.121164574 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642342736 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076277225 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091038582 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140493623 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433510739 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069583606 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087604182 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091897261 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131606716 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087708084 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07658036 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149206887 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070929536 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133272055 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082887406 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069340886 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214765026 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175665525 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660269545 seconds)
  done (took 10.270073819 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100005574 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099954562 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07112099 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.128164526 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101507765 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072122476 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077671388 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07052796 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091955166 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131488462 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093616094 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107105158 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068761296 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071320706 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085474768 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210031398 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082489545 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084024355 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073031808 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080780164 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110322872 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082153882 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082117837 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082565492 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131018455 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183237363 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098705769 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100126205 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069006976 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085035846 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117487528 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131093607 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069589215 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068211313 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127863497 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097746534 seconds)
  done (took 4.711892783 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.959243294 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141436277 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090079686 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131409712 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111990221 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067493685 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108471077 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068474745 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0827695 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204878069 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.351133526 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.57397053 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111555127 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112418546 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104858288 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070547715 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071935042 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070181933 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.435746099 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098952172 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106813188 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082354716 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072481641 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070814578 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068126839 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068898427 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066592323 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070501074 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.114975876 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076630203 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.30316979 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120251378 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070981836 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.909452088 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.164282635 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071570334 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.238929062 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.173508258 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095391992 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138226282 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071509992 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069080728 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.156807242 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067849884 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073188947 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068972098 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086780553 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105454287 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120392533 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068422241 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069197105 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164956926 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068116316 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08098774 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.111807662 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155665865 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071570785 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.2621404 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091945726 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072411436 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070859046 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.159296886 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125743216 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070713056 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070118632 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071624408 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071389313 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.394152499 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070708132 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.859645962 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073669214 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079467195 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067240114 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072071133 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071805068 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075068609 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075471094 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091188159 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069665351 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076044853 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068673807 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068647109 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068742122 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084468145 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.364395314 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.174777666 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070730593 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069595913 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092797835 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099202073 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069659301 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069108872 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102445461 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068406873 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070486957 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069978069 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068987737 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06955832 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084627184 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072275379 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115632237 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070578134 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.085224685 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101796953 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072782477 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100877497 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080423056 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070628967 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.40363898 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07216611 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070604587 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068000266 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070199065 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068875297 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080194991 seconds)
  done (took 21.583988398 seconds)
done (took 38.659806013 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245542827 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077955333 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075750089 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076091425 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076293816 seconds)
  done (took 1.779559382 seconds)
done (took 2.996189554 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12025375 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098839954 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067163765 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096750322 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069641398 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10048267 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099799494 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078342732 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099853063 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.070172823 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097014309 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067565889 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067247937 seconds)
  done (took 2.360950668 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085978669 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086356424 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072196655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084841752 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06615538 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08513731 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084673935 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090701276 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084111747 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075292166 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066989453 seconds)
  done (took 2.092073946 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085106026 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086353961 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072433838 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084291737 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066605992 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084390036 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083937415 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087707517 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084522756 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076969573 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066840589 seconds)
  done (took 2.079652539 seconds)
done (took 7.736748437 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079020287 seconds)
  done (took 1.269348134 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.525297513 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.617705631 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082902319 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.107092663 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.184749083 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113543955 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.246822746 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086940823 seconds)
  done (took 8.325109722 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090374957 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071897748 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.084466737 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073365778 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070654655 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074397069 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074720665 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075089049 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07462437 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072355936 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072496161 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071742762 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073745217 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071234323 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071971364 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.0733009 seconds)
  done (took 2.468576584 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093134249 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092322886 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07600632 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076842217 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074582933 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073751552 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076187716 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076110533 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072961337 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074419577 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077704287 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075186378 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073827423 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066748905 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07661944 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078470283 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073299604 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076593744 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076696689 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077403896 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077196332 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067180636 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073956602 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07616388 seconds)
  done (took 3.129847395 seconds)
done (took 16.393920895 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105596344 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070189065 seconds)
  done (took 1.374553032 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082158976 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083576165 seconds)
  done (took 1.373814502 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082802667 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067899048 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090124643 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078999293 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06900577 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068148621 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088198795 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068273766 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068344681 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068407719 seconds)
  done (took 1.958358302 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070046493 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077622987 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072240648 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081985569 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075731461 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06666868 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073734291 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069950964 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079003513 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066178749 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073296467 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084359213 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07309741 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086287342 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073675217 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070724174 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073034561 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070255173 seconds)
  done (took 2.550830679 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067553531 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068633528 seconds)
  done (took 1.349589419 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068784481 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06599496 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069338945 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069045683 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066281806 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065092151 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066720773 seconds)
  done (took 1.680416577 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.357956277 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.118434724 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300923985 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075220872 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083319862 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251835232 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069366006 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073731212 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074494134 seconds)
  done (took 2.655533567 seconds)
done (took 14.160291585 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081564896 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08862125 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097174283 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.370316204 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094130974 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069476517 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115813336 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.179636736 seconds)
done (took 2.322988864 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.223110368 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.643168359 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.409362673 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203176399 seconds)
  done (took 2.472939647 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330848544 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091650638 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063837878 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.072473391 seconds)
  done (took 1.784208139 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068895959 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071972742 seconds)
  done (took 1.364015036 seconds)
done (took 7.068785775 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069337746 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068424619 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087895227 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066656405 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.066786036 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068558627 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066862009 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066131409 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068683581 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069029224 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06861423 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068650531 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068820539 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068688132 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066422351 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066478716 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068733514 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066552524 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180608726 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066665482 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068369414 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06655302 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066393505 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066241244 seconds)
  done (took 3.007789436 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085214905 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068962908 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073392482 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072831535 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071426988 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.073735202 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074054436 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068454898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073743227 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070738001 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072439451 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071508961 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071295629 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071334149 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070907139 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071322801 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073492078 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068617985 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070893076 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071182215 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07369805 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069204479 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071727785 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073557897 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07108652 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071832522 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070736828 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068666886 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074069935 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07150525 seconds)
  done (took 3.394410699 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072459525 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066069144 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066578178 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073042297 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06591224 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066558121 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066230551 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066396713 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067242069 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066878749 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06725092 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065814746 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066593244 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066832272 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067016648 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069567229 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.0812747 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066562037 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066475079 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066625701 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070315511 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068425207 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066310461 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066877889 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066397897 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065755154 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06649722 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06591019 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066778317 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066055144 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069641471 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069917574 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06635696 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073137881 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069899808 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06610411 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070546934 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066169041 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066484405 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065999873 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065872771 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066528495 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066117721 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072892474 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066809433 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067900063 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066553585 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067526703 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066691779 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068405816 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066508079 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066032784 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068513638 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067709582 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070026038 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06649696 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066950635 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065916477 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067024037 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066537679 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066397903 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065812472 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068901573 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066899684 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081788059 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073285757 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066324587 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067914578 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067016801 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069007716 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068077058 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080003348 seconds)
  done (took 6.137039275 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089889941 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087959281 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068102863 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068045868 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064539101 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066150118 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071930902 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067283847 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067982342 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08462023 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066814185 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068157124 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068130196 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070487862 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067156359 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068102567 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07436525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06435313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067402011 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070323764 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066971424 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071616849 seconds)
  done (took 2.809135483 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149066946 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072861421 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105387235 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077230876 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072298313 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077311855 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072734293 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07290843 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072490818 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069936569 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070082518 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073179962 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072368001 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07135898 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070432362 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070387676 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072405749 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070637488 seconds)
  done (took 2.652143194 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078718155 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068618157 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088932542 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068823476 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068685436 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071712169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072826525 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076351835 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071115953 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06857047 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076203944 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070768369 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071006519 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068298701 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07111156 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068938879 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071234356 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069089509 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076298386 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072632918 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072825639 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075889246 seconds)
  done (took 2.838181157 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081034068 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070201897 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082515997 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071137747 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064210576 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066963207 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072232743 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068245878 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072568498 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070292891 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068196818 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066777559 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070716489 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068562695 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070649015 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068574784 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0703403 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068911699 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070712389 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064495317 seconds)
  done (took 2.648582225 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087450717 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07029764 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070738583 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077004385 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069889541 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070046896 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076736949 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070844062 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070786427 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090125688 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070405373 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070985159 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076900136 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074723528 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072943926 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077296541 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076701516 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077050018 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070520185 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070422155 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090689147 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070805915 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076890421 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070636074 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070548626 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070849483 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07080675 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074939286 seconds)
  done (took 3.330411614 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069176802 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068987765 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066248943 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066597121 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066076774 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066418233 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06643397 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066346961 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06922145 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066739369 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069130999 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069505728 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068949514 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06938479 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068979293 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069279741 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068893152 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066388165 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066670361 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066814358 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069062938 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069690028 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068884396 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067041824 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066616864 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069333115 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067033261 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067199542 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068945209 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066736897 seconds)
  done (took 3.28587043 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07739268 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074855665 seconds)
  done (took 1.400645437 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06575615 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082110671 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.066248032 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073130344 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071743037 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069579534 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075940594 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072183591 seconds)
  done (took 1.820576859 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083665143 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078107382 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070094141 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078941968 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078330105 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084824436 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135667922 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069329039 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075513311 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067994446 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081767762 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06861709 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075506937 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069322422 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074855312 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076102909 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067162927 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073560386 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070845204 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067908514 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06976786 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077787344 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072321516 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064977542 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07077706 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091267027 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079619789 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068660434 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072447678 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076807322 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075045165 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063333971 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069337053 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069183362 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0671731 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077693261 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083217824 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072051685 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077009068 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069738517 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077424826 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064507022 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073909872 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075581212 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079487837 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068819217 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069134222 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064176032 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067273854 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071477169 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064743869 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069387818 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064259052 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076336039 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073077461 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079732722 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067876871 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070421312 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07218655 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072016235 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075899647 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070891125 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072457173 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068396089 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079069126 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074006287 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077228165 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064068314 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063432246 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066947637 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07851628 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091019507 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075206104 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068939062 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06945031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06730879 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072794844 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069969022 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074362621 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075387738 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06810099 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073576081 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076645444 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068993509 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071697589 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074782113 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066817512 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070616082 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067718791 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084115192 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06742089 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0665819 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067235515 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081086635 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07257026 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067729736 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066711637 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075246964 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062342464 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067717356 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067988184 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068879968 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077685503 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071151219 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071556412 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07620649 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07466356 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068620565 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070852695 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.193082414 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070994415 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.070311079 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077294183 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064617863 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072764787 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071145098 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06970807 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07859926 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067823499 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069159683 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077318159 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07591575 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068900019 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066138065 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072701731 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068818351 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071045033 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076686458 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067563092 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064806106 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06451067 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072498527 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069105138 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072735361 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073001025 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072326977 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063818462 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06714974 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073189227 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07737866 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069697936 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07060808 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075275672 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070287244 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067980345 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076001078 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.0712774 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068642222 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07482349 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070004154 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06428202 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071194525 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071732269 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067658715 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072696758 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071088673 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07156062 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069689231 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067856619 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074784616 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069255563 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068740838 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069360648 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068035099 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078972845 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071083556 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064179179 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.0668256 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07558282 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067954109 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068194466 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068647698 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070613305 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069403719 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067021463 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067874386 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071212181 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076793171 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072151497 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069397387 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074659765 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080567923 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068357491 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071350423 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06877064 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069426781 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069250626 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077767044 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074553904 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072806712 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072325634 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066145513 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074056722 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07596911 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068093623 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066371108 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068384126 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071848341 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074254273 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072028652 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068755552 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067230025 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069459759 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070754402 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071141674 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067944644 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068206494 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073263891 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066843985 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073782528 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068570954 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077654126 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070694205 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06316883 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069954511 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065875079 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073936151 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063210683 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065924831 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067827386 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067871712 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066700869 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.200010077 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064861094 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077208993 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077119158 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070640129 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069645326 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068872238 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076795275 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071272154 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073007556 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073461593 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075915283 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079489827 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068283747 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072589961 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079141473 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068942935 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063683339 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077507449 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068218296 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067902697 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068746593 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067512855 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072419768 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075304072 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075570056 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063530614 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072203823 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067761031 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068948718 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065111902 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074276203 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072122306 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069974749 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075764833 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069261983 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06863966 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072876549 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068443147 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06907994 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069248038 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072165458 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069435893 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071061993 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068426052 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071794076 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068296641 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066722816 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070568924 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068665406 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069733025 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073548233 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068400746 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06952832 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071243618 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068799661 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070471821 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069797341 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068853265 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072169603 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070199743 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070299241 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071673856 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064265445 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076581119 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068420087 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076601873 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070004536 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06652947 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074340732 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071731421 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073732747 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069291758 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069564695 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070295999 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068781976 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07165793 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07576286 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067522785 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079886834 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076124166 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070267179 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071945248 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069504627 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070970588 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068232874 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070014258 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06906143 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069330514 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068224187 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072799031 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07127607 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069629158 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070570587 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068847056 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069837824 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069645775 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063968901 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069162962 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068353613 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068372105 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077248616 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068555517 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069323187 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067378986 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068972718 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067547335 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064840505 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074335095 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074305597 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067363199 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074497647 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06747007 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069531493 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077448445 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.19536836 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068679474 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068029628 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068854407 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076825903 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069520079 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07869498 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069884238 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069583063 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066798181 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069155443 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068041973 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064381542 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067166128 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072132966 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06920632 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068875802 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069021681 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071853717 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069375711 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078380798 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06912848 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071262602 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069212856 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066387982 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06929464 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069266475 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071931202 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069516045 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067566691 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06621375 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06832244 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070757883 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071093329 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068501337 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070738247 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076215038 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06872514 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071927344 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070499584 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063848221 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072030312 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068050382 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068675564 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068571845 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072341739 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072272451 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069639036 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077747486 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068309134 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0726797 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069024934 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067339511 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068606023 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068644335 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068513645 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068880019 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069943041 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076433346 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066982193 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072121255 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06934768 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069914453 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07515259 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069483682 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072317797 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07370361 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07018925 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070987477 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07714815 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072653435 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072898038 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069262149 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070553232 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075514949 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068679604 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075468865 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06975938 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069313474 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070694427 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067684666 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068990811 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068640514 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06805343 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075195389 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069576651 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068786661 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068317085 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066737336 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069686187 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070896213 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076229073 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071220813 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071899885 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064182441 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066469165 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069112368 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067555079 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070966694 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071495823 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074810445 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070993324 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069793434 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067942295 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077511271 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074169736 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072733173 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067096965 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072310829 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068277197 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069920572 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069475245 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068559 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068232805 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071622763 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070248288 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06729878 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.207936107 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073800784 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07034563 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071736359 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071180428 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070820975 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06490152 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06955589 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071487816 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07416193 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072027973 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069183819 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07915788 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067753868 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070106838 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071581142 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068749054 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073915847 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064726677 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070770344 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069296133 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069577736 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064424025 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069242236 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06727813 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071271329 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068530468 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064247676 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079432783 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077653772 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072390149 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068083724 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067243187 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064494276 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064350407 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068807547 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068997528 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070496131 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079172132 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068512295 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068434441 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06420027 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068225576 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072006932 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072541752 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066439922 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064074097 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069158398 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072279051 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074296971 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067687419 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068486198 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072183592 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07117335 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067365973 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071867535 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066479476 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072518838 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080803064 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069017977 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069953385 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07523831 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076508247 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069389569 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064304492 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069139444 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072238636 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070152903 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069411601 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070102662 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083901144 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072758408 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068729155 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067726125 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071708143 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069381566 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07690333 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069773002 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069973611 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076103108 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071670097 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075959142 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072325708 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075828942 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072848231 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072481885 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06744554 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069162317 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067148374 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068234476 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06941753 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068999235 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072585993 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074638477 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068472131 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079653023 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077677776 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070902975 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06580479 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.0687398 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068814989 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063945997 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068945887 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066930108 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066638993 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0669573 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067512254 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069766753 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072595842 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069254282 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067796 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067117625 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062664353 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07054026 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069845922 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068633774 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.199382701 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069186033 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070548897 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074905852 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072287197 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068243547 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07122552 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072066185 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070260345 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065007201 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075628914 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068248522 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071706044 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068797431 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068655237 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069269657 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072345428 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073145346 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070095802 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071774992 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073710021 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071023637 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066564338 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066227282 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074552641 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067080957 seconds)
  done (took 44.198050155 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101217296 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065599757 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064849802 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064464955 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074251558 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065144081 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064817488 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065670976 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065530298 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067439414 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064384216 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064771732 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072074121 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07906451 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074893641 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069063765 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064406345 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065572854 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064549258 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065622344 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07246951 seconds)
  done (took 2.792206575 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074617134 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078901722 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076434721 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083161109 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072485652 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072160028 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07701088 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072754736 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07978948 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074522948 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07978494 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072370406 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074296029 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074345116 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074184851 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072695773 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079543474 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07313019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.0725739 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076972853 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072442391 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076475575 seconds)
  done (took 2.989218546 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069514409 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068057614 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069997509 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063614367 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068308107 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063898934 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070959021 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066250114 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071445724 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067725394 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067927233 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068247239 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070579512 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064011509 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068946834 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066399893 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108020736 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071722338 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068214062 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068970729 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064208309 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070638409 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064190396 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064752285 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068079079 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071286681 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069573219 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067347274 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068185216 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06825804 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06824498 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066436005 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069820125 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069238714 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067979353 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068527724 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068015166 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068247559 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064238324 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067163842 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069440954 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067552607 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069332431 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069650779 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067028229 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06615511 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070578834 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068222899 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063824006 seconds)
  done (took 4.699904736 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079826118 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109818054 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06947031 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090165407 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081566756 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07439684 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072253721 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090749692 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065782404 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066457706 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082871054 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080354875 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068249329 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071922522 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074991629 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067816552 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069411277 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067254376 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071590101 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067577135 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071605019 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074979926 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081600139 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079693763 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071646377 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066953116 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06710389 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071611941 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079069237 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071644197 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072643293 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072970014 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081864286 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072901852 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067412061 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069976791 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083355622 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068298501 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070304945 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066292717 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069876207 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071986193 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075392055 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08322472 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068289202 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072856019 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068090112 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065426398 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079460001 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070200692 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075497387 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080776569 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07170067 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069096794 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07230887 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082170058 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068376902 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066551948 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070902016 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079576157 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066111387 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071552459 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080359624 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070097762 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074939135 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080403698 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07368659 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071622742 seconds)
  done (took 6.499710278 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077487398 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097387357 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084624241 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084785246 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078205575 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07785261 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077263737 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078385861 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077561918 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081847344 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093379012 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115748496 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073131399 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079531484 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086021526 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077248681 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077505105 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077682816 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077521244 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077343307 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077606549 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083888757 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077423204 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083833888 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081105109 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07336681 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076950547 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077297994 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08402527 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077324916 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080836243 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077735098 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077516064 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084746017 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080859651 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077785048 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068152473 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077206625 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.078194204 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077216064 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073340838 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083967676 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077193088 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07291957 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077275409 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077101402 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083665449 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081317377 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079504816 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08132406 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077096106 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083579518 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077003509 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077119363 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083683843 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086366574 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083505887 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083758317 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077276226 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083662793 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083778649 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086532039 seconds)
  done (took 6.355963874 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083043344 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075185239 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083724991 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063837467 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066375623 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073887096 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067126461 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066954823 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075914677 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078091804 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07769255 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073876642 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07662664 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077412009 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.0738278 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07639531 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073891011 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07462893 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075443962 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074585492 seconds)
  done (took 2.867540558 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076002565 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083723834 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069083799 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072875969 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071204777 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073611536 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.071161606 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071930292 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069633863 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071604399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077689181 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077845096 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069760255 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07335992 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077460304 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073815907 seconds)
  done (took 2.547058521 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084236619 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075135197 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080235909 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068385901 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068936106 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06514524 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068583603 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064460874 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065512276 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080153141 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068359981 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078713067 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068493396 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06718494 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065685348 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07345735 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064823224 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066020462 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067975621 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079836787 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071605134 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066865129 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07170788 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068244681 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070236949 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072336339 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067788129 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068717267 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065581178 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068982514 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071373531 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072180488 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065536651 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066373232 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067726898 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065712162 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068142304 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.068552553 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073878522 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068336356 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066670721 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070081324 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068529906 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069740258 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065542087 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068724904 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065210205 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070987978 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065951751 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070696737 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068250469 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070593043 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069099639 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075109705 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07128866 seconds)
  done (took 5.204903667 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081029726 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071580953 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064181589 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066629957 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071738601 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069626463 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071438976 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069467374 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069345498 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0663241 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069727582 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071582163 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069635289 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071917537 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069894882 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072114302 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064007179 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069078516 seconds)
  done (took 2.64021151 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073747192 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069111076 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074853612 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068621834 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068063435 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070250891 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064518995 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066806938 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066981341 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068592526 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068837182 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070826097 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067080533 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071076323 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069000434 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068752326 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071169931 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067243192 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068671808 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064409027 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071102725 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066875239 seconds)
  done (took 2.889026386 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094505024 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084102287 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138466733 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080675461 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086891307 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073687439 seconds)
  done (took 1.93227036 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092507438 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100911575 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068711845 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071305757 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07784714 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072025918 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072094094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072351825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079914154 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077486563 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072973049 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080388306 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080019459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079307988 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077461829 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078374126 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072293439 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075167808 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069260339 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084499275 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072991057 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080053656 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072895337 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072120686 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073211291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079832755 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079878264 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078147132 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072513108 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080351444 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0778682 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072599811 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08021386 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07836476 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071707559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079639516 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072946866 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08443299 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07762124 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079197115 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07146542 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078311136 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080129276 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076662729 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080235352 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07272317 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07642685 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072790784 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07278694 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086551914 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077744124 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079077304 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077568005 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080808142 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079742669 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086270406 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078015829 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079123133 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077551921 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07762734 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079320901 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07738923 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079381841 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07790472 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077593673 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079279553 seconds)
  done (took 6.497633975 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104783563 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06969499 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072120447 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077440007 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079122399 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072947294 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072786757 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07270349 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072951603 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06960701 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109034489 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072921842 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079526502 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079314326 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07255173 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072638535 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072294537 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079035575 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069614281 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086528271 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072309239 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079628625 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079282306 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079256132 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077598198 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077686822 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072947328 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07302569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072483217 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072611365 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076767457 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072981006 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079310724 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06959416 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079490113 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072864383 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072759041 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077006913 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072931635 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077804013 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079498882 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084772198 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072522889 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07237635 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077752947 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072434724 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072562502 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069716936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072678705 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069630208 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077579071 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077538253 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077987925 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079244137 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072560284 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073005931 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072547284 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072313102 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072770315 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078205803 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079206257 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072723054 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086757546 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073106411 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072822488 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079222581 seconds)
  done (took 6.420878413 seconds)
done (took 133.083286453 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.195160008 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.171670921 seconds)
  done (took 1.727152236 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071253333 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098879676 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077767223 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130992395 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069001493 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102705327 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101231164 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079536789 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068613419 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069013987 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068915957 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071293044 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134354272 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069120693 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06907893 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071225591 seconds)
  done (took 2.731778936 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098928713 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157599475 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102957303 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068109079 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099577792 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074475487 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067535972 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077012831 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073462423 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068388934 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074802347 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072461952 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06824785 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072624528 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07588932 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075082229 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068123279 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074589523 seconds)
  done (took 2.852207016 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098234062 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092269161 seconds)
  done (took 1.573605484 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152640597 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134786439 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.20101694 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330759696 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155942341 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147067189 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142567333 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141575229 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11395188 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.137349019 seconds)
  done (took 3.034986325 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100196098 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148874564 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266060373 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116264914 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074926594 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093447058 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118917702 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081204344 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.0826297 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082280787 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082080204 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078198668 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100422163 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075389508 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076386972 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078550906 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103513645 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075357827 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077052932 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077759579 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101560061 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069233057 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07546625 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075515795 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079327407 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078947304 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068827173 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068990844 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077210246 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076938031 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078267294 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092541769 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079447722 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104732174 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073320567 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105679487 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078159883 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075322677 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077108993 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074821045 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079362636 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079543498 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075228128 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078084938 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068964255 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078428726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06916113 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06921517 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079450462 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069549671 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079452563 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078007236 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104850923 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070274631 seconds)
  done (took 6.086410379 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108682279 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107396594 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072726153 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113533406 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104888917 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072029838 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106505282 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099163499 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108886083 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073239467 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071116646 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072858362 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081636439 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083095389 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117362644 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.109184023 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074706239 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071776032 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10913715 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108751337 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071480745 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102292729 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09828233 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108609485 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070049721 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072583835 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07065491 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07214388 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078418764 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080268241 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070760995 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080842134 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085373958 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079403784 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069978672 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070813508 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071709039 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080558173 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081126 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080932328 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078981514 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069914492 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070907538 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071696963 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071505634 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07029323 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079291605 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080735967 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079221785 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071378797 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072405618 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070785939 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071719799 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080614872 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078466607 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081099396 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080426937 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071318653 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070568414 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073335874 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081440508 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080766121 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080235517 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071634519 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081564262 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070908209 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081458416 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083945723 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071209438 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071713146 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070853159 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070724151 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074371408 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078663353 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07817362 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071512358 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070676378 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07028244 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080090548 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078694923 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070254503 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078508666 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069702372 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070314993 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072089123 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0721202 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077711382 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080456906 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071389726 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070368446 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069655117 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069387311 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069017862 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07594013 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078780766 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077611549 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077250912 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07041559 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077773604 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.212942828 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073198658 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080470295 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072951866 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07302235 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073471398 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079879063 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078557076 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081884207 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071585503 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071420992 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079593288 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08178292 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070898998 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078651381 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081522034 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078834064 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069890913 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082701619 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070931151 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080708398 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071054048 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.0812531 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07061574 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079962613 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071060397 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069542238 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071242008 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079785889 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072000525 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070897359 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071737927 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071374692 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078841794 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083148712 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072105035 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078713782 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079401762 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072177991 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079799862 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071091113 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080075267 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070742161 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072199906 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070070138 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082262258 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071025675 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071074586 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071063448 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080797286 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070879565 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081161827 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07897238 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070705329 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082412585 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081041385 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078038199 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080937956 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072155685 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070799477 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070908034 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070615346 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078284619 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079678743 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072381404 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070452241 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078257042 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080448487 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070056486 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079809493 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079091699 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07920526 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070884727 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071119763 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081178421 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081303883 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079113021 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.0795049 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078799044 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07077498 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078194475 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078754478 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070683637 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083924135 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070284601 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082845234 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078733705 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077906416 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079478529 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080152049 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080102663 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080440789 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081668858 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06872325 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069156007 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078018737 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06970034 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069436044 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076761364 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071593028 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070935788 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.219162691 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072065151 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082375941 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070979896 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080574434 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070065477 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072507626 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083881589 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071323504 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072659757 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079565092 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070627937 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079458494 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081911606 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07897599 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071355011 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072288951 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080254586 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079838144 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073372324 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071090104 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072243052 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07913409 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079172532 seconds)
  done (took 19.046780115 seconds)
done (took 38.450752423 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.192197109 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.144853899 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.157415567 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111917262 seconds)
  done (took 2.077892569 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.112471044 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097714099 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091218901 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067837302 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096759587 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067854833 seconds)
  done (took 1.957020236 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269415558 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.187233448 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169818251 seconds)
  done (took 2.046308597 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.191114613 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.17865361 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420407183 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25668546 seconds)
  done (took 2.567869903 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.136661329 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086474584 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069605895 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084927015 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126989972 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.153664858 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096862077 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.12099754 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080281916 seconds)
  done (took 2.427068048 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.141662121 seconds)
done (took 12.636685799 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.121894588 seconds)
    (2/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.204148739 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.110662633 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093326987 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.141170484 seconds)
    (6/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.206779148 seconds)
    (7/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075932863 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.121236948 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071268318 seconds)
    (10/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.176191895 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072377509 seconds)
    (12/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.194574548 seconds)
    (13/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.198517396 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077745035 seconds)
    (15/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07499366 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075325519 seconds)
    (17/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.225336829 seconds)
    (18/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113777272 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.209515561 seconds)
    (20/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.111490776 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076177547 seconds)
    (22/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.151317775 seconds)
    (23/309) benchmarking ("sort", Int8, false)...
    done (took 0.145935967 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076451183 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.156360742 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082771369 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.199408844 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.120833635 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055729355 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.208973431 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091429744 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074842932 seconds)
    (33/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.233837181 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.111624612 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.40009638 seconds)
    (36/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081080921 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089108198 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055523304 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068415297 seconds)
    (40/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076242186 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075256159 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192110585 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067089295 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096687709 seconds)
    (45/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.140511926 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090733071 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.173594927 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.199018167 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.153458369 seconds)
    (50/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076179287 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084686727 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055096183 seconds)
    (53/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068167323 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080064655 seconds)
    (55/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083462982 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 0.069522062 seconds)
    (57/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075367653 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088596046 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076006975 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083467933 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067905955 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080640584 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06746577 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075906374 seconds)
    (65/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081069766 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091165669 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066635695 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066864085 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088885441 seconds)
    (70/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083556931 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136278409 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138319699 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077041088 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.146855474 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078425897 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074397276 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076103534 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076006039 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067119038 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.223492805 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098336264 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200822394 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.305588044 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092959171 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110376057 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132977234 seconds)
    (87/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080872679 seconds)
    (88/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084830408 seconds)
    (89/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08045916 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090757891 seconds)
    (91/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077361609 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.056579412 seconds)
    (93/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.141869196 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075903533 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054377091 seconds)
    (96/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055589781 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110401038 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.190904007 seconds)
    (99/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.152861828 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067740465 seconds)
    (101/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.111335643 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078632963 seconds)
    (103/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076504842 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088348647 seconds)
    (105/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177811275 seconds)
    (106/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067459101 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091128718 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092771697 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074026145 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162253751 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088594288 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.08914514 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078347711 seconds)
    (114/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074796669 seconds)
    (115/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.1616436 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.177920815 seconds)
    (117/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078413467 seconds)
    (118/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.113808485 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080320603 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088447241 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075917937 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.158486216 seconds)
    (123/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054841677 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07473207 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076271254 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.153176984 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091370097 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054801859 seconds)
    (129/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07076737 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092548037 seconds)
    (131/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15599704 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078060102 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145600157 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122573062 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109433032 seconds)
    (136/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054482818 seconds)
    (137/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075498507 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160346972 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078389362 seconds)
    (140/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.101924935 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.07064817 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077623176 seconds)
    (143/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068630927 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13600732 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075186561 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054366666 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.190248484 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134706621 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075587841 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056046874 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078816038 seconds)
    (152/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101137527 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076083919 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068539921 seconds)
    (155/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.211746047 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088950418 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104705185 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066858737 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109292394 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074491549 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067973553 seconds)
    (162/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07562862 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102547465 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069203191 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.177741951 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074291406 seconds)
    (167/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080881972 seconds)
    (168/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070803909 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142475499 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 0.128007234 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149930838 seconds)
    (172/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076714964 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166751162 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054888605 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07534072 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054016643 seconds)
    (177/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068896162 seconds)
    (178/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05484283 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110087043 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054065549 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175475611 seconds)
    (182/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071810825 seconds)
    (183/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.229154093 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.057516601 seconds)
    (185/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069143947 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07132817 seconds)
    (187/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081909379 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.099283287 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109980356 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159882035 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17334678 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092349532 seconds)
    (193/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.056436623 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179045301 seconds)
    (195/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056489307 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089735403 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057266954 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055683478 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.075025847 seconds)
    (200/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095658245 seconds)
    (201/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074246905 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055860474 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054163661 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076280112 seconds)
    (205/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.100523544 seconds)
    (206/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104363087 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074852798 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056063667 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092266994 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077242359 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075520044 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068648048 seconds)
    (213/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078672635 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138614066 seconds)
    (215/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054422644 seconds)
    (216/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05474618 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068452068 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054658599 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054160874 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068553682 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068493943 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.068605959 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054319032 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075820366 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068502476 seconds)
    (226/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069358105 seconds)
    (227/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072017692 seconds)
    (228/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055120881 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068267818 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076109999 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054406883 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089134211 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.103048768 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072733031 seconds)
    (235/309) benchmarking ("sort", Float32, false)...
    done (took 0.129914771 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070175598 seconds)
    (237/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070771933 seconds)
    (238/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066978703 seconds)
    (239/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054916475 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087470585 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054630584 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.152812914 seconds)
    (243/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067207002 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054240015 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054618262 seconds)
    (246/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188944866 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07465882 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070840675 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054519078 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068697599 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075729432 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067122569 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068872478 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055401817 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091450142 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070337787 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069552649 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144837666 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068048901 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057488055 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055610954 seconds)
    (262/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074212143 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16803926 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074340701 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054751156 seconds)
    (266/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068348623 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068693703 seconds)
    (268/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079620246 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054296114 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069607563 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067163505 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075699764 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066222076 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074077767 seconds)
    (275/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071444903 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069107609 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093838148 seconds)
    (278/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119481463 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06759587 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054937227 seconds)
    (281/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05442212 seconds)
    (282/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080666446 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07076877 seconds)
    (284/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068694837 seconds)
    (285/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.111355769 seconds)
    (286/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065966207 seconds)
    (287/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.054753933 seconds)
    (288/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079690516 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074329128 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076296931 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069792301 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05436993 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056979381 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056100868 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08705697 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053822391 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073920028 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055161547 seconds)
    (299/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055011391 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090843574 seconds)
    (301/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069451981 seconds)
    (302/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054870312 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.126914579 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.115306416 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066920967 seconds)
    (306/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053579437 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.230825497 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071756389 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056940418 seconds)
  done (took 31.446372642 seconds)
done (took 32.882757557 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086049441 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095693482 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079161399 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096273756 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08482623 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079216161 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076943614 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081963068 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084111699 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085926585 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082783307 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058718614 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078985026 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078916642 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078767539 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093970263 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082927704 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078047457 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077251358 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068693156 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076891143 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069463607 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071001635 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058870756 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081986359 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07615668 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078146371 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078391933 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069128232 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069521165 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072961641 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077174681 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068931575 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082634017 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076368175 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076790811 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078063463 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080488817 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070941767 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06912461 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078179874 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068942123 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076970296 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077314907 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075289184 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074568265 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076310533 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080369479 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092952112 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071095473 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078271382 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07877429 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080700696 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076307582 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073067924 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076654941 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073965025 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093219401 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076885391 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071309182 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077740282 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077172857 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074639515 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077207018 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076447506 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078987501 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079547609 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074420155 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078231633 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074885017 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068528944 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076803367 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072599341 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068786641 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079493506 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080825083 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067332159 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074667034 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07643044 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076870803 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068125604 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070478312 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070688037 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075072296 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070453285 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060353425 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073027044 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075466018 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067923324 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076511472 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075585156 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075999852 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070184516 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080194296 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067786397 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073851913 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068859335 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068532822 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069966425 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072376758 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067943728 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070248965 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079163397 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069760826 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074978062 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080771104 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068552077 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075170969 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067406224 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06757087 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081762919 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077748962 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068369239 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071047102 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067355134 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075501535 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066884062 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067318342 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067771717 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068015145 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073960552 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067132976 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069061185 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.217237344 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.084444611 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069649309 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073419965 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071915962 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069387664 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075539254 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068885016 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069600971 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071009625 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065429832 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071263697 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06922413 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075947073 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070699817 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077070742 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070093431 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077181962 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073962401 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074659873 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074161693 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067891351 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062357741 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071002972 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070598631 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070050081 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068563828 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069960191 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069106503 seconds)
done (took 12.996371692 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069659419 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131991316 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095691743 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095604469 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085731694 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070097019 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077260125 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096758042 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070576525 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099616496 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089104695 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086664128 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110595676 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06816237 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.0690474 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073332282 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070607262 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082729343 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098466396 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088630345 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112236454 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06922835 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092933507 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089711964 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088538327 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102935003 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070546561 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073260484 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072826413 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092608882 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089823205 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072851884 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069376778 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098123023 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093096388 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083907558 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069542281 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083983887 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069764951 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068748301 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070759564 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097620498 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08153375 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081830654 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07292851 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078647571 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070763333 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083752811 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089865085 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080939373 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086371933 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099973557 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071516584 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084578186 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067800694 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086357005 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077889236 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071390275 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070491242 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.076383724 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069375494 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072688829 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082172204 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081468601 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073401708 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085243545 seconds)
  done (took 6.953236618 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086384272 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093827433 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08454289 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085471062 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068943772 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069513389 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069659372 seconds)
  done (took 2.096564477 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069608108 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088873798 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089636966 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090002517 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083225046 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089129235 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080614858 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069528066 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089787975 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070629148 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088801427 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09933788 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07269596 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07627803 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091965616 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069687984 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091682399 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069606253 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072317005 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091293806 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071552419 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098531979 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073537391 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070680721 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082612488 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070305537 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113358006 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073347716 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071676134 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072979578 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068113419 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106922509 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082413416 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077205473 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06985891 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08409568 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083322451 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068139433 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08561507 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077955779 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082734312 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070215871 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070617489 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067723161 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073883397 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079326877 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070630743 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070605142 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072309115 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088111574 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071218407 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082514622 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072685262 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075176523 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071394401 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075836673 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079193471 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070721727 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087892771 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071325223 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08451662 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08408761 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082882186 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084134336 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071763334 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081901414 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082870182 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072263635 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071741703 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073657293 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083876609 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068390043 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071043314 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079260835 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071589723 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090689047 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090644453 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071714588 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082583027 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.07084274 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070180417 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069624716 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090974112 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074696319 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070307955 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074012463 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07310483 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068663409 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069407537 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073765208 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067813282 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070931505 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072567061 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072276384 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071957889 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083580855 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071917533 seconds)
  done (took 9.088827099 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072496155 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071963937 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071967313 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070631734 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071043222 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071137351 seconds)
  done (took 1.992422687 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09131912 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071268648 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081724535 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073830463 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102384626 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087951062 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088265722 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080195749 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084530984 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080636185 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08750305 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08942217 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092895186 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074399409 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088091169 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074108306 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088920396 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076772883 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080027918 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075074702 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087432963 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075142214 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074785341 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083144813 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078090295 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073969356 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080084206 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081460355 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080007862 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080023318 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074145798 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077896766 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073127795 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079615407 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088717416 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073204438 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073582437 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078972857 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074846286 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077540903 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089057954 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074868609 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075779524 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079482144 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079507667 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073262315 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079208944 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08090955 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088401025 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079397169 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081827707 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073646588 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077940867 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078856854 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073503005 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07937997 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080130325 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088652553 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074859397 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073303875 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070933075 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077873824 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079258546 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078248379 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079797515 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079731953 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073366659 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074542985 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074846873 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073686788 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079353735 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070893394 seconds)
  done (took 7.260469168 seconds)
done (took 28.914976704 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537604617 seconds)
  done (took 2.052939094 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596645306 seconds)
  done (took 2.142112557 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.474825446 seconds)
  done (took 8.016779724 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.365407575 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.468538438 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.702741927 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13656275 seconds)
  done (took 3.246548295 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715511144 seconds)
  done (took 2.271773314 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.230447705 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221296665 seconds)
  done (took 2.012752506 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375606727 seconds)
  done (took 1.920829755 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.089107014 seconds)
  done (took 2.636368715 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.23287211 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175773708 seconds)
  done (took 1.960351516 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454075171 seconds)
  done (took 2.002854253 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.804969911 seconds)
  done (took 6.358756122 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.221888339 seconds)
  done (took 1.814986536 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235041274 seconds)
  done (took 1.787795565 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.744142536 seconds)
  done (took 3.295176153 seconds)
done (took 43.077396293 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085228803 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.087276089 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087527529 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083280553 seconds)
  done (took 1.875813609 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078261722 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074764252 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078433309 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074974276 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078565039 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075277392 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076164468 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077487615 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074888486 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075312111 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075208615 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075239014 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077204148 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076663281 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07385696 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077621718 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078206209 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07526229 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077734313 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075126745 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073509764 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077169183 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077494368 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0746252 seconds)
  done (took 3.382312241 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08010162 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075977406 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076755054 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074498684 seconds)
  done (took 1.871561019 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079851078 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09122427 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089929807 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080353349 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091727286 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087255936 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071362435 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071617229 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072673934 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079758347 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070893297 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095882197 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089749011 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080555153 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082218968 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068749457 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070889539 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088586304 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081143212 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08121585 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073156842 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080732471 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071216324 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090424856 seconds)
  done (took 3.501269645 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087215213 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101171173 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082110681 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091002939 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.0933068 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067561714 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087558708 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093427571 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125374624 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068865703 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073787985 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068283976 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076486213 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068413661 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082552485 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10853985 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111646098 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07199875 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.0998426 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068552958 seconds)
  done (took 3.297923217 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07456546 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071912334 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073055852 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067995898 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079831583 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074698928 seconds)
  done (took 2.010260163 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070819633 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073482243 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070605251 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069495934 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07392728 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069715947 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069016214 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070641425 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070338328 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069565775 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069849358 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068545924 seconds)
  done (took 2.408696025 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.184293736 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071454939 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071012782 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068969686 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073579608 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069962813 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083227281 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071070486 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093172232 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069648076 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069533507 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071101817 seconds)
  done (took 2.562344444 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194365379 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077321126 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224009673 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148957986 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108451164 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112581595 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111355685 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111101357 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.136208955 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100166008 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159101068 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160767853 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106450026 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134405213 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089840888 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100266553 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149458013 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159613977 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105504803 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159308031 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140200713 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124415878 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142592188 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101327723 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105221625 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118675187 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074361527 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08133648 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163297337 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129878369 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140004431 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111362395 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09677822 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168479743 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162006971 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13654036 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144791859 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085233579 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103205986 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129531576 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188314917 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089142531 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.301071449 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11069072 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082207612 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130570465 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115795841 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117768588 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104380684 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091304008 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141391005 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175726588 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131158617 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08740156 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121164451 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111030728 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110174523 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111637755 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170502763 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154107391 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125671115 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074148377 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110059064 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146949124 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130002472 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106326665 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121338573 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092153292 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130581433 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14899263 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120265104 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138358979 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.114651134 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089505193 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118574111 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137582917 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124934041 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155750385 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122688219 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074423257 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118692177 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099057116 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081809453 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143454899 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076981317 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16741321 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100076933 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105255439 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121227035 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106358151 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106596897 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150091677 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286211321 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10383203 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068914718 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105367291 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117131498 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140399518 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088303038 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10561011 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114801832 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079576253 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131696846 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077082951 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120916546 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078167731 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121263259 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127590599 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079018214 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120134219 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103118404 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100142258 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12852176 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152541844 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089262664 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083323239 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160232457 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120920612 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101862542 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138046877 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15040353 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100144868 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099335808 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143326564 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165581801 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090128621 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157150055 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104734866 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08496236 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087710853 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121457419 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109853046 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121537305 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082545155 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115601939 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158115981 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075947954 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095180244 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131004682 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080120292 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081384699 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104350345 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103242142 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096035356 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097925577 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101316997 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131623077 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271216025 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105026767 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122011534 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098852422 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160684063 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088447895 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102530636 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1029182 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07215743 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13085854 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149382493 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0801104 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155012399 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118825526 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114969762 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116894185 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087584813 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133668058 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080542878 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072388584 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137403152 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109059095 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107867819 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.145350382 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114325669 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121330642 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.1160185 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128312445 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127151535 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127184845 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106466799 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08880038 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110482165 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125383843 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075462919 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090970312 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081598916 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104254049 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095898434 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084785853 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137398232 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121483344 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111015263 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109300524 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096853853 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140655675 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077586986 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123926196 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116818977 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095780111 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14576976 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145884381 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128573581 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.249834924 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1334544 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073097848 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076320146 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087843513 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11967266 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084580029 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083962437 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112862064 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141061868 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124297702 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133022136 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120477452 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116894078 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148695687 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072154762 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118165304 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139541149 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119485654 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104529617 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091098589 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098479507 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137333364 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105465933 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171395957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112442842 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121826361 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149895641 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101350259 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081328071 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101381879 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129516731 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10277097 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138071203 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098074886 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08876343 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107348077 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077165821 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098739159 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124573897 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116591425 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130887759 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112032621 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129905108 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078746984 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112316098 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12152801 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118459889 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066086148 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115562019 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152584179 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094960569 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114054612 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299687309 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080825474 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133132967 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165215131 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138935845 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085751342 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107168766 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11756095 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123069766 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116931963 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134414558 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104414009 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132400896 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107761009 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086330938 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088323108 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096311582 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103180925 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093675315 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102546201 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111404855 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096009443 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12824185 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103614852 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109424652 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115972844 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099622689 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09263727 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097318355 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167605227 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116585751 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163173354 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099730204 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13801549 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156180825 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077797634 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080824757 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08015978 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134486798 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086625757 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128275874 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108838249 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115030472 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120679563 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134677398 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095569374 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070451407 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106713036 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129636004 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121539534 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098510201 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101136164 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152919347 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.096317835 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232980862 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110223178 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114645248 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102812779 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162384475 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064928986 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104619551 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079081684 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081344062 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122698276 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145346257 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082023196 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100557618 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117439083 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110899105 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123830344 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099183597 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110671966 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122152535 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142904067 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124628506 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090003747 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10973773 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124401446 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149699131 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102844018 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097609998 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165230215 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146550299 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.153182486 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088716719 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112306764 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111967365 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109872062 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13529122 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085217364 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156873278 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0838153 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133181757 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102165829 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088337965 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124824281 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10987598 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089019311 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140382917 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114661612 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083976237 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079210469 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114161915 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116899907 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10337685 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07567566 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287573996 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076627463 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130406191 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153963513 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082664066 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103834638 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095212466 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081532192 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104798234 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101527954 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088075304 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100737477 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163012474 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087347502 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143025314 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130151554 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110606053 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130392378 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102076752 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638839713 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07908178 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145513583 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113409509 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164506137 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0997131 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115675074 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108572865 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118832171 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139302867 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102326786 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176318675 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128735499 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11509941 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081126703 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102289708 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104258084 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087876015 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106472142 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112562339 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114134426 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093505744 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11382513 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12124509 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083354266 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095874252 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148819287 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112765768 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138986245 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134333012 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086145126 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115281275 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287759329 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081798051 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116016028 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146272963 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104894479 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099560451 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082535422 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098929223 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153563848 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075605846 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152425034 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118177187 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108810616 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111469028 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.108738519 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129490165 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105025147 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119932329 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091519219 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.106219744 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111725786 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082576677 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079082632 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104290252 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110278313 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098456428 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097322436 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100192474 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145835393 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074741402 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09913724 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113533106 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139217961 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16564443 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087819378 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084307693 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118153513 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114180877 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111001917 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119729732 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080886335 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083203197 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081415543 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082296041 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106708613 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112012867 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112776837 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107719207 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15436095 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083807098 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222189131 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095385436 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102772496 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071099514 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079422733 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095714231 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250456144 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10550802 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111847791 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152967721 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095350827 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090708327 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091453906 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076937455 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085271782 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123344464 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107625495 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115970331 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099916066 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065404607 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105615688 seconds)
  done (took 58.097527143 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109075253 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084921009 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098100804 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14516254 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122330176 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200730543 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156858895 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189918658 seconds)
  done (took 2.790608221 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070596441 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095325259 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104505868 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084199276 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069198468 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071547011 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.219427069 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08285362 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069177685 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094531981 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080147528 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072591819 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413681173 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068993128 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.0706114 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06548596 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069951619 seconds)
  done (took 3.476511136 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.381200091 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620026988 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.333693089 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079590672 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.941579913 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092095336 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.187118664 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136021245 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080589051 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544333976 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.408044108 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130909912 seconds)
  done (took 18.620730414 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08523807 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078756723 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092176885 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092050429 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081222352 seconds)
  done (took 2.181254807 seconds)
done (took 107.65810711 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085422964 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.591145605 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057640011 seconds)
  done (took 2.358533682 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089435775 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088107246 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08779608 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085741649 seconds)
  done (took 2.043469062 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077355061 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079576777 seconds)
  done (took 1.843453192 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225405949 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169337511 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097855951 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085075159 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082384482 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083236409 seconds)
  done (took 1.940720311 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075277509 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078119797 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075948653 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079428187 seconds)
  done (took 1.997211126 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079839074 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056242929 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058150693 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06103318 seconds)
  done (took 1.944762911 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08910733 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084715626 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081399346 seconds)
  done (took 1.946164221 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101316328 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089662436 seconds)
  done (took 1.880196254 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0846393 seconds)
  done (took 1.776210486 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094769557 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100558674 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.12882169 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111265712 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137051855 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107870542 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086157691 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087469461 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07903499 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088827132 seconds)
  done (took 2.712328549 seconds)
done (took 22.704039914 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081220038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371642224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363411474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09257661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672549023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360026095 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969390715 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095955154 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141118284 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071252345 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088065622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651941397 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960680722 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329346095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.950067784 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327635889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652634954 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071665796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07124532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071734501 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955889308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071204895 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071630086 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072327803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65336071 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375178806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07210736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329233482 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071981645 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074066123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359859718 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072122922 seconds)
  done (took 16.236324695 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.090958633 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12077921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075684278 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087156431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073532894 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073288883 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074422065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072261721 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122443455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071421938 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088062964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071314944 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074843066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072024703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090666677 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071375546 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072578535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072519311 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072134785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07217625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090201267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071787003 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072447912 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072960301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072333254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083866998 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072989573 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072579794 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072486043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074360706 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075401938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072654614 seconds)
  done (took 4.224774459 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11958075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126623248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076507638 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106944225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11385853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074550386 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143318849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096511598 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130186702 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071455105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088236341 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07172054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10483539 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091364695 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072914579 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072857648 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072734829 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072183257 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072327336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091563496 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072009571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072393928 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07308569 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072538017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085212618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072674421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072092424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074239474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076126295 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073125626 seconds)
  done (took 4.462020369 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076624361 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07760739 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085962804 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087113359 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072946551 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074936465 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076943873 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073460771 seconds)
  done (took 2.334482716 seconds)
done (took 28.952276235 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081695154 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072295734 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075780603 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090766692 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076253539 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080860924 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070321044 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078755549 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076416039 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075898761 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077436495 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070815278 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074575602 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070447533 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077604466 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071701646 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082994752 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075359118 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081855716 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082625914 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073746072 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076350261 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078570886 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081904604 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082189106 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082706593 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080507603 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076626252 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072549649 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074556668 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080557185 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086725066 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072460468 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081960005 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071582349 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071567794 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075795435 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071772959 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082223365 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080120084 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073633924 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080274487 seconds)
  done (took 4.927851197 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089875913 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093849017 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087236143 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064952389 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068796394 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06854819 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090609333 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062813881 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063366878 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090254841 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059960362 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062580135 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06636792 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0580963 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063222644 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060685579 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065189986 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059649188 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063303899 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062822086 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090656696 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.0576741 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080451864 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066509153 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060357804 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065481258 seconds)
  done (took 3.535576939 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077602928 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086057427 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09249814 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144412717 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11413761 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081175241 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081372766 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095382121 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096937656 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070788657 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074364709 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096300977 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089929593 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077567866 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071043704 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087692756 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087926941 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072740381 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076364152 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09451647 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088910663 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089032202 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094426009 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08507926 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070794626 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073650286 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075112112 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084452853 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073919168 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080366307 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073851092 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074203838 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073178328 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082240789 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07373303 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07297308 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096758387 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083216636 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081459039 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071594299 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078910488 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072161992 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094187206 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125911344 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070200351 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076672971 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074910747 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080190857 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070636723 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096372085 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082055485 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071148161 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074035765 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070790394 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070841412 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073775368 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072950693 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073464793 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079736927 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.0767546 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094872297 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075847443 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087151233 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070612263 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078576951 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070427369 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071926362 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070909787 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096050355 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072612533 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111059928 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071925333 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072309939 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079753346 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080457393 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077219963 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07123393 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087115662 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081050643 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074113256 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078738558 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074226123 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073504524 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099190177 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073564291 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072703404 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072107469 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076212793 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073624026 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072339724 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083397203 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070750242 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073598484 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087380586 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071089431 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072746643 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07593556 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074778281 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070074731 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080901721 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074496504 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071485101 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079648419 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070668408 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073435997 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082200716 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076614368 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069922508 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.0744161 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075866362 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071642982 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071817661 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072998247 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072046419 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078704453 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076738921 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074472484 seconds)
  done (took 11.056922184 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162643209 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152818693 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074340201 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145795458 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080095538 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082128649 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146196753 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09553675 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071483424 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072332282 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071663828 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110874827 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10644921 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117042034 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08222813 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071466711 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093660507 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116135122 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14904263 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144123263 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094208174 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079472821 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074044725 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072698705 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073523796 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080784596 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088072149 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079860245 seconds)
  done (took 4.549097474 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083039218 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104172671 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07750875 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092493571 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092376358 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071432667 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07344317 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073077488 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08761131 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081469317 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071621079 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076339051 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077703773 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074281498 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073042711 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078730526 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078239299 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07275433 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075823234 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076432651 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081385368 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094757198 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075335622 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070914416 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076336707 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070812038 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067018754 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086687662 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072010295 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095770502 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069251416 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075818158 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085032762 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072653921 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07175809 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071665291 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070986515 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071180846 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073086905 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072329751 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070086177 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061449198 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070413895 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081893555 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084295045 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060362636 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075938498 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07595663 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07646413 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068950379 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074398565 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073890868 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073941282 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07813548 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07480618 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076277792 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072705931 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076929758 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079064562 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071017606 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06875739 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069725889 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07561251 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068804252 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086150603 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075753155 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069864118 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071416634 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072979032 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084218808 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07093226 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075614732 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069285179 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073261897 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075459472 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07332477 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072581348 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069776425 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071295671 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072131282 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059170187 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071339176 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057309182 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074091615 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069350725 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070111416 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071673577 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075998991 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082254606 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072445294 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077041778 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072537306 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070314358 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07375443 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063771731 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074025142 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081292287 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085237854 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071382132 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069452252 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082987079 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07623912 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070303966 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059894265 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074678159 seconds)
  done (took 9.609298529 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09432638 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072764356 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084818344 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091158635 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088830034 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077823351 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080717629 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072411983 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086285659 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077206592 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079851087 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07129663 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081277964 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080566325 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073342827 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080656982 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075089362 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086262561 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085715961 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071722231 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079370636 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084094215 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092806802 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083782178 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082149555 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083879371 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092603356 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080202612 seconds)
  done (took 4.052552635 seconds)
done (took 39.432416281 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.809296655 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.964616314 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.784701237 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.112592964 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.859720386 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.954329219 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.880604847 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.800028164 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.983707477 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.815521634 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.095344154 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.845248641 seconds)
done (took 65.750789662 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.822331084 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.917733211 seconds)
    (2/2) benchmarking "String"...
    done (took 2.010936284 seconds)
  done (took 5.638367411 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.989509366 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.354100254 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.023454525 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.778427598 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.784709333 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.075031453 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.583117458 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.293769889 seconds)
  done (took 30.60179624 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.960088954 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.006185756 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.483116021 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.517499936 seconds)
  done (took 15.729136769 seconds)
done (took 63.581702971 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.774159946 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.806298015 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.816317085 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.766190844 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.838795883 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.792145166 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.238447075 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.869402859 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.7796547 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.769244008 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.781829219 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.210112771 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.79307536 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.136540922 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.780028587 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.790364608 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.844592317 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.253931225 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.936731993 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.795302635 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.80073437 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.979115652 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.785845205 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.792789033 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.782644229 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.780797344 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.182061001 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.790843743 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.403394076 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.785171725 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.811195114 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.82267288 seconds)
  done (took 204.199900552 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.779500416 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.750630254 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.851680817 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.800931987 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.234052667 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.970375254 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.902896411 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.316361092 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.785625076 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.80427269 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.016650064 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.783253445 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.033955679 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.797480507 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.811596984 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.881389321 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.020682896 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.063684791 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.81884708 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.931626041 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.802170226 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.903582253 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.846870853 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.006046539 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.817942495 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.886025739 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.784207016 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.815195636 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.981224482 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.994450871 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.791574195 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.810998615 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.984056649 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.655560939 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.798184218 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.791853203 seconds)
  done (took 170.735909811 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.972815446 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.783874371 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.781909925 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.781891357 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.781904817 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.787798143 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.782411705 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.913389553 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.90828268 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.419145463 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.128401682 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.836159672 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.782691205 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.588410695 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.782867838 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.849976966 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.795338635 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.783969296 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.798197106 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.810848153 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.782570533 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.786317114 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916202503 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.795763719 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.783530435 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.790424413 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.783718348 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.789483139 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.158250092 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.783565307 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.848174668 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784595579 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789490566 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.024767298 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.784974598 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.7844515 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.633917969 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.90747799 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.872791933 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.787234122 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790639777 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.785252729 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.000677955 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.786237391 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.783535972 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.785943105 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.787400803 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.931797409 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.784164735 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.917350578 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.784729104 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.268171457 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.784799602 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.784811573 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.493631613 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.638157977 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.788545163 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.78914339 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.784637328 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.784841198 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.796832726 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.618126743 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.863816278 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.786075184 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.788994534 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791108445 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.786097458 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.951110465 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.787111993 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.094202989 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.844276879 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.904883097 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.785962435 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916566981 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.787053092 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.853174335 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.877783652 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.78602656 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.785795319 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.785496495 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.785538815 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.866038706 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.786322616 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.948772251 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.794111027 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.788732911 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.838445912 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.855159814 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.788048388 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.646818134 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.789800128 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.787523052 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.084032512 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.790387052 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.786892802 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.852085249 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.788371132 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.787030179 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.92481434 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.911325778 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.507888617 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.791031884 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.599488729 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.935134589 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.788641684 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.940266423 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.790199008 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.869413185 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.793122614 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.789332207 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.820979382 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.789025815 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.842368377 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.7874176 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.162320193 seconds)
  done (took 404.068094601 seconds)
done (took 782.743592648 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.385894179 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.359986785 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.466993185 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.374250436 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.348020908 seconds)
  done (took 13.65375971 seconds)
done (took 15.372729936 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.879269562 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.883957461 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.813751874 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.880991909 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.809813287 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.879266168 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.862072806 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.813283301 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.847350387 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.813668318 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.847765554 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.813219836 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.800433187 seconds)
  done (took 25.664372565 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.017372598 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.028663004 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.860174896 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.018527284 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.835699285 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.02237426 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.950046647 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.938306638 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.938124736 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.806623634 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.801351083 seconds)
  done (took 22.936834393 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.024669773 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.023171307 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.86646595 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.021608318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.839693263 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.020935851 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.949889842 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.943720985 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.939625177 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.806315015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.802482997 seconds)
  done (took 22.958837829 seconds)
done (took 73.279283389 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.799997287 seconds)
  done (took 3.519479469 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.825955922 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.993865853 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.805011904 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.801537495 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.798733037 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.798283765 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.801961343 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.796982364 seconds)
  done (took 16.344137876 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.793666698 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.794920478 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.797107973 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.797736381 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.793997906 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.797537759 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.79928306 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.798144484 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.7994126 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.795023876 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.793865081 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.795479656 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.797795428 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.794260506 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.795074036 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.796922113 seconds)
  done (took 30.462230993 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.797429361 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.795131582 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.795510655 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.795767895 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.796057646 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.796170789 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.796862326 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.795656255 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.795033217 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.795598605 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.796747384 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.795724695 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.79574713 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.795041694 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.795533068 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.796614278 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.79650199 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.796243587 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.800111668 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.79638232 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.796541226 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.795792899 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.796450482 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.797435357 seconds)
  done (took 44.834576904 seconds)
done (took 96.88180204 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.560818756 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.420814301 seconds)
  done (took 9.704188227 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.802776288 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.799605825 seconds)
  done (took 5.390521381 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.798435098 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.800511287 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.799880931 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.799916004 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.80051533 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.799947406 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.80043226 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.800158159 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.800840654 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.800516933 seconds)
  done (took 19.725000743 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.800687052 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.800283839 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.797224126 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.800533446 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.800231131 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.798347526 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.800898675 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.803368064 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.800145777 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.797898916 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.800325738 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.797830794 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.801415953 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.797945766 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.800264979 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.798607913 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.798687867 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.797420386 seconds)
  done (took 34.116036537 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.800761267 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.800453211 seconds)
  done (took 5.324591835 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.798354175 seconds)
    (2/7) benchmarking "second"...
    done (took 1.799421768 seconds)
    (3/7) benchmarking "month"...
    done (took 1.799044881 seconds)
    (4/7) benchmarking "year"...
    done (took 1.799738727 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.798320632 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.798612568 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.798381453 seconds)
  done (took 14.316240785 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.802333577 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.948817563 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.014120912 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.458468325 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.802352536 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.805288743 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.751849281 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.806742017 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.807881916 seconds)
  done (took 19.922853573 seconds)
done (took 110.223005007 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.655113178 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.800018953 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.032831522 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.857420922 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.852679541 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.143011773 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.814316936 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.103340896 seconds)
done (took 42.985643592 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.884594065 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.488715299 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.509102828 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.841098661 seconds)
  done (took 15.565538635 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.78646402 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.313548375 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.840636049 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.377881571 seconds)
  done (took 20.048280844 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.166500578 seconds)
    (2/2) benchmarking "read"...
    done (took 2.147742606 seconds)
  done (took 6.04537685 seconds)
done (took 50.27236382 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802714158 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.803967988 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.803663237 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.800743658 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.801706126 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.804718843 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.801338339 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.801942408 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.80342411 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.804995558 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.805383396 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.80514653 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.803752609 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803965348 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802229631 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801043645 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804087981 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.802229508 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802046191 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801845331 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805372464 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.801557072 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.802413754 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.802216967 seconds)
  done (took 44.999656436 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.804905985 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.802779556 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.804360438 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.802952288 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.802345385 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.804825231 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.804697367 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.803259239 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.805615508 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.80619813 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802979075 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.803714151 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.80497573 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.804719067 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80551004 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.803875764 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.806331391 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802828005 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805864474 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.804076015 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.806353396 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803134347 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.803711064 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806013929 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.803983844 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803817066 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.806997834 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.804546393 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806797692 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.805284322 seconds)
  done (took 55.86586606 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.812907663 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.815176445 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.807434636 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.808418778 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.807957141 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.808062802 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.807364479 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.807092121 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.8070583 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.807917888 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.806677563 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.808329698 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.807031889 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.807608484 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.807898356 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.807891111 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.807644251 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.808899373 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.807957548 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.807795106 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.808172227 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.807979757 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.807838034 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.807699706 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.80815445 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.807916021 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.808600033 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.808061306 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.807981842 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.80851969 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.809041375 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.808304238 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.808677904 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.808949085 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.80934021 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.809584379 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.813041823 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.816575326 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.808591865 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.809045824 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.80876269 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.809391107 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.808812249 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.809077235 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.80871036 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.809701074 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.810302575 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.809671825 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.812581223 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.809869133 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.8097766 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.808522834 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.809461504 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.809435612 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.808869544 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.810346646 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.810804611 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.809417815 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.809663934 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.808824996 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.810787109 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.809435782 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.809700395 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.810190465 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.810366402 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.811874463 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.809831215 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.810542446 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.810554505 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.811026783 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.809788558 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.810855131 seconds)
  done (took 131.997661615 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.810928526 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.80796757 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.808225998 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.808136406 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807533933 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.810114813 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.807061353 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81039324 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807956919 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.809721228 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810552868 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808412857 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807680318 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.811332377 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811034989 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.80753162 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.810503509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80828382 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.810420705 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81228814 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811571095 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.808963732 seconds)
  done (took 41.540434251 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811384265 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.811176157 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.808980212 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810534676 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.807986134 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.811367062 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.811882093 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.811425207 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811991346 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808251111 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809285325 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811258544 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.808898262 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809187498 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808738895 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.808800186 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811903553 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.809409109 seconds)
  done (took 34.317534038 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.810280658 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.810132398 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.812777671 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.810064795 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.810294378 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.812928278 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.810956531 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.813832875 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.813043376 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.810846339 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.813149799 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812879305 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.813517651 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811261805 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812420329 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.810395376 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.813373408 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811090425 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81324038 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81040191 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.810973097 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813119029 seconds)
  done (took 41.596770609 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812871291 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.813021206 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.810466965 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.810564253 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.811452775 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.812896633 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.813202101 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.810702388 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.814209606 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.813802338 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810913504 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.813828543 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.811277743 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.812697036 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.811649971 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.811317231 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.814593014 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.813633079 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.814005336 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.811499202 seconds)
  done (took 37.984861566 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818331052 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818644513 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81867864 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818182988 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817972342 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.818473745 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819426513 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.821087303 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.820606187 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.820776916 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.819641474 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.820952123 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821032751 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.821361869 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.820914312 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820058671 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.820678551 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.820751636 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820195327 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820669535 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81984159 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.821443209 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.821534892 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822015273 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.822322575 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.821270914 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820905169 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.822447286 seconds)
  done (took 52.707973954 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81795606 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.817511396 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.814665598 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.813880307 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.815504704 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.814919944 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.81579582 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.814668202 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.817147239 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813932758 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.817804023 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.817868808 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.818062251 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.817167232 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.817898404 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.817315402 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81807627 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.815054564 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815228917 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81505806 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.818189733 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817766629 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.818493608 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.815581103 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815860228 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.818394052 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.816122883 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817010432 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.818641092 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.815367241 seconds)
  done (took 56.238140154 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.837060244 seconds)
    (2/2) benchmarking "in"...
    done (took 1.837057555 seconds)
  done (took 5.415400649 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.816026828 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819506512 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.819386757 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.817580649 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.818123852 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.820324561 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.819725978 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817268022 seconds)
  done (took 16.28923461 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.819352168 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.819650207 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.820792923 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.820135475 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.823560937 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.820969729 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827974219 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.819720489 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.822065091 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.821206183 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.82793612 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.828825001 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.823717803 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.821245606 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.821121412 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821211495 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.820611982 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.824082688 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.824447256 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.820645402 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824668349 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.821786005 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.822631384 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.817380368 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.822820001 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.832699077 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.825387531 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.819703414 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.821680792 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.824469142 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.821925316 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.817951156 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.825455483 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.825400589 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.821021572 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.825203068 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.831599965 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.822255539 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.828580799 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.827957377 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.825327333 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.821503914 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.826061063 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.826497025 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.826232246 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.827917238 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.825269523 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.823013351 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.824555854 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.828861434 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.83170151 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824881406 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.823702352 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.828350725 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.828049524 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.833008013 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.830370305 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.830052417 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.835234356 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.836203056 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.838030439 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.834686517 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826482261 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.829396598 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.835771176 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.850580588 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.833888233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.824395874 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.824028869 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.827103782 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.832212535 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.839544895 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.835524076 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.830310186 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.830321856 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.826699532 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.826739818 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.827158929 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.833930714 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.83027512 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.830351971 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.830647912 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836530387 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.850287678 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.827004723 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.830916115 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.830871459 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.830644765 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.828943293 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.83869621 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.831643075 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.828405285 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.82704539 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.828016012 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.828605027 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.832045772 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.82747033 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.828735355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.825941083 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.828719531 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.832369065 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83099641 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.837769536 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.831372567 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.831487466 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.8349132 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.830460546 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.828917756 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.83579604 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.830017396 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.831797497 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.829805558 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.836561406 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.82572609 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832575105 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.837558677 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.833138544 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.830792817 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.832533812 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.830905823 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83932508 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.856121228 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.831063624 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.830723565 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.834089581 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.843519098 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.833011366 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.832343379 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.830062417 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.82750069 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.827760918 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.830829081 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.830094555 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.831220628 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.83333547 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.831087505 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.827025735 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.831839923 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.83436326 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.831372236 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.831267267 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.8308022 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.831830191 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.832789756 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.834342049 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.831614695 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.837203393 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.830554347 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.832812543 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.832407752 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.829319591 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.832242807 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.832023394 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.83461606 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.830560579 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.834569195 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.831256032 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.834680398 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83291791 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.832600471 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.831950116 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.831127826 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.836483917 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.836396185 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.835030185 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.832117419 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.829809197 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.83303793 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.832628704 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.832368003 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.832324402 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.830940938 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.835465839 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.844165006 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.833669249 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.836380144 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.834936913 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.835223322 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.836140107 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.837908909 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.835038828 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.841647695 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.835397316 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.839156768 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.836118112 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.835177259 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.83345253 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.833565779 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.832976598 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.837077551 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.836258725 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.841719942 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.846518846 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.841966921 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.835537159 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.837731926 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.834984009 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.840916362 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.836910691 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.836950184 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.834480747 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.836498945 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833317835 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.836973642 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.835149274 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.83759781 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.832924981 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.834118631 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.83431372 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.838380148 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.834303467 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.835195904 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.83533197 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.832832003 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.834688339 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.838268886 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.833932882 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.832545703 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.83293262 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.834931893 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.835894622 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.837639114 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.841220446 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.832408454 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.836739229 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.836502005 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.835023446 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.834361597 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.83630799 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.837291914 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.8353169 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.843078991 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.835827934 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.836546195 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.841432038 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.835469869 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.835401705 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.837364427 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.835606674 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.833730192 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.838330527 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.844440307 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.835934608 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.839372888 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.839792087 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835715852 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.837309183 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.841679791 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.833514604 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.836737936 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.83694738 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.838171134 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.834000981 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.837420157 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.836459493 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.837389768 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.837869425 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.838252844 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.837298656 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.837406386 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.839484836 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.839826 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.839878459 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.840302728 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.849419658 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.841610774 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.837476357 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.838989793 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.839548549 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.842740795 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.838396802 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.840038155 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.837940877 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.851849925 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.849914357 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.84492591 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.838632432 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.839907919 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.844769541 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.840046506 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.842530646 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.837773327 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839082237 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.838456591 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.836805926 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.837088073 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.84018883 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.839610788 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.84017105 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.840048052 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.844317983 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.839027862 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.838403077 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.842405354 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.841392744 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.839364329 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.838031826 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.838759432 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.841933801 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.840663918 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.837874381 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.839522296 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.846641133 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839343345 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.840466256 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.839754013 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.839631756 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.83884044 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.841490273 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.843358167 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.843392199 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.851791983 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.842887487 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.849456253 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.84177209 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.848448059 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.843657725 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.84406593 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.852084844 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.837330799 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.840092989 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.841299788 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.845313892 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.849051536 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.844947776 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.841550123 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.847925892 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844787277 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.844263353 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.841433703 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.843636301 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.840908844 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.843841805 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.849912741 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.843342685 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.84598544 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.843244473 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.839982141 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.844360137 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.842704672 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.840175215 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.844450691 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.844660178 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.842369706 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.841117173 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.841726596 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.841922343 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.844140841 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.84187224 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.839579968 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.842272656 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.848840256 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.842447914 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.850299461 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.842795927 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.849576517 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.845970317 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.850249064 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.846062637 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.84263939 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.845674741 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.842761641 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.843749045 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.842957812 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.843529303 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.845896549 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.844622438 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.848117285 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.84625971 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.845824805 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.843084104 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.846495607 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.84304791 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853008038 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.871048832 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.844251234 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.847833839 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.84196251 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.844739763 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.851984531 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.846923342 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.842399314 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.847828666 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.855586237 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.852433892 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.844302833 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.8483767 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.845301618 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.847539552 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.845225336 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.845398867 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.848761768 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.845349891 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.844487959 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.848902768 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.848071628 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.845309714 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.845211181 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846113886 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.846121303 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.855423372 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.848181228 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.845275511 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.848081961 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.846379914 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.845714634 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.844487383 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.847693754 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.845597634 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.84606458 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.845861471 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.85314416 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.85280985 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.848951974 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.845598709 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.849098151 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.846185915 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.846278743 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.850148648 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.849977887 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.849738444 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.846865452 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.848661825 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.847291723 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.845136999 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.846148659 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.846568129 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.846939131 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849368452 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.854213906 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.846454985 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.844835677 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.847277188 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.84719946 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.846175166 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.847355076 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.855442217 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.850677919 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.858174823 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.856055756 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.856208949 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.848273607 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852118045 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.856585983 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.847930826 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.848357104 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.852508058 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.849545626 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.847813551 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.851152245 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.851694262 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.853723267 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.848025467 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.848687248 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.856486097 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.849278043 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.851088024 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.850734728 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.852006437 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.848628923 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.845880906 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.84847071 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.847846286 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.856089268 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.850228389 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.851342131 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849818695 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.84829939 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.849154624 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.856311256 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.84975081 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.849790728 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.846377215 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.850273171 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.85219256 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.84984101 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.847670089 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.847964434 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.849084464 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.852559868 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.856997749 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.846667892 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.850322877 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.849501845 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.85084669 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.853257024 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.85034596 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.848068043 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.847847306 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.850204368 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.852180533 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.850618073 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.85242294 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.849848122 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.85162026 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.852346774 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.853615305 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.853199929 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.86141896 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.859912621 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.849124559 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.850416393 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.851696206 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.854136771 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.853166464 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.85501421 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.849520073 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.851429994 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.851901762 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.854476419 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.851920626 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.85488848 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.868782626 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.852069624 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85212438 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.851274989 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.854538075 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.85247987 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.849301777 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.851718929 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.852315246 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.854214118 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.862808779 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.8557644 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.858617726 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.852364259 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.852465958 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.856898189 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.85538514 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.860060276 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.855147445 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.855103612 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.857296775 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.85669491 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.869366752 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.852369802 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.86102515 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.883858573 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.852390376 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.854027097 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.856028151 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.851247537 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.856439459 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.855771667 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.856733067 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.854291974 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.853862581 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.85598395 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.85338764 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.859973709 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.855055287 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.854492237 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.853802123 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.853207441 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.855087745 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.850418286 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.858259052 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.854428419 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.85680781 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.856820492 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.856808557 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.855196343 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.867535925 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.864826274 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.85515708 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.857035565 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.851808635 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.858035604 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.857785396 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.865373151 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.862251899 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.857859903 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.857583008 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.855363926 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.85868539 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.852711436 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.854634698 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.853642353 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.854369082 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.852652199 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.868508275 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.866935852 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.86054884 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.854844665 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.858230865 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.855866457 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.856424908 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.859009844 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.859377576 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.856688528 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.856040524 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.863334277 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.855421393 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.855414116 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.859443758 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.863283992 seconds)
  done (took 1099.447810865 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.853292089 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.853324266 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853926433 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.852780348 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854096804 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853298162 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853244815 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.853188929 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.853550082 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.854095573 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.853055148 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854110674 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.854572783 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.854693489 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.854811994 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.854675596 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854300652 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.854031734 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.854572286 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853961271 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.854272797 seconds)
  done (took 40.707444583 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.85679357 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.854614633 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.855066114 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.856491489 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853385676 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.855848185 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.854091175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856425481 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.856757008 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854874194 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.857206889 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855355448 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.853620868 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.853699408 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853223203 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.855991125 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.858245437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853226743 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.855365542 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.852315575 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855718324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.85333922 seconds)
  done (took 42.589519666 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.859081058 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.859312845 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.855463593 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.854315248 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.856899539 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.853386433 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.859513944 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.856827874 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.857189058 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.85863891 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.854923503 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.857178713 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.864348062 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.861871809 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.857781926 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.857414638 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.999549952 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.858484731 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.859471163 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.858927706 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.852645808 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.861880137 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.853048655 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.853274632 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.856093739 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.859225909 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.853569937 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.852945586 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.857976901 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.856259594 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.862122612 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.854588056 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.853494944 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.854823335 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.853308236 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.854249396 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.856607284 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.850651461 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.845076468 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.84720605 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.858262533 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.870173579 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.850621505 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.853677166 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.847313334 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.845924676 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.85065338 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.859891063 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.842954852 seconds)
  done (took 92.847032812 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.844359796 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.846434774 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.844405924 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.845748883 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.846192396 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.846196265 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.845809088 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.846506041 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.845224204 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.844448241 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.846520276 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.845121252 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.844481093 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.847059895 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.846848055 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.844740882 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.845218632 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.844599009 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.844475337 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.845590054 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.845016845 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.847888586 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.848412724 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.845255183 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.848647982 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.844955275 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.844579367 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.84782772 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.84447837 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.845895127 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.847262919 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.847919754 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.846961936 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.844299242 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.845110455 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.847924694 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.84734721 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.84477644 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.847553207 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.84446748 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.847954853 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.847321259 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.847288463 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.846932028 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.846026768 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.844712444 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.845966445 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.84492053 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.84463956 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.847663192 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.847156254 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.845714137 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.848139277 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.845729595 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.846986204 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.848200136 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.845737579 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.845661807 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.849345089 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.844913745 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.845925998 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.847830421 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.846890205 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.848370073 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.848254013 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.844538878 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.845917437 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.848866237 seconds)
  done (took 127.3135893 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851703574 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.851437061 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.851902001 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851796527 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852889396 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.852541991 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.851478467 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.852613551 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.852248876 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.851869822 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.851841206 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.848274668 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.85236829 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.849489927 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.853353199 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847346553 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.846263877 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.845940171 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.846491145 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845638039 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.846470448 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.845413552 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.84607117 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.845897109 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.8461354 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.845502171 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845766431 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.844932204 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846210789 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.846102947 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846195094 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.846778056 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.844542282 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845306623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.845680442 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.845185073 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.845836555 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844606816 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.844728694 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.844022472 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.844515439 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844636786 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.845773794 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.845176645 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844947169 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.84506995 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845580049 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.846208029 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.840637126 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845639514 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.845720882 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845488605 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846229434 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.845405727 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846203178 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.841117885 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846723368 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845827844 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84703156 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.845161189 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.846083374 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.841540701 seconds)
  done (took 116.280228787 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842121313 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.842438585 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.83997711 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.840505236 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.840902478 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.841185586 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.842710407 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.841952638 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841586508 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.841698492 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842553898 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840503795 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841596775 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842700731 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.839817412 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840415221 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.840532838 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.840334578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841758062 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.840036682 seconds)
  done (took 38.588456231 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.840191165 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.842463874 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.837936682 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.839227123 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.840270921 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.838634437 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.841253694 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84110643 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837736308 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839896905 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.840660488 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.840960762 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838507812 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.836630985 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.839667164 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.836219642 seconds)
  done (took 31.194577043 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.837603808 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.838063892 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.840954416 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.842955823 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.83627636 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.835562876 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.840090293 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.835681852 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.835177796 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.837413211 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.83828575 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.838762675 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.836520026 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.841772503 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.834751206 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.836750501 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.835523167 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.836833044 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.837224428 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.840493564 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.833285141 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.833634131 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.837899197 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.834457459 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.831891316 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.833327117 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.831902898 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.831776482 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.833251701 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.834320727 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.832736698 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.834566845 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.832272669 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.832338232 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.838498766 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.832032116 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.835306466 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.834949715 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.836085993 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.834937487 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.833762893 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.831777137 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.835495239 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.834790564 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.832228831 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.834202883 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.83147028 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.832222714 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.832028119 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.832849947 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.833265197 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.836566953 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.833254163 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.834395792 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.83363474 seconds)
  done (took 102.699784679 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833641813 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833965781 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831231837 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.834385423 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.8349358 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.831332791 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.834680749 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832427772 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832177639 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.834001782 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.833656634 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834943308 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830890989 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.83516604 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.832903991 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835017826 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.831126203 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832009138 seconds)
  done (took 34.754954516 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831725716 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.832184502 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.836696404 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.831117979 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.830806869 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833143494 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.8309509 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.834500388 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833679121 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.831306963 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83012162 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.833231422 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833459854 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.83446789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.830653955 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830573559 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.833338966 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833915795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.831865758 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830295497 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833758488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832596705 seconds)
  done (took 42.070010893 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.83345923 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.833234284 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.848826636 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.853199714 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.854816857 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.866701488 seconds)
  done (took 12.84531157 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830392897 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833863284 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830336813 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833794281 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83391661 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831317494 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831627611 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831941026 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832580111 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831777011 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830914276 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833168961 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833495876 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831472834 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834074475 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834590305 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830879517 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830680527 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830221809 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832275032 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831277029 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834657224 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830046112 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830507866 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829379811 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830115456 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832998557 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831034212 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830594348 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833829382 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833223273 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830852758 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834374187 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830185241 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833704838 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83396797 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831090894 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835029319 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832577632 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831255951 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.833643717 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83296278 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833432003 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832095219 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833394984 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83082778 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830463137 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830249975 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832021795 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832848585 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832722144 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830459885 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833281964 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832745982 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834607496 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833877378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831170993 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830558676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83406203 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832391025 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830452938 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83350103 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831507913 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830636884 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83315525 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832681287 seconds)
  done (took 122.680647416 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83166076 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.831039373 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832082962 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832650155 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831122102 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832196353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83135796 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83175268 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831460123 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832012148 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835066962 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832687158 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832494856 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831482516 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832717143 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831469766 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831835297 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831342449 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831971597 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833611104 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831410835 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831085759 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831598835 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8313867 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831863012 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835796942 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831158903 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.830866529 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831511919 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831516631 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833097449 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83102513 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831137408 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830320697 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831239132 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832274467 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8340592 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831058758 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831672574 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833888761 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831686225 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835986886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831412325 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830803616 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831461624 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831467197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83175856 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833052198 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831447191 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831691612 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832405396 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831372414 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833409256 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831855259 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831564959 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831759687 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831519665 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831608568 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834296781 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835864682 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832819659 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832055243 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835526941 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832985159 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832804647 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832250157 seconds)
  done (took 122.681031792 seconds)
done (took 2547.386360901 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.834097042 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.827577343 seconds)
  done (took 15.41706715 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.996943416 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.951062679 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.834164642 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.843363111 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.834682951 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.857561268 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.857615509 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.834453667 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.835093215 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.834060435 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.834707445 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.021646309 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.885419644 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.835348669 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.836631767 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.928123649 seconds)
  done (took 51.780665711 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.837320289 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.839003489 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.849896635 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.840603123 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.838063893 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.849483804 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.872085476 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.842125326 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.873970592 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.852196368 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.906677319 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.84996615 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.838608033 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.888724696 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.851930692 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.85314183 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.929269323 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.914141741 seconds)
  done (took 35.285886466 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.915262939 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.839307165 seconds)
  done (took 10.520434104 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.835303689 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.879811997 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.917384202 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.8449501 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.834607926 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.841188003 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.867008759 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.869320679 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.863519526 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.838795017 seconds)
  done (took 70.353781597 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.845791422 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.839736366 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.840343091 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.839100896 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.833312407 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.837463385 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.839125129 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.837608158 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.496601782 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.872854934 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.845926243 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.844009041 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.840145149 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.840627524 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.836598424 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.86398522 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.949495048 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.83705763 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.835772468 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.844953813 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.839182327 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.904242947 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.853271627 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.840885084 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.868745133 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.495866483 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.846495793 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.845927623 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.942709777 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.837253436 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.839704846 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.840496968 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.842354342 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.231431319 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.111387246 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.840346716 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.85598375 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.84837376 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.838202881 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.975983231 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.841751297 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.846944113 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.587140141 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.089189447 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.944392997 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.883045216 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.14207251 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.856037315 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.84276819 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.869480217 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.843363288 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.842251392 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.855227056 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.335658955 seconds)
  done (took 130.664763912 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.835838457 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.190008707 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.006183904 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.837497956 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124815352 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045770162 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.838147971 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886376387 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.838346819 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071782864 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.096931766 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.943957807 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838468477 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.838982922 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.835870009 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.8349193 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99600618 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.909353659 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.839694214 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.83568628 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868723066 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081956576 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.960621328 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.839796285 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.868456545 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.050168353 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961112653 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.942556401 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.620921254 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.837014269 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902485511 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.838712156 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.837188818 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.838274983 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994682129 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.933139773 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927617185 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.838525581 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838886532 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.837213558 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.508540598 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039737355 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.93531901 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.980986181 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.038523699 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045386468 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.622988397 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.838291993 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.579613093 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004182244 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.071535607 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.074089546 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.961373971 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.841675273 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.362996504 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.837135033 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.837432566 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.091057727 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.982868931 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.939082094 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841781202 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.837605288 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838212893 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.086383023 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.840869642 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936513022 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843585648 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.839223931 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.937946042 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.940436561 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.979011578 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.054114846 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.871347503 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.790299348 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.379662293 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.088520641 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.907149365 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091990641 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.841672982 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838676913 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920407282 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.682092884 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.095505097 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092699827 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.093088623 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877015637 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.563651174 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.839926556 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.069590064 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.062243525 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.101346709 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.050108757 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.078514245 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.167146495 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.840735937 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.839997193 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.062127825 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977879618 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.844050411 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.186887371 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076555564 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.395934483 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.862210376 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148203144 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97566018 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.843308385 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.483235327 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.840783421 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.074495059 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.883140414 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.841954016 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839544894 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.063010106 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.834300841 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842468276 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.487706973 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.904759446 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.84422623 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076955594 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.842426943 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113515377 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843456351 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080487304 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.862000021 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.875268751 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.073202251 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.046121572 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.843375479 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089660308 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089523239 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.957857137 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.065129578 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.538389722 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.843560729 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.133157774 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.843278102 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.842284989 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.014743904 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.844131825 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.989419036 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.84470596 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138276697 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867128886 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078642387 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843827941 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.10206557 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.878629714 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894983597 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.84689991 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.977501465 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843364437 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.77250206 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002344882 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847308825 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.84197004 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.6392902 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.844431349 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996507715 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.077640996 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868425314 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918289772 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.515811164 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.844354669 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.924675509 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871010539 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.235366786 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.844340796 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.099212467 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.845072647 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.845450742 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.843717364 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.087717216 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.029886913 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.847268799 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.843147925 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.756456088 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.843097766 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844108964 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03107099 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.279285443 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.843564979 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047556939 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.848780403 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973777836 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.846743804 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.922395902 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.186469761 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844111846 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.845968488 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.844793166 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.845250563 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845764736 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.108924195 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.874009621 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.364278822 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.986411873 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122908107 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.15949048 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.096526303 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.892004292 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850050578 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.10424424 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.847500902 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.910480836 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.847559818 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86901118 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077139351 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847728115 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.057911099 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.126807809 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.703859535 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.895100794 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.847797883 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847537637 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.847005303 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.991977809 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935727878 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.847867476 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.847868398 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.963404788 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.969462404 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.05785585 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.847527525 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.91014562 seconds)
  done (took 897.314367181 seconds)
done (took 1213.09515571 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.848037211 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.848868574 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.838769246 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.84884862 seconds)
  done (took 29.157922807 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.854063981 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.851849388 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.856643314 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.852173443 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.854264047 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.853246302 seconds)
  done (took 12.89351142 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.281314314 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.848628021 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.848695145 seconds)
  done (took 21.752355985 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.92092448 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.23377763 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.956352857 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.271620551 seconds)
  done (took 10.155157874 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.857803997 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.856201033 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.858737934 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.855217745 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.855507971 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.855911748 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.854112962 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.855360428 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.857043306 seconds)
  done (took 18.480842758 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.867765532 seconds)
done (took 98.081473669 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.210228707 seconds)
    (2/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.231187737 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.398892825 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.935221869 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.981253187 seconds)
    (6/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.014862848 seconds)
    (7/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.889978874 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.874686487 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.959452464 seconds)
    (10/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.149555451 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.926971641 seconds)
    (12/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.430258819 seconds)
    (13/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.861809067 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.875441699 seconds)
    (15/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.948074486 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.17693215 seconds)
    (17/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.369583605 seconds)
    (18/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.852040865 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.481618773 seconds)
    (20/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.862725941 seconds)
    (21/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 3.157703747 seconds)
    (22/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.914488032 seconds)
    (23/309) benchmarking ("sort", Int8, false)...
    done (took 4.732521476 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.888288291 seconds)
    (25/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.088505166 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.042540922 seconds)
    (27/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.211600885 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.798802959 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.337921421 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.851527829 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.138480869 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.957039877 seconds)
    (33/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.850692935 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.959828329 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.468541611 seconds)
    (36/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.000262206 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.252177592 seconds)
    (38/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.850649773 seconds)
    (39/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.201159368 seconds)
    (40/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.958079467 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.03167022 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.922187728 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.969602461 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.859825412 seconds)
    (45/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.888345085 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.880432514 seconds)
    (47/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.338996595 seconds)
    (48/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.852675196 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.171098876 seconds)
    (50/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.887176726 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.051454167 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.781706558 seconds)
    (53/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.950386483 seconds)
    (54/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.999018093 seconds)
    (55/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.6825944 seconds)
    (56/309) benchmarking ("sort", Int64, false)...
    done (took 5.576194859 seconds)
    (57/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.944079204 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.951341143 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.884644364 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.1147855 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.19746448 seconds)
    (62/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.564593408 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.02847742 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.88310677 seconds)
    (65/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.372832859 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.208592146 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.958348871 seconds)
    (68/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.178899433 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.015875378 seconds)
    (70/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.692136279 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.866217621 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.862105481 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.003138138 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.930815632 seconds)
    (75/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.882658438 seconds)
    (76/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.100826605 seconds)
    (77/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.963594882 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.859832161 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.15702257 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.127419219 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.937596231 seconds)
    (82/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.288672592 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.961338351 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.864933041 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.090103165 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.302335175 seconds)
    (87/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.892720453 seconds)
    (88/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.293143034 seconds)
    (89/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.870717199 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.632955598 seconds)
    (91/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.991142257 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.857459992 seconds)
    (93/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.233218892 seconds)
    (94/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.89196439 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.156965505 seconds)
    (96/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.329244334 seconds)
    (97/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320222741 seconds)
    (98/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.288006159 seconds)
    (99/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.026086645 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.021368081 seconds)
    (101/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.994659678 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.870400211 seconds)
    (103/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.091481584 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.834628162 seconds)
    (105/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.874447744 seconds)
    (106/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.15486789 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.528555279 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.528173311 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.893239489 seconds)
    (110/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.046706388 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.169602451 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.210486746 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.950509055 seconds)
    (114/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.9465753 seconds)
    (115/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.004964139 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.228721069 seconds)
    (117/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.877448046 seconds)
    (118/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.345512735 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.873009866 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.865257573 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.869966621 seconds)
    (122/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.766769176 seconds)
    (123/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.954776558 seconds)
    (124/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.06545697 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.889076827 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.098860442 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.696220064 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.074865498 seconds)
    (129/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.004514406 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.866069156 seconds)
    (131/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.191809375 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.871621977 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.963418232 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.945876406 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.855815724 seconds)
    (136/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.045851316 seconds)
    (137/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.889637687 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.000674157 seconds)
    (139/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.872533773 seconds)
    (140/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.075969028 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.000557473 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.980454531 seconds)
    (143/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.865864 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.078824564 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.123487343 seconds)
    (146/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.916156598 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.858378049 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.155204219 seconds)
    (149/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.143318265 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.140799644 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.281324839 seconds)
    (152/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.969624914 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.895294413 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.221305925 seconds)
    (155/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.852092178 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.820571572 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.859374043 seconds)
    (158/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 2.013864886 seconds)
    (159/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.000238156 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.260962968 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.136047408 seconds)
    (162/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.896620689 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.941272831 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.867928553 seconds)
    (165/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.255686521 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.213733151 seconds)
    (167/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.879635928 seconds)
    (168/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.929854782 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.867692487 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 5.670586859 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.010138584 seconds)
    (172/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.897380297 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.092107927 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.860100818 seconds)
    (175/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.00424562 seconds)
    (176/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.160500705 seconds)
    (177/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.958307188 seconds)
    (178/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.939496106 seconds)
    (179/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.119354145 seconds)
    (180/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.250874667 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.874827728 seconds)
    (182/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.007283154 seconds)
    (183/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.256201323 seconds)
    (184/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.976707425 seconds)
    (185/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.147242679 seconds)
    (186/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.872856191 seconds)
    (187/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.979108575 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.886098509 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.863528398 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.135252048 seconds)
    (191/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.875557015 seconds)
    (192/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.887227769 seconds)
    (193/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.147862113 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.87334898 seconds)
    (195/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.967509738 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.030980224 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.056788624 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.944041568 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.013039664 seconds)
    (200/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.913311468 seconds)
    (201/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.890918016 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.828987357 seconds)
    (203/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.980507158 seconds)
    (204/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.890770553 seconds)
    (205/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.942343758 seconds)
    (206/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.057414871 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.111750344 seconds)
    (208/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.17120883 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.585775154 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.639843508 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.074490753 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.276651418 seconds)
    (213/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.9707876 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.727672292 seconds)
    (215/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.954669436 seconds)
    (216/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.061856454 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.018581819 seconds)
    (218/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.789718053 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.109724664 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.555436816 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.232556545 seconds)
    (222/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.877951436 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.274214984 seconds)
    (224/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.907812398 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.492263297 seconds)
    (226/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.87364837 seconds)
    (227/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.273098875 seconds)
    (228/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.969358516 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.181113456 seconds)
    (230/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.900425905 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.036306493 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.925195403 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.968723347 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.973443244 seconds)
    (235/309) benchmarking ("sort", Float32, false)...
    done (took 5.602395275 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.000791241 seconds)
    (237/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.090894003 seconds)
    (238/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.122478835 seconds)
    (239/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.977986173 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.80577387 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.065320606 seconds)
    (242/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.864237251 seconds)
    (243/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.726350866 seconds)
    (244/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.452015313 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.984732274 seconds)
    (246/309) benchmarking ("sort", BigInt, false)...
    done (took 6.874494658 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.3016649 seconds)
    (248/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.101684 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.047539355 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.194775689 seconds)
    (251/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.902756533 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.976228798 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.26606743 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.863547245 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.556617011 seconds)
    (256/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.02921396 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.880090795 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.873500163 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.156555468 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.093208685 seconds)
    (261/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.369124558 seconds)
    (262/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.964964235 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.872821839 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.036933828 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.172645587 seconds)
    (266/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.881174719 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.287277597 seconds)
    (268/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.577555256 seconds)
    (269/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.98549392 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.032105968 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.917948251 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.217098593 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.39774589 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.89517439 seconds)
    (275/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.891981353 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.878267846 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.043028806 seconds)
    (278/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.876024036 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.034358932 seconds)
    (280/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.885828794 seconds)
    (281/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.080871226 seconds)
    (282/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.791098126 seconds)
    (283/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.945490955 seconds)
    (284/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.873973307 seconds)
    (285/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.098783824 seconds)
    (286/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.075226565 seconds)
    (287/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.992400416 seconds)
    (288/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.467550644 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.70536638 seconds)
    (290/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.882582984 seconds)
    (291/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.20932151 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.204669759 seconds)
    (293/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.866612012 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 7.239242945 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.910017059 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.993020838 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.91266446 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.328219791 seconds)
    (299/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.277292215 seconds)
    (300/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.911635692 seconds)
    (301/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.956529134 seconds)
    (302/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.262943594 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.014997745 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.905116244 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.281785674 seconds)
    (306/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.447426908 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.103356692 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.87994634 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.31748394 seconds)
  done (took 1008.620422888 seconds)
done (took 1010.678706301 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.908138071 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902810051 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.885050986 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.906588441 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.99696909 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.912290586 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.896161119 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.887636515 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.932659824 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.934145815 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.881868821 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.91094503 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.887424531 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.886155411 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.885146 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899304663 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.20080795 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.919490121 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.903345319 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.89504588 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.902399963 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.883510768 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.934715807 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.911141105 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.891176552 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.888510225 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.888443959 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.906354055 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.998286796 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.888659927 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.889582206 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.89689042 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.201373265 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.915630197 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.881056128 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.906113751 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.898511278 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.89570262 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.891557193 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.918893481 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.285277433 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.926895637 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.890652232 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.889133682 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.888529067 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.891924934 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.889554572 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.893363217 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90136493 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901304691 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.277816473 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.942895396 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.89162523 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.888385188 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.89827672 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.887439618 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.89078115 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.904112124 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.90844033 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90415503 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.182609339 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.92500214 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.890076396 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.906148385 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.895921317 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313387378 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.925027703 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.893272375 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.286561432 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.933264699 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.312976798 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.937047465 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.890410244 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.904100469 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.921144131 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.201537736 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.916153701 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.888371846 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.89753379 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.88564679 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.899080694 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902232146 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.89464641 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.89081735 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903280537 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.91676246 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.899984122 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.891057417 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89923002 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.909295476 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.898558759 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.901679168 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.893877639 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.886193995 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.900538844 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.893670858 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.892778089 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.892610665 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.896461271 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.901523143 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.285496552 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947502444 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.887458768 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.888056102 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.89247362 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.904723919 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.286165587 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.931059171 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.913821787 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.939376359 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.892415701 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.184420493 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.924638382 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907635944 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.901122083 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.894811349 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.886847518 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.186186973 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.312622926 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.9470164 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.893403363 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.889123522 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907303205 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.894635135 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.889887512 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.206683514 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.924695682 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906322121 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.013449588 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.903102853 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.923098143 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.888724191 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.895673497 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.922305727 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90951369 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.923984676 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.895498264 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907849634 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.908717862 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.888108723 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.903824577 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.902989757 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.894695171 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.898850802 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.887379983 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.923770395 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905689353 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906194625 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.9146532 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.015613011 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.892170786 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.187278448 seconds)
done (took 296.896010811 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.965163299 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.885300771 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.990158246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.891562707 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.971800411 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.976540833 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.888527519 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.888836423 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.888030977 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.296721555 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.888838484 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.888629606 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.887885781 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.889818066 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.972896682 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.890726961 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.891518908 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.22977624 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.896265653 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.963840435 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.885677055 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.890114281 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.89126137 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.261973126 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.894445662 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.894218422 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.96450308 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.893208912 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.228445661 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.896239157 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.890327541 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.228452678 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.983119427 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.910206059 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.902789752 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.900066611 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.972870418 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.898347511 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.97325867 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.97268709 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.993156579 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.937158229 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.890711922 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.889762002 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.89620227 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.89932529 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.890424598 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.921484466 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.89470796 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.891243425 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.231989428 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.903297249 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.901994368 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.890639358 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.891869024 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.919542991 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.891729047 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.897380941 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.984185095 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.897969782 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.955461893 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.264304602 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.267064 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.895187891 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.891634815 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.893290276 seconds)
  done (took 185.868066149 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.960996982 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.972663813 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.960105822 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.901232574 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.944265183 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.962803656 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.900076924 seconds)
  done (took 15.414788201 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.900391296 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.89625579 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.946975104 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.946778858 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.898389064 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.043004088 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896161657 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.905900775 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.893916106 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.947941005 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.895210005 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895731125 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.902006969 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.891459727 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.94714187 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.906749837 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.01171177 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.896492193 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.89954895 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.046885489 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892075032 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.901792731 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.948794938 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.906893029 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.897009526 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.901570047 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.482184287 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.898493271 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.893538391 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.89682099 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893299771 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.937891296 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.896406945 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.897224571 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894435932 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.011159184 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.899984282 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.896281886 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.896863181 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.892765569 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.897261219 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.897140167 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.896932798 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.893804857 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.89560176 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.920867552 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.896720553 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.896726322 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.896374203 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.89790967 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.948284528 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.897248245 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.894001861 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.894019028 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.951372513 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.905679895 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.900023265 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.895361903 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.897683531 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.896184869 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.051562504 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.948758426 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.897554704 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.947611687 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.897481552 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.898414618 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.900336859 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.896806429 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.994451858 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.89738192 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.949121179 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.896565794 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.059214761 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.920406184 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.899052388 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.900847856 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.902488813 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.903198519 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.89846777 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.908344724 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.894912998 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.900528951 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.905721109 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.897346869 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.899874647 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.023528935 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.006817557 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.896141409 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.911989351 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.909715364 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.896076006 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.951889814 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.89907637 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.896352132 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.958570378 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.017045601 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.955268815 seconds)
  done (took 208.578192362 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.905622257 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.910116687 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.90162835 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.917019274 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.89982192 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.900589327 seconds)
  done (took 13.252125527 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.903868008 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.901274915 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.900605336 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.900199703 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.903967252 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.9018841 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.904501816 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.902339014 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.908262856 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.900996569 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.901767831 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.901442868 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.902083586 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.904314173 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.904816104 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.903089091 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.905127563 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.898518404 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.899936627 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.904759372 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.046806846 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.905038939 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904164949 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.902416812 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.905793157 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.901988406 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.910778008 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.901080317 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.901732157 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.911419698 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.909644128 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.904637011 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.903538005 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.908834211 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.910770556 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.903381777 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907971694 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.903840025 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.899329495 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.904066122 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.904453094 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.90666668 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.901626777 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.905215701 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.904863662 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.907891759 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.90954622 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.910141744 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.906732288 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.905126263 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.904107696 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.901754351 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.905241834 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.905107283 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.906517828 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.908749312 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.908744659 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.907997432 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.907282946 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.905729957 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.904050346 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.904164299 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.905748232 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.912170271 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.909941691 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.905238787 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.904512635 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.911645241 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.906688619 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.903522014 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.906061313 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.901580744 seconds)
  done (took 140.120034836 seconds)
done (took 565.060959262 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.068253813 seconds)
  done (took 8.890445494 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.960911848 seconds)
  done (took 8.82352805 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.301743513 seconds)
  done (took 10.12640108 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.915835787 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.942957479 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.908831021 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.908092035 seconds)
  done (took 29.520863176 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.082456964 seconds)
  done (took 8.903800951 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.922048385 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.899489743 seconds)
  done (took 15.677914409 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.002385123 seconds)
  done (took 8.824933515 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.985510489 seconds)
  done (took 8.834185346 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.914688128 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.933604066 seconds)
  done (took 15.685306026 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.887223819 seconds)
  done (took 8.709307513 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.620872575 seconds)
  done (took 11.541185678 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.918777096 seconds)
  done (took 8.850764634 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.980217565 seconds)
  done (took 8.803265722 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.9467097 seconds)
  done (took 8.769670691 seconds)
done (took 163.784735419 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.901570976 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.899331352 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.899165313 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.900398196 seconds)
  done (took 29.423390147 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.938115888 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.938461263 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.939830495 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.948870124 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.941765924 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.939984045 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.930690147 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.931395086 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.949584816 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.941012961 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.940689936 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.941625345 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.939252016 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.933929518 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.943136809 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.941915417 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.95173805 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.941063842 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.932672504 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.943845594 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.90769918 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.950471553 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.942892982 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.908052641 seconds)
  done (took 48.342245721 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.105509224 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.979995055 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.060864278 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.95989407 seconds)
  done (took 9.931040687 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.957732605 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.960447375 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.971730363 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.012250492 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.034359059 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.970669008 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.929499482 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.928703954 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.915798237 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.96055029 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.035667518 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.955714265 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.061101979 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.908436911 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.090016709 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.908253432 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.907783736 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.960230287 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.012379822 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.027596657 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.909104836 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.959958106 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.963106594 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.957139882 seconds)
  done (took 49.123813249 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.906759996 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.915010397 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.913335502 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.907566217 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.908662071 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.909923539 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.912907432 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.908041123 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.928543134 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.90991195 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.908108201 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.907862186 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.908032196 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.909533164 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.908717527 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.920441905 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.921985192 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.909023314 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.911644717 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.914886916 seconds)
  done (took 40.067584003 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.903575206 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.757185767 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.254455821 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.16086601 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.906586749 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.904298848 seconds)
  done (took 31.71367218 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.922826996 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.917517185 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.910637629 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.968950661 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.05000624 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.916726473 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.909991855 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.923092273 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.958078508 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.973693176 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.932446489 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.940460502 seconds)
  done (took 25.150981683 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.908298651 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.916211199 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.908871642 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.930608512 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.923026948 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.919740397 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.918548193 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.906172219 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.925187135 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.930618359 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.919701491 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.924100205 seconds)
  done (took 44.862161891 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994553316 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.791649758 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.572346478 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.633394288 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.44029357 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115402007 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431502933 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.079006476 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.909722403 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178544845 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.576072174 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155912731 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160046547 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906881621 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.976948683 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.389401825 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206784224 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143936793 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941503705 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685313285 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030953192 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.450261945 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.642990571 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037486112 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.117862818 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.039317251 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.167436206 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.866704636 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044748406 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949517942 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918398807 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908666916 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181249456 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127239592 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039436313 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917321349 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.562260855 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.626659517 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.94310415 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.618236075 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.666226245 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.047243838 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91613408 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909363826 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840904285 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322244398 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18677408 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.913726722 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.610757505 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.910067485 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919148762 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999521149 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.912156455 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.722823041 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862794637 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.186844324 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.908354163 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916376612 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.477292548 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.022491952 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425122912 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.947112233 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.002522447 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62712233 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.389578415 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.066090555 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.913760297 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.913161837 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842970993 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.670055572 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03637196 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053127713 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.9285451 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558237904 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230326181 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.625952294 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.997309157 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211365516 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.592817335 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.947716151 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136222312 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86742514 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842327151 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.765733168 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843628328 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188172758 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954779954 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.584586023 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957792906 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07928119 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.92092372 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931595366 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918129787 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133921771 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.795149324 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911778154 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.509507014 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198832926 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932594679 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.083898363 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844222295 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.915005189 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165816476 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.121837259 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.030945098 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.490893667 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074978788 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913097932 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.996450261 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.724065535 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.027072565 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.19815066 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977461773 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.022470543 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04722043 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867783434 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222874938 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947121811 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.085082861 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.60346433 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180463886 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.251232014 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166849731 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995544702 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919476101 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.912774959 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.675059357 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.541003656 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.134042612 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.917177023 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29277416 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.027596216 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.918503769 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847220542 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.565742805 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.592615305 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.030724236 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.136198713 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.768375534 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29413487 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846214469 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.058133079 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.025262137 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.134551522 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.56727742 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.004316698 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172364467 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320992318 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.205647917 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028757408 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933668219 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032334227 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935776142 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.227847284 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.273065606 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.916901431 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.919041834 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.694413253 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.986335631 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923234808 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.919583985 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.712148329 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207202432 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958882628 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.930885445 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.85614413 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.934521602 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003125087 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925860456 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.93055085 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.44335893 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.673647871 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.931898874 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.59447784 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157324197 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930198769 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.679927298 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116816018 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.003021362 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218017148 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990717244 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.855351455 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.623479204 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.625158962 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921978001 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.854863089 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.922655721 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929984345 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932205647 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.145191502 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.216536587 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.977113529 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.635926833 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.041976738 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932774036 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.92690517 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923456181 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.419694809 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.047328748 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440466062 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037045394 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059231377 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.937443399 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.855114683 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.927150961 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927921294 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.922693753 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.887399399 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974828547 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.635067517 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257479587 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.181772662 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.570894693 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940638685 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.706851674 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.057359695 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.944774584 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.572266483 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904248195 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.024111778 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982973059 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.934381169 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.685222537 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.694833276 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493804901 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237627769 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.254772253 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382903282 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.309671207 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.248724653 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098282824 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158039719 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453413456 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984954925 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100760282 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868572401 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009596291 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.580130733 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290077821 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939041308 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152285078 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326095168 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.597546264 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090383517 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135272685 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959507478 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.753949296 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955818768 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.451245294 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.080108581 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.569498412 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158204119 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093551339 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.543919695 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.039309275 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.927260459 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.415523978 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014334321 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.636263016 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.286776877 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360444869 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.70088794 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302406314 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.937503503 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.370110305 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287949517 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.143348771 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.117305859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860783654 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.936502951 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.937580476 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.929755994 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.902294336 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.835308675 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.208006577 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937259217 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161064918 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.083585881 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.307190217 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.838963617 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.933257044 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928289652 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237689715 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.610713692 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169253205 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.268698527 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.499279759 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932200955 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.860008746 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860149879 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.630113109 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.936518183 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900994367 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167529979 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.043882861 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.886260913 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318028072 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240291592 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182827276 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.94198717 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.212849652 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212649223 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.665141083 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957430221 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.028591121 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.535135293 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.659949883 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.150230959 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16297726 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730926204 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159336499 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.600500627 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.917126132 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.930519112 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144298216 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.151230322 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.597536845 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187324912 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.654955295 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.940522507 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295396304 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994258185 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.58917741 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.149228031 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.023723569 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941570609 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009601565 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939095182 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.940950935 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.940275015 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976284591 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.598940289 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.071330025 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.944101348 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022103595 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051069838 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.517344205 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.941602655 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218591161 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313675641 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275584474 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999653393 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.931759461 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932957955 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864936611 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069783419 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.374967539 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204182992 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.061024853 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.073824229 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956303321 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.533994623 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.212676219 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244123109 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206307969 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.824698686 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931883409 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.019696933 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.155260607 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94315012 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.142479731 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172454344 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272143812 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404864312 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.069229837 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207492773 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205948814 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302092973 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934806489 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520812843 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.940532503 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.471155293 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.981321813 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.631141425 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226778617 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944968003 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15362653 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.955115984 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.128848684 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.387261871 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.648814731 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.301202222 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.935964205 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.001028584 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.222197041 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34643005 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255028251 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015543739 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944869356 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.631896824 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07275351 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.880184858 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.2022122 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934886896 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145167207 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.645994315 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943317336 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230184895 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255293453 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.933861001 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.906455981 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997900344 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.944411999 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.156998041 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213149082 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190256107 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944932021 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.945315049 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.748819346 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224870594 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002046048 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869112275 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.937572882 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036670728 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182081001 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955502106 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.452780257 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.637924562 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246656125 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.860029054 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9580946 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345779985 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39070323 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.28747381 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.466981567 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183113944 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501520075 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.794510163 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31190198 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.941297218 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35163565 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.313633841 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.940269689 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.441490696 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048364882 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.217075317 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266265258 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.948676333 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748938029 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.984426933 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159622726 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534186856 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878176109 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941606264 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.002041685 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93841835 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.066866358 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949109681 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.927056341 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831456646 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.774170248 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.429904803 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.943333316 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.058253409 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.554378934 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.505267634 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044981908 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093615744 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949164784 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.660790631 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.230481715 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193296222 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.441104045 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.012998696 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.941820999 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93908504 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865160627 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134902602 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.137505735 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248643512 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.283934563 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.046571476 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943103507 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.152992368 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14946256 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.60863002 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101589648 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329758597 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049492242 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.871243041 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.654336973 seconds)
  done (took 1706.150234497 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944440579 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.960065669 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.954028594 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.995274706 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965730328 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960886191 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.012150999 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944913756 seconds)
  done (took 57.599193476 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.940357515 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.129133791 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.948302462 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.941621223 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.96507393 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.940811474 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.135011438 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.952993736 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.956396672 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.952063672 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.941615445 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.941617702 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.235734544 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.967990982 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.943076938 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.964817633 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.950223515 seconds)
  done (took 75.676521891 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.940720713 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.123875805 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.998180987 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.970232455 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.803426647 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.954336655 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.87932484 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.958510665 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.944843991 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.111714693 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.27736759 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.990159559 seconds)
  done (took 90.817484339 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.956759922 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.949089142 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.947170862 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.948066476 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.948335448 seconds)
  done (took 11.618186455 seconds)
done (took 2222.312020874 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.186063414 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.133510751 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.174544468 seconds)
  done (took 6.170976851 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.088948713 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.138503472 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.254066708 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.261305699 seconds)
  done (took 10.608146623 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.232274669 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.315013448 seconds)
  done (took 6.411920505 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.262177878 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.971363823 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.358959219 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.942688126 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.944039391 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.945546964 seconds)
  done (took 22.700965121 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.945250698 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.947637237 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.94519497 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.948457091 seconds)
  done (took 9.649332159 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.930385045 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.658482986 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.931822052 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.947502911 seconds)
  done (took 21.332414521 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.69574761 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.068115586 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.687514609 seconds)
  done (took 9.315464198 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.593412111 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.547036557 seconds)
  done (took 10.00468099 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.104352908 seconds)
  done (took 3.96967528 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.974844418 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.217219493 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.525603763 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.525961709 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.607355811 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.196340586 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.290788168 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.178246291 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.400122095 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.433914523 seconds)
  done (took 26.217525373 seconds)
done (took 142.024172932 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.482587264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.973144971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.146279493 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.320651755 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.185384651 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.145698699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.163297603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.327584007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.992007472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.975078128 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.305235338 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.184258806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.114239694 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.965663594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.123244429 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.964052779 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.179969772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.316178556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.992287182 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.23069585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.176234368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.955680698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.150663882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.97354582 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.18397982 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.096429564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.500911151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.969172906 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.138688744 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.517844768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.099764427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.371624073 seconds)
  done (took 171.08993395 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.947734088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.947660752 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.948263825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.947410908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.412212342 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.948887481 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.949324815 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.947146008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.375249326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.37209508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.948475857 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.400899408 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.947983524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.947216906 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.946994794 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.948112134 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.532163956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.946120763 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.947706032 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.944065724 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.941847044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.230942921 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.943165794 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.267595854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.555358899 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.95353199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.940203211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956514304 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.957125141 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.958393667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.957895622 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.937531631 seconds)
  done (took 211.775203231 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.933976187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935724496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.932662284 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.92837933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.925699039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.93271543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.923816578 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.917680905 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.703108821 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.699997237 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.931921537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.925217034 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.922698085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.910945443 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.923275981 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.911013717 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.921045497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.918627879 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.918719785 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.91737453 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.919078989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.735044514 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.917522674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.728145833 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.912084551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.911279647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.902154647 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.912728273 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.915359467 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.914023304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.920502047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.900473069 seconds)
  done (took 222.502471864 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.158327235 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.904066279 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.906726493 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.823835575 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.904474131 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.903318259 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.909357511 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.14987921 seconds)
  done (took 19.503873414 seconds)
done (took 626.745838348 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.365412033 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.213261099 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.087941942 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.927103073 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.177425808 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.961721896 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.921419144 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.991874828 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.546159547 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.996956687 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.569528336 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.947278665 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.654619492 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.949123318 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.044991583 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.978779173 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.463597174 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.551777922 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.101581792 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.980481895 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.092883844 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.851410138 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.001210504 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.562492467 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.667925036 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.901250347 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.983605212 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.463419134 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.924850153 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.075616538 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.658816093 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.218217942 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.926037615 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.909255785 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.967905798 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.941706091 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.174915661 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.922296393 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.030683147 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.653374799 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.971481201 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.445690984 seconds)
  done (took 103.59776425 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.88066169 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.87835342 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.87726764 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.877844069 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.877192743 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.878285891 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.877517997 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.876050809 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.878060415 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.876174173 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.876473072 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.877521869 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.876315242 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.877270458 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.877256402 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.876460131 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.878899919 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.879420246 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.877639733 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.87782169 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.878508514 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.878004879 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.89312728 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.877476389 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.879534144 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.878682223 seconds)
  done (took 50.657586344 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.888532818 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.042880006 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.128367289 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.912506876 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.888988956 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.892877203 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.908110202 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.893889584 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.891547819 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.891825075 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.99351611 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.89577201 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.909614064 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.128988223 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.909402489 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.889698506 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.889804209 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.890464048 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.05075898 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908120137 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.911261109 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.896241225 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.910229311 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.905509918 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.892900728 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.890409021 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.89399359 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.326359405 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.900742843 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.995072671 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.948857543 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.916153155 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.255261145 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.139624519 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.950409111 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.90184045 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.891587218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.996846399 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.898270515 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.891529325 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.909216423 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.89698651 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.126357757 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.374241404 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.909106195 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.891946485 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.335380721 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.008160761 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.936268058 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.902839716 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.130486319 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.91220286 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.893397501 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.895182234 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.92870867 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.898212123 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.892070592 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.195193294 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.904899743 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.910310623 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.897379573 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.893018992 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051867505 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.903098895 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.043115768 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.903584551 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.899164928 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.894852496 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.129019582 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.912809572 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.372474264 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.909945452 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.89258682 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.996193116 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.05070276 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.365697733 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.907529807 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.052852191 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.275658686 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.920551997 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.902070447 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.31510622 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.923788897 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.90230381 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.895116622 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.895468222 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.894719507 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.940244625 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.911359896 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.314183203 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.38422599 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.215274035 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.921513238 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.9100818 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.895942618 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.194360508 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.904211903 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.895025472 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.124708468 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.389654786 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.911324763 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.90138639 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.360546263 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.913129989 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.915421736 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.905002162 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.132354673 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.914789279 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.940672563 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.89538038 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.902236584 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.899426879 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.914686843 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.903046198 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.895342972 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.35850722 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.02267353 seconds)
  done (took 234.468399617 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.892787092 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.914336021 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.892217523 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.894353082 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.891386326 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.895254887 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.889386614 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.890696281 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.896026051 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.891090183 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.890156111 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.890587226 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.893384306 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.894519218 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.914180281 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.896960239 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.496673745 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.891326331 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.891777531 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.909130834 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.54742057 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.898624352 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.89370748 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.909525449 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.891838015 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.893020285 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.899929448 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.909821042 seconds)
  done (took 168.177119909 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.897411417 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.014343864 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.921113726 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.925921322 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.907244767 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.895407569 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.920860864 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.914216468 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.903307788 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.894784995 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.896063219 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.958754963 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.910094585 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.99508167 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.930269383 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.928280581 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.002189287 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.905354804 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.896802689 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.896651793 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.92786966 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.895944846 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.960163367 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.027098097 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.917227502 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.017275627 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.907244679 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.899463705 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.898367077 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.017732466 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.915537323 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.959527971 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.930762767 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.916840121 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.019449624 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.020281088 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.002681328 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.927783318 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.903219603 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.896991207 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.897142079 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.889621107 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.016343399 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.921092626 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.90071028 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.008050216 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.918126364 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.900181019 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.908112519 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.897760755 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.913526859 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.918428509 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.967618558 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.037192411 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.934947234 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.924120015 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.924636386 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.183911656 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.914510076 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.999811095 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.895277792 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.016978985 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.925327514 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.88994424 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.900655373 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.905784525 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.929354118 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.9316035 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.00531383 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.909182717 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.000650941 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.935281533 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.907191012 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.899595834 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.902910785 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.018365639 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.020807359 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.933940469 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.938649703 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.932807735 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.899058884 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.901435654 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.892203089 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.91886718 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.904895843 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.01732507 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.02152883 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.908246182 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.903396622 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.902255945 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.902951344 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.928110778 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.027357297 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.939245952 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.998012428 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.969507741 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.980872078 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.918982086 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.913337481 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.905104107 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.966780556 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.91810003 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.913003672 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.231748457 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.975083541 seconds)
  done (took 205.827984894 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.358684824 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.957118707 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.959347695 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.219986448 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.245930349 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.815757077 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.953703288 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.950160314 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.975280694 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.14677022 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.022648088 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.968417681 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.937939764 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.924909383 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.951818555 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.971421968 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.960637968 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.286787539 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.061023035 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.095799865 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.938783453 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.249124042 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.224363438 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.358473578 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.98795573 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.279146163 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.614031182 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.100867328 seconds)
  done (took 62.345531148 seconds)
done (took 826.894409398 seconds)
SAVING RESULT...
DONE!
