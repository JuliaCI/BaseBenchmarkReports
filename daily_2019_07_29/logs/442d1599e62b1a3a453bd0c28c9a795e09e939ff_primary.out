cset: moving following pidspec: 26662
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.283147654 seconds)
loading group "string"... done (took 0.587529129 seconds)
loading group "linalg"... done (took 6.798424579 seconds)
loading group "parallel"... done (took 0.157248443 seconds)
loading group "find"... done (took 1.186934435 seconds)
loading group "tuple"... done (took 1.795840311 seconds)
loading group "dates"... done (took 1.21126989 seconds)
loading group "micro"... done (took 0.227242498 seconds)
loading group "io"... done (took 0.978529484 seconds)
loading group "scalar"... done (took 38.354788629 seconds)
loading group "sparse"... done (took 11.6065352 seconds)
loading group "broadcast"... done (took 0.918931876 seconds)
loading group "union"... done (took 12.042616212 seconds)
loading group "simd"... done (took 4.407764993 seconds)
loading group "random"... done (took 8.53587491 seconds)
loading group "problem"... done (took 1.859154262 seconds)
loading group "array"... done (took 19.895513316 seconds)
loading group "misc"... done (took 1.679057306 seconds)
loading group "sort"... done (took 3.103355885 seconds)
loading group "collection"... done (took 16.591512847 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479596924 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120980046 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11268107 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116667973 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138049028 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113161651 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122558984 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082038877 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.771857418 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.13952618 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116632712 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.405195288 seconds)
done (took 4.879809322 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169909345 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081048115 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080449443 seconds)
  done (took 1.280037546 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064368989 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120089689 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065559177 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065581576 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065841875 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065096625 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068725505 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06500597 seconds)
  done (took 1.634851448 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071290648 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067436235 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067495992 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066363762 seconds)
  done (took 1.392098038 seconds)
done (took 5.671359865 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.754189915 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.196564455 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181076476 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.387962505 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125074254 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160738048 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.639809526 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354688406 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.180580595 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079790707 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101639017 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.317066341 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104730369 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.631462968 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07562729 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089168278 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13498741 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44493145 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.0662178 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081495329 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088021668 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127822835 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083648682 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074618661 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142310381 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066741299 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127776665 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079654244 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065686648 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204945347 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171259258 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.657582441 seconds)
  done (took 10.154716299 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094635291 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095649787 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067594237 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121887778 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094329077 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068573362 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070071186 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0660961 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085150892 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125691991 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086931827 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099431808 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064069577 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067971207 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083019577 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202302275 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078677848 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079614882 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069485408 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073851227 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10408602 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076751528 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07605769 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07605425 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127395138 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179104951 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096460829 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096061143 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065741406 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078763459 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113776277 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123928375 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064122461 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06590825 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122265276 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093619941 seconds)
  done (took 4.514363148 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.892519589 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137324997 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089305272 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158479103 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06620087 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.104594291 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064790339 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082776905 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.195949991 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.047054877 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.425803579 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109357974 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.0832976 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066510085 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067515356 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065884468 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.342372018 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.10810277 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111773934 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082877754 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07231801 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068776282 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.350912421 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066113508 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065857552 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067585662 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057455058 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110869723 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066480878 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.965669576 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.113893712 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065902813 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099650117 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168484401 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081315839 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084436301 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131110081 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.063613801 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063537221 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144224155 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071805121 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.087770779 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064566276 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080341059 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100575382 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.099950446 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.195562466 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066175699 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159721844 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06596503 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084900592 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.707637572 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150316924 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074721654 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06511146 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243654541 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.0843859 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065190392 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063267705 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.194162401 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126866874 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067374278 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065487503 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065005911 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067034007 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377267782 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065738851 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.849029258 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068798185 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074923128 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068292901 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066146807 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07139489 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071014298 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084818572 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065561729 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067492319 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065061805 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064527439 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067584705 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082900336 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.188316782 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065848506 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066182832 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063638968 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084882088 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09644175 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06847706 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068830989 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099515108 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067346339 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065985636 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099926431 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065868378 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082585377 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068062401 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111728704 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.064726895 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.101558549 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064331523 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062387729 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.093801034 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.066208027 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097789009 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076244269 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066047183 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.307550223 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062706138 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06356602 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063945012 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065506678 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067440947 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066059607 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067308469 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077232868 seconds)
  done (took 19.82994466 seconds)
done (took 36.511362922 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271301373 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073301187 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073481524 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073122793 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073584346 seconds)
  done (took 1.770144558 seconds)
done (took 2.956896561 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11776975 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096963603 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063050299 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094092225 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06279804 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098254406 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097190733 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080213885 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097815126 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.062982174 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094228292 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063244215 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063242072 seconds)
  done (took 2.295545088 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080977786 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082481836 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068273387 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080901281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062617763 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081199566 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079244736 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086906129 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079358201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070794865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062741842 seconds)
  done (took 2.01300967 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080885744 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081944477 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068299764 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079728825 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062155395 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080017092 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079685362 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08418963 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.07944667 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071686674 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062501798 seconds)
  done (took 2.003245299 seconds)
done (took 7.486713561 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075932861 seconds)
  done (took 1.242036222 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.578456131 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.002141851 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079941277 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109555445 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180995054 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116796217 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272035161 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08514454 seconds)
  done (took 8.770538728 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087077367 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067194534 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067580803 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067050235 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080829247 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070695093 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070454837 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070473789 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068215592 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069942313 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068053241 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069762736 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067387246 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068208424 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070154723 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069492326 seconds)
  done (took 2.36950208 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090178171 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.088779387 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071632728 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073553041 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070900179 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074035495 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072819619 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072332232 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069668337 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070876712 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073356613 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072303519 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0700595 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064693112 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072227768 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073862041 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06965965 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072715008 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073537799 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073864007 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073365325 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062817296 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070361924 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072361795 seconds)
  done (took 3.021748812 seconds)
done (took 16.579339783 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109704498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070635848 seconds)
  done (took 1.353186736 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079926968 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081472962 seconds)
  done (took 1.341965387 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080484882 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06511323 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087249531 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076220946 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065052105 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064576666 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085076607 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06509978 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064658897 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064891238 seconds)
  done (took 1.899141597 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067681423 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07615797 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069606413 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080112077 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072057866 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063229311 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071041786 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066366616 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075626402 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061594838 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069755838 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080174898 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069838347 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081795372 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.070488775 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06719191 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06881496 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065832893 seconds)
  done (took 2.460110173 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064468801 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065403445 seconds)
  done (took 1.316009202 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065527594 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062685072 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064961022 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064718606 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062310874 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061171295 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062215205 seconds)
  done (took 1.625271694 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.370280321 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108861443 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.289857743 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069671627 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080203618 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246826713 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064454214 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069176732 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069413205 seconds)
  done (took 2.592778574 seconds)
done (took 13.776960834 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077020344 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083808456 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.092766644 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.336578847 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090650762 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065111494 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112411068 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184406721 seconds)
done (took 2.238679844 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.203675498 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.56086009 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.363891708 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192298367 seconds)
  done (took 2.30251061 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313363273 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090010236 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058286313 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065360438 seconds)
  done (took 1.721192733 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064594904 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067820757 seconds)
  done (took 1.324726874 seconds)
done (took 6.745361769 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064942538 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064423633 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.062333822 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06478256 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062358083 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062273776 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064947919 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064684279 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083433632 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.064447853 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067142763 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064696838 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062320184 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062709331 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062700227 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064653929 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062677233 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062454908 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06252374 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062214734 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064718201 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064735306 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06471147 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0625336 seconds)
  done (took 2.775586364 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082245478 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065597598 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070764207 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.0702051 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068711927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070388577 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069637256 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065417574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.06976639 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06713819 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06884174 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068747836 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067016846 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.068531311 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066894933 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068803673 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070162925 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065723884 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066965634 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068553526 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069462392 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065184766 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068907688 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069746667 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068194995 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068221877 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067039859 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065321357 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069397767 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06822441 seconds)
  done (took 3.260957268 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069083275 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063067726 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.062908304 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069366649 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06212228 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063725351 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06240116 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062919716 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063224518 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062288484 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063804411 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061947369 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062673138 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063516205 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063726314 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066014876 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077605128 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06309906 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062382868 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063220912 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065638666 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062394107 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062323171 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062249542 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062598852 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062482502 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06329653 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062110186 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063662359 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062449264 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065764746 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066042801 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062226702 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069109053 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06638075 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062118156 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066480051 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062102532 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062875465 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062260546 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062010956 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06256062 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062216504 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069360796 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063096229 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063787448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0628792 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063558995 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062611832 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065734394 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062160653 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062450598 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064247426 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063818096 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066822301 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062120028 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063365592 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062204258 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063345794 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062683838 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062109804 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062276958 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064776425 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062945435 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076527696 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068821946 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062190257 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063863894 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063089732 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06522967 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063809393 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.074969697 seconds)
  done (took 5.830272531 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089734979 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085772207 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.172590643 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064612653 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060853572 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065565661 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066323833 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062938903 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064522947 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068314819 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062826615 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064081868 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063976497 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075866073 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063533496 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064227888 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068710698 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06105684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062616308 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065807668 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063019637 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065762336 seconds)
  done (took 2.797214042 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152322719 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069324559 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10336292 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071323944 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06646635 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071306765 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068506819 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068604143 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069185998 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067039108 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066920664 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069123273 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066394219 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066788896 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066841897 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066710003 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068403294 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066867064 seconds)
  done (took 2.553941847 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075755307 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065207246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084362202 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064950813 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06496819 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066962131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069442982 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073190361 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067358647 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06468568 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073164787 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067084724 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067009647 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065140005 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066951013 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06476481 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067084006 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0648931 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072370824 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069481663 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069550391 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072409986 seconds)
  done (took 2.726111828 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078670296 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066457629 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081446198 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06759452 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061179109 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062955196 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068529706 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06495009 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068629194 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066315272 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064851109 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063513458 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067911021 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065007685 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068093569 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064773972 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066982556 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064519804 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066430847 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060627255 seconds)
  done (took 2.549840483 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085182884 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066483685 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066451622 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073992811 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065997472 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06637787 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074077734 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066828598 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066803325 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085591919 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066151155 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066006189 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073350974 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070762 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066673038 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073114665 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073078167 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073339235 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066324286 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066328695 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085363359 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065777274 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073184623 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066167446 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066040093 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06620047 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06623069 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07095776 seconds)
  done (took 3.184868556 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064836291 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064846725 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06280087 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061991555 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06217884 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062594088 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062513824 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062562179 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065082498 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062379314 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065190015 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065254428 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064835836 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064874796 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065163082 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064602053 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06492515 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062414254 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06224149 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062370764 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064704093 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064648596 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065820235 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062270314 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063004631 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06478583 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062345274 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062357497 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065041671 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062345435 seconds)
  done (took 3.12606705 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074119365 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071932618 seconds)
  done (took 1.361795093 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062234409 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078493449 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062400263 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0687006 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068692619 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065469737 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071799524 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068564876 seconds)
  done (took 1.758740185 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08118673 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076500815 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06615429 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078049784 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075042063 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081785328 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130694305 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066192077 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072142193 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063015434 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078304832 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064177005 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071074605 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065268934 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0704358 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071145009 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062958148 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071095121 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067580924 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063903458 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066358975 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.0740885 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067324424 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060644424 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066398619 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086257889 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075721545 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064712796 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067970305 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072464426 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070544653 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059064558 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064690083 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065064137 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062955733 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074526791 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079474066 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067818481 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073257471 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066107393 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075202409 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060306252 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.0692635 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071429596 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074669648 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065131914 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065393076 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060430057 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062890894 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067169936 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060474881 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064982408 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059964407 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07417963 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068168728 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075670829 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063356266 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066378105 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067765192 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068485821 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07177745 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067059829 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06737911 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064855055 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074710784 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069215027 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073453006 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06058449 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059313812 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063047056 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074681728 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086759778 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071125748 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065679029 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065572886 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062903725 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068095271 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06606505 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070603026 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071775998 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06533284 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070535604 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072266003 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065488023 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068246794 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073031898 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063307145 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067566181 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063183655 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081381208 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064106082 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063310716 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062992274 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07669096 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068461532 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064507803 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062805794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072430247 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059467428 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065700241 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065845638 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065419402 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074295709 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067940094 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0687968 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072307304 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071236078 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064395946 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067353641 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06159739 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06471961 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063423972 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071164217 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058727524 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067104385 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065074525 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064733538 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197747259 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06409371 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065768757 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073298115 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071701231 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065146276 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062181681 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068774667 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065658304 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068601624 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073035822 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064405903 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060834343 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061040135 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068841088 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065111738 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06983097 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070638986 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068349233 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06066984 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06346576 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069844391 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074721044 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066095369 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066793044 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071228973 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066606534 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065169573 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071824345 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067639874 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064324655 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07063498 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066511561 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061375323 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068153578 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068332871 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064031675 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069029244 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069356655 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.06756769 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065999346 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064231651 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072425942 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066493643 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065032661 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065197362 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063815285 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075170063 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067159491 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061310439 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062829279 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074292566 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063231597 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064768179 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064543015 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067229232 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066070236 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063063327 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064358791 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067597526 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07519285 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069291876 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066732718 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070431542 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076134789 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065316654 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067963236 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064994711 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066488884 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065764358 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074013012 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070692879 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069690345 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067536768 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061855475 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07062589 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072607783 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064146493 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062924315 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064096218 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069034881 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070536032 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06888147 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065549991 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063273213 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066104201 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068357673 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.067690956 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064786414 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064405845 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071785544 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063388655 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072132073 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066163914 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075289899 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068863258 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061437792 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068687164 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063561526 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071876273 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060980605 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063089177 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064604799 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065987982 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064212752 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067554906 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060074606 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071375766 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071397776 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064249826 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063491882 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063721278 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070408335 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065593456 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067168547 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067519553 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069429174 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074155876 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063306941 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067098597 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074464786 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.191155362 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060274045 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07141629 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064286209 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064760267 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064446931 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063396327 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068800589 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07423016 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071600613 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059683205 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068146422 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064143157 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064694512 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061044035 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070213057 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068196994 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066683684 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07218568 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066819159 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066396492 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069129009 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065757349 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066146424 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066265074 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068871283 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066501962 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067332035 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065101195 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068840198 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065126165 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063690391 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067785977 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065926316 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066033154 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071633475 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065706538 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065520457 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067826534 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066472277 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065925242 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065826833 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064749996 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068459339 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066581665 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066001239 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068221027 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060932023 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072957736 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066192485 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072834847 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065865028 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06213943 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072813715 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06805176 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07078361 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065965909 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066170768 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066830669 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064927393 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067996446 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072452133 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06392915 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075481363 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073189168 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066445498 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068295584 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065967735 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066826199 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064893938 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066558677 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06622386 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065446607 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065180875 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069643684 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067818281 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066418566 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067213587 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065986124 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065293859 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06592227 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059810514 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064378359 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064600645 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065088082 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074092337 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065346606 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064496916 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064169176 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066125266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064206575 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062416328 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073011577 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073861193 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065583758 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071927665 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064333364 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066663624 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07544659 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059759832 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063349075 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063241607 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063214894 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072306854 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066122755 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07455418 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065579655 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064625147 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062458334 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065668605 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063481295 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059704487 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062423357 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067844412 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063101772 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063550924 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06484793 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066604675 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064602167 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073051126 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063275801 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064790435 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064246012 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061496148 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063552538 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.194674363 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069371309 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066901752 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06391306 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063486978 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065279375 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066255427 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066864879 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065489867 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067448481 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075222889 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065052425 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069009796 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068920813 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060672119 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068327078 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065202444 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065717845 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065171025 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068766559 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06840743 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067008435 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073542449 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065419389 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066088283 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065949549 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063259767 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065117732 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065761793 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065434092 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065107926 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06647534 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073242496 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063119925 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068173113 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065753711 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066088091 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071435737 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066268032 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06809467 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072270848 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065714626 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067141553 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073269714 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069533873 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069564189 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066817202 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067745582 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071008708 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065375901 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071930666 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065946962 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066413038 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067133344 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063778577 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06526878 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065267984 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063988301 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070753499 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066566367 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064832626 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064733712 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063857824 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066654366 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067932351 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072584743 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067839345 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068246627 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060662845 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062304403 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066489093 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063309695 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066946797 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067842803 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071195998 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067550954 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066268498 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064134085 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073902322 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070956073 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068790082 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063066213 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068447287 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066468789 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067369025 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066142993 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065395385 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066237468 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068830399 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066872524 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064472483 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071910799 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068713284 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066059112 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066876459 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066348257 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065333122 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060663204 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065398246 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069639334 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07026653 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067475275 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06516086 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075167749 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062966307 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065565769 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068066486 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064668158 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069559999 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060407332 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066721126 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065538602 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065471563 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0604806 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064043192 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062698944 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067117651 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063625751 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059356363 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074535463 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072737676 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067025584 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063115654 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062967661 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059413972 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.190738055 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066010885 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066698883 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067879207 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075549816 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064715837 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06502399 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06128612 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065603666 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06910078 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069083884 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062787873 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060977526 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065043224 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069052777 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070952276 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063833014 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065414246 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068651121 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068519898 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064109709 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06855342 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062317393 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06921718 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077649321 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066534145 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066641523 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.071212529 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072788196 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066309727 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060702671 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066774377 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068290106 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066188628 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066455342 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067160156 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080260194 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068770351 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065670601 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065336319 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067925064 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064932183 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073602612 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066688138 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065531404 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069530525 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067264276 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074476592 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067849953 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073675444 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067958299 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068101251 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064705643 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065605176 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063847636 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064529343 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065631615 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065940893 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070176655 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073581878 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064958414 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075653321 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.073989926 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067674318 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062056878 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06462052 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065043443 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060722038 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.065974701 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063728377 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063557384 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063478818 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064313738 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065984469 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070197994 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066158178 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065605057 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065280984 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059815872 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067721284 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067377324 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066001155 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06227231 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065078425 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065835637 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069556864 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068413893 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063429181 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066688396 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066883757 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065793201 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060858444 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071154297 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06476224 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06732801 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064700691 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065605593 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065798905 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068325471 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070049657 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066699047 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067755766 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068529719 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067230985 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062471723 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062876364 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070118193 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063409873 seconds)
  done (took 41.831984507 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097826919 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06208103 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060773715 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06149563 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071810708 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0621295 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060858802 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061829938 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062081811 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06414041 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061113574 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061209314 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069224823 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076145131 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072510327 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065558209 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060927171 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061792326 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060775673 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061748406 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069382483 seconds)
  done (took 2.697925028 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072527865 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069058788 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071711503 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074128899 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065871617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068943565 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071127313 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069133621 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07438982 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065529803 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074014176 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069259467 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06579656 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073687613 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065295596 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069378929 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074454232 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065925902 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069029464 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071222529 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069006654 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070613249 seconds)
  done (took 2.827322677 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065806665 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064270751 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066004473 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060080818 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064953642 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060180997 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067914085 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062905198 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067598579 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064171819 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063897132 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064161656 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066513396 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060012832 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065915612 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062741078 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105824573 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067829479 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064632599 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065209549 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060122403 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06677732 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060841838 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060721035 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063834262 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06804031 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065545059 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063069407 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064496196 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063750158 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064594679 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062664338 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066158184 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065096617 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063556364 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063552023 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064262244 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064327441 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060368472 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062574844 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064850281 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060612535 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064560918 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06599391 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062553859 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062519886 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065836787 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064873015 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060159545 seconds)
  done (took 4.467257897 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077957067 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106504713 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066088945 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08659797 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07814995 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073304215 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068002337 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087746036 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062085782 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06350528 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080258094 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077611128 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064421535 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068769695 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070929029 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064477674 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06540891 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063134601 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068329079 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063960527 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068254272 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070647126 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078442847 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077019933 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06838571 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063221076 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063710234 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06882396 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076529243 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068792035 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068843867 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0698544 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078499861 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066296273 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064051121 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066743876 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079505878 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064829626 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066499133 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062093634 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066444298 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.0682706 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070746961 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079553734 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06429429 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069360099 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064514885 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061570501 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076275392 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066651335 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071945811 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07813754 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068388893 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064938469 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069132082 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078671482 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064504098 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062685134 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067060818 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076232316 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062305844 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068191954 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077086433 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066276381 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070849899 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077574508 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06948265 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067858066 seconds)
  done (took 6.222514057 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073693283 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.070754227 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078603355 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077978485 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070631557 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070922958 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070633731 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071184895 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07015039 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075357642 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070699519 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091549233 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065988563 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073117434 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071042486 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070547631 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071212689 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070960621 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070878962 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070893584 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070739304 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078216272 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071095056 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077867166 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095892204 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066243067 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070503497 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070681795 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078485653 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07066824 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077680966 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070893462 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070763082 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078166114 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.077523117 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070389406 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064058257 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070320891 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070637283 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070770415 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066226276 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077847587 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070311194 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066007236 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070902928 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070198617 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078761931 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077724754 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073071629 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075637601 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070634142 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078706089 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070672825 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070749297 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078428391 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102670627 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078014958 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078029859 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070634511 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077742178 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078320489 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083995427 seconds)
  done (took 5.906062821 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081806189 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073627771 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074229119 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060610213 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062682297 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068429461 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063160295 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063252114 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073155908 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07292786 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075204786 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068093493 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070907046 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07544448 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06812254 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071029324 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068643654 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068310372 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072858147 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068038252 seconds)
  done (took 2.713434987 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072859453 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08191001 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065665519 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070079003 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067425676 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069816962 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067235331 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068133797 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065829271 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067976519 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074204405 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073929185 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065942899 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070057405 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073978343 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070220017 seconds)
  done (took 2.429865268 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.072986182 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071121563 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079134475 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064738452 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062940631 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061574072 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064794467 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060540436 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061563535 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076458383 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064635172 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.066856733 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064408016 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063439299 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061875099 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067299523 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061767522 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062192794 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064925431 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076394265 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074957401 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063339201 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065117839 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065204325 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064673794 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069454797 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063975366 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06237287 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062419048 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064790636 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064940138 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067931203 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062204197 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06257709 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063612034 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062331714 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066029004 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064936208 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067656203 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064536161 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063243744 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06419261 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064839016 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06568067 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061527834 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065551902 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061169206 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066614191 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062507468 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064829592 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064314889 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067278258 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065036498 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07089051 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067268919 seconds)
  done (took 4.913585414 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077526006 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068880152 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0605678 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0629699 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067282858 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066582483 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068306811 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066229333 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066225784 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062683168 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066354406 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067424244 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066567075 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068235393 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066252313 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068180043 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06100378 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066600168 seconds)
  done (took 2.515138991 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070093356 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065501314 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071898293 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064853379 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064843053 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066905868 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061003609 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063250996 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063797916 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064438232 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06470498 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067013604 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063679625 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066649933 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064732223 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065056959 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066701754 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063412407 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064469473 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060984374 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066710813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063406375 seconds)
  done (took 2.744642444 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071035798 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09036489 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136140718 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08209663 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.079786351 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07695459 seconds)
  done (took 1.849138835 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088431568 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076917604 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065130167 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08675058 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073292746 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066095448 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066843603 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066568382 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074133219 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074446461 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066351512 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074120848 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074237871 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073460808 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072237659 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07139458 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066080238 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066033651 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065753451 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082328428 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066568491 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074286857 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06665133 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066452018 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066314387 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073626027 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074250805 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074347509 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0659648 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074290753 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071468298 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065966408 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074508616 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074485476 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06774888 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074306619 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065974988 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082221966 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071398168 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073842165 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067251052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071815616 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07479448 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070271546 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07444571 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066147412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070917238 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066068458 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066942091 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084078848 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071581423 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074101316 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072106826 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074800367 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074464017 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084366744 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075118786 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074163331 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072400743 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07716714 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07380418 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071666627 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073842496 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074842748 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072046365 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073823857 seconds)
  done (took 6.093699475 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07967143 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085318633 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066735237 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074526933 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073333997 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066234138 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066377471 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066343697 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065943095 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06615043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105547989 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066632074 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073632551 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073731038 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066806357 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066042751 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066254781 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073594832 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066090332 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084158345 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066005249 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073395514 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073972275 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073709286 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074706318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072424396 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06645164 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066581858 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065891958 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066414204 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071058259 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066682378 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073834451 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065898849 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073607451 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066528995 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066181988 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071152511 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066250171 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071771734 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073943769 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081866818 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065938723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066136353 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074438378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066047166 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066135359 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065548837 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066121809 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065553074 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074551004 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074476243 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074508393 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073629867 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066757604 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066840591 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066580922 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066084485 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06666456 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073152787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073944996 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066604727 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084655357 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066910828 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066885568 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073746666 seconds)
  done (took 6.005155883 seconds)
done (took 126.334583635 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181526621 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168406666 seconds)
  done (took 1.658783476 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067631863 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094097018 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075764123 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.126470203 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065174705 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098071174 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.096956618 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.076768223 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065236644 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065015663 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065314315 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.066572961 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129806575 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065595414 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065118155 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066798649 seconds)
  done (took 2.612639036 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09501873 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172259749 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097344795 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.063806084 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.095144942 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071622276 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063989946 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073573701 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069563555 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064202759 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072041358 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069320909 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.063895376 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069606671 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069766803 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07133472 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064012157 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071467392 seconds)
  done (took 2.742473106 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098047435 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090116785 seconds)
  done (took 1.5145232 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153108233 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103754033 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147915848 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331546899 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158858609 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.227693183 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.125577158 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124852848 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.114877822 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120877287 seconds)
  done (took 2.930885668 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096235487 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.144767495 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253293248 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113238681 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07107314 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090044562 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114527048 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076180171 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076118084 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.075976332 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076140285 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075468818 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094016448 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072528238 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072392094 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.074100641 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097417543 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071569668 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07449568 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072510476 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09508269 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064783633 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072223902 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071449763 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073497682 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.073514487 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064650804 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06476103 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072773405 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072781088 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076046417 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088379114 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07333211 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102669932 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069166923 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.1040189 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075571211 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070162543 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073043654 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07043831 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074582732 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074783244 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071241359 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07461534 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064458481 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075355385 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064143932 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064520822 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077091157 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065438881 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07720365 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076023292 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102525835 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065638159 seconds)
  done (took 5.798688683 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.658784773 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101302937 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069328301 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106499445 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094855838 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070788772 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.682610455 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.08921504 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.17156461 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090585639 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.086924175 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069022738 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079510082 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081763092 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108952087 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100041319 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092153108 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069945651 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.098779871 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.096934466 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067244191 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091921035 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088736824 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.374093047 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066328484 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068194107 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066857728 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069254444 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.108594964 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076203082 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068945073 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.11869163 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082530588 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.11884395 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065730413 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066413049 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066445438 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077446374 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178746546 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130138923 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128295801 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065726466 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066527409 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067482007 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087487169 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066264235 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108317625 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078535064 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116652887 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06872627 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068972674 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06679288 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067798307 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078106051 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076124437 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079151919 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227804143 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066911544 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066778938 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069630184 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177603356 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07684624 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077037779 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090404533 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.126273837 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066387019 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.720982305 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081631877 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0660934 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067855424 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065791538 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067329581 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066373373 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.243088703 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.341830619 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069106287 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069493386 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06750968 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.161334458 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076813121 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068585095 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110767846 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066866357 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067618146 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069716416 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068954996 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.116598617 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079157695 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06885548 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066996424 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069327052 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067602953 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066543049 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160462061 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079267324 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078139904 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.159887971 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068217194 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109356758 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077241504 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068902011 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078196409 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067010714 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06912056 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06792385 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078402969 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.093970707 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079229687 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069226793 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067062685 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.095925412 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079137941 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066915187 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077253257 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.395157393 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078412636 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066232896 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079153578 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067273986 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.109111417 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068665579 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.174233918 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068276541 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077533592 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067393782 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066239808 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066969963 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.108444617 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068868358 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067385373 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067813437 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068641097 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077685846 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131485874 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069551628 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.159841806 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132158035 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068922997 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117727473 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067133608 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114778871 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069000555 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068028248 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066324615 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.707672146 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067085489 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066604588 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06819276 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134748753 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066459137 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076898681 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074873273 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064851616 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.685753389 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076441956 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.203478078 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079293467 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069695557 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067711895 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067427785 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069276972 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.10831207 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142846742 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06987289 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06716283 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076781374 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.108826144 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067228311 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077285443 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076049778 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07677624 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068029959 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069041265 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079543284 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116803659 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077114212 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.133388892 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.513448403 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06749273 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076075678 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.141227339 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067155837 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082928127 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067732252 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080777048 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110112103 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076172606 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.224693159 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.111742589 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137368701 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078522236 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081855212 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066597026 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067149477 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078057204 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067233916 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06870873 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076886745 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068482953 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068817098 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082410607 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067739506 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171472616 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072332413 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077724644 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066373499 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068649051 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081661069 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067660968 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068756704 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077789748 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068669203 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075798008 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.630070493 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076582118 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067119711 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068761842 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133183856 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110862545 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067373923 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067108612 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069038594 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.107810627 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.157180697 seconds)
  done (took 27.754420594 seconds)
done (took 46.346563598 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20814959 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148356287 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202671287 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116313836 seconds)
  done (took 2.095748968 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119899882 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09938693 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093563725 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064478601 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10041776 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064362005 seconds)
  done (took 1.898504442 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302604077 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206383923 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1785206 seconds)
  done (took 2.039003013 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194061286 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184845153 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392727751 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250327229 seconds)
  done (took 2.483114204 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14083286 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087628733 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06629114 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082604477 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131563051 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15765519 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09908847 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123327784 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07734115 seconds)
  done (took 2.371714763 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14246308 seconds)
done (took 12.407594304 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.165360172 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.195607658 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092865364 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107117976 seconds)
    (5/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073480522 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105220105 seconds)
    (7/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099951476 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07647776 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.1113597 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082158049 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080755144 seconds)
    (12/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.193179243 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076635276 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09164479 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173104436 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072861523 seconds)
    (17/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063521882 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175547994 seconds)
    (19/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072973608 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119106649 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132859746 seconds)
    (22/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.136126897 seconds)
    (23/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069438194 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107466541 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072802373 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094204852 seconds)
    (27/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.157809262 seconds)
    (28/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.108228849 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112489824 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077233537 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050702883 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07072291 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064453854 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080123867 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170618011 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073169094 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066152686 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.209268624 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.159926663 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093490188 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.156569006 seconds)
    (42/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200303002 seconds)
    (43/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088380401 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070905924 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.185183728 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105980146 seconds)
    (47/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.150415958 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071317725 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050170625 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071394894 seconds)
    (51/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.199768763 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082634578 seconds)
    (53/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.149891781 seconds)
    (54/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088227738 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.086113896 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066503129 seconds)
    (57/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.154863004 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091454646 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115235958 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086397709 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087707769 seconds)
    (62/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.159219462 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.17938567 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088056853 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086439045 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.093817681 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075834515 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073499479 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.167761938 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101200615 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.124019156 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07054692 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076108821 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.165195218 seconds)
    (75/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071175769 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.065254714 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.14066153 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.158760753 seconds)
    (79/309) benchmarking ("sort", Int8, false)...
    done (took 0.136667923 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142671528 seconds)
    (81/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071066717 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067997183 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.063486372 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07857124 seconds)
    (85/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.298696666 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152313994 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075660113 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089931896 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06498239 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065023446 seconds)
    (91/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.13603638 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075478853 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065003842 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088891994 seconds)
    (95/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076337296 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.178887751 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.136196794 seconds)
    (98/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108167503 seconds)
    (99/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072612341 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052053285 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072030307 seconds)
    (102/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.147749256 seconds)
    (103/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078676695 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070734361 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096510334 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052340058 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071554629 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050213349 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143297398 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088689498 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064311411 seconds)
    (112/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067744477 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.071823985 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064895702 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.113130888 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075237155 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133894616 seconds)
    (118/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183601988 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089125719 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067215142 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071815411 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.152173882 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.132912032 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.285684641 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071644352 seconds)
    (126/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108353175 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064824918 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.05008925 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051968122 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.148407333 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069987409 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071057871 seconds)
    (133/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.150108723 seconds)
    (134/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.11198986 seconds)
    (135/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.132614028 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166479082 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066366537 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155348753 seconds)
    (139/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.10760747 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09492004 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070606277 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074751794 seconds)
    (143/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.078009669 seconds)
    (144/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068078534 seconds)
    (145/309) benchmarking ("sort", Float32, false)...
    done (took 0.126001454 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.161194798 seconds)
    (147/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051147687 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066645362 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064244851 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071380742 seconds)
    (151/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068463807 seconds)
    (152/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051037534 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.171794537 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07429558 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064970118 seconds)
    (156/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068197447 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164086512 seconds)
    (158/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067337932 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065017461 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072464145 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.154739345 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075281216 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078951626 seconds)
    (164/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.170141603 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080739116 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087933774 seconds)
    (167/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05250143 seconds)
    (168/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066323184 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.136004056 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051856622 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.136855773 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051992013 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064786111 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053175813 seconds)
    (175/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.096504966 seconds)
    (176/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065731829 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069624205 seconds)
    (178/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064741401 seconds)
    (179/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075273492 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07672192 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132021807 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064225136 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084623511 seconds)
    (184/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.094965054 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065091519 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070442828 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.159330447 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071853952 seconds)
    (189/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116980348 seconds)
    (190/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071023367 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050123416 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072153873 seconds)
    (193/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.198147475 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05125938 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.138391939 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051551221 seconds)
    (197/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05072844 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062743112 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052310167 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05174566 seconds)
    (201/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051212878 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050646822 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063947011 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050733962 seconds)
    (205/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112430313 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.138193887 seconds)
    (207/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.0644284 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066442651 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07314269 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085455518 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07044785 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073830114 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072172378 seconds)
    (214/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065330341 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052676358 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065139338 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064862148 seconds)
    (218/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063425432 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053476055 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051416876 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061699161 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088899349 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114120742 seconds)
    (224/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050510287 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.145405799 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066028014 seconds)
    (227/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066893877 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070231434 seconds)
    (229/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051778082 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051702054 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071881309 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051723027 seconds)
    (233/309) benchmarking ("sort", Float64, false)...
    done (took 0.124588591 seconds)
    (234/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050615853 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064093749 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050460511 seconds)
    (237/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064859679 seconds)
    (238/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052216187 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137659956 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126346816 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126209039 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067083019 seconds)
    (243/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052876015 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17459443 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068564043 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052045002 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16329392 seconds)
    (248/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051085979 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071841073 seconds)
    (250/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060761807 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065794362 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050407803 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070604798 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064682907 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.06930541 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071997868 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050182297 seconds)
    (258/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.051708831 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070319832 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137177314 seconds)
    (261/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073437069 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051473273 seconds)
    (263/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078025728 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050216424 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07160241 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05057744 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050317108 seconds)
    (268/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051789659 seconds)
    (269/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071167635 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052226628 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06415894 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051211799 seconds)
    (273/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.049992359 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.083676804 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052972308 seconds)
    (276/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051912899 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064236328 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.105650155 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140989565 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084575715 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065877495 seconds)
    (282/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059853129 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050984143 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067229256 seconds)
    (285/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050202283 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071481133 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062955472 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063064288 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087668064 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064077859 seconds)
    (291/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051631717 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07174911 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091847418 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.1714318 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065763752 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050775029 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054061798 seconds)
    (298/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060201271 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.06982543 seconds)
    (300/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060082204 seconds)
    (301/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050340316 seconds)
    (302/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065856869 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06693217 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071742676 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071177757 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088605427 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106894682 seconds)
    (308/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070589842 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110182319 seconds)
  done (took 29.894041909 seconds)
done (took 31.262336081 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083994991 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09056688 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073280036 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091347875 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.078926322 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075327413 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070915823 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076895031 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078377809 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079984859 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076871032 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054350944 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072615684 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072611707 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073348114 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089335098 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076749059 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071308613 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071590314 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063920953 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071977046 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064486341 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066066117 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053869792 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076436667 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070212892 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071080793 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07296007 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064957788 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064797822 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068540758 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07185142 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064750582 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076477583 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070952686 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071643701 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073364465 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074780266 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066617138 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064972897 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072712018 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064863416 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07147942 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072394122 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071135422 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070264145 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071616896 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076307812 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089789242 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067277586 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073036002 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07572462 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074504275 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070977889 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06830011 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07161735 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069811375 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089553312 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072039892 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067057739 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073164849 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07244125 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070297187 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071660994 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071476593 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073935275 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073979157 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070220412 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073376684 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069835142 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06444567 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071930264 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067729421 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064760275 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074263376 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075397948 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063769145 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070087318 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071219493 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070234222 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063803802 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066995792 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066108159 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070656765 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066249714 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053719085 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067861651 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070266938 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06352597 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071797164 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070435462 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070601104 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065908769 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073883795 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063466882 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069196712 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064532503 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064223956 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065994622 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067956675 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06393602 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066255648 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07276678 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065889983 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070632998 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078129005 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065074514 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070679867 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063918197 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063743733 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077991025 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073659506 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06494 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066943626 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063063931 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071043456 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063123692 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063809293 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063976372 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063781201 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068998716 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063877009 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065196237 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070372904 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07549909 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063183005 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06652716 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065000425 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063380567 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068135836 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063281785 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063672799 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.198856884 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061192996 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066801803 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065513125 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071840372 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066126694 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071779049 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066138285 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071960496 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068581606 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070298307 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069512369 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064085634 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057585801 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067389478 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067255774 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067223306 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064763955 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066620481 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064392962 seconds)
done (took 12.222171465 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065588186 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.13971697 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096757012 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093239466 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084314548 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065638943 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074609668 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100023369 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066856519 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100535154 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086160881 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083636245 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109821543 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06353786 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064916161 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068482616 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065945186 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080022558 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.098586091 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085865503 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106924645 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064089512 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.09259939 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088999229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085687013 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.099717488 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065303133 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068681991 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068476773 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089242287 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085166695 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068654252 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065547105 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098136935 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090571741 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081483649 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065312676 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.080811262 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065236557 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064599742 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079537719 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096443435 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078066807 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078790922 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068931121 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068127755 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066295941 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08174528 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087136942 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07693675 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084711884 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100488187 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067729995 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064654438 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064319496 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08369577 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064383347 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067567312 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065390729 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067327644 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065436803 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068237565 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079324496 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084973888 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068723683 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078349424 seconds)
  done (took 6.671899302 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081658099 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.087952685 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081681537 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081491902 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064616462 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065319122 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065442175 seconds)
  done (took 1.98841421 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066075838 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086446609 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088451255 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087724545 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083029182 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085795058 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074274611 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065453372 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079339173 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066586034 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086020641 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099679422 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066335074 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071583046 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088968151 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065376627 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089116125 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065776039 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068154756 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088492047 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067097852 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.080408773 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068789361 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065820031 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079426061 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065538964 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110826835 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069388639 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067152862 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068156556 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06352033 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104172822 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078809303 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074260607 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065630475 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079548209 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079105716 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063814443 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08120268 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070317731 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.078871862 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065654249 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066747015 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063223393 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070032767 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07561132 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066279617 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066166686 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.0676121 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085431804 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066434508 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078987455 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070121717 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06778965 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066646003 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069304713 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074945071 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066280086 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084414829 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067149743 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.081635858 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081230748 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078959652 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081019037 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067426587 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078704693 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.07887633 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068395863 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066825923 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069276912 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081425433 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.063777639 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067170447 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075613494 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066820629 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08742879 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088498752 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066877989 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074202177 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065813665 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065762294 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065781367 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087641424 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067683216 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065547161 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069757823 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068384215 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064102746 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06465116 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06918899 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063741891 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067276369 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068563264 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068809382 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069071435 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082331292 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068203391 seconds)
  done (took 8.611041215 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067615033 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066687866 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068946793 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066507161 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067120352 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066613285 seconds)
  done (took 1.88484136 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091613925 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068298745 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078900633 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071393481 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103160251 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08527229 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085795807 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077660606 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08262753 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07818008 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085390322 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086901714 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091354787 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071565518 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084876929 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071208181 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085693569 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074866418 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07727965 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072529492 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085590459 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072163738 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072059151 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080229563 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07461891 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070783959 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06664078 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077519473 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077393128 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076985267 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071126752 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07449364 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069355185 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076959063 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085475448 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069133667 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071025548 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076371164 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071157728 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074613474 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086674711 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071805802 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073338304 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076268404 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076938176 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069568294 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076020167 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074713937 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084812565 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076099086 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075919759 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070394789 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074381063 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076595492 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069310551 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07693327 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076353239 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085527294 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071401785 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069798503 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068589663 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074475513 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077058788 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075026729 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078117581 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075962823 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069219049 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071874874 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072156494 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070959024 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076413978 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067936276 seconds)
  done (took 6.969237648 seconds)
done (took 27.572003685 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547086234 seconds)
  done (took 1.997342521 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614625724 seconds)
  done (took 2.089067374 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.351679593 seconds)
  done (took 7.821038468 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388814095 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.500973277 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.703055081 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128514247 seconds)
  done (took 3.234119114 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.666397985 seconds)
  done (took 2.147271268 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207748171 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19330913 seconds)
  done (took 1.891872061 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365347055 seconds)
  done (took 1.834574304 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.133191577 seconds)
  done (took 2.603913557 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.255614862 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160801186 seconds)
  done (took 1.892081775 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455308908 seconds)
  done (took 1.930822735 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.794511138 seconds)
  done (took 6.271986995 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205248928 seconds)
  done (took 1.729707281 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239964062 seconds)
  done (took 1.718194754 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.709599711 seconds)
  done (took 3.191922345 seconds)
done (took 41.834581552 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07957476 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080974874 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079605125 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077224229 seconds)
  done (took 1.785327331 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07665042 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072070518 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075377443 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071317696 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075821694 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071487316 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074110537 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075554605 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071483798 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071770691 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071477909 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071362977 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074304873 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073793904 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070128256 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073705062 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075050962 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071640004 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074725989 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071577984 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07055348 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073770032 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073943178 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070827438 seconds)
  done (took 3.235286839 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076861549 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071763929 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074196612 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071863203 seconds)
  done (took 1.77802479 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076874972 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090617974 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087557992 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076386245 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090697592 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085319876 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068559794 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067971887 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071940604 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076314535 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067527855 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094627795 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086410741 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07606086 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078165415 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06504438 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067619298 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085778811 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076686212 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076672084 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069226991 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076272249 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067105242 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087086734 seconds)
  done (took 3.345183986 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077040526 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102579565 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077195618 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086214544 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089096229 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064580402 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073563871 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088142007 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121521227 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064756246 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069445095 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064661545 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.0713584 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064496496 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075093244 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104424364 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107320471 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06765028 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094917487 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064565575 seconds)
  done (took 3.117078693 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072059002 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069148724 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065387613 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067502975 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076527288 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072178279 seconds)
  done (took 1.913888342 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067697362 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066821718 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066511213 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.0660556 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070854287 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066203203 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06483618 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066052194 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066158702 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066421599 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066046054 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065091924 seconds)
  done (took 2.287557059 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.337307394 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067524524 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068353808 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065097182 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069890106 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066082592 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078819865 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067258164 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089550246 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065721929 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065968115 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067827002 seconds)
  done (took 2.598124673 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20496724 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075865527 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232036527 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135052319 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109490862 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114189065 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102390815 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112421994 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140478171 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099984301 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164691015 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162253141 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106038212 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135941433 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088144412 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097519471 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152512621 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159712208 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102354906 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162586154 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141460842 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12293843 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144758642 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100050589 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104405582 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120173249 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070325899 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079436997 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167038828 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129233771 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143801185 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110019216 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092484464 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173640283 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168626305 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140783772 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133131389 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087156112 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100987345 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131715343 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194664483 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086735653 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15869009 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243779096 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080604233 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138654009 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118657489 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118601844 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106255857 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089285729 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144275703 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179722506 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137511515 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085875684 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111362286 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113944733 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114310952 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101610336 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178722535 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158657013 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126141043 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070549177 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098102686 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150663514 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130203357 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10733371 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124839497 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09212818 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131286352 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152108532 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116752318 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140709925 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127484502 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087579393 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11790559 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137570628 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126251348 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167633781 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123289743 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072315683 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12298723 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102424274 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080411727 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142491691 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074897464 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172570632 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097439942 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104898323 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111480079 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107188117 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106862503 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157157795 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139165152 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242706076 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065971631 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10213898 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118584146 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145684849 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086873658 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107554222 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115725103 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077020271 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136369521 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074269512 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121356509 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07502296 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123162229 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129987704 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074826128 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120221489 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098830743 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100031739 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130810287 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15773446 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087800874 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081484417 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163762237 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120131348 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102997753 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142057878 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154383072 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098216034 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101093486 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147594566 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176743988 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088722977 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160277551 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106162403 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08318397 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086746939 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122156777 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110711739 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120787749 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081210247 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116883993 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166019636 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074873629 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094123572 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131777532 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077999626 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079578103 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101619978 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098603789 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093936882 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099175607 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102469162 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135628381 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120972137 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102284144 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265898868 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098323631 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168793921 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087916486 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099113294 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103533693 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069259661 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134399143 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155369973 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079472868 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161077556 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121353114 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103956029 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117286912 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082452449 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13786985 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077676845 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069834484 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141799258 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109180686 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109340522 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148718853 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103024938 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124231033 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118434506 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131964061 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129168509 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127810281 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103878479 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086972949 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110035384 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12394186 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072204623 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090130233 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078993331 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102349803 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094217726 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082433419 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139684234 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122134697 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099056608 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11008728 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095679863 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145055014 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07556645 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127444611 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117704894 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092218946 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148945047 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149158219 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128957141 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097131824 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141337296 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069278252 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072846083 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086106211 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263773079 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083055768 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084206735 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117221729 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145272118 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127871834 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136022751 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110320725 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11886496 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152768467 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068853189 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115309269 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145323799 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118705463 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10326942 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089062888 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098028677 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141034781 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106190708 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178374577 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112226641 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124606595 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151261383 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099059202 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07923761 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101895956 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132924647 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102878811 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144878179 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098133533 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0867047 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108528209 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073502005 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098508263 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125478191 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117896237 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133816373 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113341004 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131244942 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076478378 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114704797 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118690939 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120608902 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063751074 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116876347 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158234512 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092417846 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116246333 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149531711 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078290231 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121982774 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317638858 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144006095 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084469034 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109298223 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116918019 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126174785 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118296908 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138339828 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108309369 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133667438 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107616044 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084315414 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086440665 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096173209 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104045403 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093447291 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106366397 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113194483 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093981143 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130139323 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101436046 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108127411 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116159723 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096662985 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088977606 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095971009 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171922665 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11845715 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168110722 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098092508 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142629806 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160343123 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074212163 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078500819 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077961464 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13783646 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08360033 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132746298 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09717259 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104230805 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12301266 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139705966 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093998446 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068014679 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1074886 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132868488 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111044209 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09730526 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102254095 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159196921 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099329598 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078333901 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111584171 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102746768 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100196189 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164866711 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.202855433 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098019199 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075981895 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080419177 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127065131 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150687442 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080046206 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102098966 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118294563 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108780254 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12639713 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101025678 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098765838 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112731779 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146767836 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127072361 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088831308 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110908516 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127161423 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170416274 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104328489 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09439068 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168332012 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149129065 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157488304 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087182642 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112700227 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112115722 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10957386 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136370386 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082400486 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160878879 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081182389 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134169514 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103298672 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088855159 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127403898 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097792948 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087150531 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14548091 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115778948 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081567017 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077037821 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116092382 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118658574 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105110863 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074564422 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136000971 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072013785 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129661703 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165058889 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080024296 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102208208 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237444779 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079878269 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106495494 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102046202 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088185038 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09785032 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16942115 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087216854 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146761242 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139875059 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111819621 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133629561 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099148681 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634189048 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077087182 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149295439 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113725568 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169760664 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096253767 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116529319 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107342379 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121247797 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141575912 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103740387 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177937414 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129953071 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11481705 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078804994 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101150928 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101446723 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087430889 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103926583 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112162152 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113991517 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092228943 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114505379 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121145263 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081098469 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09448407 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153918652 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115555788 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142112205 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138543426 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084193688 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115987111 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135543616 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078767914 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119300357 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14892836 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10348314 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095919772 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078270318 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.244036247 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168345608 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072829634 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160498441 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118266908 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108620697 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112074748 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112419574 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130437941 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107072417 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119087522 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092492004 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108404231 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11177223 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081240318 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076386314 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102885356 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110907105 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096043143 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097732909 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.0973648 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148921907 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070691142 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094881183 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102080309 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142263265 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171636578 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087158557 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081768844 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117511398 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111562406 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111178625 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118957377 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078454535 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081657237 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081044317 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076651689 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106887275 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111009669 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102841334 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109579518 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161063089 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082009649 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224191053 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094185889 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103569586 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068869745 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077342763 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095936394 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095975092 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106802405 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099301968 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165850385 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092412455 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087875647 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090058257 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072004145 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081033461 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.263925339 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112201702 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117455575 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096537052 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062459422 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107973355 seconds)
  done (took 58.057904748 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106735365 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082096228 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096524334 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148420385 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120919701 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210415972 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156228417 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198721788 seconds)
  done (took 2.718329863 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067802823 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093130762 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097949999 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081454773 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066310725 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068085518 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223308819 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079905333 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06575158 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087922958 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077986305 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068465635 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.396701191 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065600525 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069258456 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062052151 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067067834 seconds)
  done (took 3.329059106 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.373775947 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.369905351 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370108743 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072604249 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.651728526 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088499363 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.061812743 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096481053 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07085829 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.280168653 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700896963 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091048716 seconds)
  done (took 13.826473225 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074707566 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068589871 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083063003 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082272376 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072168706 seconds)
  done (took 1.977192715 seconds)
done (took 101.514878896 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080001013 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.293461548 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052734487 seconds)
  done (took 1.969012137 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08172695 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083622518 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083907027 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081992251 seconds)
  done (took 1.929888601 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073587718 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075227757 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083445461 seconds)
  done (took 1.827867931 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221555379 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138971337 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085995116 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081592567 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077604047 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077726997 seconds)
  done (took 1.834283339 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071279681 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074841271 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072390351 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074824399 seconds)
  done (took 1.886678502 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075343203 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051907617 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054559818 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.054995011 seconds)
  done (took 1.830727684 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085481423 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078093485 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077007811 seconds)
  done (took 1.835513242 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105337329 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084161237 seconds)
  done (took 1.785425447 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080855387 seconds)
  done (took 1.676257996 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097473853 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112232287 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126101011 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107582436 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134179065 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107235843 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084129611 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085063951 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075633107 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086147951 seconds)
  done (took 2.611135669 seconds)
done (took 21.30830326 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077907935 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.360565925 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359113719 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089711291 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667580114 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356509152 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00127082 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091283699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119445851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066751935 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083300968 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647319752 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.955803597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318791774 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943185079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318172551 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648246911 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067799756 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067180346 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06695233 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980815474 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067129034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066851695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067492703 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.6478779 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37143551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066985328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317958991 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067198388 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068562482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35386567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067181092 seconds)
  done (took 16.032493146 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069339195 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116659447 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072959421 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082749035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069883438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069173746 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070702429 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068246995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123897982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067112479 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083408349 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066962191 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070755281 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067564939 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085963273 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066931922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067809003 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067946212 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067193886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067515771 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085793844 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066732319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067471109 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067679463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067493807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079247516 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067633008 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067951982 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067926691 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06912935 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070517561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068161967 seconds)
  done (took 3.980426101 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113973559 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123799524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073654317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102164238 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111410622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069499425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141640525 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09184189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125943441 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067149289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083419906 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067155905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100275501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068186654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087232586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068139757 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068680401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067909126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067603985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067849677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086604026 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069458518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067871677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067810015 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067827514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080493681 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067617428 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068104421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067633209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069458196 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071388362 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068437117 seconds)
  done (took 4.230982992 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071332162 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074305128 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081913411 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082137952 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068550923 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070991735 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0716885 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068581481 seconds)
  done (took 2.202709479 seconds)
done (took 28.04985722 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077884661 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068059333 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072192695 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079659041 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072262603 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077218948 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066779909 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073673418 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07129526 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072258035 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073860585 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067117156 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070376519 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066711845 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073579641 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066937493 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078484942 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070924244 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07901277 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078194686 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06915023 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072399368 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073052628 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078415671 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078596798 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077878439 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.0763196 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07183617 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068273081 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069661924 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075980824 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08325288 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067681499 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078497667 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067022188 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066933398 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070533874 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067011137 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078173982 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075332302 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068585541 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075073066 seconds)
  done (took 4.658815782 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087448509 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090275025 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084235041 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061118897 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.06643731 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064220999 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087961134 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058981575 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.05900018 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086861368 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055717612 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058533427 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061618438 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053691269 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058687346 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05622629 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060837334 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055450915 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058625379 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058650931 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057278945 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053543891 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059516192 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064277234 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056311887 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061275391 seconds)
  done (took 3.293967188 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074259172 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083215929 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087234572 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124905555 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101989843 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076048107 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076893257 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086222792 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084359203 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066096416 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070015148 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092548373 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087464253 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.0730094 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066927353 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083240229 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081373838 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06817241 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072687072 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08960243 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08287126 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.076971991 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091565491 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079322368 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06576672 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068086696 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069751788 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07993913 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07100997 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075591523 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070388059 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069926875 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068252639 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077638574 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070377819 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068548169 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088698513 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075913125 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076793167 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067082682 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069676001 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067962595 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088320873 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121449903 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066089639 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072715863 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074308899 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075535907 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067048376 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084963343 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077519681 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066057973 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069703407 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065817115 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066682151 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079056598 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068331479 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06892949 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075540181 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069701478 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079219358 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070415035 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081588117 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066292787 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07381778 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065962938 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067228046 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06565231 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091714957 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067991182 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107450106 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067810908 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067920939 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075375561 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074175915 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072645233 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067470068 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081545475 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076789001 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070035456 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074971375 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07007792 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069348286 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086573253 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069488352 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068550843 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067508302 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072708227 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069405631 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067858577 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079716366 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066890887 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069728362 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082681834 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066201232 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067922474 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07269524 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071541283 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066259017 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077388314 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071190159 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067613043 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075980627 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066884291 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069760836 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07724157 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073152477 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065848852 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071479795 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072728766 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067619849 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068204889 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069515415 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068470315 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076079338 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073094143 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07101188 seconds)
  done (took 10.390742709 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158207828 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15151802 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069230363 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143567514 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075240966 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.089306373 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145149419 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09320879 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066765957 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067540293 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067904193 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113662942 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104320686 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12048647 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078064817 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066533503 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082405584 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115398201 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146360929 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14153333 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082826901 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075847633 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068909364 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06840982 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073505803 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081454089 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08966171 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076183905 seconds)
  done (took 4.368148886 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079499121 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100058192 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072700931 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087736647 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089308328 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067195602 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069039445 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068500218 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079535098 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07768315 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066723905 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072641523 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073748054 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073305165 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070221704 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073913245 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074570868 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068727715 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070185292 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072144419 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076762509 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079575754 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070664646 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066619416 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073681605 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066528325 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063105412 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083363847 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06707439 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.08915394 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065005285 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074256423 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080366606 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067840942 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067291626 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06719282 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066409153 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066871973 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068443252 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065628275 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06524374 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057098017 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066281424 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077831406 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07300202 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055872011 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072031422 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072050818 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072166192 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064563497 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069598665 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069318026 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069736924 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07411319 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07197184 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072101251 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067960333 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065396075 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074417952 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066830111 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063916231 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065342777 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071217263 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064810329 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074843119 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071312688 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065318438 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066426755 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068494922 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072664137 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066386803 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069798472 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064358231 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068660882 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071153208 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068138126 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067775409 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065484395 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066481003 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067078526 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054885083 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066749121 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052953221 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069770876 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064879671 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065737682 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066441011 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071534872 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078903446 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068106584 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072357719 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067488657 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065901191 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069802962 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059633938 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070037095 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081567643 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081499966 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06640808 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064528841 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080636699 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071697581 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066096146 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055960046 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074056352 seconds)
  done (took 9.022503892 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093718423 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087611558 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069236979 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082316755 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090281681 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085871169 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073599644 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076144603 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06849093 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081315396 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072687711 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075662055 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067815492 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076043037 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092838843 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075871217 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068711455 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07607764 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071201159 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.10014162 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081826712 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081016523 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073939437 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067301497 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075080213 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079050283 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089676728 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079293382 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077341697 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.07474886 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079063284 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088964482 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073456999 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.070972761 seconds)
  done (took 4.335280869 seconds)
done (took 37.678675942 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.700632105 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.87048144 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.687963009 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.040777117 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.763106761 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.990241594 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.816270376 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.68098262 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.846338969 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.731899208 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.922398519 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.732099352 seconds)
done (took 64.411712075 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.720602765 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.819533094 seconds)
    (2/2) benchmarking "String"...
    done (took 1.956853213 seconds)
  done (took 5.400888501 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.017324219 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.213147314 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.927627266 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.676917934 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.685058856 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.989056271 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.478827211 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.206304814 seconds)
  done (took 29.800725033 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.848957833 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.881571927 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.325334559 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.361231547 seconds)
  done (took 15.090670755 seconds)
done (took 61.74519453 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.707139607 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.700216901 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.696167573 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.662899899 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.736010131 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.690530464 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.854407101 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.836350876 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.678391521 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.663647412 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.678650514 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.106840322 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.693584694 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.240140604 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.679735315 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.687671997 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.736852667 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.380837427 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.834556595 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.685818927 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.681543386 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.700446323 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.6816033 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.68374893 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.694980783 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.679262054 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.117056594 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.691086939 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.293360953 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.681793449 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.70989393 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.8511772 seconds)
  done (took 201.040348112 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.676858915 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.534696876 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.612024974 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.687340754 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.042927283 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.873394919 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.812160122 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.139618546 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.679343265 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.702568588 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.812589528 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.680455946 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.853554133 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.700906871 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.684199601 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.785901898 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.856118765 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.867493853 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.680338884 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.951386735 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.681524423 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.727136961 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.688970415 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.793803441 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.716653903 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.775350747 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.698032427 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.679769695 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.875094044 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.820490346 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.711665579 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.69854011 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.81463497 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.547758786 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.70014719 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.692833816 seconds)
  done (took 165.879218232 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.250852114 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.68197097 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.680600279 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.682938016 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.695341324 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.681914352 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.873988009 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80913928 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.149229579 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.006207182 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.735933895 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534283593 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.682481294 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.749410693 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.694658507 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.684203745 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.697444933 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.709296275 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.684259581 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.683038863 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811871903 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.695790282 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.722337595 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.68907618 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.682956399 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.688484592 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.051413712 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.683718828 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.688289744 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.941629958 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.682757991 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.682097284 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586997114 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.007403105 seconds)
    (34/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.692172288 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.76535244 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.685145414 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.689011622 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.682857767 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.90303255 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.684635558 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.682415149 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.683931583 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.685758103 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.870313309 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.682654534 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.810156972 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.684476024 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.197271894 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.683805257 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.684074129 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.344301127 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.384102547 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.685244457 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.683058863 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.686306952 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.682777062 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.684317093 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.689365805 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.3690293 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.761400164 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.68504745 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.687002851 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.690488959 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.684114129 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.865763343 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.687427103 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.031778575 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.743057609 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.789217701 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809631015 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.685949669 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.751414175 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.77901078 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.686494114 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.684384766 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.684246563 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.684112936 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.766552489 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.685605952 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.808847673 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.692100179 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.685248212 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.733159486 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.754838876 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.685723866 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.585429393 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.686979099 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.685748063 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.012798962 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753836523 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.684749094 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.68531746 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.68480934 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.81712839 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808616907 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.478994033 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.688511464 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.339655489 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.687596329 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.68671578 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.826174671 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.68646763 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.878207395 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.685860346 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.767653613 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.690576637 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.685833994 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.688424976 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.686413158 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.716627688 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.686530867 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.744010112 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.688850763 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.057118857 seconds)
  done (took 392.325542121 seconds)
done (took 763.178062108 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.379949438 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.349966156 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.467690046 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.378420049 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.353969675 seconds)
  done (took 13.560634946 seconds)
done (took 15.191635711 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.773141432 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.77718864 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.710780964 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.776375596 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.706851472 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.77642286 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.756332447 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.711350839 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.744415825 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.712477198 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.744931051 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.71284327 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.699490453 seconds)
  done (took 24.234684677 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.919927979 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.931434229 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.758497844 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.930237056 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.735440336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.915852701 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.854603994 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.844166295 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.842676801 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.704208359 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.700695226 seconds)
  done (took 21.770933605 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.925504679 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.931272984 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.763018414 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.934191728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.738081407 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.930165111 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.863858141 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.84571753 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.841112284 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.704740399 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.700752156 seconds)
  done (took 21.811399008 seconds)
done (took 69.448489495 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.697930419 seconds)
  done (took 3.330664019 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.718736007 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.853269874 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.702771773 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.700583339 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.698048061 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.69815528 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.700694715 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.698850566 seconds)
  done (took 15.405742328 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.694094158 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.694135433 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.693650512 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.694063727 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.696332404 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.696854453 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.696338834 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.696637055 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.694465762 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.697692388 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.694199848 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.697192506 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.693994545 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.69434757 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.696630356 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.697645192 seconds)
  done (took 28.762733907 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.696335593 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.695698679 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.694782716 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.695614462 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.694683603 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.694759221 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.696928369 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.695454808 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.695008659 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.694956235 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.695857442 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.696414496 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.696608034 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.696384564 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.695855339 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.697325291 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.696107879 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.696718586 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.701010002 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.697406317 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.696491036 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.696188619 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.696833286 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.696368635 seconds)
  done (took 42.347221721 seconds)
done (took 91.478924774 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.405140166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.158426325 seconds)
  done (took 8.200813472 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.70083459 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.697967599 seconds)
  done (took 5.074199203 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.698184528 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.697823135 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.699272419 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.69987666 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.698105264 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.699191118 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.698112349 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.697953524 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.699502368 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.699879083 seconds)
  done (took 18.624020149 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.698679615 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.699683112 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.696638394 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.699013622 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.700215092 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.696935717 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.699239977 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.699158679 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.699160872 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.69621034 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.701029225 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.697270487 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.698880951 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.697096392 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.699206874 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.697761703 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.697013913 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.697794931 seconds)
  done (took 32.20753771 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.700601802 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.699560868 seconds)
  done (took 5.037166816 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.69707044 seconds)
    (2/7) benchmarking "second"...
    done (took 1.698073535 seconds)
    (3/7) benchmarking "month"...
    done (took 1.698422819 seconds)
    (4/7) benchmarking "year"...
    done (took 1.699167954 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.69869494 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.700093154 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.698252625 seconds)
  done (took 13.52732054 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.70032653 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.860794472 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.927305086 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.369143575 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.702259005 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.705315117 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.627629968 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.705489871 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.706824305 seconds)
  done (took 18.943922929 seconds)
done (took 103.251369977 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.501394299 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.698096649 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.07784364 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.7520476 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.758452261 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.99466965 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.707100835 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.921755247 seconds)
done (took 42.050248689 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.705685968 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.176863423 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.187936973 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.367266208 seconds)
  done (took 11.370580893 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.681949022 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.223271153 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.736795079 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.299321843 seconds)
  done (took 19.591153527 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.065522815 seconds)
    (2/2) benchmarking "read"...
    done (took 2.06110639 seconds)
  done (took 5.770651441 seconds)
done (took 45.078624058 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703507573 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.702106403 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.700182946 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.703326383 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.6999174 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.700456823 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.702353989 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.703835687 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.703161997 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.70304461 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.703714434 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70311425 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.699830422 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.701041939 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.700997257 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.70272666 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.702484057 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700481953 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.701249841 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.701265835 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.704179216 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.703134687 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.702754247 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.701204173 seconds)
  done (took 42.491579973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.703448568 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.701725486 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.702856963 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.703531881 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.700576644 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.704403356 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.703793118 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.700112034 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.704164856 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.704806434 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70123097 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.701340124 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.705036929 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.701958433 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704787983 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.70312657 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.703923784 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.701519824 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.704227717 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.702095214 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.704347861 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701773033 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.702225956 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.704360403 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.702421001 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.702348744 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.70380445 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.703652256 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.705029997 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.702666995 seconds)
  done (took 52.733542016 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.709641248 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.71201354 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.704895605 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.705760078 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.705370179 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.705443206 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.704781468 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.708965996 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.705274624 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.705106234 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.70430339 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.70689285 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.705633206 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.708159045 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.705571053 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.7058804 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.706844034 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.705164523 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.705808595 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.707468596 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.705856908 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.705823387 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.706026008 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.706275761 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.705934329 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.708732566 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.706181185 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.706474804 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.706031954 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.706375576 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.706338472 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.708697629 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.706967857 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.70663149 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.706386512 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.706775346 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.711033029 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.714731002 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.706115618 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.706970754 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.706959022 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.706602252 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.706962717 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.706753682 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.70759328 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.707881846 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.706878147 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.708144413 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.708715027 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.707204939 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.708082286 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.707310756 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.707051543 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.707630658 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.710664662 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.706942766 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.707112346 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.707567587 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.707597092 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.707754437 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.71001867 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.70832398 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.708396889 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.708420407 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.709830225 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.709114483 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.710382439 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.708572147 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.70807402 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.709380041 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.708873663 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.708445497 seconds)
  done (took 124.578917202 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.708161064 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.706045661 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.706712739 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.705418128 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.705865641 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.711977392 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.706215271 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.70896511 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706191374 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.709854639 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.708687445 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.708938076 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.706188353 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.709937491 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.70913975 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.706158135 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.711908286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.706640595 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.709095228 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.710590179 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.709248837 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.707105161 seconds)
  done (took 39.228594747 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.710000095 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.710157307 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.707048569 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.71005165 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.707070581 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.714692409 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.709869418 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.710472187 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711524847 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.706914605 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708015528 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711846297 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.708298499 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708838631 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.707959497 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.70856074 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7117191 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.709671877 seconds)
  done (took 32.422246836 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.709576407 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.709817946 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.711876397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.709402871 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.709592758 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.710723334 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708739062 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.712153688 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.709807929 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.708648735 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.71374826 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711125731 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.711093629 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708750022 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712486425 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.710795109 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.711132645 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708395161 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.711809931 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.708974042 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.708798985 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715046207 seconds)
  done (took 39.280482874 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711569292 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.712175321 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.708370193 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.709763962 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.710238926 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.711854575 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.712332411 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.711643191 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.711921306 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.714028926 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.710900134 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.712383676 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.709258749 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.710725846 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.710742826 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.710046011 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.715023308 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.711414409 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.713579694 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.71196623 seconds)
  done (took 35.87925132 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.716326835 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.714889042 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.7147944 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.714916088 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.715069082 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.714475327 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.713316154 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.716657666 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.714210306 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.714808635 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.71515343 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.713735503 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.717341735 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.713837394 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713534606 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.715736558 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.71519337 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.714361711 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.715240921 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.715090448 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.714409875 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.714412371 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.714542044 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.715217774 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.715958167 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.713954397 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716176505 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.715090795 seconds)
  done (took 49.669803556 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714866865 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.717164178 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.711347557 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.712536581 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.713106359 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.712319002 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.712292954 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.713850761 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.714799786 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.712520638 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.716070052 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.715283351 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.716422336 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.716241373 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.715218321 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.714972914 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71693021 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.714468034 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.715829073 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.713301549 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.715767927 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.716548642 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.716321869 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.712945382 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715563747 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.716483001 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.712918076 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.713843218 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715504286 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.713939659 seconds)
  done (took 53.092233162 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.734983912 seconds)
    (2/2) benchmarking "in"...
    done (took 1.735095142 seconds)
  done (took 5.125408313 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.713410962 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.715689914 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.719159309 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.714078115 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.715036268 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.716031033 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.71749642 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714667928 seconds)
  done (took 15.378678675 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.717579431 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.716487582 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.716729713 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.716957805 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.717795973 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.719983109 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.725555425 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.717209057 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.719651346 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.718761858 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.725698748 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.725092477 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.722801364 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.719179375 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.7171463 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.720024773 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.718591384 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.717946754 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.717693357 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.717462864 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.717742474 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.719546673 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.721158367 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.714350876 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.719024617 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.730045996 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.723534658 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.718473178 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.723220153 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.722987335 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.722061015 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.715166658 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.71863616 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.718076554 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.719861415 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.719435631 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.728036534 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.719991882 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.726653033 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.71964765 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.720144695 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.716903933 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.719882087 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.721668651 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7204657 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.721187335 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.718427108 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.715781388 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.718912031 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.721461523 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.721876409 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.71966019 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.717586551 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.725291168 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.72181921 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725662176 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.720642792 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.724208855 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.727998485 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.731033517 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.735216134 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.726563354 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.721156481 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.721867086 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.728928052 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.741958579 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.727286686 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.715871307 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.715684311 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.721175566 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.728106893 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.734832608 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.728198444 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.719254168 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.723658429 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.720455733 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.720139567 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.719895903 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727832128 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.724056042 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.722726862 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720922859 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.729673597 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.74054233 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.72065582 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.719302505 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.721591537 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.721198762 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.722855361 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.731766331 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.723960855 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.721256061 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.723900733 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.72263582 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.725891182 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.720840158 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.720778719 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72388332 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.720722061 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.720809984 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.723450567 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.726414583 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.730356475 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.724362686 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.722614922 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.732062708 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.721829138 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72126292 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.731290091 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.722793255 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.722099345 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.724207058 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.731256424 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.720082871 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.725576718 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.731939001 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.723684399 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.72697093 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.72353428 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.720909172 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.732958878 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.748283487 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.723040588 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.723708161 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.730780007 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.735673287 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.723004967 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.727830094 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.724637611 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.721451437 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.722149584 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.725866422 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.726716633 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.725207179 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.725248047 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.726574093 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.721491101 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.723204579 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.725928373 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.727108202 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.726868648 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.726200983 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.725944163 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.7303869 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.727888969 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.727391036 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.73245258 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.724246498 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.728099992 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.728159823 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.723620109 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.725139286 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.727518175 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.724339494 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.726102209 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.726637897 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.726461716 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.725342389 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.725905301 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.725495355 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.724836359 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.727338989 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.729743406 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.725569063 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.730811343 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.726862885 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.723887116 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.727229887 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.726079638 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.726089135 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.727254238 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.723740751 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.730373994 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.736202625 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.727085575 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.727180042 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.730582013 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.727164864 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.729708856 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727975555 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.728337928 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.736281548 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.728742775 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.736156938 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.728898039 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.726057963 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.729374158 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.729610755 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.729257651 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.728242066 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.733386747 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.736210469 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.743607202 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.736989632 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.728016258 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.729961104 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.729370364 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.733257409 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.732196679 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.728879908 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.725757223 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729993935 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.72924851 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.728794657 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.730655598 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.727896054 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.728994506 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.725772065 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.727513442 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.727231271 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.726150624 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.732580906 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.729008841 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.725334236 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.727566186 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.727644641 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.727973425 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.725936858 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.726031201 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.728503166 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.726402656 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.729560318 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.739071257 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.723717928 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.729741656 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.729158835 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.729691118 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.727238552 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.728944758 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.730185759 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.728454269 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.73808119 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.729192172 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.730655059 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.735576048 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.727693294 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.729568319 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.733085675 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.726575639 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.725882257 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.734364278 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.734651232 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.728987051 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.728105528 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.72978808 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.72837372 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.727852749 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.737503635 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.726016003 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.727541085 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.727861028 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.731422152 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.725381914 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.730089907 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.730600146 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.730207898 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.73241304 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.729055334 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.728764728 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.732583112 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.729495799 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.73025912 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.729346434 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.732469282 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.735492066 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.736886938 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.730790519 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.732450462 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.730898218 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.73321452 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.730972531 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.730227384 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.728318591 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744589848 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.737317908 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.739471396 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.733313095 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.730224105 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.736241016 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.731234875 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.734534582 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.732115613 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.732974601 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.731401617 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.730733608 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.72690201 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.732148477 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.729799539 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.733316761 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.731840886 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.732831502 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.730347209 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.730756422 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.732380032 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.733481653 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.731538794 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.732086968 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.732130663 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.735520183 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733267317 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.733588534 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.731127138 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.739069456 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731660543 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.733238663 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.731822262 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.732104913 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.731270889 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.733338329 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.733865651 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.735901846 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.738709275 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.735667775 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.7414307 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.734127393 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.7425709 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.732424291 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.735363895 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.741128335 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.728090158 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.730566265 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.733342903 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.732597852 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.741774046 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.733134655 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.733026673 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.737580229 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.732684883 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.733554444 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.732142323 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.732296667 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.732078721 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.733096469 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.742854771 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.733299986 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.736623622 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.73470629 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.729571428 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.733027494 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.732485069 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.734161386 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.738470614 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.733491886 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.737348164 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.733546026 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.734866703 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.734383874 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.734031344 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.733416177 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.732637155 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.734209634 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.742050946 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.737764587 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738593607 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.732928451 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.745671634 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735908376 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.741772243 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.735808247 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.735012303 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.735523274 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.734345191 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.738305309 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.736732725 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.736488031 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.734951053 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.735887665 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.737570438 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.734857887 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.739459293 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.735311452 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.735366352 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.736109543 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.743894657 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.755937011 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.738341821 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739746216 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.732578601 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.737244229 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.739007425 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.736005163 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.735361931 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.737910212 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.745550753 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741059605 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.735554554 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.736926537 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.737009146 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.735665034 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.737534537 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.73468729 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.735496406 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.737230433 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.73850866 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.735648822 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742521841 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.734988216 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.737608725 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.73969764 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.737249528 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.749073095 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.737602876 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.737593204 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.738857474 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.736849533 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.737744679 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.737800409 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.737545782 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739816267 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.7381538 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.738605134 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.743511771 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.743727345 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.741206775 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.737899989 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.738051992 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.738078488 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.739809259 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.738034054 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.738056486 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.737982985 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.740249433 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.738062828 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.740329812 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.736701148 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.737539727 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.738944209 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.738211748 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741299145 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.743856384 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.738852527 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.734885294 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.738535312 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.737972476 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.739100916 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.740244123 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.749219117 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740923341 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.748521143 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.746097937 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.743005446 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.739842471 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.742114564 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.74692269 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.738731236 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.742040425 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.738585881 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.742898796 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.739906942 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.743621897 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.740645221 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.746711206 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.738875157 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.739506326 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749207871 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.742110763 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740218573 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.741184609 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.744090902 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.740248702 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.738217907 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.739797582 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.739762749 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.750631087 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.743130189 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.740944528 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741281237 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.739398109 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.742066711 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.743720734 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.739397183 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.743679289 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.736895893 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.741780777 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.74202195 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.742156843 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.737388799 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.741973515 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.744355395 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.743206593 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.748579139 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.737977898 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.744980946 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.741246461 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.744040595 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741544736 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.739665852 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.739464907 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.738094516 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.742164773 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742403121 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.743641173 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.745174231 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.743946091 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.742191037 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.742392807 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.742794023 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.743414363 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.752464352 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.748041207 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.738108084 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.743216863 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.742964255 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.743900252 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.742096069 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.741955904 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742551044 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.745396959 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.742179315 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742861971 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.740628236 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.745238121 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.760945481 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.743586693 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.74408702 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.744371848 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.749541709 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.74154016 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.739178055 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.742207842 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.746851943 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.746830334 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.749695035 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.743805206 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.75193216 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743892842 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.743992412 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.746679615 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.74668601 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.751001997 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.748699025 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.744075058 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.745028616 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.749043985 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.76052281 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74273593 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.75438398 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772618106 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.745143412 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.745604237 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.744112289 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.744374907 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.7445533 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.747600053 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.745048536 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.743624237 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.743501751 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.745701864 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.745568801 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750197451 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.746556547 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.744108618 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.744239904 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.746063739 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.747145284 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.741189181 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.745053508 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.743835948 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.745426575 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.745208176 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.74495709 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.74625779 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760146922 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.75708396 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.74590367 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.746496474 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.742533026 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.750711617 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.747891376 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755706608 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.752584611 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.746112285 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.746237714 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.746733397 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.745594133 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.743193561 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.749026846 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.74956587 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.747954513 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.744224997 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.763442817 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.755171717 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.75232219 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.747309794 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.746139211 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.745349152 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.749233732 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746919924 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746105482 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.750134293 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.747298794 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.749513609 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.746632721 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.746784757 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.750649024 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.754122154 seconds)
  done (took 1035.197635362 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.74407294 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.743645371 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.743850496 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.743865678 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744157352 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743244352 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743754372 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.744295253 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.743716747 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.744465269 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.745288498 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743749292 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.74432624 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.744085867 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744035468 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.745639011 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.744543216 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.745944546 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.744993585 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.745553153 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.744903041 seconds)
  done (took 38.315746379 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.74789289 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.745301579 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.744360371 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.747131653 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.745052236 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.747255263 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744828346 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747749169 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748139585 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744749994 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747569607 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747061831 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.744931136 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.745053132 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745474237 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748380339 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.750282883 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744580249 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.748447087 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.745273086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748666151 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.745587086 seconds)
  done (took 40.108916229 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.749474127 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.749925214 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.749456807 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.747073112 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.748751952 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.746589724 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.750329829 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.748979928 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.749121077 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.751604719 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.749658537 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.750620198 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.756881638 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.753362187 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.753704707 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.748690306 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.893161137 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.749257071 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.750769194 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.752631574 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.747276109 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.756819215 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.74737384 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.74650575 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.748698708 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.752473471 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.750074761 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.749190034 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.751902603 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.751443352 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.754594946 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.750221705 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.749899509 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.752435271 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.750486117 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.751622735 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.754276969 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.751410797 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.747657658 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.750618788 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.762040027 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.769232971 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.752087238 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.760106 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.750384556 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.750681547 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.754222889 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.758095755 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.7487902 seconds)
  done (took 87.656149344 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.751158615 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.752690822 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.748102212 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.751128114 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.75334236 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.751476682 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.751578643 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.752190495 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.74874027 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.748716339 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.751720392 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.748886423 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.74863879 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.750789001 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.751133078 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.75019645 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.74822883 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.748723219 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.748955035 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.749562315 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.749680944 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.752281183 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.752034298 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.750155873 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.752241743 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.749456292 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.749241301 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.751982689 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.749557896 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.749529477 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.752767688 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.752707707 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.753448515 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.751420343 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750152962 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.752978232 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.753178931 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.750125419 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.75422167 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.749988695 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.753025248 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.754155097 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.753324247 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.754125755 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.750678013 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.750807318 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.750976135 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.75048441 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.752274884 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.753065107 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.752982537 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.751592133 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.754518225 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.751177594 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.753271347 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.754231979 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.751709115 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.750772856 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.753538714 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.75233808 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.752287638 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.754607979 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.751909875 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.754253114 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.754761725 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.751600027 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.752654543 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.755476315 seconds)
  done (took 120.799481998 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.755771274 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.755089475 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755787243 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756920611 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.756077894 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.756285341 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.755976635 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.756327476 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.755655694 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.756254524 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755364709 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.755656792 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.75587242 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.755172351 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755740795 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.756567861 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.756451386 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.756211012 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755162147 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75637357 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.757777784 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.756912108 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.757397889 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.755939384 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757391413 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.757214487 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.757418553 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.756695708 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757035033 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.757723193 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.757306393 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.756667091 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.757855344 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.757114416 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.757616871 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.756477876 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.757223258 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757421347 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.757053748 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.757134956 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.757322412 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.757667601 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757717471 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.757715584 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.757637775 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.758015954 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.757631377 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.758481542 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.75732985 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.758947602 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.758079798 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.758007823 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758274917 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.758614709 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.758154755 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.758123214 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757922503 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.758226713 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.758354875 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.758905846 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.758790195 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.758440437 seconds)
  done (took 110.632559764 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.75783557 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.757722031 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.755092225 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.755131909 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.757641699 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.75526977 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.757559904 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.757784311 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.757721091 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.759914262 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757896941 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756324021 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75549452 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.757980411 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.756481032 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755439116 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754961809 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.757485312 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.758602198 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.755863957 seconds)
  done (took 36.831489373 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.755085291 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.757915628 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.756555192 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.75724658 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.75905751 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.756539864 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.758638493 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760032476 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.756099765 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759336216 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.758996178 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.760439815 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.757271311 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.756927075 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.760392786 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.75753715 seconds)
  done (took 29.824650484 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.75691657 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.760954834 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.761325047 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.760537159 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.75642898 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.757817123 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.75945668 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.75743374 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.757552742 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.76064585 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.759853469 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.760342142 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.759654822 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.761021509 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.758661974 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.75993746 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.758759884 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.757929127 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.760929952 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.762256242 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.758826592 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.758067746 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.762627632 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.760725919 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.757678571 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.758594837 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.758147647 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.758750783 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.75957489 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.761682363 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.759006843 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.759057897 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.758181599 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.760247235 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.762145255 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.758944685 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.761733797 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.760723535 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.761289508 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.762979754 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.76220261 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.758747254 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.761815853 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.761885047 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.760645217 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.761972902 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.758839422 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.759893375 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.759869277 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.759261263 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.763119694 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.762979078 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.762250061 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.762925513 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.762620821 seconds)
  done (took 98.504922541 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762607688 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.762357649 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.760271951 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.761860731 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.762679853 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.760088672 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.763584134 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.760124389 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760718672 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.762819345 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.761139879 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.764510444 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761397329 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.763717863 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.762381516 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763909047 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.760874559 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.763406098 seconds)
  done (took 33.417110932 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761330184 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.761776817 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.762839523 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.761200561 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.762362947 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.763474985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760669147 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.76394082 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763367301 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.761639706 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762084934 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.763379338 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763890227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.764486936 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.762528742 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761969027 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.763215781 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763460637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.761897451 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.761845542 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.764180611 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763960905 seconds)
  done (took 40.480010854 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.763963496 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.764569057 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.782403718 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.808211748 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.796306977 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.764448612 seconds)
  done (took 12.37998535 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763365602 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765971486 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763007419 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765940111 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76602676 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762518062 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761717439 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762448279 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765136384 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763258429 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762605083 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.764765784 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765532451 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762668014 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765770867 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765938375 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763417686 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764359031 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764775777 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76650372 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763989379 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765034495 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763294453 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762764741 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764535632 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764347698 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766873385 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763898438 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764109361 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767003243 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766828265 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763309 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766274954 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764736903 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767862379 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766278817 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764957454 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766515409 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766127392 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764322604 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.76735781 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766585641 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767094081 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764863281 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76747402 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764818851 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76432129 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765034152 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764401173 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768362998 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767635019 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765390604 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767907481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767897024 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767029092 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767133741 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765300852 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766080614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766675004 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765354163 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765362163 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76755682 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764897988 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766054895 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767753293 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765852578 seconds)
  done (took 118.217237886 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764801929 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765707712 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76659111 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768052185 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765449575 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766466796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765812861 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766566609 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765357351 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766791134 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768367444 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766321988 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766695682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767402964 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766830366 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767041524 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766468222 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766329279 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767732687 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769429434 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768147308 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766952107 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766375402 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766913245 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767491713 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768631999 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767058296 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76715231 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767494372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766550323 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767988772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768392768 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766979036 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.767356977 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76684732 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76635283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767648362 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768567377 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.766794403 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769165182 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767557885 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769438431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767005671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767589581 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766886235 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76736612 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767504932 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768477601 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769220824 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766741459 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.7673391 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767768689 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768052371 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767638218 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768856026 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767528982 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76809435 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76737469 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768177831 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771323479 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768736427 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768299222 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771786908 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768725234 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769080421 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769933569 seconds)
  done (took 118.365742022 seconds)
done (took 2412.253969158 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.788860921 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.945535063 seconds)
  done (took 15.441226284 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.936978795 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.886571131 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.771490109 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.819461657 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.771916566 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.794891467 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.789429816 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.771024197 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.770761267 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.770889445 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.771480645 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.958063899 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.774985338 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.772356606 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.770895537 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.867498456 seconds)
  done (took 50.708661199 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.77534592 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.775687981 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.786165889 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.777815081 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.774614883 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.79458836 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.809320339 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.78015346 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.836460132 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.79982768 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.901037974 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.786682296 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.775609945 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.83813321 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.788087469 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.789622674 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.874894795 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.851531426 seconds)
  done (took 34.223489394 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.854766693 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.777221471 seconds)
  done (took 10.34806506 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.800095648 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.799163208 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.784918872 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.77994402 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.773989056 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.772638482 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.774578931 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.780575909 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.797677916 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.795580193 seconds)
  done (took 69.571277407 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.781324798 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.776840392 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.775416986 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.775852318 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.768519796 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.772609731 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.775140072 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.771466958 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.472987527 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.812788928 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.782665427 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.782381872 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.776455385 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.777803349 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.773885709 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.797932612 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.936968111 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.772920181 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.771984403 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.782011734 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.77657351 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.83501434 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.790024459 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.776807958 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.807336025 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.469189352 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.784944267 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.782912115 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.898324658 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.774080333 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.77662504 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.7772016 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.778595875 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.15654326 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.108349165 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.777191784 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.785439383 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.784928361 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.774831162 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.888067554 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.777915623 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.783718189 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.73095328 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.087082062 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.874827854 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.820321915 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.135558246 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.781645868 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.779990018 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.807839194 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.779467097 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.778948067 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.79075341 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.294038043 seconds)
  done (took 127.678856302 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.804460622 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.259175062 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.927332976 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.773992969 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.066251442 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.011415192 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.774170558 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.823460904 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.793799653 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025397803 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.951853987 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.893807084 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.774939641 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.773029067 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.771091803 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.771340349 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.92329215 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.845482637 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.776039431 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.775323361 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.809774425 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042703421 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.901802121 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.913199373 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.79827372 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000986176 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.902352891 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.893717524 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.778883297 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.77261411 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.842099201 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.782381888 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.775178857 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.775652441 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.93972188 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.880451993 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.871608426 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.776445161 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.777456106 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777136999 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.804376668 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.994859376 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.88502178 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.91417086 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.024729982 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.003919311 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.777684493 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.774500742 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.781773691 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.96852259 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.991339978 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.030066335 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.905121262 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.777568906 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.126014441 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.773848741 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859277426 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026053984 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.010434572 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.88913287 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7864214 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.775499098 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.774948488 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.091374469 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.780068623 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.883209794 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.144223246 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.778307543 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.884381385 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.891037634 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.010644502 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018280413 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.807707034 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.798540331 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.811879855 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.059496966 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.849702109 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02875357 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.825832379 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.777089772 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869641248 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.778163931 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.949926581 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.094279637 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.044209962 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82025246 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.785621276 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.775569405 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.025627569 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.028542656 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.052160843 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.021644069 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.94534432 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.783153593 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.77893067 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.77570287 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.810223758 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.911268346 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.780665987 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.140857099 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.024718302 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.552617141 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.808560255 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.09525619 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.916776517 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.780618364 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.778573394 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.774763584 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.985000969 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.821693142 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.784918769 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777988883 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.024688965 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.725651598 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.895730194 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.482705897 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.845784854 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.782272992 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04521864 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.785921885 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028871763 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.822788023 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091741894 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.137796697 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.822465578 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.977536699 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.022986725 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.781195111 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.043423119 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.095870114 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.905115584 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028553383 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.521922953 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.782274868 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07296469 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.785612218 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.794459044 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.9484208 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.786534849 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956272085 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.788981513 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089591545 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806842632 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951438979 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.078818962 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.058318523 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.829197292 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.834329966 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.784780738 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.915391783 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.783386549 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.772417407 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.964891249 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.887983173 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.780444067 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.35826165 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.779958079 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928936542 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.080635594 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.807318987 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853897932 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.78293398 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788040849 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875007456 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809465805 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.435684182 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.781620803 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.952921577 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.772474889 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.233504537 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.780640563 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.091295042 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.996670772 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.783527236 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.786229396 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.58478894 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.781548192 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.945554045 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.9415166 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.429309414 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790225434 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999490264 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.784208526 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.915542743 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.78453394 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.784021577 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.134237178 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.784590373 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.782481302 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.804369861 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.782968893 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.78076626 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.01074368 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.813569167 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.504436901 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.920679519 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033257042 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.095500077 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.046251044 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.833980105 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.786485172 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.089671022 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.815587356 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.857411498 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.784972625 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.807686211 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02827141 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.787990142 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.011433854 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.072409613 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.8004785 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.834385623 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.785479555 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874823836 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.783118202 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.925537476 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882235337 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.786307647 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.781796507 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.90295884 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.912736835 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.979391671 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.784586879 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.821999729 seconds)
  done (took 934.591052675 seconds)
done (took 1244.269941908 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.784756535 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.78340039 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.772828826 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.787266551 seconds)
  done (took 28.852484644 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.793256579 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.79055126 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.792021127 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.790710887 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.791331239 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.791544779 seconds)
  done (took 12.474345256 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.820864183 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.784366743 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.787937859 seconds)
  done (took 21.118767189 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.859785049 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.206238861 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.898997297 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.242024192 seconds)
  done (took 9.932921121 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.793467839 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.79283917 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.792095648 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.794057309 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.794972884 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.79563081 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.794140632 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.794026829 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.796278111 seconds)
  done (took 17.875361371 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.95853904 seconds)
done (took 95.936701106 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.033198554 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.078632873 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.23039817 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.524343081 seconds)
    (5/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.889668389 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.172135235 seconds)
    (7/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.351021648 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.458312069 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.694416632 seconds)
    (10/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.132220662 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.937630434 seconds)
    (12/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.299142287 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.829280509 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.160894957 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.788090819 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.810498897 seconds)
    (17/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.863417246 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.781944646 seconds)
    (19/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.809857249 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.831394373 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.806742095 seconds)
    (22/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.013505797 seconds)
    (23/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.872073492 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.766743262 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.842312783 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.163472943 seconds)
    (27/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.91997779 seconds)
    (28/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.818168309 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.861341936 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.809161709 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.084621849 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.922483125 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.162189244 seconds)
    (34/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.788718921 seconds)
    (35/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.865434609 seconds)
    (36/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.812037521 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.790912427 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.722855333 seconds)
    (39/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.674691009 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.087938319 seconds)
    (41/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.970144237 seconds)
    (42/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.150417469 seconds)
    (43/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.381362254 seconds)
    (44/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.012978102 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.898418768 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.416214314 seconds)
    (47/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.007364688 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.908507085 seconds)
    (49/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.934380088 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.061239707 seconds)
    (51/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.254995373 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.749505759 seconds)
    (53/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.131289063 seconds)
    (54/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.874483135 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.838012181 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.845863816 seconds)
    (57/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.306074571 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.482839256 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.908625565 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.792676426 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.7991553 seconds)
    (62/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.097962979 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.777080672 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.906420009 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.788976371 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.143018506 seconds)
    (67/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.902164679 seconds)
    (68/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.294802416 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.469060846 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.793714109 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.022456328 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.191711646 seconds)
    (73/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.924042928 seconds)
    (74/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.973601238 seconds)
    (75/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.881907202 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.497076879 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.819826145 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.0951105 seconds)
    (79/309) benchmarking ("sort", Int8, false)...
    done (took 4.763658295 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.799873514 seconds)
    (81/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.823945559 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.811793748 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.088667003 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.618249459 seconds)
    (85/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.900053911 seconds)
    (86/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.867660032 seconds)
    (87/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.877550597 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.051876683 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.117807238 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.063565121 seconds)
    (91/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.780686645 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.970864154 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.17517723 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.052971103 seconds)
    (95/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.795076771 seconds)
    (96/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.806235455 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.999207975 seconds)
    (98/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.104447713 seconds)
    (99/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.807512273 seconds)
    (100/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.329535613 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.010846254 seconds)
    (102/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.150239009 seconds)
    (103/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.9498499 seconds)
    (104/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.955668884 seconds)
    (105/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.799498252 seconds)
    (106/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.788638589 seconds)
    (107/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.146585486 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.858645317 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.799658848 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.601485662 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.079682975 seconds)
    (112/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.847575994 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.082502023 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.393363121 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.869638508 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.798007224 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.830634644 seconds)
    (118/309) benchmarking ("sort", BigInt, false)...
    done (took 6.792397599 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.948870803 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.793700418 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 3.06787571 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.88269531 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.243758131 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.815671077 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.057812997 seconds)
    (126/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.98525863 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.477794377 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.863378145 seconds)
    (129/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.769922276 seconds)
    (130/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.765455231 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.009367386 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.034679608 seconds)
    (133/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.059338728 seconds)
    (134/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.70973564 seconds)
    (135/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.010758152 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.774726504 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.874591126 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.357558911 seconds)
    (139/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.058332769 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.809745654 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.904147465 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.776754657 seconds)
    (143/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.704510732 seconds)
    (144/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.83775789 seconds)
    (145/309) benchmarking ("sort", Float32, false)...
    done (took 5.53289782 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.144286721 seconds)
    (147/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.903676627 seconds)
    (148/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.893930594 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.99989866 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.790770997 seconds)
    (151/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.867381342 seconds)
    (152/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.931923278 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.065431675 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.857481241 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.9447351 seconds)
    (156/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.9305917 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.712543674 seconds)
    (158/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.825159162 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.002791975 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.781530069 seconds)
    (161/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.357204547 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.890114105 seconds)
    (163/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.437713985 seconds)
    (164/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.837168299 seconds)
    (165/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.263430192 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.416829649 seconds)
    (167/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.169359638 seconds)
    (168/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.813011985 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.857194757 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.132240614 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.957993605 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.980909096 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.077052017 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.892528033 seconds)
    (175/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.904288768 seconds)
    (176/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.859165017 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.964032451 seconds)
    (178/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.749643139 seconds)
    (179/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.777147714 seconds)
    (180/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.449408591 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.75280636 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.998673294 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.675430059 seconds)
    (184/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.880920212 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.7413003 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.769916393 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.119866691 seconds)
    (188/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.824112489 seconds)
    (189/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.744503026 seconds)
    (190/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.76654388 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.038640643 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.788131496 seconds)
    (193/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.105443635 seconds)
    (194/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.11091702 seconds)
    (195/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.839068717 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.028350014 seconds)
    (197/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.624546503 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.282347423 seconds)
    (199/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.121088655 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.890822661 seconds)
    (201/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.343737617 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.08715807 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.800482144 seconds)
    (204/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.901433188 seconds)
    (205/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.273020031 seconds)
    (206/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.918247436 seconds)
    (207/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.145961531 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.834725376 seconds)
    (209/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.913802489 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.852949055 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.755501127 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.461158319 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.948461281 seconds)
    (214/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.732810563 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.636480937 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.057219142 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.034122784 seconds)
    (218/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.838746599 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.748327687 seconds)
    (220/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.898387957 seconds)
    (221/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.055293616 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.781576878 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.800368141 seconds)
    (224/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.896897048 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.909695244 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.726872109 seconds)
    (227/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.087213311 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.750667893 seconds)
    (229/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.310965484 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.662049103 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.748589206 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.065266259 seconds)
    (233/309) benchmarking ("sort", Float64, false)...
    done (took 5.538544658 seconds)
    (234/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.92507136 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.769799453 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.917406896 seconds)
    (237/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.817429866 seconds)
    (238/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.705459628 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.777706631 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.832083521 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.825582301 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.719485597 seconds)
    (243/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.77631641 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 7.676052784 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.721095362 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.993085136 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.732679524 seconds)
    (248/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.993693689 seconds)
    (249/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.73873902 seconds)
    (250/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.96492856 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.40381679 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.99585384 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.856629713 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.82245506 seconds)
    (255/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.744810156 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.750029564 seconds)
    (257/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.034617663 seconds)
    (258/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.243904802 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.763021987 seconds)
    (260/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.726817075 seconds)
    (261/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.836337389 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.710470129 seconds)
    (263/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 3.387879363 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.020875035 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.11556535 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.91322604 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.03371791 seconds)
    (268/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.339674607 seconds)
    (269/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.753721021 seconds)
    (270/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.710671164 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.432882132 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.86040309 seconds)
    (273/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.354587697 seconds)
    (274/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.742160332 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.710173793 seconds)
    (276/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.119888975 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.958795563 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.714839074 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.843032992 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.664385644 seconds)
    (281/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.731506308 seconds)
    (282/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.901654676 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.715716042 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.84193103 seconds)
    (285/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.722874063 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.811634147 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.808939311 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.839205647 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.375582374 seconds)
    (290/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.924954876 seconds)
    (291/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.876633634 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.921679716 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.773346932 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.727350931 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.0146051 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.273131 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.710891056 seconds)
    (298/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.663802357 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.766985216 seconds)
    (300/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.900147002 seconds)
    (301/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.03881725 seconds)
    (302/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.812177113 seconds)
    (303/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.814162857 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.752617873 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.753753845 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.658066898 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.214363942 seconds)
    (308/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.931142336 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.803391881 seconds)
  done (took 991.600499254 seconds)
done (took 993.34244949 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.76263629 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.757472101 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.739636435 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.76235118 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.852038855 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.767900578 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.750578768 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.742142949 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.789029451 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.789815261 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.738433198 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.766867675 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.742373897 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.73971937 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.740136131 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.754551632 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.052621956 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.771364302 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.757328385 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.751170145 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.757547324 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.739775819 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.789999851 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.768843427 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.745150649 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.743820074 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.745309179 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.760122724 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.852725398 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.743671805 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.743418812 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.752776655 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.05130095 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.770053063 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.735140969 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.76094 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.75383704 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.751793234 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.745255413 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.774877192 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.201794459 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.74961858 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.744888706 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.743646269 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.743582058 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.747494741 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.744017644 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.75061379 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.755585283 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.757282835 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.198157647 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.764299227 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.746356924 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.743437934 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.755805687 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.742839765 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.747908796 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760651946 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.768216106 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.756817789 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.042525428 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.775311453 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.742566141 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.758211726 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.75414032 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.23132214 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.739913091 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.743333527 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.198207795 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.760932237 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.229268748 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.758032258 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.745686485 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.756890511 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.776938811 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.051063532 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.771544309 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.745342831 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.748988078 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.74690885 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.761023569 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.764747826 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.756320573 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.751465219 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.763795106 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.782166283 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.760787332 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.751245819 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.755504778 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.76340352 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.75347859 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.763871361 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.748955812 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.741715574 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.755938932 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.747824426 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.748379016 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.752989514 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.749975968 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.757515931 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.199043767 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.768901723 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.74476352 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.738844173 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.740706374 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.756989844 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.196369948 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.747806464 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.7664568 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.785954597 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.741580887 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.038685535 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.775055941 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.757351916 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.745780695 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.739570232 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.731843837 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.035896849 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.220106679 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.758378058 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.73797045 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.734350252 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.752798747 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.738505465 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.736560485 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.043911174 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.765537607 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.747698324 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.855182128 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.744696356 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.767417986 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.730715876 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.734277243 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.764040101 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.748027234 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.763692394 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.733525028 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.74438779 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.746072871 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.725455357 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.740043391 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.742392157 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.727122237 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.73480511 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.724867559 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.757376283 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.740498482 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.740974043 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.744876904 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.845487996 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.72299657 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.024454548 seconds)
done (took 274.369755985 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.791332289 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.712664132 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.816381822 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.716669555 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.800678086 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.804300044 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.712106835 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.714655107 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.711434149 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.094359437 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.712641562 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.712068 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.710304264 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.711366774 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.796304857 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.713531418 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.711569344 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.057821924 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.715469025 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.786139679 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.714975204 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.711952922 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.714193937 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.096465323 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.708678415 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.711327587 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.785688126 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.715622852 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.062216144 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.70948369 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.711411149 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.061393507 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.806140486 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.733656596 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.724989682 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.721921755 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.79972012 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.720410821 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.797362472 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.79614439 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.815289134 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.756297842 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.708484088 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.708350933 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.719678589 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.718356242 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.713109026 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.743475021 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.711718932 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.71300492 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.060038296 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.725381635 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.714689986 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.714254534 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.713403397 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.747467298 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.715254412 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.71783645 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.806849879 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.718878337 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.779584652 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.099428939 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.097499228 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.716804634 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.712248546 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.714446374 seconds)
  done (took 174.026886642 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.785364612 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.790450558 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.78595767 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.720532379 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.764944645 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.789185852 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.721361986 seconds)
  done (took 14.009513934 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.723281883 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.718243052 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.767977561 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.767248486 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.718001789 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.868201013 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.717799317 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.729344844 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.715503295 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.77085433 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.719286879 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.718791556 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.72482829 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.712178953 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.767374521 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.730067074 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.834114581 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.718825076 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.71853178 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.87571883 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.715875301 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.725238501 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.773485329 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.731123357 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.720315518 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.72520167 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.305008631 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.718882311 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.716512094 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.718353912 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.71610862 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.758700208 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.719008718 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.710741484 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.716812588 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.834937666 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.719593756 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.717592558 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.719409748 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.715753235 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.718840559 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.719261897 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.719002191 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.716027795 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.719107882 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.743000649 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.719517087 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.719972512 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.719735831 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.719797078 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.770105347 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.720054658 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.717758794 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.717016743 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.776478362 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.726618321 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.720376045 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.716782239 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.720323512 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.71723631 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.877712432 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.768048376 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.719691678 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.768883559 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.720230641 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.720568765 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.719694461 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.720068621 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.775223443 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.720186229 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.769375562 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.718567678 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.879775319 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.744520357 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.720961012 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.723892148 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.723721717 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.721715943 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.716649243 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.727702967 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.718393394 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.722437655 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.72744905 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.71893222 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.719171856 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.828415956 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.830383677 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.719615609 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.734164541 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.728630971 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.718615999 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.775167585 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.720966921 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.719429671 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.774991071 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.836133644 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.778394503 seconds)
  done (took 191.095787381 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.726471568 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.729765082 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.723743166 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.737704005 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.722648578 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.721953431 seconds)
  done (took 12.018654719 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.725188824 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.722411823 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.721879274 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.722045823 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.722485391 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.723334745 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.724096705 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.725385992 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.728269152 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.722485907 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.724020007 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.725088282 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.725051997 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.723085922 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.724262548 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.723154719 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.724919095 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.720156809 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.722955903 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.724073452 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.868469412 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.723152796 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.168428002 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.725223415 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.729804948 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.723843239 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.731669526 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.72360722 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.722305762 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.733572391 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.727935473 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.724639338 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.725262669 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.730513287 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.729348863 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.726217998 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.72753658 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.725954294 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.721659632 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.725754471 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.726262603 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.724003391 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.724010033 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.726849271 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.726578484 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.729930016 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.730771829 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.731776882 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.725865957 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.726260545 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.726432811 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.723751352 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.726121529 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.727238364 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.72934994 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.731632912 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.730723979 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.727658026 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.725807658 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.728296178 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.726050164 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.727695986 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.726476101 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.727349165 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.731436649 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.727413357 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.725909295 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.727341883 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.722101249 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.72161369 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.724387149 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.718644588 seconds)
  done (took 127.503805182 seconds)
done (took 520.329121639 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.99787688 seconds)
  done (took 8.651848213 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.789502897 seconds)
  done (took 8.540147858 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.224052234 seconds)
  done (took 9.87503216 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.720703317 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.706535482 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.71506461 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.707845925 seconds)
  done (took 28.510062667 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.05916248 seconds)
  done (took 8.701564661 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.715237725 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.700976363 seconds)
  done (took 15.133682672 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.788756953 seconds)
  done (took 8.432772207 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.790028032 seconds)
  done (took 8.436933625 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.710090208 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.715931416 seconds)
  done (took 15.084058304 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.688151322 seconds)
  done (took 8.331004727 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.2311199 seconds)
  done (took 10.882187081 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.709000024 seconds)
  done (took 8.365873266 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.727620779 seconds)
  done (took 8.370003395 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.718336977 seconds)
  done (took 8.35972874 seconds)
done (took 157.334572885 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.706897265 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.702873491 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.697009613 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.699406203 seconds)
  done (took 28.44760614 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.733332072 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.739507666 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.735981983 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.742057969 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.737435362 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.749915637 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.734634476 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.724992738 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.74088017 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.733018178 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.731310578 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.731870061 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.730581221 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.721958897 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.732840901 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.732934542 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.741068321 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.731472008 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.722135729 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.732506328 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.696832005 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.74091319 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.733184593 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.698228798 seconds)
  done (took 43.18486473 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.892514522 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.766953523 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.850639725 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.749428723 seconds)
  done (took 8.891614959 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.749319332 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.749927912 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.76222108 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.800939114 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.834448183 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.759917484 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.723292991 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.718325975 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.705129832 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.750430494 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.826356597 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.76665287 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.834257769 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.698014302 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.884884409 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.697555127 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.697658934 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.75022946 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.80183869 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.81612588 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.698551144 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.749839389 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.753435235 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.767707769 seconds)
  done (took 43.929579814 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.69680003 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.705744965 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.703668285 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.698068914 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.697347421 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.698028294 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.703555434 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.698450552 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.719625884 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.698724679 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.696842445 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.697631584 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.696542272 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.698567476 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.696561956 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.711249744 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.712165797 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.698502886 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.701152837 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.704886288 seconds)
  done (took 35.667093101 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.692588296 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.548057707 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.045000436 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.949093365 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.69190308 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.69556837 seconds)
  done (took 30.256460485 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.712496734 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.765589318 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.707968852 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.756210558 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.840352669 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.708767056 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.700645529 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.76943825 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.814694117 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.777187684 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.721020354 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.728766713 seconds)
  done (took 22.63623533 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.694784321 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.698818227 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.694538505 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.706430063 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.706320217 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.703493323 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.703035777 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.690848389 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.706965525 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.711885721 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.703898951 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.702369115 seconds)
  done (took 42.062569435 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.773602217 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.890134907 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.695226858 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374155108 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.063716203 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.895720942 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333492126 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.019031055 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.688642227 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.958417322 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.801215261 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792320958 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.943372534 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.299239155 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.725801222 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.148248644 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98973591 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89849375 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.717581567 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406085368 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789482506 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.001722368 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.522414882 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.783732128 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933448917 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.855662399 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.984434331 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.723783604 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863564836 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764933782 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736251576 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.725718312 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997162776 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109478528 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831405707 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734283401 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343149773 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.441878882 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.711738473 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.597543588 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.50679616 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.861635544 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.739699157 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.727686059 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.661700448 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.983284678 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111600471 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.732597754 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.439510326 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.730623685 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.737848401 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821762272 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.732607851 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.543158794 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.637785891 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.726985261 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.725159644 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735507972 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298791125 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891647623 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.038350512 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.711005948 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.820819134 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.450558025 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134115118 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.88183606 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.734794483 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73317463 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663172728 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.526066796 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.787612041 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.077394337 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.749953405 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37804535 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022599213 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.911496592 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.673485156 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999440794 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.385432059 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.710455627 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957209485 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.729694622 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.66551523 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.678892496 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.664300743 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009474336 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770031279 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.487765438 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774864968 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.058422941 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.741502832 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7487476 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753747933 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.954924752 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.877196816 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.731631962 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.583723575 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882824408 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751887294 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.058526469 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.664680332 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.734017963 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987403976 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.942527297 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.909476989 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.235039313 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894895994 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405755436 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.789873437 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.98323656 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.785596243 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.001280216 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793864853 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.882959344 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792764551 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.735806977 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032462632 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.438657986 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.87976127 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.862666422 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.864637619 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.052947273 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766972575 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818258255 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.739298556 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.736649345 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.555143775 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293111088 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.737956633 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.740438538 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925856326 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.792500721 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.739034101 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.685766514 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.364764944 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.877931186 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.753172263 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.96198416 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.414003976 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057123601 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673537473 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.067746549 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832022428 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.962044461 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.389558609 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.823828741 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999999018 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.920507306 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.967214263 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794225606 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758239122 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836966856 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761703815 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.990974191 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039942095 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.744187 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.744178382 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.576092485 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.780864949 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.748627466 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.748226445 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.494435445 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015680176 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.771666521 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.750954159 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.631599684 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.756733186 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807949293 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.748652487 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.75472329 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.29061524 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.455184998 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.75111341 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.328578008 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968645473 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.753733817 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.474612093 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867941015 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.82875812 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.017854332 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809510024 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.680975248 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.457750573 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.439925954 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.746774255 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.681491748 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.746322272 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756471714 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.758162746 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.943092427 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.021612558 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793645065 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.484583279 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.794211811 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759920301 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.754284181 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.749195247 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.261508577 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.919337918 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.045723036 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.80176695 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894033259 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.764335628 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.683741445 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.753149612 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754342204 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.750185675 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.750871653 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783629124 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.472984554 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127920262 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012758754 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.360017537 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765805902 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.512313101 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.812167516 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.748426035 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.619047337 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.034071837 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.815946135 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786868296 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.786608572 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.599237136 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474008431 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.342960862 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080714917 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080687114 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215764073 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.094942053 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.810074818 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111447917 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710268404 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.34201905 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836183575 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118262286 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720672943 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860559707 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.427853729 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129838447 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791478209 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003451144 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162951914 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.726305306 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801547016 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988130884 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811621634 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.039009789 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.744609732 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.063189263 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919096108 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.513261265 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991828018 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108035679 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650027721 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.792623713 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.776616045 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.453473079 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865437376 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.489978914 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.948949641 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.078421388 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.808475583 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284561292 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.785367481 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.002651867 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126142368 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.054556085 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.907644142 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715108891 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.789405265 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.78892651 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.778300181 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.778081579 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.65282357 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.033438333 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789951935 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712604179 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.004223611 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075003968 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.683949401 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.78368896 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778833398 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080279921 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.424194902 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956409459 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.998948915 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.310727995 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787073241 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.713177496 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713343854 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.476636911 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.785714965 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.774740076 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987773029 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.885815709 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.700757153 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.979784659 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.867542256 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036435984 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.793066782 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.049478354 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056829001 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.480183401 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805764734 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.880192394 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.491479604 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.900069845 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.779748831 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.014825257 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.536297436 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.007263656 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.833931398 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.738773617 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.780812589 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994592663 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.780309794 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.753639975 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024098526 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.504384387 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.883704409 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136629474 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907448122 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.814104669 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.886916382 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.924229842 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.842574533 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910724113 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841442396 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.843896113 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.843823392 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878532734 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.816679412 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.964899072 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.845622985 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926486469 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.99045717 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.366369492 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.838262584 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105442837 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18705549 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167786617 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896452297 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.833270643 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837452982 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766857489 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981517328 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.058177121 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106564124 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.96884396 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.949767167 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859091966 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.555250598 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.16472812 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081611628 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109507182 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.729362434 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459831377 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.879202934 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.834804805 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845542455 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.045530764 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044778222 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140373019 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.983433792 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.024448389 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198151648 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.108634718 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.834318516 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83553281 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426163876 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.966126796 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.527091428 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.891850593 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.829209131 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131023526 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855653732 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226113786 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.869694972 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.001056212 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.619686254 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62105705 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139597805 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.838861075 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.913377662 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.118092013 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.229144038 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162257547 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914166828 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857362052 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.952554164 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994411716 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.726914064 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847815739 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847529324 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.896800032 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.556794528 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.857497628 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124707312 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160176223 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.845296663 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.728729333 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870648297 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.857971186 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071017156 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115095349 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.104192527 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857963852 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.854296188 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.663470116 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123369679 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909792098 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784355962 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.85175636 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948873477 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.098454058 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870767835 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.301120133 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.559349029 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122081669 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.851948125 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870865361 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.126436156 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218280853 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176176403 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.387709445 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059564671 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.438909054 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.544284527 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157337038 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.85472133 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.110266268 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158956589 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.853731397 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.048893148 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892534126 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.11728631 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165032897 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.932631068 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.590866474 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.822626854 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.190919156 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410580599 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790065269 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860578931 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.911909562 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.850996724 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.981823175 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8625905 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.73812852 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.119370939 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.61501568 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.123578514 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.856555703 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.840267739 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.625330741 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.260520696 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890249281 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993832911 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858729862 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.524471871 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.201896838 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107371559 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.053593523 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.864080878 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.854635373 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851958522 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838964834 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.049727794 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.047727145 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130191534 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.081627694 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.89426118 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856628981 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.067673132 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063804829 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.835909884 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999443041 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.051971966 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.898884277 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.757697507 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.354124752 seconds)
  done (took 1637.72703878 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.852960482 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.886317765 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.923982646 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.941015985 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.878731819 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.914295152 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.91882079 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.860307938 seconds)
  done (took 56.96769927 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.852708335 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.070516548 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.863367072 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.855168692 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.863401146 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.854699566 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.02405903 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.878907785 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.862930723 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.864392452 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.857388561 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.85704012 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.169764865 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.88104294 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.85447458 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.839005043 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.862465025 seconds)
  done (took 74.118361401 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.853241205 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.877874886 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.889496566 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.870507737 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.877232468 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.859762779 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.670857164 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.85510319 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.857161263 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.000189542 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.485843234 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.867959827 seconds)
  done (took 86.758452128 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.863320377 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.861450631 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.86165837 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.860753662 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.860180508 seconds)
  done (took 11.102538171 seconds)
done (took 2123.458596259 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.218947601 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.073424342 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.107013874 seconds)
  done (took 5.973377244 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.009239135 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.056690288 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.178238914 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.184120998 seconds)
  done (took 10.229518666 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.14764818 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.22957784 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.072637747 seconds)
  done (took 8.247794297 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.272044588 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.875966526 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.978302369 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.859560567 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.862177218 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.859992061 seconds)
  done (took 22.380684996 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.862963817 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.866432646 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.864021449 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.86703636 seconds)
  done (took 9.258453453 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.844953968 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.584646955 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.845540245 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.861974599 seconds)
  done (took 20.936417236 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.611884664 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.622810403 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.607316735 seconds)
  done (took 9.641157399 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.527841714 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.792534299 seconds)
  done (took 9.119371582 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.116778427 seconds)
  done (took 3.915774117 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.995077247 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.127086215 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.339682096 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.390468778 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.428840539 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.78169938 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.189658673 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.125693454 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.263442544 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.324273167 seconds)
  done (took 24.764790046 seconds)
done (took 139.605984402 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.245573999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.099402768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.0646222 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.200973801 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.085012431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.064419644 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.282001632 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.184193753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.710454269 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.70753268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.199696861 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.083501203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.017733949 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.106750397 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.01946636 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.106567363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.081682586 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.256665731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.932622947 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.097213525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.28489905 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.838013575 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.043692778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.852369963 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.084340962 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.016693393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.417873444 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.108019532 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.086155614 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.427489299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.018293074 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.248228054 seconds)
  done (took 172.773213503 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.633308695 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.864060829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.864470732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.864920153 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.459117891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.864525506 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.864836167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.864057732 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.032982924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.018729285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.865127913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.454701321 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.86456167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.864710729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.866080149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.865087365 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.192101305 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.679978634 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.875772542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.881491727 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.885746257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.420903233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.889573028 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.488104826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.23318863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.893049815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.866054555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.889127067 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.870006152 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.858611669 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.875545296 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.865550019 seconds)
  done (took 208.579794035 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.865229502 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.866589376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.866263538 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.866566282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.866659217 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.869259078 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.867921119 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.865275053 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.555772023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.55999331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.876228256 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.873981461 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.876320514 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.866588053 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.873086673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.866625944 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.873558887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.874399372 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.873583896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.877722359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.876837574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.78767638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.877012787 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.798020736 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.87640352 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.87726958 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.867967332 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.874660975 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.876026951 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.87721386 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.876134107 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.867962078 seconds)
  done (took 220.933319546 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.063017259 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.873579424 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.874909537 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.809937828 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.874726803 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.873782675 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.870522792 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.06357389 seconds)
  done (took 19.123029396 seconds)
done (took 623.223889007 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.297452502 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.151972903 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.054423986 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.897785204 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.114185992 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.933050346 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.893342058 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.956325586 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.098290304 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.969180494 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.552219802 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.917814343 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.643243993 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.921076697 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.020739696 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.952033651 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.452138323 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.535903584 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.074543693 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.95061656 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.064599417 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.844715005 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.973565197 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.128336093 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.660723042 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.894618111 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.069325841 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.459723971 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.906661403 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.057106811 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.607302981 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.292871557 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.907741638 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.893301572 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.948413129 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.929942491 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.240270422 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.907744871 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.017781681 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.642690999 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.943846002 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.994961053 seconds)
  done (took 104.579358514 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.865469129 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.864525283 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.864947864 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.865717584 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.865218353 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.865303115 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.864402759 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.864225498 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.865216775 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.863866869 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.864988667 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.866418286 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.86499328 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.866738402 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.864844733 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.864890163 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.86593212 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.867442348 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.865082037 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.864863937 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.864866224 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.86554834 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.865866275 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.865065387 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.865926575 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.866204408 seconds)
  done (took 50.321613152 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.877446031 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.020370905 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.101620825 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.898266885 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.878371978 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.881870899 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.897147049 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.883416344 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.88055722 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.88005127 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.972179508 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.885487643 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.897219524 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.099639397 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.894260297 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.878306627 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.879260309 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.879828716 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.02699214 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.895827184 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.899957131 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.883343944 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.897982504 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.89322593 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.880850557 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.879208326 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.883101779 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.317613162 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.888555394 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.97123653 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.922717773 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.900482245 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.267196941 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.112494702 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.933162818 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.887819448 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.880159696 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.974771495 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.885743233 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.880347262 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.897440966 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.885258735 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.102384775 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.38405434 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.894544502 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.881013065 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.326775031 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.98330354 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.922200497 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.892605156 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.103720875 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.898882706 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.881441633 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.880874665 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.917440097 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.891857261 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.880750498 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.181515201 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.894027585 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.899875469 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.886119477 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.882715108 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.035976119 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.89007839 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.025243281 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.891646804 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.888712076 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.881419721 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.10261144 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.897953624 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.383207897 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.89659434 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.881567661 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.971915891 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.02831422 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.354466183 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.895240046 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.039271636 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.284113191 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.906379405 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.890480768 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.307986222 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.91052623 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.890220006 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.884326046 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.883793293 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.882564655 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.926743451 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.898722068 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.318839605 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.386796594 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.198008386 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.911196039 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.89924671 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.88352053 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.185383908 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.891431315 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.882461854 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.096187782 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.400978387 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.896595433 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.890156153 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.369983082 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.899150025 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.903452769 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.893289478 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.108442658 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.899535279 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.927408135 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.884012202 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.891063685 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.886598726 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.902445783 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.892132616 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.884181447 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.35924798 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.993777821 seconds)
  done (took 232.996419099 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.880844983 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.879084602 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.87934599 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.89278475 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.877603141 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.893396373 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.877722893 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.878151268 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.883414787 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.877184817 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.877856151 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.884055836 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.880424369 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.882887031 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.91258187 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.885654874 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.488449765 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.879459384 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.87902758 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.879528997 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.525433896 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.88580359 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.88011055 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.880001499 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.877953428 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.886163273 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.880804217 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.905112657 seconds)
  done (took 167.809951939 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.885280988 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.000034887 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.903986267 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.912979486 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.893937416 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.883929201 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.911201735 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.901821538 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.892308114 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.884344146 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.882606144 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.947258614 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.895904029 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.984679254 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.919304593 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.91773066 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.990521934 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.895242508 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.884014987 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.883566868 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.91446916 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.881232388 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.947962159 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.013468421 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.90508773 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.003218903 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.893820145 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.887455024 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.886637012 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.003748128 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.902820474 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.947027502 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.915256433 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.905355986 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.008337285 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.004793437 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.99557824 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.920776835 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.891567961 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.885162194 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.885208647 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.876193878 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.00435979 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.907729744 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.88883319 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.99616064 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.908899568 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.887653494 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.895894212 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.88602819 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.900652225 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.905817502 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.954597229 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.020139627 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.922163852 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.911728654 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.914594503 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.19158895 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.896262362 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.988407361 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.88437537 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.004988061 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.910862784 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.878120295 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.887982614 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.892071698 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.916341703 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.92108373 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.992433901 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.899021314 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.988980152 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.925912578 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.894994741 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.887041547 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.889924288 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.004878301 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.010071273 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.926301157 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.925557998 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.920814808 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.88539674 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.889885676 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.87878004 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.906569361 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.891465719 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.003715408 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.00951786 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.900376419 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.890665858 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.890321345 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.890232807 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.915078064 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.014427557 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.928393088 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.986603374 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.960655979 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.965107682 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.904371886 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.901582272 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.891706913 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.953534073 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.904666148 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.900591873 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.242762485 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.959203652 seconds)
  done (took 204.57599907 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.985325788 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.360780235 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.947158888 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.946416914 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.179337576 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.3172514 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.724544301 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.937248709 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.939990401 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.96597723 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.100762959 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.997909625 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.952434578 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.926323453 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.328292349 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.928511977 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.940127923 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.95961347 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.940804667 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.508575462 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.247886983 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.057606926 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.938292463 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.134038201 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.921951194 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.246168977 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.434084647 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.330427694 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.973200372 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.28083511 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.276517936 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.632939247 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.152493215 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.182177485 seconds)
  done (took 75.524749941 seconds)
done (took 837.614002026 seconds)
SAVING RESULT...
DONE!
