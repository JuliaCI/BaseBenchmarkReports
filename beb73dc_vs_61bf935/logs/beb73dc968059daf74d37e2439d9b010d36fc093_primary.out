cset: moving following pidspec: 19657
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.537221318 seconds)
loading group "string"... done (took 0.606052487 seconds)
loading group "linalg"... done (took 9.940276623 seconds)
loading group "parallel"... done (took 0.186927332 seconds)
loading group "find"... done (took 4.150248157 seconds)
loading group "tuple"... done (took 2.197994033 seconds)
loading group "dates"... done (took 1.511546545 seconds)
loading group "micro"... done (took 0.216190061 seconds)
loading group "io"... done (took 0.605474201 seconds)
loading group "scalar"... done (took 55.40966746 seconds)
loading group "sparse"... done (took 14.563794181 seconds)
loading group "broadcast"... done (took 1.456635233 seconds)
loading group "union"... done (took 10.195057486 seconds)
loading group "simd"... done (took 3.44653744 seconds)
loading group "random"... done (took 13.724253134 seconds)
loading group "problem"... done (took 2.613337492 seconds)
loading group "array"... done (took 26.32540821 seconds)
loading group "misc"... done (took 1.321870051 seconds)
loading group "sort"... done (took 4.049672029 seconds)
loading group "collection"... done (took 21.817022124 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.942875906 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.170837437 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.244900626 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.281074361 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.349023993 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.186126322 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.189994133 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.289409429 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.826191375 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.245726011 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.181334372 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525824618 seconds)
done (took 7.157116837 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.305534454 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.069022395 seconds)
    (2/2) benchmarking "String"...
    done (took 0.219756926 seconds)
  done (took 0.949819875 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093396095 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.225690432 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.122639967 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.136339684 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.136489284 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.141231158 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.121892037 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.135950598 seconds)
  done (took 1.686083964 seconds)
done (took 3.700986417 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.589533767 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.955184246 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.592312123 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.209144962 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.418362 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.408252265 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.326480972 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.257703511 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134276922 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.098178198 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.226854965 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.481373504 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.550585657 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.071478224 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.080256854 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.127783358 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.188701999 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.826577318 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.099291258 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.133193893 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.654731234 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.272748022 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.130530635 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.11453796 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.218550487 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.142320472 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16391414 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.111074529 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.691223095 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.157838857 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.244110023 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.101457455 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.164395766 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.194361587 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.27963563 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.125051447 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681869112 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.22090351 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.120807541 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.123419535 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.693952283 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.242202587 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.269209863 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.129891936 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.10087882 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.16357108 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.136520433 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.109904549 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.114149711 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.123966043 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.176637825 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.489423481 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111951597 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.252505085 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110708073 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.715326021 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.116291674 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.301577386 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.154890158 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.125176812 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094138507 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.125649358 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.169982231 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.116277007 seconds)
  done (took 22.544308184 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.233245722 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.234650579 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.112378956 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163349543 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.171180079 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.114450239 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.10403809 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.11160686 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.138276313 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.229500553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.1689571 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.255371092 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093960971 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.123199186 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.207577514 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.278908233 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.133854731 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.145531216 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.108077292 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.129293676 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.162388876 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.12107175 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.129669632 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.131313625 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.195229785 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.223531289 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.127666095 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.139805278 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.120502614 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.121304881 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.160384641 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.185333694 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094877498 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.121519015 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.22453393 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.139865551 seconds)
  done (took 6.342515693 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.296594979 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.139602879 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.342681357 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.244407407 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.188624964 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.250756678 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.226248394 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.367056034 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.650898483 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.203040555 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.24018613 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.148643064 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.135506129 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099269607 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.116442391 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097707606 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.034676477 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.185495586 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.218299478 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.235898434 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.16047299 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101953188 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.39298964 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106931196 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.127972698 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.14330754 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.075049138 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.302675082 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126751384 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.609675714 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124377758 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.149530956 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.104265493 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151557331 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.229330489 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.151833065 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.167750941 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141781158 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.111410606 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.280958284 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.137028668 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.112348574 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.097559962 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150816944 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.148660385 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.137966916 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1659211 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16067553 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.126629651 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163049435 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.896093141 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.219420989 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.202252675 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.12771666 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.357504191 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.153882347 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.151891242 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.121229383 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 3.34787657 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.16025739 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102607671 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.112064739 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.125023511 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.113575476 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.497711197 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166577188 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.216775541 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.114087483 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.205709399 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143076854 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.153675827 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.120069668 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104221983 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.121389599 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.136325995 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.119843382 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.126755504 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098772267 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.125709421 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098686921 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.129742756 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.132016718 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119162709 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.114306365 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165692579 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.138930237 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.137834427 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14475486 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.130723327 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.110826314 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147054664 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115123229 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.112818327 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.244196765 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.133201715 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.149811508 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.145033666 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.160884914 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.127595416 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.899772171 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.102206712 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.165796503 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.117726074 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131199575 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.143579571 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114190359 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103411055 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.113649927 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.100125931 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.179983712 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.114051025 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.11453768 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.113747566 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.131331505 seconds)
  done (took 33.45502211 seconds)
done (took 63.004694034 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.506496741 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.118982868 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.119665287 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101737309 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.118129128 seconds)
  done (took 1.710158184 seconds)
done (took 2.424781392 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.389596889 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.230101258 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.146229559 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.228008394 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109954066 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.229449499 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.203656555 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.141295482 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.250402164 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.120632728 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.226801397 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103776325 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.127739708 seconds)
  done (took 3.25505031 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122715466 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.143445197 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.123433084 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.138942389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.103677779 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.138125176 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121495687 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.14301672 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.12058817 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.131289252 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103235614 seconds)
  done (took 2.105033189 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121257319 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.141849393 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.111063006 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.134669709 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.10527037 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.134596864 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118300658 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.142925158 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.120294137 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.130127581 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104805995 seconds)
  done (took 2.082664633 seconds)
done (took 8.149935966 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.708110577 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 18.533765922 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.234599036 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.29888291 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.404589019 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.38659553 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.125680018 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.263312394 seconds)
  done (took 23.856498373 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.258568566 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109653958 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.132198515 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113625482 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.132905379 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.109771571 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.126317879 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.129566267 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.109780161 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.125402469 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.110561126 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.129757143 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.110241882 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.124868462 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.115231972 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.129480012 seconds)
  done (took 2.846741754 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.158051174 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.156601269 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.1364603 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.121676227 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.132506864 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.119597541 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.140975539 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.12002483 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.130801689 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.129550343 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.124216913 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.136129392 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.119414627 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.130975454 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.120217243 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.156062444 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.115098365 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.137652421 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.153750068 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.120061077 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.138404751 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.118549991 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.134762808 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.135367424 seconds)
  done (took 3.998173371 seconds)
done (took 31.418665601 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.20155936 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1058291 seconds)
  done (took 1.030967835 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.222311161 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.222972768 seconds)
  done (took 1.176206695 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.136998007 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.124506056 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.166618883 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.126965657 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.124430768 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.11322634 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.160296362 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.125291142 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.110089418 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.126712064 seconds)
  done (took 2.048382689 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.113271667 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.129735073 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.127044577 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.245066289 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.1218201 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.129693308 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.115708848 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.129466813 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114781495 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.124412609 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.116043388 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.148590823 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.131396109 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.136476852 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.128937136 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.131443112 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.12193478 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.130592375 seconds)
  done (took 3.128285727 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.1078619 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.109609819 seconds)
  done (took 0.949648415 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.114725343 seconds)
    (2/7) benchmarking "second"...
    done (took 0.123011802 seconds)
    (3/7) benchmarking "month"...
    done (took 0.113082048 seconds)
    (4/7) benchmarking "year"...
    done (took 0.127485695 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.10803832 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.123764622 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108668917 seconds)
  done (took 1.555575887 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.736793345 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.208222428 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.514550977 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08620349 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.136406452 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.399089996 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.135126401 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102918814 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088215338 seconds)
  done (took 3.188193484 seconds)
done (took 13.803491422 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.110508676 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.752141456 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.800184228 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.150182855 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.108092586 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.178902429 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.584105004 seconds)
done (took 3.424492528 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.388290159 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.210317667 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.091111586 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.109041869 seconds)
  done (took 1.534768632 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.100736413 seconds)
    (2/2) benchmarking "read"...
    done (took 0.13572522 seconds)
  done (took 0.980934447 seconds)
done (took 3.265753837 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106729773 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.147660746 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.105409564 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.124960304 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.106146878 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.124691973 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106873786 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.122223643 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.106247171 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.106289354 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.121284767 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.105455659 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.121533262 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105390707 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.121206754 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104599963 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122226995 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104762693 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.120852659 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104478999 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12144624 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106190878 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.121574608 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.105776789 seconds)
  done (took 3.526282288 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.133945804 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.126209765 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112840257 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.128428133 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.111964797 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.128153308 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.126962514 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.109583488 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.127777562 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.110640955 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.128104838 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.111802904 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.124013186 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.113710829 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125157745 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112749115 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.128910317 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125052495 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110170225 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.128621873 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.112804638 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125669682 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.112977355 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128911574 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113320277 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.130453531 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.10945931 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.125008285 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113161666 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.130224172 seconds)
  done (took 4.373460131 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.115212486 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.12060109 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.109327451 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.134221538 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.104982764 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.10674479 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.121878976 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.106753729 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.125290444 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.106254993 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.125920272 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.106467659 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.123888101 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108378656 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.124553548 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.110372555 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.135555995 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.10652451 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.123591345 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.108618282 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.127919758 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.107114808 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.124101885 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.105981983 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.123547485 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.10443877 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.12236123 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105575506 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.122201294 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.106581081 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.12500633 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110469914 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.106489101 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.134602172 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.126930457 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.107608516 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.130858819 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104994707 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.124748685 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.1046983 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.102906801 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.122090246 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.106551538 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.130091403 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106804294 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.124225155 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.106491894 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.125074984 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.106591767 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.125558215 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104275691 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.123501809 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.109332548 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.12525713 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.110152415 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.122264361 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.106957735 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.120663808 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.110291609 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.123408012 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.105071742 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.121165477 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112832365 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.12310518 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.127638019 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.131510438 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.105971087 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.126308939 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.10958712 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.130350235 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110136701 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.136989348 seconds)
  done (took 9.155289021 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.136562757 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.134560059 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108083158 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.125040342 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107041406 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123788227 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112743806 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124034348 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108923628 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131399042 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10732531 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.126094736 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107579043 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.125712215 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108652224 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.125091815 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115018467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124052926 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.107052091 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126464056 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10791966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130044819 seconds)
  done (took 3.374156378 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.315600539 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115898258 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.190194926 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.142369431 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.133545613 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.142389127 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.130424057 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116120353 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13056388 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.120342468 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.136828154 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.129755257 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.133497493 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.138347691 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.135841157 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121080621 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128909759 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.122317509 seconds)
  done (took 3.335890478 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.123486932 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.125456456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.161531505 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.128546305 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.108513729 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.126752082 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.132382826 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.13310275 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.1276816 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.109966707 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.135199316 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110271285 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.126797619 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109896378 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125782964 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109695095 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.126730291 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110234618 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.135466808 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.132844477 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116998328 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.135890744 seconds)
  done (took 3.510189529 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.126147396 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125648799 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.133594224 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.130765511 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.108508072 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.128661124 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116625584 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.127482412 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116923178 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.127863326 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.126919003 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110582218 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.142435152 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110127761 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.134614324 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109928294 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.126736228 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109957348 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.126448482 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.109055628 seconds)
  done (took 3.205274009 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.259188406 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127323803 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.145121876 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.156189414 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129508089 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.144155622 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155187332 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12896207 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.143829114 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.159844 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.131226464 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.145551819 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137862085 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.152463312 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.145124251 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138903558 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.153977611 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.156375542 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128778667 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.143416143 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163000756 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127631733 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.154696977 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.144296282 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128359968 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.146368403 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127982337 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.151372951 seconds)
  done (took 4.890042442 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107973856 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107357158 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.124701542 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107328313 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.124688202 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.107927761 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.124047688 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107733323 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123190317 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107009697 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.124311059 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.107600345 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124480005 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.110041996 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.123394812 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.109171983 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107965615 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.123851224 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108283323 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123696736 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.108264745 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12450892 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.107330059 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123628081 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106919812 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.124817758 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107429443 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.12389711 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10730359 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.123526044 seconds)
  done (took 4.224134298 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.126358667 seconds)
    (2/2) benchmarking "in"...
    done (took 0.142454428 seconds)
  done (took 1.02948259 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.116339655 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.142979704 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.107226415 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.124436495 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.116761426 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.126232254 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120043128 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.134939855 seconds)
  done (took 1.751973767 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.224437549 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.228277702 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.115242448 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.141442847 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.227327023 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.218454735 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.174384257 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.113606067 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.1272724 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.101316166 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.239716657 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101663068 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.126504216 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108770256 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.129231169 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118424766 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.127150806 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.120052138 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.134622845 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111270364 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132795169 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117927356 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.132048217 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.140881951 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105845304 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.132278623 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.115161851 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.142036358 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107865672 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.131944921 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108813348 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.127966134 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.113809654 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.133725873 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110269469 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.225971822 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.140349062 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.127418507 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111511666 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.133962427 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.147213832 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.128702679 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113400873 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.127996235 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116919547 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.131796997 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.115856702 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.127887283 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101853106 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.125311885 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.110513494 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.123288234 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110961387 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.129905416 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.12972795 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1204429 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.129479664 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.108348136 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.126374869 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107165793 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.127595276 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107051113 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.133553646 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.114329553 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.132894204 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.113364835 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.130804553 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.128191022 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.113833749 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.112217064 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.128789771 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.147127718 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.11536509 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.134812604 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116840835 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.130314476 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110320314 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.135085614 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110500504 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.131340934 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115384506 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.160604571 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.13479675 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106619634 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.124218869 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.119145319 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.129036032 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.114042435 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.120542773 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122404951 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.131233728 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.112849826 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.12140671 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109600809 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.125120869 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114525527 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.121303345 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111779996 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.127561752 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115813471 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.134470172 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111889299 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.133328338 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116447 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.13424242 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110442536 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.230005995 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108840307 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.124848069 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.113562067 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.135966522 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104890852 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.128943353 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.109429558 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.127103314 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106719716 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.133748852 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.114884232 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.130147137 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.116074118 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.133224134 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.114720734 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.131048369 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110437856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.125480482 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.115305445 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.140194504 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.114384239 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.13122849 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.111150098 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.130479302 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.1132174 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.133454331 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.113843038 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.135967081 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.127200882 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.111277209 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.111793686 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.13399588 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.130754755 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108122898 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.128754851 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.115611979 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.130225639 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.114356721 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.13149207 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.107155525 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.123174742 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114376137 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.126181689 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112569273 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.140330974 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.107988662 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.131710045 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10801611 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.140583241 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.127265764 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.118038753 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.130646362 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.117982182 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.135432167 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104151582 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.126606743 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.113830746 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.132316477 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.108298827 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.130535803 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.111848161 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.137046827 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105122167 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.132708775 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103868096 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.129531766 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.11761803 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.13006193 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.114685883 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.125690005 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.154729592 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.144141305 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116814925 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.130866082 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.130755315 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116349433 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.129439225 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.115054366 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.134409341 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.11804427 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.12748332 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110910054 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.133990642 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109624904 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.131576438 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112184796 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.132724141 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104966421 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.131610102 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104593468 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.132911665 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.115573356 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.137228623 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.118394665 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.131152851 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112700365 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.140503342 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108283184 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.134370788 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103786592 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.135858966 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.122673142 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.136541386 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117578708 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.132348604 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.137437798 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.114728975 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.139472973 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114170105 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.13028675 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113373286 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.124380132 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105616224 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.135773481 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.11440121 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.125009751 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.111235584 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.133070553 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119340874 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.127889098 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105563913 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.134118801 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116182302 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.124769079 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112996213 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.126032787 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110772327 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.139111475 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.120661713 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108031685 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.133030394 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.116609451 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.126777086 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112418276 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.131392686 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118547198 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.13131628 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.114570226 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.127319822 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120050951 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.127875968 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111127888 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.134750655 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.114116048 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.123265884 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.114360073 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.130385924 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110378212 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.127143054 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117257439 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.136176954 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.119582455 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.128981416 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.116362842 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.136387735 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.117832302 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128040723 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.117025147 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.125859022 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104264516 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.12751391 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.103403442 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.131042781 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107754415 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.133466204 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.111019634 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.129100705 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.132743137 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11864749 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.127588152 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.118913794 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.149222258 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106208128 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.122733345 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11085439 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.128990006 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107791361 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.126841479 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.11201145 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.131796369 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.131890026 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116064899 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.126030901 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111308358 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.135027297 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.108529932 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.136097754 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.118733046 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.13466475 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108020929 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.132254877 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.109351545 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.135180947 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.105031374 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.12963555 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112062924 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.131199226 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109893793 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.129266718 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107328383 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.122557205 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10854851 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.137416497 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.128591701 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.117136823 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.129757981 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.110335609 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.126491923 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109866974 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.135264058 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.111792149 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.136298896 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113034696 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.123120056 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105827494 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.13545249 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113751477 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.136567855 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.108137565 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.133486668 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119141478 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.13474842 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.11347679 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.139974434 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121432062 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.13628884 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120024062 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.124182691 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111074739 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.136892408 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.112858276 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.133261569 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.114519032 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.124834589 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116826588 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.13728743 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.132185385 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113098739 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.124220965 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.114441508 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.136120522 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.116425559 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.116476753 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.132886661 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.133011188 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.108779336 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.132490801 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118689395 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.130684915 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121536335 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.132062743 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.115870251 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.128470946 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118696029 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.129836762 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.106903609 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.123863167 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.111160155 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.136779684 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.106284954 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.134504954 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.118136531 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.127834761 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.113935159 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.135653144 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.10847832 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.134873366 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116827287 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.12958247 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12404671 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.132038788 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.111484009 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.136137633 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.116435268 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.125726463 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.113102023 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.13250861 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120674982 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.130732826 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.116324569 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.13241607 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.135735418 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.115820804 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.134595258 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.117992658 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.137038236 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107314414 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.137382763 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117773426 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.131647886 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.11035719 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.129593854 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107582187 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.129460597 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.120685179 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.130010667 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122496443 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.137258516 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.111618105 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.129110762 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.11961535 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.130097898 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120128335 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.127349434 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116065178 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.125882907 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.116992671 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.131060382 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.137415799 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110403494 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.125377885 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.120238684 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.134796122 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118137439 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.133600928 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.12035036 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.123544132 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.107360441 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.1330892 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.1115894 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.142616739 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117276296 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.130096153 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113321952 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.133520401 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116780353 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.139176428 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107640714 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.128920025 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114723458 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.134665099 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113195191 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.1267796 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.116245927 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.130696508 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116743268 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.131687486 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.107147844 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.131568128 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.139358364 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112779914 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.126122743 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.1118798 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.139148421 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114238969 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.127390012 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.1074527 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.140212592 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116793972 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.140651754 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110014269 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.134076058 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111247317 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.133914305 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.120766125 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.128871136 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114835762 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.129715238 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.118714607 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.138271214 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.124210558 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.111799273 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.144237336 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117728239 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.13421141 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.114996607 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.134548325 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121044303 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1387439 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.115256835 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.125574837 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.107992713 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.130755175 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.107410307 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.135962262 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120016518 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.132287772 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.11068733 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.136520154 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116693541 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.135055442 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.115407832 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.124216075 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120108221 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.128393981 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117176493 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.124947732 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.105070414 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.133923385 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117694785 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.131479499 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.114779051 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.133559023 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.114790225 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.126752571 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110583685 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.136875437 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117159591 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.136237646 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130486356 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.113854213 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.136017366 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125862584 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.131742172 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.11440561 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.143030689 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.119471198 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.132818147 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113595172 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.136384243 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.120354411 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.134612998 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119743858 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.129754279 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.114135115 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.139526751 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.121197744 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.143657026 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.131979283 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.107617945 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.134131513 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111877705 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.125299244 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119538944 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.140231519 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121346506 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.133946782 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110923743 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.142592085 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121778755 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.133686972 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111259888 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.130656699 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.11697975 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.131011771 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.115817381 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.130022749 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.120499611 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.139864643 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119444379 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.141297857 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.125351624 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121417465 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.134657067 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.121836513 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.132525652 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106930287 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.126304469 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.11630641 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.138965856 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.119279903 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.134148134 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.118308899 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.134475062 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11646956 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.133540935 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112545806 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.139236351 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.118859319 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.132190832 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11725241 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.130904565 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116454963 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.132450502 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.120457147 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.14007305 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.116851451 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.14519472 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.119870411 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.134080807 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.110584104 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.134239836 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.11559361 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.133849982 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117197026 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.129998305 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106891106 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.138612878 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.120773389 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.132626781 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119999058 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.140390688 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.131837087 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117851439 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.139999856 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.118267973 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.132202216 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.119450106 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.136400725 seconds)
  done (took 75.150107358 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196259106 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122741795 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132706541 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117037509 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.159979562 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117717065 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13352529 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11701055 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.13681251 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128364298 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.133827912 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115268359 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.154681612 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.163755322 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.158833047 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130071708 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133702198 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.117403058 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.134570395 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11686102 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.153631757 seconds)
  done (took 3.686751227 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.137353988 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.151389084 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.148566308 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.134406896 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.143917464 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128801714 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.148804677 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.149587249 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.150831332 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126250901 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.152959535 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.129495308 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.144618041 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.146028346 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126888482 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.144524734 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.151096938 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125094609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.150613216 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.150020893 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127955588 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.14971862 seconds)
  done (took 3.931975428 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.148205858 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.136282274 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.116113578 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11515801 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.138574954 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.115331147 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.13851524 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.116719801 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.145596238 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.110022999 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.126083212 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.11067392 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.132897208 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.116169521 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.130818451 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.116096956 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.145875534 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.117416957 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.140400257 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.115413559 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.126363974 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.116720429 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.136242954 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.107817132 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.139416612 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.121093192 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.136698459 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119101388 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.124607117 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.118433356 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.368103793 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.111433095 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.125889752 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.10601837 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.124529244 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.119079948 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.136603893 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.116129432 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.133976814 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106042745 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.135124725 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.119898348 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.126010577 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.11599443 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.114798537 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.128188019 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.117948797 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.134926236 seconds)
  done (took 7.036181696 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.152338855 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.180457654 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.142118282 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.166112604 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134579823 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.148933953 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.119766068 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148261591 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.139361717 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.119298062 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.156023263 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.155221065 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120355738 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.14487855 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.142031958 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121744113 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.141335082 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.118926645 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.144071394 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.1192065 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.144826238 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122429744 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.152321814 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.152124722 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122360113 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.137681754 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.136829411 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.124882501 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.152882639 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128580806 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.144399996 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.144594085 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134201214 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.144287273 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.119072334 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.140290187 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.155508602 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120239243 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140765038 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.119177027 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.140255405 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123828596 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.14163505 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.155410964 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122222805 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.141269082 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120020919 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.136313563 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.152388303 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121996868 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.148976975 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.153676735 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123894038 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.140078986 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.125780659 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.152804208 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.139694929 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.119111515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.141483914 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1327636 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.138824148 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123122291 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.155564266 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.141926009 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.128601968 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.15371403 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.142663603 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.123432107 seconds)
  done (took 10.369027165 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.156282094 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.146171032 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.155385891 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136955335 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.14494413 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124466247 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.145039743 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.142899178 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125162494 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.152115643 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125758729 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.316061282 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120945269 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.155454545 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.145951171 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124973784 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.145759178 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126219961 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.144855082 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.145319597 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126851885 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.156874488 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.125529231 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.155113161 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.160945187 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.140411081 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.126010438 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.144990784 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136321595 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.146223483 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.160371301 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125073168 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.145490778 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.155890843 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140636529 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.147976568 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118518563 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.145214207 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.14674366 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12629106 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.141070802 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135724941 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.145602315 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.140926441 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.127109669 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.146818391 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.136524484 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.160870177 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.153360703 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.150621947 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125664095 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.15682979 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126204876 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.144513908 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.156725726 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.16783489 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137451208 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.156583319 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.145578708 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.136990395 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.156098971 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.167176356 seconds)
  done (took 9.858673649 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116363331 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115025102 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.13530317 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116173922 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.136594954 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115664988 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.135584979 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116106804 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.136322224 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.115877794 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.134223982 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116660645 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.134669499 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115801598 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.133287899 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115855096 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114633712 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.13636329 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115116105 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.135048039 seconds)
  done (took 3.320026521 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.126829746 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.158391092 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.118445579 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.147136797 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.119267262 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.146616479 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.11828222 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.14027978 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11940422 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.13935997 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.151773281 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.131483271 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.140312116 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.127101637 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.149447356 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.146076747 seconds)
  done (took 3.009753545 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.141129609 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.160210457 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.251067821 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.142790784 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.1197565 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.147153768 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.120045783 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.140817837 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.11877069 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.146753648 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.125612831 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.143769679 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.119821103 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.140534561 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.119755103 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.14357161 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.117180613 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.143387508 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.120018614 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.271155152 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.125816488 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.143123647 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.121712894 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.145676556 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.122278748 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.145407038 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.125664863 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.140194643 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.121720227 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.140142752 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.121605198 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.147127229 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.138065392 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.125995143 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.138633761 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.122267643 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.139089894 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.120415453 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.141727171 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.12039883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.14046891 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12154737 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.139371424 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.124243942 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.137184973 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.121632228 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.140006631 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.126433326 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.142491723 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.122157014 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.138674757 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.124903663 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.144633825 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.128498812 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.146639387 seconds)
  done (took 8.411717859 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.132347975 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.141774453 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135113202 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.136970281 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120657801 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.142856295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122358507 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.141966168 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.123769091 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.137603392 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.122064475 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.142219552 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121541154 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.142123939 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.12198297 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.141536015 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.116751229 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.141039164 seconds)
  done (took 3.221584184 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125456736 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.138692846 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.12499704 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.139262612 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.119610113 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.140011869 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118935725 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.138029284 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118525477 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.119233318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.13901684 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.118904715 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.138802008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.118598741 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.139972967 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119826411 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.139768821 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117388531 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.141291152 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11800956 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.14014757 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117948728 seconds)
  done (took 3.670454532 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.144239502 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.257532051 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.159756349 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.274798562 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.136770116 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.115434652 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.158290241 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.115222543 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.168170058 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.13434341 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.116394759 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.135130731 seconds)
  done (took 2.756841216 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151949699 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185479523 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120649211 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141410511 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153646703 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128252552 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147216765 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126693904 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.159327035 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162864915 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127097517 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.158532171 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15852379 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.157895568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13311183 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15354697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126221498 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147838632 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14090004 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14836768 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147249452 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157434126 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126385764 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.146925737 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127296216 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.158445149 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158655999 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.162640515 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126283168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159459104 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132346578 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146943896 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.160775822 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.162277969 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121739713 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.159674774 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127417739 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.168301919 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153949535 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.157977561 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123034919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153372576 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139660567 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.153624983 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159639924 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126720444 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.153473567 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14733375 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126639079 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.178872607 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153500177 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.157371339 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134486864 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159071625 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15905612 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176668835 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144971857 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.158504165 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154344417 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143682936 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15929798 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.154685313 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15779765 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143910619 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.154749079 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159010863 seconds)
  done (took 10.668597173 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169670808 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.142854619 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126825904 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.162860654 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.158140431 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147912525 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127354184 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147877115 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127407194 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143342251 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202598668 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127432057 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158685332 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.159073022 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126743771 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.146450606 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146141908 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138738872 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142786523 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.178244734 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127722108 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.159972158 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.159742171 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139996154 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.163467366 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.155062176 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14670853 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12817852 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147160054 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127926323 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.155705065 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128204013 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.160463631 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.145025914 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138898808 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147869642 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147103064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135359601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148702988 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133506712 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.158539993 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.170251678 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147325579 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129039594 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164562687 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147023235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128935321 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142929349 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130512128 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143252016 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.163917702 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144709464 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166546947 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.160211574 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127590806 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.148457915 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147976778 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129136324 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149347134 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134969747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.159418736 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150146118 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.180116969 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12900579 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149038855 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159678266 seconds)
  done (took 10.591078237 seconds)
done (took 198.800638689 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.236316853 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.25288516 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.232403297 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.199322833 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.112673895 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.147861191 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.168814553 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.234956066 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.132182102 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114364403 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.132077271 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.116747807 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.201998802 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.111683685 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.131110737 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115853489 seconds)
  done (took 3.485214775 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.219021078 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.427890376 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.15386363 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.116793902 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.141583298 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11719563 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.137200268 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.119274525 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.137785887 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12853059 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.137892814 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.113125279 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.149823801 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.132843778 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.117865966 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.136327602 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.1293668 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.138232244 seconds)
  done (took 3.612250273 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.151456551 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.180953319 seconds)
  done (took 1.186732614 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.153183447 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.249337014 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.373597858 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.202376992 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.137876541 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.165713811 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.205726999 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130972311 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.230182623 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.159593619 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.159241549 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.114677222 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.167570262 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.148237705 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.137645647 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.135002294 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.149779801 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.155809688 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.151718804 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.123025281 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.170458548 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.12149925 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.148958887 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.156031853 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.201001608 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.157520799 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.143561063 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.121999243 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.144266949 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.132252502 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.149708912 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.165043264 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.15698777 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.224988596 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120527757 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.239329247 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.125817885 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.142162841 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.133131455 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.13957557 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.143945609 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.125238622 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.153271515 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115093896 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.143177495 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125603193 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.142237851 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.140048187 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132171067 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.14733361 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.131507645 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.148623648 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.217799973 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.146646791 seconds)
  done (took 9.412699199 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.098757391 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.190277758 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138143056 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.293379906 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.163692184 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135515208 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.098565257 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.166534794 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.322730286 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.106625081 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.160761365 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126042355 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.358903042 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.347738564 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.625382459 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.488178001 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.933371556 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.154992125 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153165636 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.195815473 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148177712 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160777149 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.140164402 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.555408897 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.140911704 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118856385 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.148483476 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.148612055 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.223924076 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.117793191 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.146442505 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.244916201 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.382099777 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.271862225 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140326783 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.13724783 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117786416 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.229472198 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.380147993 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.307957039 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.227061626 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134620611 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117444683 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143744118 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137645087 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.135219919 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.223337618 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.256267575 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.237135882 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.124463872 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.148404766 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148484943 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123242976 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.219338855 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.136383894 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.487631214 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.485960889 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.137434796 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127269885 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.151827478 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.379614335 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.118675776 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.334759469 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.167946566 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.307053921 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.137921659 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.102918186 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.251806672 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118913795 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.14446879 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126112546 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.147801896 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14515114 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.198283943 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.533350225 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.14583307 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.145714549 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117601757 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.309369928 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.119184918 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.138313329 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.226888628 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139577456 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126798666 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146822371 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126092222 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.253592094 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.338654238 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12425819 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.146189191 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.145783482 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132392814 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.141391932 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.297543633 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.322765695 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.21852318 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.312054137 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123296126 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.244689775 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.233344547 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.143881774 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.234095342 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124681708 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.152204202 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144442949 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.320624571 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.186641192 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121003027 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.144930162 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126457073 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.189165116 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.144886092 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12795866 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.254063942 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.628454848 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.228551899 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.135134573 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123273567 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149405521 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.223851441 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148657452 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.369846892 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12907661 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.24958942 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124997879 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.136740573 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126958254 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.241652238 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127660438 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.148001852 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122839503 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.152251554 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.348236951 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.309047959 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.147737083 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.335953196 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.230162159 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125670729 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.237292885 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.149307534 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.231513589 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.153356023 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122490577 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141734224 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.098009949 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.153990183 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12758899 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14722382 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.240165317 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118991668 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.141351844 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.120436335 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.135491462 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 1.080750561 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.145122924 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.115490315 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.141438587 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124065637 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.148692372 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.149522576 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126695022 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.241815457 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.341614042 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128870368 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.146095114 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.117831813 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.242978733 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.1211601 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.141081767 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.119938926 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.139839011 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127582705 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.14816074 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.121758849 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.255509238 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.218887682 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.325035398 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.740375156 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.117965839 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.142142586 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.338210746 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117907662 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.46554726 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129594413 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.331071221 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.250090043 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.114684695 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.486722857 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.249764093 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.217964659 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.144470886 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.235355907 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.135696096 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.127802705 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.240932873 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120015402 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.149031312 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.220956799 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14945874 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12755812 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.618692433 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.140692611 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.316983955 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.135513322 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.23394197 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121964113 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145693597 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.444980468 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.139812192 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132859214 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.240690384 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126609955 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.140036453 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.747400001 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.140072212 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131586706 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.145957597 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.327213886 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.227374654 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.149887217 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148512391 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128934902 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.22290984 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.312873865 seconds)
  done (took 59.033711411 seconds)
done (took 77.579477602 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324385733 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.227100667 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.499590206 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.21014474 seconds)
  done (took 2.226731067 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.343341566 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.19623068 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.296571512 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.137702846 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.305143133 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.138025374 seconds)
  done (took 2.300203888 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.242916574 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.199466985 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179718245 seconds)
  done (took 1.503461509 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265297074 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246447331 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.391058109 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.313577516 seconds)
  done (took 2.201549373 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.33555538 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.161741866 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.145939089 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.297616757 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.301107843 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.279132004 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146293743 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206372542 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.171678745 seconds)
  done (took 2.977893907 seconds)
done (took 12.096607467 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.465854352 seconds)
    (2/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.132455321 seconds)
    (3/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.252413663 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.33549825 seconds)
    (5/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.319842139 seconds)
    (6/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.388763753 seconds)
    (7/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.372798804 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.25696005 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.489997785 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.136124992 seconds)
    (11/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.427599418 seconds)
    (12/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.131741892 seconds)
    (13/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.429071113 seconds)
    (14/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.123822031 seconds)
    (15/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.15866864 seconds)
    (16/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.12336897 seconds)
    (17/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.236354288 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.275929362 seconds)
    (19/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.273605952 seconds)
    (20/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.087670018 seconds)
    (21/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.169382573 seconds)
    (22/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.194875061 seconds)
    (23/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.196810083 seconds)
    (24/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.29651522 seconds)
    (25/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.119388716 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.149732588 seconds)
    (27/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.317377022 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.316553732 seconds)
    (29/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.151800868 seconds)
    (30/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.215928226 seconds)
    (31/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.200918916 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.095830412 seconds)
    (33/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.087394703 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.161307314 seconds)
    (35/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.286052857 seconds)
    (36/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.13834371 seconds)
    (37/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.254714304 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.462304249 seconds)
    (39/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.198280591 seconds)
    (40/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.097586781 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.163332223 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.142495076 seconds)
    (43/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.237826123 seconds)
    (44/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.234023265 seconds)
    (45/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.180343184 seconds)
    (46/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.141535596 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.130191067 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.258102025 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.152082119 seconds)
    (50/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.147858327 seconds)
    (51/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.332469513 seconds)
    (52/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.307158962 seconds)
    (53/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.282741332 seconds)
    (54/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.221043612 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.141931876 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.148549547 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.35478513 seconds)
    (58/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157496843 seconds)
    (59/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.119882702 seconds)
    (60/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.205840142 seconds)
    (61/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.112258618 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.106370091 seconds)
    (63/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086971465 seconds)
    (64/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.247927477 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119735547 seconds)
    (66/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.154354335 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.159725898 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093236438 seconds)
    (69/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.101835086 seconds)
    (70/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183338817 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.137970408 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.151629408 seconds)
    (73/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.096476793 seconds)
    (74/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.132789372 seconds)
    (75/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.175374257 seconds)
    (76/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.168798491 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.120776531 seconds)
    (78/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.154193839 seconds)
    (79/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.226770946 seconds)
    (80/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.122402157 seconds)
    (81/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.176624416 seconds)
    (82/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.16310014 seconds)
    (83/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.098992267 seconds)
    (84/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090684227 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.144907324 seconds)
    (86/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.096817689 seconds)
    (87/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.089941465 seconds)
    (88/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.195049315 seconds)
    (89/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.101054052 seconds)
    (90/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.162837816 seconds)
    (91/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.096933276 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.096234584 seconds)
    (93/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.111678308 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.12034575 seconds)
    (95/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.160987092 seconds)
    (96/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156901586 seconds)
    (97/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.153573928 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.123024095 seconds)
    (99/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.165256001 seconds)
    (100/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.161554692 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.249110938 seconds)
    (102/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.090056424 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.142785616 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120589426 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.137760256 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.132821918 seconds)
    (107/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.157105453 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120507154 seconds)
    (109/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.195912134 seconds)
    (110/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090484272 seconds)
    (111/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.095857302 seconds)
    (112/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.112723203 seconds)
    (113/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091533776 seconds)
    (114/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.146408213 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.119478532 seconds)
    (116/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091145249 seconds)
    (117/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.097588178 seconds)
    (118/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11809288 seconds)
    (119/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.088788735 seconds)
    (120/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.096256304 seconds)
    (121/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.179346969 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.123416602 seconds)
    (123/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.09736301 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.11879688 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.133078795 seconds)
    (126/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.139972059 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.120888138 seconds)
    (128/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.112555025 seconds)
    (129/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157440203 seconds)
    (130/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.090602932 seconds)
    (131/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.116464251 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.118945364 seconds)
    (133/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.143766117 seconds)
    (134/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.097521758 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.119557313 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.166430102 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.143326606 seconds)
    (138/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.196115512 seconds)
    (139/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.130265447 seconds)
    (140/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.185589732 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.120483269 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.143603596 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.12970574 seconds)
    (144/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.155023834 seconds)
    (145/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.093966418 seconds)
    (146/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.112175787 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122517745 seconds)
    (148/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.175184917 seconds)
    (149/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.186956037 seconds)
    (150/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.098023569 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.140312746 seconds)
    (152/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.097454782 seconds)
    (153/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090931954 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.181222906 seconds)
    (155/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.13253529 seconds)
    (156/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.088515865 seconds)
    (157/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.147823407 seconds)
    (158/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091717529 seconds)
    (159/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.1197389 seconds)
    (160/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.122557065 seconds)
    (161/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.088156531 seconds)
    (162/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.156405644 seconds)
    (163/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.235704624 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.11985302 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.143922981 seconds)
    (166/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133443505 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.157713631 seconds)
    (168/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.135533855 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.094550781 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.165151239 seconds)
    (171/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08831982 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.096511016 seconds)
    (173/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.111962142 seconds)
    (174/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.092960565 seconds)
    (175/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.089238373 seconds)
    (176/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.113833679 seconds)
    (177/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089399497 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09784673 seconds)
    (179/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.093959365 seconds)
    (180/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.117101065 seconds)
    (181/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.089896418 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.163651817 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.089638564 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.122227833 seconds)
    (185/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11984904 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.12176744 seconds)
    (187/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.145854162 seconds)
    (188/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.119624081 seconds)
    (189/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.097557588 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.144258988 seconds)
    (191/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.13097727 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.144890213 seconds)
  done (took 31.920188385 seconds)
done (took 32.806648109 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.306314372 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.115771845 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.158022818 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.130833607 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.2725994 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.163746102 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.168384192 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.13447136 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.163213632 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.13033047 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.142580701 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.14299465 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.155857459 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.269898847 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.15947405 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.123182354 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.143821571 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.140756237 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.165688737 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.146468486 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.271022453 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.146649235 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.140186122 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.144622092 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.275487267 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.145088701 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.131372433 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.157120609 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.142688536 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.154705846 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.131922711 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.144441901 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.144230841 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.168311068 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120063871 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.154006176 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119088398 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.119684843 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.130892274 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.155158557 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.142756911 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.154658494 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.134137169 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.145574378 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.153386335 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.130310146 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141546072 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13835663 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.142305317 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.134251848 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.144483387 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.146146448 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.151612925 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.120914468 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.143604645 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.123956754 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.163776064 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119806576 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.166682718 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120294417 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.147068632 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120084195 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.156577663 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119956176 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.153388709 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121747536 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.153654945 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.131767804 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.152464151 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121700951 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142929768 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.128877003 seconds)
done (took 11.828693929 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.126721631 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.193572171 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.279113357 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.272460835 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.183884696 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.168606147 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.134442445 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.172045622 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.134353467 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.163589029 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.189290761 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158582387 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.277407833 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.164475454 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.168546294 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.132750611 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.156030386 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.133994134 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.295375132 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.149373674 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.172791875 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.139838104 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.176065825 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.160852089 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.12564426 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.189863739 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.131101308 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.155813111 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.146837737 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.136141405 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.173269241 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.125758031 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.15465591 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.145159381 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.165944426 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.134467588 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.167662103 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.156271618 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126329403 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.148920474 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.135603278 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.166967182 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.125350787 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.167567818 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.155765059 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.141983349 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.155660018 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.139654421 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.150343001 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.133304871 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.150139414 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155214849 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.165111918 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.167241309 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.140126478 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.163247994 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.138675036 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.161007276 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.131092787 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.16124327 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.125796025 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.148791477 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127754374 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.176523634 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.154753339 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.138208078 seconds)
  done (took 11.489708922 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.15133356 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.185743522 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.158580291 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.136929354 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.160872552 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.117553007 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.142266834 seconds)
  done (took 1.989871617 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.120351757 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.28433071 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.283636138 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.311529699 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.284238729 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.296849062 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.171438002 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.120276817 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.184362062 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.158253574 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.287233663 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.320824457 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.158091822 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.161522146 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.290615518 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.119365668 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.315161236 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12230885 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.160390648 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.289509441 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.163973715 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156756177 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.163718514 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.121060576 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.275584416 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.146718867 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.370370073 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142584472 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.155060431 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.136368109 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.163403321 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.241584631 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.281566322 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.160076641 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.129108108 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.283403846 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.305142784 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138886306 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.301564815 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.151434272 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.281099363 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.162099174 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.139429183 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.161884204 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.137619945 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.291280826 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.146236334 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.164608362 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.136361824 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.289691866 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.16003306 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.282761306 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.159790152 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.137165208 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.159614362 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.137845322 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.169157893 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.163256794 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.2923964 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140894593 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.310095858 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.288530057 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.284350824 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.28899918 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.175645101 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.287274939 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.273108962 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.162131721 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133841531 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.164686445 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.289211847 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.162676832 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.136408408 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.2982491 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143613793 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.287904279 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.310424671 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133528363 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.16059221 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.126161644 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.160123714 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.121049192 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.276072397 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.161838387 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134937481 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169698954 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.160967117 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.138270307 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.150870512 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.148884785 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.162303879 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.159614292 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.144908861 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.161824908 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143754872 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.317511815 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.135930764 seconds)
  done (took 20.347726132 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.123430012 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.145536733 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.130451784 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.146643508 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.123296056 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.146182835 seconds)
  done (took 1.777548877 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.166867309 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.162850946 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147739947 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.162706305 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.219625275 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.290639543 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.319858482 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.159274794 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.184190461 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.1513073 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.291685206 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.320322717 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.292870902 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.167501048 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.300323386 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.140543431 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.327462592 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134278807 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.172934771 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.133952579 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.163342419 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.165197613 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.134958502 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.284783072 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.164577074 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.141002777 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.154614285 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.173272942 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.146267343 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.157102869 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.142786174 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.160777218 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.153510513 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.135639664 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.297881386 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.157972743 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.159422228 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.140688561 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.167005175 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.138517614 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.32214781 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136002211 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.172937285 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.140865748 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.160443099 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.153491795 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.142828009 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.155032982 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.302694847 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.164717175 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.141683659 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.165042216 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.138979195 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.164900998 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.131838832 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.158461561 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.164797912 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.303377126 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.143385412 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.158220818 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.166088369 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.139204853 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.15864259 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.143840079 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.16136235 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.162811067 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.13258788 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.185113275 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13606409 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.166100662 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.141901216 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.165254673 seconds)
  done (took 13.926329599 seconds)
done (took 50.461972784 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 9.794355903 seconds)
  done (took 10.753095558 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.257727536 seconds)
  done (took 2.216934709 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.141822645 seconds)
  done (took 18.13901705 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.541338532 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.583429219 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.426993754 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.195611467 seconds)
  done (took 3.708963689 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.909887214 seconds)
  done (took 1.890238766 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.492905977 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.305320739 seconds)
  done (took 1.766347732 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.722871253 seconds)
  done (took 1.696900912 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.811871677 seconds)
  done (took 3.777584984 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.376281299 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.287954425 seconds)
  done (took 1.646256064 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.74793743 seconds)
  done (took 1.726369324 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 61.31069377 seconds)
  done (took 62.292812098 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.284482615 seconds)
  done (took 1.2738402 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.35045944 seconds)
  done (took 1.335445241 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.546405726 seconds)
  done (took 4.522147963 seconds)
done (took 117.713751591 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.136996751 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.161789638 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.138465653 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.160859143 seconds)
  done (took 1.569036677 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.152780531 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.164718014 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.148057585 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.161613847 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.153675617 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.166463277 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.138557564 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.169661728 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.160793003 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.144398949 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.16635642 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.142324523 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.169721583 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.138812973 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.162032965 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145689616 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.168317074 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.141125627 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.163511645 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.165681683 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.139217424 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.165410909 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147106067 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.16638289 seconds)
  done (took 4.724884079 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.134452224 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.151917922 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.132230921 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.150199407 seconds)
  done (took 1.552329246 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.156870437 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.193632864 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.164714592 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.179012918 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.166478014 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.186469802 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.159981238 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.13604684 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.159087688 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.154729383 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.19799941 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.163152172 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.18785231 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.170204396 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156739485 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.153976075 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.147411902 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.193616311 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.154415865 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.177899369 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.138861653 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.178755133 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.135913024 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.180380969 seconds)
  done (took 4.977309335 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.247025757 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.178067337 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.199498763 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.229155747 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177688238 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.159200413 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.164434667 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.165726242 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.171650249 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.152088894 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.167400408 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.235775653 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.140636041 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.165422991 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.142376974 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.170886885 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.181399534 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.14332919 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.217804931 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.170404071 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.142974467 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.176261381 seconds)
  done (took 4.886265076 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.139989589 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.150997764 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.126937091 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.148030975 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.135513532 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.152672487 seconds)
  done (took 1.840069118 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.127006514 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.120647395 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.145857864 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.120530272 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.149467331 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.121407408 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.144712606 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.121628177 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.144708975 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.122744659 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.144986594 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.120489275 seconds)
  done (took 2.569891744 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274162797 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140607895 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.361947354 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.42230943 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214943256 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21751991 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.329740884 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220904698 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.249120227 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183281407 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251883357 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186069681 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205488421 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243363978 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190731867 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.206174682 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200152338 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.300360053 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1672455 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304502828 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212434486 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208573171 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.276818791 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176357901 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185726062 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226682527 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.139751151 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17350677 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229954312 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225756571 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246356607 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200566287 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192167803 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265880319 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.332605844 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.271466364 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.298559126 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187130151 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.189545472 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.248618627 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.313083668 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189666577 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27046952 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199053874 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155784825 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242271451 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210701095 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.246820493 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.177389806 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189732438 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263300382 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235081431 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.237960218 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191911556 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347351364 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182813331 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169096154 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227356635 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252475961 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268580313 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23513863 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.165633633 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223055041 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252060196 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277691807 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.190944463 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.228914515 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170905183 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219717396 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274204492 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24868728 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211686346 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.305908105 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18900092 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231148179 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223589327 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218313027 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26814185 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223104977 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.138588155 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210578105 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18415617 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146017312 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.240596866 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162298292 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290497696 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1748494 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.390272464 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232020915 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21184775 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222796837 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217753109 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215193077 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174491673 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.140399069 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167783418 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.214304626 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215861598 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173635768 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185004741 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185295351 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.172576624 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207571298 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.13972957 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22671647 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.176110803 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197486915 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225073454 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.18148921 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.234748916 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201246751 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.21494549 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230309175 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25754546 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151490424 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178893629 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287180863 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221546819 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.178526334 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230939353 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.270697063 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.200040941 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183247394 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223605949 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252975326 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165006947 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26485023 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198880598 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18551996 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.192820121 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225118222 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218516056 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.187057028 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172865418 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.226067714 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260296159 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.172415431 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162394254 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244008194 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173697507 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14364599 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185334811 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186108373 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171649272 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.197712502 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.185308342 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210287425 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193760185 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215126588 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219221034 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198073303 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270388294 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177923743 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.219113757 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174775856 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.16281428 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.241291507 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263062573 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175275711 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237267532 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.225311333 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229670058 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232405322 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145575007 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239471654 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17918354 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.13896439 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220682044 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235267697 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.223893695 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.257434203 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229232642 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.227476133 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.2263732 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204211653 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235256034 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.243935489 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215814175 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.195661264 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232698515 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234207926 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.14057039 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.167718325 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.14895728 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182388766 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178405299 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158829555 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252257148 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226212426 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249888969 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199031176 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183683134 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.256302844 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.170708929 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220402957 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.237885628 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157872729 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.25883906 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2511649 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238100111 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194085854 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224398508 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.164229823 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144711628 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.184346208 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220382285 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157521498 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188006869 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195175448 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.256280495 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239347056 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202750364 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24508829 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22785614 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.26871385 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.141367419 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.209663882 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229772306 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222271421 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.21350634 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170940243 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.22363158 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257836629 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2066686 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257407943 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225974337 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244850829 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268223285 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.216232525 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178381902 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177396651 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211818905 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191858336 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217649047 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171593608 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188187618 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209002276 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.185316652 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167587233 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289948812 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170557512 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272843426 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185051046 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244064556 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167446642 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197034833 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.230447461 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174613405 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.140237456 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233110649 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262101906 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201785227 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215838132 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234256395 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151776494 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.369685768 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254242177 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246737452 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193688457 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189584374 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203800847 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212724887 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223181104 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244679648 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193926966 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273054066 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.222382399 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.194636343 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162170623 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200337836 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205304669 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.193258585 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.208681984 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.193950711 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.199299995 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265503805 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186376285 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223844596 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241549223 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.192239041 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.169309449 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185046157 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307919254 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227948191 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239163793 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.214723325 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.22487266 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240653996 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14380041 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171299437 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.147681838 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24388653 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17212552 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235577792 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.216112887 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232818153 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229333772 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215757674 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163665505 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.171917393 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223242215 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201026052 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235694637 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172740402 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.187321446 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256931555 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.173741228 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152830468 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21612455 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337017368 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198845048 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235247373 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.118139255 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.330916801 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171119177 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155200323 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215287153 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230469391 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.185561865 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210023495 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23390649 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190561663 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217690881 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184188437 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.227822617 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238421101 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231193436 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243045782 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.173488682 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222136558 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221761581 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236748193 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195163365 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.19988722 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191870628 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.259318242 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.239076561 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.180397661 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228308153 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227590045 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231196998 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251680608 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15882739 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240453552 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174846536 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228626629 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189703732 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144797045 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219148189 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215567077 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176570079 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239421578 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227687893 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148570499 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173147856 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214698811 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196604819 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205418021 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.176522029 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263604541 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.171472992 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213790944 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294136775 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150334829 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218590576 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198521125 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155831548 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189161764 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194344197 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162108184 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.217170982 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24680443 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.178996086 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240342435 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230660547 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226149219 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217781255 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169849811 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.272455946 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.175165851 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255088374 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176739305 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29312708 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175866289 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237997235 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228264362 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205633133 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227674762 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203122548 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.252346056 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224981822 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.226664717 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179690937 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193415098 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160235181 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.183771135 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20669465 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199534173 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198574483 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.185571364 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.228042477 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167715602 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.20103611 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191216914 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.270583152 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203827735 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.752908592 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245316949 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194349854 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240109304 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250949649 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147249521 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.226803213 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233780427 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194148712 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219400106 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.153724437 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.185640926 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272315006 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.166921296 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216922348 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203236947 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.225476368 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232658986 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.186524977 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235444884 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19143426 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203310421 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172257729 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.210792728 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223905149 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156695834 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.174852193 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225042584 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222846355 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.194539264 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.194147804 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.219134291 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260070293 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.144589336 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183483319 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330673125 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220936196 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256879384 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.155807033 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185660831 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205878695 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214336544 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.194501131 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22371979 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.177345177 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148942823 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.199455322 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.195286147 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.186808253 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197685893 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230730389 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220892895 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241695958 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.179214829 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.316776106 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163378806 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224897523 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.163041963 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.150579833 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186685751 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156995174 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205247399 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233076357 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297817621 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.186182615 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.200834618 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178637451 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.144366263 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17455865 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.21892344 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180918188 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220056964 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204675189 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.113196448 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192013663 seconds)
  done (took 105.599014794 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178983445 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.169437957 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.189619644 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.244766111 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221598012 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.31824431 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.250107433 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26680425 seconds)
  done (took 2.911513329 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.215780443 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.183920176 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.273619641 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.164432781 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.150390493 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.589387799 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.25868506 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.171297621 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.191294298 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.24634641 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.227289169 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.696657375 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.164709562 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.241661736 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.241103844 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.126850279 seconds)
  done (took 5.210198029 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.952056404 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.594550536 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.037915017 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.353313225 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.326624356 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.263860858 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.835627212 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.258151404 seconds)
  done (took 12.697185864 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.197936833 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.219375942 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.546051981 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.403078352 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.242690708 seconds)
  done (took 2.689499901 seconds)
done (took 152.201197167 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.142432847 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.171586135 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.143263819 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.172643322 seconds)
  done (took 1.698070893 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.222179161 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.128517111 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104982973 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.10086527 seconds)
  done (took 1.632096861 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.565381463 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.101121029 seconds)
  done (took 1.783066129 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.177173089 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.188999663 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163045384 seconds)
  done (took 1.620785576 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.155924228 seconds)
  done (took 1.242813559 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.142803215 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.16859204 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.320406387 seconds)
  done (took 1.718404763 seconds)
done (took 10.777828033 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139285799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.99761478 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.426787443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.176109825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.762500175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.41893407 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.434419699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.185394386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.231712637 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.154281002 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147385502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.735320182 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.421120241 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.906426439 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.393258179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.905467658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.739897651 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.131830381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.161782235 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.130665429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.402708962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.127486603 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.155854945 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.132002959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.735948545 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.442087922 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.154663942 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.94579199 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.127999517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.15880085 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.418867022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.152377337 seconds)
  done (took 21.62793488 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.131385353 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.22989355 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.137840922 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.156415212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.134554401 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.156039675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141049641 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172331692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.234353544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130243168 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.17389844 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.154136081 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.136946675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.154046335 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.150926665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.153248538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.132725188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.157859599 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.138827291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.158397517 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.148884855 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.156662031 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131866699 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.15785478 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.128467454 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.180058582 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128251714 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.172378135 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.154693205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134468776 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.161103378 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.132114566 seconds)
  done (took 6.006357233 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.180926499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.243610587 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.165100185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.164510235 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.217285453 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132253829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.26436609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.212294943 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.23418362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129257708 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.174935933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129657759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.209199788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.15693532 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152094481 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.15479224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.133803118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.157445231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137913837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.157326571 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150262683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.155816322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132656324 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.158104184 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.129580305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.181138118 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.154193351 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.145385527 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.15383737 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.135115366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.161106242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129984406 seconds)
  done (took 6.389666242 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.146753927 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.178863387 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.15667977 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.1813753 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.140979869 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.174314695 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.150707712 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.166509791 seconds)
  done (took 2.392405836 seconds)
done (took 37.501075452 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.1556809 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.173613209 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.154184901 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.171922002 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.295351944 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.135369309 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.174960098 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.136001512 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.169302535 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.152793242 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.153990811 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.137320115 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.17724321 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.139596243 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.294560573 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.172944199 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.304001368 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.296363456 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.167515227 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.147608156 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.1648908 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.303928942 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.142811456 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.164617023 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.287683651 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.133365633 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.289794953 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.167953691 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.139549171 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.157070393 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.298352325 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.141729895 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.165548775 seconds)
  done (took 7.351246133 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.323744032 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.297562001 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.138033754 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.165250903 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.303082256 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.138762409 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.328006166 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.165059258 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.137276046 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.165328915 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.137280585 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.331173957 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.371557444 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.32330466 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.33161717 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.32047993 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.327877169 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.30391218 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.323000502 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.324733613 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.300404262 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.137228484 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.375142327 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.305414746 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.139098694 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.164194902 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.333137126 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.343014569 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.3334079 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.300869615 seconds)
  done (took 9.091142945 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.145834677 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.178538137 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.158389695 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.226730927 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163919308 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.178944263 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.1748846 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.161490857 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.188355726 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.131383816 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.174172148 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.170528878 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.177510911 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.142240574 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.158128279 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.153822982 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.189558742 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.158864336 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.139321208 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.181418601 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.154508964 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.184175166 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.147048448 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.167717487 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.131432006 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.171184408 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.138691449 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.167878821 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138544014 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.17128065 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.133788871 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.16471508 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134560128 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.191502984 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.160204799 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.150128937 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.194570832 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.143762765 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.174491184 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.16163033 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.163448998 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.133564261 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.186618773 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.216590113 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.135118649 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.173857165 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.145849692 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.169496205 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.131265435 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.180902544 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.176407628 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.159648025 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.160027543 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.160452457 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.129732489 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.166345245 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.13120188 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.1615292 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.142315025 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.163549987 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.1917512 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.141430136 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.166728953 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.134572769 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.16574908 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.131766058 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.156317294 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.140342567 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.185794367 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139254091 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.193091384 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.132154165 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.17247703 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.142072745 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.167813798 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.143650809 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.157193034 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140394809 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.168617881 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.138609526 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.16814722 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.136101455 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.162580172 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.154282119 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.189915421 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.175684282 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.147119058 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.17399133 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.137703405 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.160004775 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148113877 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.16121219 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.136051938 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.168853735 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.133029696 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.161793619 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.148186232 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.173359405 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.131047041 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.181133439 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.137537601 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.159358323 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.155229446 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.160321854 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.135926503 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.171455672 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.173809603 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.160370813 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.143813819 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.173954174 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.131582934 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.166044299 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.13557115 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.159196013 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.151768881 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.172942384 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.138590459 seconds)
  done (took 19.72904648 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.431232701 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.434905933 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.246046162 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.494623095 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.185874265 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.31785285 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.430279996 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.415941022 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.16423995 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.204260681 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.23062835 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.36670138 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.162161054 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.170169545 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.432418326 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.504848906 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.202306732 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.206108472 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17645086 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.186121294 seconds)
  done (took 7.091283605 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.158930056 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.212422474 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.195249899 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.164586992 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.170722408 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.152233046 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.160770793 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.158625339 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.171238046 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.171477951 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.136271449 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.189544773 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.143039488 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.174763844 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.152358061 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.188452456 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.145530657 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.168955423 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.158701187 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.16732924 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.115772614 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.190053987 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.171577265 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16886449 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.181346105 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.148586703 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.15922786 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.139469482 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.166499455 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.142862232 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.168374134 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.18166088 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.143872137 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.117910805 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.172476402 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.149072239 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.167651976 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.136345061 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.165038794 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.137042776 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.1776214 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.17729119 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.142155927 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.109302237 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.180172493 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.120641109 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.177354048 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.147486702 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.146567451 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.154821992 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.175526232 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.150769173 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.167623411 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.159652775 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.167526541 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.154470202 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.174803793 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.149662887 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.1686755 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.130412744 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.156665732 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.13662289 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.168855201 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.149981922 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.174282079 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.184381477 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.153843027 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.160440444 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.140397532 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.164818306 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.137685805 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.179357095 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.182871648 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.142019526 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.167405436 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.15133328 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.166770229 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105620554 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.143650669 seconds)
  done (took 13.70282932 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.168542802 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.170146916 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.155107434 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.202748967 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.152462684 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.167324001 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.144004765 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.183564754 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.151310722 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.180077578 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.150508105 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.176573711 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.189174615 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.143108212 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.168204839 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.151675084 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.175194695 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.18475429 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.1832805 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.196822585 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.153077147 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.167033601 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.149249496 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.175280111 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171173583 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.175113539 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.16863115 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.177530816 seconds)
  done (took 5.875503861 seconds)
done (took 63.931293569 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.31080789 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.544321104 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.253761948 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.250418158 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.302281037 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.266370954 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.262590515 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.249914951 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.636578506 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.210716251 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.25105497 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.261731398 seconds)
done (took 28.930462457 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.568141522 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.468228606 seconds)
    (2/2) benchmarking "String"...
    done (took 1.670866735 seconds)
  done (took 4.265898827 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.24309013 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.242273267 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.614413188 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.241459965 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.245995737 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.24307281 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.245940703 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.255854742 seconds)
  done (took 16.214083928 seconds)
done (took 26.416482781 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.286036583 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.434359146 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.481935167 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.208487825 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.240350118 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.240323299 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.24317408 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.264552147 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.252715097 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.211677267 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.711367136 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.51429452 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.265834154 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.614610839 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.210464683 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.267742009 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.253592793 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.492408637 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.242829902 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.220589923 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.22111506 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.208597057 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.275845902 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.233538636 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.24440608 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.247689249 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.244170924 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.240535407 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.444058564 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.255281136 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.273246409 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.240471851 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.227282464 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.240891387 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.247244919 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.269073881 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.44421885 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.245107147 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.210840429 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.259488654 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.426346326 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.299623367 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.245709528 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.239496797 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.212347534 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.263485252 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.210989889 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.427731907 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.275363229 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.247305331 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.308032327 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.605181497 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.250933796 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.245286918 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.244398537 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.462544923 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.24436194 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.288837987 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.265704179 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.246201839 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.241459197 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.24134333 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.319288018 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.243210816 seconds)
  done (took 146.117465919 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.240438117 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.244333026 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.240060625 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.256886089 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.245590868 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.245051134 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.237569456 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.240236764 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.245018937 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.241577508 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.245754715 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.239007209 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.245918493 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.265468745 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.249742582 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.263148267 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.245245153 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.254097047 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.266750891 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.241925947 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.245964937 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.243973483 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.254871238 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.241877058 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.274375603 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.3274063 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.264650205 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.264132262 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.255245866 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.241904365 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.269237729 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.260297137 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.85946949 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.204394287 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.251886081 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.24740716 seconds)
  done (took 81.789528265 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.240032619 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.241891794 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.241938447 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.267833151 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.240692758 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.739426152 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.741768139 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.169730522 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.267142631 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.386512 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.242947584 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.465152587 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.243494162 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331878935 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.252995929 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.248158093 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.328846496 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.265587684 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.245162531 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.239040803 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.734937243 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.256525918 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.208370213 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.416446323 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.253508215 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268984834 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.619295512 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.238422079 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.27084338 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.562310683 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.283565808 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.240009991 seconds)
    (33/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.241368054 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.573789098 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.750640706 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.358850242 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.243491089 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.270630155 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.239689 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.516744553 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.242453387 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.242617864 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.247049433 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.862413161 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.243980746 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.731895236 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.245849699 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.129232216 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.24578356 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.240807857 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 23.022136824 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.811926433 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.259639372 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.240251431 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.245259051 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.240210924 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.24010672 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.269610542 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 23.017177115 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.060200253 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.245541001 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.245123629 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.270132466 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.242480206 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.337436276 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.24336293 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.496811292 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.315744411 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.805493771 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.737114545 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.246502785 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.242595375 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338048086 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.360778909 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.244508258 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.242539013 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.242853089 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.243653261 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.242275082 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.349786101 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.242806924 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.470463249 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.408407591 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.257069632 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.352262184 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.340111896 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.242496409 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.593429863 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.246728721 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.243611217 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.930460919 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337580847 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.243986613 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.244242372 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.245040239 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.473333586 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.737168812 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.41222337 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.251140735 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.539431446 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.247495858 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.837063219 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.726409623 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.889943965 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.250121402 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.354160121 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.408392855 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.260966286 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.24451636 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.363457044 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.248172691 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.30144832 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.248899249 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.645533835 seconds)
  done (took 384.45121493 seconds)
done (took 613.484993185 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.213600277 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.219364977 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.216862843 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.21688603 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.217100862 seconds)
  done (took 12.212178658 seconds)
done (took 13.341929585 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.499679253 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497563133 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.323493511 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.502298372 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.300257037 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.510913225 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.481464438 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.303345069 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429302358 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.348698322 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415340805 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.352204355 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.301590098 seconds)
  done (took 19.396972409 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.599062283 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.262145626 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.39684425 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.56414646 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325071714 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.59322425 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.648447264 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.261758286 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.491723075 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.294989258 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.29186442 seconds)
  done (took 18.86106285 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.600189591 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.263107131 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.399485507 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568327789 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.326255035 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.608473396 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.667873687 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.261573417 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.497341945 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.294139638 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294567207 seconds)
  done (took 18.91373491 seconds)
done (took 58.30284815 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.304741685 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.365347995 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.30365684 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.286950596 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.281308049 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.28298424 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.289240203 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.2818841 seconds)
  done (took 11.528715489 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.28013723 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.280442296 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.279392163 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.280040011 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.281625199 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278608824 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.280456404 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.286600132 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.280111179 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.280219224 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.279678443 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.279740252 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.281074709 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.280328945 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.279698836 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.280553065 seconds)
  done (took 21.623413494 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.289512514 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.279752683 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.280748481 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.281944653 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.281372931 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.283019999 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.282265783 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.2809513 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.281453877 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.281444659 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.287381866 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.281298969 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.286814476 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.282679941 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.282080074 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.289625726 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.282315719 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.286691904 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.286083447 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.283240906 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.289406495 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.28329259 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.282999954 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.282639993 seconds)
  done (took 31.944764974 seconds)
done (took 66.228964034 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.250548901 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.273433165 seconds)
  done (took 5.657554079 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.383567212 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.402195769 seconds)
  done (took 3.92122434 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.290405784 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.282553109 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.284945453 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.283934081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.280783332 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.282707808 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.286276628 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.28443638 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.282344075 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.285815256 seconds)
  done (took 13.978691006 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.288346864 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.286069618 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.281812443 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.287757402 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.285126132 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.282545357 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.282109478 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.281689522 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.288069174 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.282296094 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.281033852 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.282502894 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.285226634 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.284058888 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.28740254 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.28323958 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.283708284 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.282488576 seconds)
  done (took 24.251599174 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.30812396 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.313933846 seconds)
  done (took 3.757519654 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.470857083 seconds)
    (2/7) benchmarking "second"...
    done (took 1.366932485 seconds)
    (3/7) benchmarking "month"...
    done (took 1.456097454 seconds)
    (4/7) benchmarking "year"...
    done (took 1.439008829 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.370580435 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.316737484 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.368607628 seconds)
  done (took 10.924317052 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.406240137 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.644711803 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.892761084 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.222064412 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.468274213 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.583035874 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.222005257 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.58112327 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.582002223 seconds)
  done (took 16.739062 seconds)
done (took 80.364831242 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.252339002 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.344651858 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.275733038 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.290575987 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.647532693 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.285919111 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.259360007 seconds)
done (took 16.494975165 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.226388077 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.226094045 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.229338103 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.281992913 seconds)
  done (took 10.101821188 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.255183847 seconds)
    (2/2) benchmarking "read"...
    done (took 1.66329182 seconds)
  done (took 5.055699123 seconds)
done (took 16.297075068 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289426679 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.294933036 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.287289117 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.290160921 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.286821529 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.287746438 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.290362971 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.287071282 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.284156805 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.291284667 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.289578025 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.28541311 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.282366284 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278827077 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27862775 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282050253 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280624163 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.278800887 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.280089877 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275944099 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270283673 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270375374 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.270465469 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.270413089 seconds)
  done (took 31.921964588 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.272158911 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.271088314 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.27299945 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.263858623 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.26425637 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.263545804 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.264443824 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.263773697 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.261091791 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.267403628 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.262400756 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.26215722 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.264223405 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.26163334 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262354452 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.263185702 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.261453918 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26133435 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258485594 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.255894761 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.25468986 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256205904 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.259633017 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254231002 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.255464958 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.255054222 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.251071942 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.246838722 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246649243 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.246596443 seconds)
  done (took 38.930125123 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.255828552 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.252908628 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.247604391 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.250669446 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.242077642 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.239774346 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.250601421 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.241354015 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.24240401 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.242400866 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.244253686 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.241998162 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.238653881 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.237794136 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243841972 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.239062105 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239798721 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.238537247 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243269902 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.237482434 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234239005 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.232203132 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.233467329 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.23781411 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.237143355 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.233483392 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.234257653 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.232677703 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.231471614 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.229796401 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.229377772 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231787436 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.231707747 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228828331 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.235712097 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.231513728 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.235183957 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.235710211 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230441595 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.228340001 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227853905 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234298161 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227739715 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.2337131 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.22931673 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.229260019 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.228704362 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.228626489 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.227766464 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230168306 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231748116 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.228503918 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.229755264 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.23116117 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.228381347 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.235175786 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.235560821 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230570732 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.23057981 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.229689893 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.234593309 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.230968128 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.23142014 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.229586947 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.234741583 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.23014896 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.23183423 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.231448567 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.230941659 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.235615577 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.231410991 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231977334 seconds)
  done (took 90.028566833 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230587912 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.230153639 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.230093785 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231099289 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230943753 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230508712 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.233019576 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231457506 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231419512 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.230737303 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232766331 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231157188 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23169776 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.232724077 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232158991 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.232653398 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232127284 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231423494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.233212128 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.233928561 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232042846 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231448846 seconds)
  done (took 28.190380077 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232609747 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237409659 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.231151322 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235276427 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236522396 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232105563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.232557087 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235450821 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232057512 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233107297 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233764363 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233637182 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240407108 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232826884 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233064065 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241917705 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238824784 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.238291126 seconds)
  done (took 23.324553074 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.232924382 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.236968053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.234796758 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232514205 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.237933678 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233957266 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234132008 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.240403685 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.235282713 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.232893862 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.235447189 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23298738 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.239801654 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.235994047 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232641525 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240037229 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237656269 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23612856 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232620503 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234720491 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234094923 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234555805 seconds)
  done (took 28.273688994 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242208175 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2406658 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.240795635 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.2417922 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236119552 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234719094 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.235868891 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.235166357 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.236683031 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.236270339 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235473729 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.234417938 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.239861577 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236383551 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23556585 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23628326 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.242108581 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236264612 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23656912 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236792193 seconds)
  done (took 25.845372446 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235686605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237824587 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237328923 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238827368 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239336162 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238444986 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238862148 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.242580359 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240731381 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.242081413 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239047857 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239568523 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240168111 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242319851 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237381304 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242950029 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.243039635 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242275642 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.238981158 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23833352 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240809044 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.243117717 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242730378 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24158973 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238798454 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.244667985 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23901545 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241599647 seconds)
  done (took 35.825704164 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240487495 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241811546 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.240423032 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238534663 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.238739857 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.23872533 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238894485 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.243821787 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238545558 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239216383 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.237107247 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.235931049 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233530255 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.234492319 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233790415 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.238631183 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235460529 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.234087519 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.235159513 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231396674 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.230773201 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231072471 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.231751887 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230513531 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230237449 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.23289882 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233214084 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230693931 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232949944 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.232353918 seconds)
  done (took 38.1661807 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 2.236143228 seconds)
    (2/2) benchmarking "in"...
    done (took 2.225486844 seconds)
  done (took 5.552220502 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229671804 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232751595 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.231629595 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231581893 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234534643 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235122498 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233050026 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230977556 seconds)
  done (took 10.949828397 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.222370806 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.233865913 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23264369 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.233722598 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.231008566 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.225350654 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24614876 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258122 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.227832184 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.230812522 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.235632269 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23231348 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.234634725 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23671865 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232491367 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234831258 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.23958333 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.235705951 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.23653364 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.240144504 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240366949 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240990771 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24635996 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.244579287 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.235348014 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255445613 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.245979255 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.245374708 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231940738 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.246090303 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.232064846 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.241528828 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.23896265 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.238084326 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237972999 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.249229249 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252530297 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254882971 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.252311415 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244010988 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238396308 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.238963907 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.236990821 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.238609742 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239593666 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244054359 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240445241 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.238968587 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.231874947 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.238022167 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243157527 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.233050445 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.248071979 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244664911 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.238990237 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251674323 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.263641067 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.236649507 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.238108072 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.251630951 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.261203886 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.246925116 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241529108 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.250326456 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252256938 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.252499008 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258880686 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264246941 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.241532041 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.241023177 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.254618063 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263378883 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.250738589 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247892417 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240709521 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241931743 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237781215 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245578436 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25716692 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.267117278 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247377267 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242480416 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252584843 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245704289 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23803397 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.251711129 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.244205635 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.241889489 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.234224897 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252196875 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.266833932 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242741203 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.235071094 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.236394307 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240483584 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.245253464 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.235987272 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240539387 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.24597695 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.244594023 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242196022 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238844549 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.247318531 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254295745 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243686225 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.256847745 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.250279731 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236949754 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.256728457 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.252980355 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24301135 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.237543266 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.25170226 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.247418823 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240222657 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.248912938 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.25006937 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.247300023 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249762068 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243790848 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255021815 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.262356897 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.249466779 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244465515 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.243276397 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.252855827 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249667433 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248471402 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.251353821 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.246554468 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.247600271 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.247906664 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.25231358 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244224632 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253634837 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239235031 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248356792 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243911604 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.245320232 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.250457617 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246208264 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243664715 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.250230075 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.257825035 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.250747529 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249718837 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.26330157 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.247111172 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.252362119 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.25056238 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.251961719 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.246304296 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.241067946 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.249450925 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.239423254 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252868679 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.24339862 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.249933319 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245860524 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.25257772 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25156104 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.239577184 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244941134 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.249676024 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25557454 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246170201 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.249403294 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.248016316 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.248309998 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.242734568 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.253794354 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.239747387 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248853084 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.252286133 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.252336139 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.253797009 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.256066152 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253175142 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251246894 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249890227 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.242332423 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.251560272 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.252677104 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.263542452 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.260354966 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.250383027 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247593287 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.242726397 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243661083 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256102679 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243966359 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.254815434 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266267379 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257836419 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.245284614 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.257164965 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.243180715 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.253221098 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.257894108 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256382742 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.254804748 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.249907058 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242826968 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254471047 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.246266582 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.25231337 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240720974 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252074164 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.250330856 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254559187 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25009137 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.24793509 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250016849 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25021003 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248948907 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248827243 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.244505115 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251704354 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.243012816 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250038081 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.255197117 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250115815 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263137861 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.262879239 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256065453 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259878299 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251957668 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.246267141 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.25177231 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257631644 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.24773276 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267065805 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.274631642 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248429846 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264848763 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.270509748 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.244555052 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.261425842 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255746628 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.256413402 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.250184678 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.260889321 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.251704075 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.251649948 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.258339556 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246506836 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254424114 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.2677499 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.265084338 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.247693998 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.254925086 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.248012544 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256327288 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.258118717 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.255410482 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.256622368 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262549169 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258743028 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.25182504 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247328588 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.257379796 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.252252818 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253286259 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248613738 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257806527 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.264803925 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.255285606 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.260600178 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251870577 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.256284895 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245465781 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.255218628 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.248285694 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275847369 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.276160467 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268516269 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.258587772 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.256698146 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270162637 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.258568775 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25525264 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250886024 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255005053 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.250484996 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.250264087 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255979549 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250160932 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.258323213 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262448458 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.257662444 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.255755778 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.25402546 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.249107865 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258489854 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256184882 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.255103529 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.245483522 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.254231562 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.256806959 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.26766183 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255956012 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.25103758 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27420994 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278492258 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.256383371 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.252120399 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.251256951 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.250338329 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.260795594 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.267452517 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.253222564 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.261010985 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.255616933 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257445587 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.253281301 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270892548 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.266075525 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.253572958 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261741454 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.256490787 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248879972 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.252827192 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258725149 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271370263 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.285599656 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250535351 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.258828096 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25856228 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.257339428 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264782763 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.258426159 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257608877 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.257815536 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277117922 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.285133885 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.255238533 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271603882 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.266818148 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.258460451 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257252127 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.252732907 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268086955 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.268600497 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260920471 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260589702 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.259318451 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260735671 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.261049956 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.258058514 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267029348 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.258455492 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.275528823 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28068751 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.261944693 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.259576375 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.277688804 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277003941 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275914975 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294779036 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258049714 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.268222446 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259184565 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.258823695 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.255762482 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.257951727 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264092592 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.254758793 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265065551 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.261587874 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.267109247 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.270519247 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26817265 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.254495003 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.275521838 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27762874 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254562399 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264074852 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261164287 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.254634406 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.265631614 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.262369049 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.251269103 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.26034002 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260223175 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271517348 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.256585213 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.271872632 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255793771 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.265195805 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.262241937 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.26244301 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261179651 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262468782 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.256307873 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264780808 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274601819 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.271620784 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.263117747 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264200078 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.258160133 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.282348195 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.273653794 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266613443 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268437837 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.264195118 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.258332432 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.264328515 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.266794891 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258394311 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.272228752 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.256244876 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260792033 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.26251802 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.275763629 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.26542237 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.268275386 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.260693976 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.258587772 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265614713 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265701526 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264354217 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270407501 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.271962238 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.258360089 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.257529048 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264159429 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263627588 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268803596 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261376115 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.26355656 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263686954 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.268046726 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.263876922 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26525496 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263747645 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.259148527 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.285010755 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272878416 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.267096605 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262858775 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.269037704 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.259859931 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265918592 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.265686579 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.262392445 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262298509 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269605932 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.263243532 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.262297881 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.260399176 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268332307 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.280423928 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.268363107 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.261225886 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28602485 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.302171596 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.273980511 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.260294483 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.265548992 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261755004 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.266818287 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.268365761 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.262260166 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287332069 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.292136591 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269968059 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274961222 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.266701722 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.260031531 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.269747291 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268136263 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273492251 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.27243241 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.274996283 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278764988 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264857004 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268990421 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.260570495 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.262485613 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.26661477 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.2637503 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.270022396 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280252468 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.276807057 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272956568 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.274464371 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270144967 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.273724962 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.273483031 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.261842096 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271330733 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.263837042 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.28346831 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272468168 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.265380255 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.270437113 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269749526 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265899456 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.269282986 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.279735991 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.274936778 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.264264751 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27197872 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.2853777 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279669223 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.269692466 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.265472656 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.26910091 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278021877 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271792104 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.27129239 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.268577659 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294239512 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.299754529 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266397144 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269209653 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286424901 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.27867615 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.271186092 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.270121081 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.27871107 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.26945298 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.275634003 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.272109882 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285151904 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.295760027 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.266964116 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.279482398 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.266751938 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267170776 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.284769732 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286089802 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272302854 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268126694 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.29567489 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279778246 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282653262 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304566035 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.301767075 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278915147 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.277188671 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264376776 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.279072849 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.278187471 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.277157521 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271969152 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274360238 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273912276 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.265696288 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285544481 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.28979153 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.285415415 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.274171876 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.266158497 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.269420993 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.27938504 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272267304 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278841884 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280535814 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.272377933 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274499781 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.269998999 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297807074 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.292804972 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.283594024 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273797317 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.271106752 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.286175567 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.280796322 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27481281 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.279685566 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.276306296 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.274163565 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282286526 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283715618 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.276126524 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.270680929 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.276873127 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.270803781 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.27793248 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.294298039 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294415442 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.289797188 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.276903159 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275049641 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.282720449 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274838721 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277570563 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279376937 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275874328 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.272210663 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27800735 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.279169579 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.278639693 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.273182574 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.281290868 seconds)
  done (took 751.703161434 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282242316 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276395693 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281377402 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274423585 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282242177 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274184448 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274956683 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.274914708 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27572382 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.27406872 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274709444 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274917153 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274594276 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275376708 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274636321 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275969241 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276050537 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275466873 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27582886 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276448632 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282598925 seconds)
  done (took 27.936976065 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.276985711 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276463648 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276607661 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276351623 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.277524467 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.275864969 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275777387 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276926835 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283238183 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276709769 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278740055 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276734632 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.276120309 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283982691 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276846588 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276817674 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275622829 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277477603 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.27674448 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276357001 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277698302 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27719349 seconds)
  done (took 29.236285355 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282333598 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.278924995 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.271408885 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.281392068 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281703561 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.283326671 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.277883103 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.284451605 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.278723084 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.273227482 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.273835171 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.273566143 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.278719103 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.28334078 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.285909262 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.283374932 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.27971937 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.278492817 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.279608321 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.279272804 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.294904471 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.2898136 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.279276157 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.273415007 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.288298114 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.280092601 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.288415936 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.280899897 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.275225641 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.281062208 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.279435605 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.275676328 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.296577449 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.289903835 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.274890683 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.28288297 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.280201204 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.279764487 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.281200423 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.291400463 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.293341982 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2817169 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.296497132 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.291553067 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.282064919 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.277297274 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.292336057 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.279854302 seconds)
  done (took 62.681091361 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282040894 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.280620672 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.28085024 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282177992 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281969865 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.283043326 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.281644126 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281086233 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281079459 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281304348 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.284121116 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281320551 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281106068 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281214043 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28266276 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.279661681 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287315726 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281583153 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.282140278 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282945897 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.287430545 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.28930327 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.284337484 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.282586913 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.283601148 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282147471 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282264246 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.283223307 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.28863873 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.282861319 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.282990875 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282445973 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.285965415 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.289338051 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286286685 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.2827905 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.283030545 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.282899592 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.28342431 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282454982 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.291239479 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282638037 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.285188571 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.283426964 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.292002426 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.29053087 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.284342653 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.284252138 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.283440583 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.284692907 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.292037835 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284327078 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.284791593 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284560976 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285674177 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.287480692 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284916189 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.282678754 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284069503 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283566157 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285103085 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287541384 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.284861434 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.284408513 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.285261903 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.290733969 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.286580019 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285356538 seconds)
  done (took 88.472114158 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287866494 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.286202107 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284556786 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291672844 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.285418139 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.292587835 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288241962 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28514017 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285296196 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290006571 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.284787821 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286112641 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.292774661 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285243605 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288629581 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286945358 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288719467 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.293521823 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288346304 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289098215 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288285124 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.287753771 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28888506 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288217308 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288645575 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288953505 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292896324 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29336475 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28953214 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.287736031 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290358222 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.289216597 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289847613 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289204514 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.29757576 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.288919282 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288653187 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292545372 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.292425524 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287857206 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288633492 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287351694 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288856007 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.289324851 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287607384 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289082432 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289286647 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.289886793 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287549695 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293533695 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288853841 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.29448675 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296029894 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288809143 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294053734 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.28911365 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288868648 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291021784 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290522628 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292194628 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.289503854 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289454895 seconds)
  done (took 81.087110102 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297946198 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292939556 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.293001994 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.298217742 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.290917442 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289104781 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297693443 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.298327323 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.28939113 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289109669 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296575214 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289185098 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290518299 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290270641 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28915758 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293454077 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294106674 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291288578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289845727 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289638368 seconds)
  done (took 26.994378057 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.28981367 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28893779 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.2940156 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289946578 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290844108 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.290086191 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.290444826 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297988592 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295218686 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290740044 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295170147 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.290928895 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2964275 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290862756 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296039182 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293232959 seconds)
  done (took 21.824167026 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.29104581 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.292424546 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.290669854 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.294199632 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.291709093 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.292777943 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.297621157 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.2903988 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291194711 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.2922512 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.29499296 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294157518 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.294470826 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.298699785 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.293117582 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.293209144 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291951721 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293330458 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.293501918 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.2933644 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.293844419 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293953791 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.291995372 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296350605 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292680794 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.293550388 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29306995 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.294000724 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292116127 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.293548292 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.299677215 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.293542007 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294389531 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294362851 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.29369894 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.29360689 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294132864 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29313581 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293237219 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.293603048 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292887594 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294981575 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.294457068 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.299750898 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.295549734 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294243423 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.301887621 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.2932324 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.294228407 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.295850261 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.294026845 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295301378 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295824071 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.295182719 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.300375348 seconds)
  done (took 72.327571476 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300681462 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295945386 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.296975334 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294784623 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300614135 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294806762 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.292168857 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300902161 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295854033 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297322865 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.303940466 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.2996923 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294355169 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294226941 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294536058 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295953906 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295466624 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295035423 seconds)
  done (took 24.491854237 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299274789 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295677823 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.295437779 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295929531 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.295625163 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299060446 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294807182 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296017252 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295390776 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.303100415 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298163823 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.303175704 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297760211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296871061 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303915044 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295594153 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.297471068 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297491043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296975683 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302536865 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297819856 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297037004 seconds)
  done (took 29.705254978 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.287329625 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.288360622 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.288866831 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.317017897 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.302100498 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.28824671 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.293295328 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.289519707 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.320536641 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.353035955 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.348141338 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.30240284 seconds)
  done (took 16.828616334 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299406719 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299929691 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299200827 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296526814 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299203132 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305190765 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298961412 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299933113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300515171 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298731703 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299233583 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298510935 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296821893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311800823 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299303843 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299181481 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300883513 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299784002 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300267583 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301551685 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306401464 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305239095 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300723368 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300255151 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299422014 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299179316 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299762072 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306687324 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300291888 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299536974 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299503519 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299710599 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300594999 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299983469 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303260352 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301429882 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29907665 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300968022 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300444421 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300116167 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301939653 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300837767 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300652548 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303596009 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303031342 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300190828 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302589666 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30124124 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302110345 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303902751 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302900879 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301082771 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302765735 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301563697 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302110206 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302570879 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301338669 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301637729 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300518244 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301954459 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301129145 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308078283 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309652925 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302246256 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304646422 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31006834 seconds)
  done (took 87.056009359 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302351088 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303939489 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30300564 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302446492 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302216644 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308662994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302722294 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30265378 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301366186 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308903178 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303529241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302970092 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309317546 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304600956 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310558626 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302455361 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304625749 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30353825 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303998644 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310289248 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303692948 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303664454 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30274646 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302931609 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306346708 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303752663 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304341425 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304298892 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303840663 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304152924 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3043614 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303769704 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302913101 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.310085591 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303697348 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305157032 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311463071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311102271 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307523534 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304517984 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303064307 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305115266 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304112974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303803437 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305500371 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30525865 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311496455 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305000517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305794612 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307011317 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306611267 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311203261 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306570339 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306174409 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306199901 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313668659 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30939507 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304896035 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306704714 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306841324 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306383165 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304897222 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306157857 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306720918 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304856923 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306093533 seconds)
  done (took 87.326218511 seconds)
done (took 1765.818565172 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.524474306 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.483338 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.295128033 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.277913553 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298601798 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.285637511 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.287731631 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.297785214 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299801532 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.301570681 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.296452223 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.562572657 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.283053453 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.298455691 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.297187233 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.451242298 seconds)
  done (took 26.699556139 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.32543035 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.318924704 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.428489824 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.32363501 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336333063 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.538375026 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.383476489 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308937889 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.479717777 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.329058116 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.291984756 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.335776638 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.305457628 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.290872394 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329017398 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.54044177 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.616118292 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.288293645 seconds)
  done (took 28.929608926 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.775462788 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.294536966 seconds)
  done (took 5.232558903 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329829722 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.306466974 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308541401 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.305294339 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.294603315 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.283337148 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.305437654 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.286166348 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.289986038 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.441786906 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311483884 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329964516 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.320687847 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310478308 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.314857566 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.37628102 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.508655745 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.315558913 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.316711015 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.32250435 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305624549 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.480422615 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.3529724 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.316578666 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.435070479 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.297288503 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.316477465 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.321574133 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.489207461 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.317449447 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306403698 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.308349336 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311615255 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.285987695 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.910593728 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.299972713 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.355966007 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322476762 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.317303478 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.50963464 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.310400575 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.320711314 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.285751002 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.919277864 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.494039919 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.507765478 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.305432695 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.309680233 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.317834412 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.457480941 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.308166702 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312058328 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.391182705 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.262985258 seconds)
  done (took 84.80942514 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.301421989 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.286888298 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.612850768 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.308883692 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287069117 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.286734089 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.291064038 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.614587721 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.333105209 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.289120845 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.745021486 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.003571334 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.308765032 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.337486632 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.590239443 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.425070674 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.291645886 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.288523073 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.297182274 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.291690585 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.012363234 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.289168057 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.294436674 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.420321117 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.360709208 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.955292149 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.294612674 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.295076979 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.311335261 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.28942172 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.966236069 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.322611206 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.291125428 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.289739638 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.705811123 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.804425549 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.76057109 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.30232406 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.312150589 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.292884452 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.322266679 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953110378 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.775674826 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.296479182 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.291228933 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.953423476 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.29584635 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.290330006 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.303245895 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.719732865 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.289469283 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.291134997 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.290270921 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.295823233 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.289961733 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.445080202 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.43066992 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.950214269 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.295658058 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.30476634 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350577961 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.297593989 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.302066485 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.293045575 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.296768953 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.77394395 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.940214325 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.30203785 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.768545009 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963275987 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.310612055 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137425087 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.310439128 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.322287981 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.343676944 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.290039258 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.290253531 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.957100201 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.29880378 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.292304559 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.761856937 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.298305742 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.740630286 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.311607433 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.293180858 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.022066702 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.306207584 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.37555956 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.293805589 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.306936588 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.294744953 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.297049576 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.743857371 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.36847039 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.293405468 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.293319772 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.343207959 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.293194337 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.29669995 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.295041988 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131131201 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.327015328 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.291347594 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.30943055 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.294026985 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.312830842 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.294074686 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.294770096 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.736390919 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.293268857 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.311834767 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.297955417 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.293120096 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.324786204 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.402936016 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.302422815 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.675457752 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.304534118 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293377251 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.299975646 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.293619392 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.316194049 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.293160744 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.302505368 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.295318839 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.78652879 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.309246657 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.298453525 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29645809 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294462515 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294930801 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295899639 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.335908777 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.298236249 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.277442543 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.329561113 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.303717254 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.293674845 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.297514649 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.294711359 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.307189343 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.296284954 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.748097995 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.716454516 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.904492115 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.295816667 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.311445332 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.289578025 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.318947193 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.621361627 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.311574398 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.295282801 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.724562809 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.92048521 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.29966597 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.294458534 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.300058129 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.739168787 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.294008058 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.787410047 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.987591299 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.312781814 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.2953759 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.246049724 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.225786603 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.296877277 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.299716047 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.727278937 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.310093483 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.294448128 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.296096452 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.308276632 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.296355145 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.298988719 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.29958209 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.295716586 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.298525462 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.647243829 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.625232999 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.310505686 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.295113087 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.963588876 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309627502 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.297971342 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.295161906 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.299777228 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.296428198 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.440471445 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.302443907 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.305767794 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.29828437 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.309338638 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.982698848 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.297315462 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.312710645 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.628032029 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.224424419 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.315496336 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.29927884 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.300895456 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.615495309 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.994064119 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.37042434 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.669130132 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.314048316 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.367840701 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.300580472 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.314741002 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007925659 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.298601728 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315910144 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.208571356 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.313609922 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.805211054 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.300118891 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.302959405 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.111278256 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.313807782 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.304115349 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.299761234 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.300194459 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.794566055 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.301173075 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.318694857 seconds)
  done (took 499.86244544 seconds)
done (took 646.69099934 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.300699621 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.301489735 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.305750054 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.302875456 seconds)
  done (took 10.389238953 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.335657977 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.324542947 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.33324971 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.322841194 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.334484993 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.323409074 seconds)
  done (took 9.153000322 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.301601203 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.306107222 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.306462854 seconds)
  done (took 8.092785054 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.615242903 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.319013612 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.718522237 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.329704217 seconds)
  done (took 9.16054814 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.33214978 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.333032993 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.331962954 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.333854326 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.334974999 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.336248695 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.334781888 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.3355426 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.336320841 seconds)
  done (took 13.185693098 seconds)
done (took 51.160197887 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.69116366 seconds)
    (2/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.581202539 seconds)
    (3/192) benchmarking ("map", identity, Float32, false)...
    done (took 2.272135025 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.612332826 seconds)
    (5/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.455653893 seconds)
    (6/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.270153838 seconds)
    (7/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.270498434 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.452339365 seconds)
    (9/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.293566381 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.321680013 seconds)
    (11/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.274777191 seconds)
    (12/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.438820467 seconds)
    (13/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.270854835 seconds)
    (14/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.57383631 seconds)
    (15/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.315268024 seconds)
    (16/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.452771753 seconds)
    (17/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.275782417 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.534872347 seconds)
    (19/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.270988091 seconds)
    (20/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.271617082 seconds)
    (21/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.279704214 seconds)
    (22/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.276992557 seconds)
    (23/192) benchmarking ("map", abs, Float64, false)...
    done (took 2.282954208 seconds)
    (24/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.557300269 seconds)
    (25/192) benchmarking ("map", identity, Float32, true)...
    done (took 2.283195859 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.463629907 seconds)
    (27/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.658754929 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.87924924 seconds)
    (29/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.314778436 seconds)
    (30/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.277246639 seconds)
    (31/192) benchmarking ("map", identity, Int64, true)...
    done (took 2.281517294 seconds)
    (32/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.556491925 seconds)
    (33/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.27677542 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.490997145 seconds)
    (35/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.648610763 seconds)
    (36/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.309799731 seconds)
    (37/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.280571642 seconds)
    (38/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.33464025 seconds)
    (39/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.270426148 seconds)
    (40/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.28954045 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.493201963 seconds)
    (42/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.467383178 seconds)
    (43/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.28309843 seconds)
    (44/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.679363207 seconds)
    (45/192) benchmarking ("map", abs, Int8, true)...
    done (took 2.285334399 seconds)
    (46/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.561019806 seconds)
    (47/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.438626728 seconds)
    (48/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.624551419 seconds)
    (49/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.320249104 seconds)
    (50/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.486736965 seconds)
    (51/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.485681803 seconds)
    (52/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.455481105 seconds)
    (53/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.654791297 seconds)
    (54/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.300263392 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.528165698 seconds)
    (56/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.489751874 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.28910932 seconds)
    (58/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.794470023 seconds)
    (59/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.629494923 seconds)
    (60/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.594185057 seconds)
    (61/192) benchmarking ("map", abs, Int8, false)...
    done (took 2.280353179 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.27414373 seconds)
    (63/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.291458712 seconds)
    (64/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.589883602 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.617200274 seconds)
    (66/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 2.328701017 seconds)
    (67/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.306339654 seconds)
    (68/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.281798125 seconds)
    (69/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.276449749 seconds)
    (70/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.688561164 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.528174428 seconds)
    (72/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.319107199 seconds)
    (73/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.661982924 seconds)
    (74/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.337355889 seconds)
    (75/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.536525909 seconds)
    (76/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.465079533 seconds)
    (77/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.325160832 seconds)
    (78/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.322496527 seconds)
    (79/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.532576733 seconds)
    (80/192) benchmarking ("map", abs, Float64, true)...
    done (took 2.27460147 seconds)
    (81/192) benchmarking ("map", identity, Float64, true)...
    done (took 2.29739564 seconds)
    (82/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.499274314 seconds)
    (83/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.273983794 seconds)
    (84/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.494986688 seconds)
    (85/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.482474692 seconds)
    (86/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.732518569 seconds)
    (87/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.526854498 seconds)
    (88/192) benchmarking ("map", abs, Bool, false)...
    done (took 2.277552893 seconds)
    (89/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.276698595 seconds)
    (90/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.340952435 seconds)
    (91/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.691718409 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.874293372 seconds)
    (93/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.537609078 seconds)
    (94/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.48835896 seconds)
    (95/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.46989942 seconds)
    (96/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.524420039 seconds)
    (97/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.324021582 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.484325347 seconds)
    (99/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.469735641 seconds)
    (100/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.320291987 seconds)
    (101/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.590871437 seconds)
    (102/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.279575077 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.500990943 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.626301291 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.489536763 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.321651587 seconds)
    (107/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.34601083 seconds)
    (108/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.313702252 seconds)
    (109/192) benchmarking ("map", identity, Int8, true)...
    done (took 2.290229435 seconds)
    (110/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.490749627 seconds)
    (111/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.724585298 seconds)
    (112/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.463828815 seconds)
    (113/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.552329594 seconds)
    (114/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.464287254 seconds)
    (115/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.532686663 seconds)
    (116/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.625948314 seconds)
    (117/192) benchmarking ("map", abs, Bool, true)...
    done (took 2.282462945 seconds)
    (118/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.303231298 seconds)
    (119/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.274092746 seconds)
    (120/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.537957375 seconds)
    (121/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.646470197 seconds)
    (122/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.456585436 seconds)
    (123/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.266730357 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.717079386 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.316634887 seconds)
    (126/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.411907617 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.527040136 seconds)
    (128/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.285719364 seconds)
    (129/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.487877684 seconds)
    (130/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.585121264 seconds)
    (131/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.271053254 seconds)
    (132/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.520263436 seconds)
    (133/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.33688474 seconds)
    (134/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.533482226 seconds)
    (135/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.492052726 seconds)
    (136/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.523207386 seconds)
    (137/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.473483464 seconds)
    (138/192) benchmarking ("map", identity, Bool, true)...
    done (took 2.265353716 seconds)
    (139/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.449755796 seconds)
    (140/192) benchmarking ("map", abs, Int64, false)...
    done (took 2.265482433 seconds)
    (141/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.551606737 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.518784337 seconds)
    (143/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.427235125 seconds)
    (144/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 2.30876601 seconds)
    (145/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.271000803 seconds)
    (146/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.536210924 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.480937136 seconds)
    (148/192) benchmarking ("map", abs, Float32, true)...
    done (took 2.269260637 seconds)
    (149/192) benchmarking ("map", identity, BigInt, false)...
    done (took 2.273605114 seconds)
    (150/192) benchmarking ("map", abs, Int64, true)...
    done (took 2.287990603 seconds)
    (151/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.452157498 seconds)
    (152/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.267110713 seconds)
    (153/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.475489656 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.464525272 seconds)
    (155/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.435352149 seconds)
    (156/192) benchmarking ("map", identity, Int64, false)...
    done (took 2.269353247 seconds)
    (157/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.50998217 seconds)
    (158/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.554021081 seconds)
    (159/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.271317113 seconds)
    (160/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.333580339 seconds)
    (161/192) benchmarking ("map", identity, Int8, false)...
    done (took 2.281334589 seconds)
    (162/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.310873122 seconds)
    (163/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.285128856 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.432587902 seconds)
    (165/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.482318875 seconds)
    (166/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.545402596 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.309898766 seconds)
    (168/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.310514696 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.285709586 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.509152665 seconds)
    (171/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.271669114 seconds)
    (172/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.72975034 seconds)
    (173/192) benchmarking ("map", identity, Float64, false)...
    done (took 2.274269794 seconds)
    (174/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.654190453 seconds)
    (175/192) benchmarking ("map", abs, Float32, false)...
    done (took 2.273983026 seconds)
    (176/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.519365626 seconds)
    (177/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.270330605 seconds)
    (178/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.268851297 seconds)
    (179/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.278158207 seconds)
    (180/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.269952415 seconds)
    (181/192) benchmarking ("map", identity, Bool, false)...
    done (took 2.290580318 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.612100184 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.271707317 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.540768138 seconds)
    (185/192) benchmarking ("map", identity, BigInt, true)...
    done (took 2.273465083 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.497729216 seconds)
    (187/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.306223997 seconds)
    (188/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.535701083 seconds)
    (189/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.292894998 seconds)
    (190/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.304399254 seconds)
    (191/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.347727808 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.507172315 seconds)
  done (took 366.7431186 seconds)
done (took 367.922121251 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359685544 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.470688067 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328945741 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.326401702 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.327587816 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.302567038 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.361578382 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.326766903 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.35533506 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.353982096 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.302983013 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.342576665 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.357321417 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.340298512 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.375800932 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.329744236 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.334532834 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.339196137 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.356104432 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.359637354 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335026892 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335038555 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.36812726 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.326550254 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349274234 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350008894 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.350588717 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.303786396 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.3532452 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.356965086 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.305416772 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.366741469 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.359680096 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.342942703 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.335729215 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.33750898 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.329332731 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.473882957 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.362365074 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.341036245 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34262688 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.359254204 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.348137148 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.347892005 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347673402 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37056486 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351958724 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.357611397 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.306342029 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.309416931 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371230168 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.354769555 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.344903007 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.313140169 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.315288417 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.358744572 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.350709542 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363131932 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.340154778 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338828981 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.378091515 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364679265 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.358429728 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349692164 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.340135572 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.362810592 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.346104418 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.361395887 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.338607025 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338276816 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.338479286 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347255192 seconds)
done (took 106.235791091 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.509490418 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.311591928 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.555433411 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.344106049 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.56073646 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.530292364 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.345604703 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.338815152 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.337703489 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.202998929 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.339074613 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.345067623 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.314250087 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345478849 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.511154456 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.339108416 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.34499876 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.099116444 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.340819737 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.521906452 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.314620246 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.33847775 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.339840772 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.204355666 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.314361554 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.316675955 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.524507551 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.340174543 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.100247036 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.318360805 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.309554308 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.096724451 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.524792993 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.359610394 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.351977022 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.351059378 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.564861426 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.358418833 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.512646964 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.509603421 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.555672617 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.380585548 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.319286273 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.314126398 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.341761617 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.342762931 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.340684385 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.371175762 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.31340843 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.340931343 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.102638401 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.357286636 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.341507394 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.341884747 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.346945656 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372811375 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.343259362 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.344080767 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.525602243 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.345407122 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.515598248 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.204167932 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.205492123 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.343853293 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.311992538 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.342189255 seconds)
  done (took 109.742463482 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.461572942 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.470227744 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.502646321 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.350458113 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.431970924 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.499583571 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.349518538 seconds)
  done (took 11.254759282 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.348936481 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.34311975 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.427780376 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.428265983 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.345731186 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.576726412 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.343874664 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.352449637 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.341964366 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.434263323 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.34609436 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345966201 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.352625359 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.31561297 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.430432878 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.353829143 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.514944672 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.338470695 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.346968424 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.558094014 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342386277 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.352740178 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.430835303 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.354862654 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.345745852 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.350575656 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.197692737 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.351161345 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344300556 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.344680563 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350882748 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.4576355 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.347237801 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.318839428 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348472735 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.517487105 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.350293498 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.344660728 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.346551402 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.319620952 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.343175763 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.343697477 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.350996799 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.344233788 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.351566983 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.367931285 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.34512189 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.346275459 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.347298564 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.345662532 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.431831869 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.345761497 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.343866423 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.34439582 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.437949617 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359843735 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.346432742 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.343940175 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.344889179 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345134392 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.556854611 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.434097171 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.346005452 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.43276439 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345608963 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.349227301 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.347808964 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.347431262 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.488731005 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.347048742 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.435836359 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.354038317 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.586061398 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.371306575 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349145865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.34348069 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.344119458 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.34759951 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.316790564 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.353495441 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.347210843 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.344095991 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.35201299 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346517529 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.345761566 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.563237686 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.518206191 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.347033516 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.363090865 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.357172864 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.346453972 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.434113584 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.347339491 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.34782831 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.434665609 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.521053411 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.440617414 seconds)
  done (took 139.840596423 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.361461119 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.361272268 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.347470932 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.378241255 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.349065338 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.339406289 seconds)
  done (took 9.330777049 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.348766488 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.349626374 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.349043757 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.354295822 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.352491473 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.352256107 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.353008368 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344111776 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.353449695 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.350802292 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.351202901 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.352845219 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.351729993 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.351392869 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.360142236 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.350571955 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.350224565 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.350945885 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.358415201 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353050342 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.328059386 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.352212038 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.351845092 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.345897687 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.353698609 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.351696259 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.376629109 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.351507758 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.353023523 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.362923595 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.371884023 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.354842889 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.346048754 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.350502882 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.355435353 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.350310958 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.353774806 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.352872108 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350456787 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.35367647 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.353822438 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.352961365 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.35295892 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.35599967 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.346086468 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.349306431 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.356780984 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377029509 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.353730527 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.355391143 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.355468388 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.359455347 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.356059524 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.359540553 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.350255364 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365318662 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.355859987 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.35405906 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360527341 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.348067027 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.357131379 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.357395378 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34946944 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.358047765 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.353579251 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.357247873 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.348712011 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.358992648 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.355750616 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.353101536 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.356793906 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.354032241 seconds)
  done (took 99.683235559 seconds)
done (took 371.035099235 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 10.918569813 seconds)
  done (took 12.117842779 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.325333759 seconds)
  done (took 3.525363875 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.842879391 seconds)
  done (took 22.045491959 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.342483635 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.332350434 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.336786054 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.327757462 seconds)
  done (took 10.539281846 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.628267533 seconds)
  done (took 3.827766785 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.343684487 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.333742859 seconds)
  done (took 5.879560244 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.505375229 seconds)
  done (took 3.705908342 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.745024559 seconds)
  done (took 3.946253081 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.345431218 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.355738673 seconds)
  done (took 5.904025575 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.296451805 seconds)
  done (took 3.496482059 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 60.525484004 seconds)
  done (took 61.726784462 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.359611093 seconds)
  done (took 3.564924283 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.37441109 seconds)
  done (took 3.573984932 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.767181008 seconds)
  done (took 5.967113206 seconds)
done (took 151.020373544 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.326799518 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.327710109 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.326691474 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.328146757 seconds)
  done (took 10.514311771 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.515322096 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.511765707 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.503027725 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.47308481 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.481316653 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.513155898 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.390119093 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.399856155 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.458961856 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.497739412 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.504896608 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.491413049 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.497722441 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.459464364 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.49230597 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.505899458 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.457929881 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.504388442 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.392617944 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.503035128 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.359561924 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.481292978 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.496210168 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.359048522 seconds)
  done (took 36.451420884 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.966523117 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.495635793 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.568633972 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.483947365 seconds)
  done (took 7.718338344 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.338944289 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.281054456 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.042407628 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.155336722 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.338551851 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.10850053 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.400129583 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.394985493 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.379064405 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.281308329 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.339509445 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.954290766 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.173355005 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.360221366 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.337810974 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.35969197 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.358910096 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.258389352 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.161710787 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.167071245 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.362050998 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.339840912 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.007149023 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.953376753 seconds)
  done (took 48.057353105 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.37767163 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.384601841 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.366776669 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.391456903 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.36604131 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.369265882 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.366590751 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.378389598 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.363157354 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.366012326 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.368361507 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.388061568 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.370072689 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.365582313 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.384483878 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.367147805 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.370223266 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.378035153 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.385151561 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.371206631 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.380739129 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.38307986 seconds)
  done (took 31.448632819 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.333689571 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.331287239 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.331158382 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.784235202 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.332446536 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.331970427 seconds)
  done (took 14.649587283 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.436470797 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.630498264 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.353962958 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.710404654 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.843792986 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.358132483 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.357461518 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.652390642 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.95798956 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.894750583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.43070945 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437627858 seconds)
  done (took 20.270110536 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505412524 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343025674 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343802868 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415577427 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343439204 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.343674011 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416917613 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.109224783 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.383813193 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699670607 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352911707 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509838088 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.677681359 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351520329 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348821034 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.300881069 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661830391 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92156768 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346795776 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345601421 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421884794 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.351500984 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347078004 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590059951 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.366805723 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342871534 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.689992421 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.344108842 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688144701 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641202977 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652811646 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350535149 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699277611 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059425574 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558475418 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.574041713 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370452346 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.350983809 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.333020491 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.350584387 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361020001 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345538772 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.648562573 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35099638 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.343543757 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356438762 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106135913 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.392832706 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.345968576 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.347137859 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652709049 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514571511 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.365650199 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345995396 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350004983 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347034773 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.373208772 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559776073 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089452506 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345930652 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360050674 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.346192557 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342935369 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368873234 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127335047 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.390769245 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.376859096 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368044847 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347081846 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349192519 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395335119 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347541122 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.436937547 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348049986 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200900477 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.367513913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363795284 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987717781 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348943256 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.350797543 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660866861 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347260221 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346708335 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.348745954 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349157809 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116415293 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396466827 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.304455615 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475490214 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139112941 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.59657272 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414204907 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406458112 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.649779416 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.306993368 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347615224 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.357836077 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348726189 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397918618 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.110357819 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369100847 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.039545322 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680154648 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.313362963 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353436565 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.324576121 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878945151 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380460253 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.398221869 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351530177 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.576939916 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.084678157 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683918325 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356744248 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419134095 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.349787498 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166703182 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35293273 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.370279768 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3533992 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738510323 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.197489919 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353181435 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493581551 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354038737 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352270425 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35308673 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35257144 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351170285 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.575682146 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37775083 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.649248553 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.360278357 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358954026 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.366386954 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349842044 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.354113956 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.656521615 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362212331 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722522815 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352440069 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352309746 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351967593 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.655304072 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.350896437 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.378988068 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.778120388 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351289085 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.358278033 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662052905 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425883138 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547444337 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410830945 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.357344045 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.691374441 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.830433604 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.376944373 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353076254 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360057938 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352116774 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.382682672 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346376031 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067401657 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378497713 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366076161 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.355243708 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.396008389 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49759498 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382244698 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584368096 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.370741 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351470114 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.389508121 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.353852609 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676746323 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658123495 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.361788954 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620508655 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.877934128 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091579244 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417163593 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.35300306 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.354221441 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.353566121 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35551134 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354866495 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.356751931 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.586260027 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.686657849 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.353144628 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.089472482 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375107826 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.355831422 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.357403829 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653722446 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.391714966 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357599385 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.35497908 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360876268 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369688353 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658953559 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64970301 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.397944529 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353871118 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.96287405 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383877726 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355201175 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356961035 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401443717 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.359963792 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261318636 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8033604 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353629606 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6678065 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363641425 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.397073888 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.357476255 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356403353 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361969633 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.378166176 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419789486 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.589784078 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381322862 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360478801 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080735406 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233381912 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021616156 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380148551 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.364101189 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.361630834 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.126604717 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376683445 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358360724 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682316305 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132335055 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377305661 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882594498 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.377465878 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201790395 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667638671 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676217975 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.358878528 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.359555569 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67216697 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.329265055 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410648519 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371061013 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36235809 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.317988203 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96405786 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380300246 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627581482 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132721836 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376649433 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366909228 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.430034364 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.365708028 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817592237 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377706341 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358307156 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.367058758 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367512866 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271673583 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.389756267 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360336953 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190681511 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392437195 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.893227623 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378448126 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.592690662 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.683780668 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.644651321 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.366823951 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.370209508 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.695627076 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672992075 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367695851 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369800168 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031853771 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.325668299 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.390130267 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362085919 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168988249 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365574351 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718319348 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.3780149 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.371182746 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367879394 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.362855988 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363352141 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.361630205 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.373044295 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362090668 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927830907 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.363604129 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375697217 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396020961 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366801113 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.694395635 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.406299223 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.070451766 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698570189 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372994988 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430430923 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.383793149 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363769583 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.321766546 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363327976 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361974382 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372872556 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.665331115 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373608752 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.321592571 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.44078643 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327066591 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366264314 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362145005 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636842996 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.382016805 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.365511424 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250158906 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440175249 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362031653 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372089495 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357181943 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453152108 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527035805 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595325704 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.686512649 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676714616 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825781757 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383267034 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372915858 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.403117533 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52845065 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36472564 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.383588305 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.971438756 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081981026 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260340019 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.094308921 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699066899 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.374876303 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373320378 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365773329 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67557306 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36642851 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727090017 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365930192 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.363715666 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439200264 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366858314 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36692592 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388095511 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73401471 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365500739 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368849977 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392393055 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.36479178 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685587043 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.336608238 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94613924 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002901626 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367014828 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371298403 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.13866966 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746195728 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367455945 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36858479 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367853063 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.369837044 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.390087245 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.393575258 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375304778 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664812194 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670581852 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093797962 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.685357684 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 3.374983858 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.368670765 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370666549 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.702605617 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285845638 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599254766 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104312707 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.197435721 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713174001 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51256092 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60376763 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.390276096 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674708215 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.371047813 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372576149 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369290816 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37042846 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.368062098 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.671393059 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096754413 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.722354638 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.390710718 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.367607152 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429634034 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.603685427 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.69038039 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152520234 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.67607026 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691299431 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385986584 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369978543 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095470869 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704927841 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377087687 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.393971537 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642936647 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38798635 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436278594 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.371099076 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.368909133 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022113496 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.372864734 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422742795 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38265271 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192061295 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101098541 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.40247206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9593449 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373512302 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371912168 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757545146 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.397759729 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382745669 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745715779 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.37279147 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379659452 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613810597 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.109986333 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229570115 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.384054216 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381791078 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.376286118 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373575578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374665242 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374951452 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375925248 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.825011756 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.393108369 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373502734 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414808196 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.373844607 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391399423 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.37788709 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374677115 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.399936054 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.337651387 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.359369163 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.384641581 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.591294186 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986529921 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400550726 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059105631 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.796917681 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.707658425 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376859166 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.339043184 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.059669739 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376943535 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375355484 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375983916 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372618683 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014241964 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.390899848 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.687884193 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408484836 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.375752531 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374712176 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378701161 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613042972 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396795501 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42712715 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.334678174 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374894671 seconds)
  done (took 998.912076555 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.391856185 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.377914538 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.38986501 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.436157839 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.379650094 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.384933168 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.381844786 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.432063044 seconds)
  done (took 20.410429567 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.429236986 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.530472835 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.428147043 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.531266092 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.36990919 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.004202559 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.448452628 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.532935298 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.549848832 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.393982154 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.432600962 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.154799573 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.536513337 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.431885996 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.424952991 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.397191989 seconds)
  done (took 33.834470991 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.110023348 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.416322285 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.062350038 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.445272824 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.409088684 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.391743251 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.559791717 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.399181698 seconds)
  done (took 26.031368864 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.402416536 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.402041489 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.403875102 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.404492289 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.410872779 seconds)
  done (took 8.261833296 seconds)
done (took 1257.766466424 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.403332016 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.405088804 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.404206219 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.413613491 seconds)
  done (took 6.864881352 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.337481044 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.340245782 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.342833959 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.378431503 seconds)
  done (took 9.637139192 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.114605286 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.959870525 seconds)
  done (took 5.312403065 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.000761689 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.99515497 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.99816499 seconds)
  done (took 7.231654389 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.740167447 seconds)
  done (took 2.979317901 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.370505076 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.370946753 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.394132173 seconds)
  done (took 8.374960112 seconds)
done (took 41.638938374 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.371423838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.143948333 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.529135583 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.371168848 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.534818289 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.52878519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.597265546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.370265521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.387039092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.368455374 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.370195819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.533775419 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.586562509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.146317349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.584652908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.147890315 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.53623935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.381278653 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.37454288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.372070918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.598317705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.379248577 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.370484333 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.385368978 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.580656381 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.520277823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.375027928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.150931554 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.373562308 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.398986631 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.520751697 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.382824729 seconds)
  done (took 82.51323517 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.370911413 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.373094861 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.389958318 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.390644229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.372512385 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.372849229 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.391042883 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.372049965 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.372830861 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.371541032 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.371133928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.373258918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.390153664 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.378182938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.375028906 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.372166809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.381325376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.377314532 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.376313007 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.376498785 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.396286218 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.374542671 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.374082626 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.397889145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.378028589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.38863315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.390004832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.374750588 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.373958518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.387251479 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.373888397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.388726667 seconds)
  done (took 77.390834619 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.373067204 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.403654473 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.39172642 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.376879909 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390193683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.40930596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.383007294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.380008379 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.387296806 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.385694018 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.387448153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.377884366 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.381321117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.380124456 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.380125084 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.389729239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.379415357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.379479052 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.402117895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.381792615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.380532329 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.391189271 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.383246501 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.388840438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.379297186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.384127549 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.379878196 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.378526347 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.395611551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.388093975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.382985364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.380635415 seconds)
  done (took 77.577571354 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.953041724 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.406576213 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.414137929 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.384135929 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.416276818 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.406703185 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.384983803 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.94612583 seconds)
  done (took 15.555923907 seconds)
done (took 254.277287712 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.385234603 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.951009762 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.457941753 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.384760101 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.43279498 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.444482081 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.007057462 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.440720779 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.654312186 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.390758001 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.433592707 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.386544755 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.281443331 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.91794159 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.401467254 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.397551322 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.354365035 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.385293409 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.02804805 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.392448439 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.462389316 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.377960144 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.403529457 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.364243386 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.349431656 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.496291253 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.495741603 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.42486569 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.581540362 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.497782714 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.965578864 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.407826024 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.394979278 seconds)
  done (took 67.995403817 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.398288288 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.543987123 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.408725509 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.413400545 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.533339121 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.407902011 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.403161603 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.409087846 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.409564373 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.407736207 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.409144696 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.410841979 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.411198239 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.429141723 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.534057299 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.391692058 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.400718275 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.535758353 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.399179672 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.391379239 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.415016952 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.408795839 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.413101485 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.424828884 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.409684849 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.410792811 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.541107008 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.413251783 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.397892707 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.535901807 seconds)
  done (took 44.266922771 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.413953268 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.070927665 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.237082243 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.441541903 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.402798429 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.407909972 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.71635562 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.417692082 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.411164995 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.406858233 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.969830521 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.441344811 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448323632 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.249306494 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.42935879 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.411161224 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.413040304 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.404002981 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.091232551 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427394852 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.73437551 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.416721777 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.721729209 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.429610288 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.426299531 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.406071121 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.417092355 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.284593732 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.413815053 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.967944877 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.186277529 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.707234559 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.204488155 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.296137938 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.188365714 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.420664458 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.420195683 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.981792797 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.428085582 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.404184848 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.71936571 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.411838056 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.247190093 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.191446412 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.424147443 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.414388659 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.30285199 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.969863975 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.672132539 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.425205748 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.318738787 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.43312058 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.419914013 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.410799167 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.651637195 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.419253245 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.408892849 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.307609298 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.42153 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.709566698 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.425249747 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.409177871 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.103784497 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.413436304 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.074223335 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414869447 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.426566814 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.426571913 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.261172039 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434935896 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.197269499 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.427548922 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.424946426 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.966101695 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.108485304 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.3521232 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.415206292 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.09955442 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.255413905 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.714034585 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.426143087 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.25845654 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.735898119 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.419479181 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.425160281 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.423715265 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.415808044 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.541980792 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.706928304 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.124704126 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.180171026 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.327136712 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.716745404 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.436303527 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.410382913 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.312078932 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.418415847 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.419248077 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.244008892 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.221689504 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.43615672 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.426907849 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.197998782 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.431645114 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.721894035 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.427509183 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.308248206 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.436360378 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.593945082 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.42468494 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.426796801 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.438327528 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.715084928 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.419645962 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.421901696 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.161711067 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.999493232 seconds)
  done (took 200.705878176 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.390255423 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.38895421 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.391375747 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.390256122 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.391654554 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.412552881 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.388246578 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.392278375 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.411795732 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.390434077 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.39043736 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.418879733 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.414601955 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.389144946 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.395628453 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.390097931 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.389677137 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.402072777 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.390244946 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.390250953 seconds)
  done (took 45.174484899 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.421431384 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.019110112 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.997591524 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.44985546 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.420461639 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.414373783 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.472877941 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442464436 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.425296261 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.751565545 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.601889249 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.444269624 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.428449456 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.42151268 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.978174389 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.395584103 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.747339378 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.02331295 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.445750748 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.018623807 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.394371658 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.425724458 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417289587 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.01858728 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.781219944 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.716240662 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.483255447 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.046292409 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.447711752 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.42332136 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.018946893 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.446273999 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.416426628 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.995851497 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.445623776 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.767085884 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.440095769 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.477307624 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.497525489 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.770556088 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.029195193 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.744853238 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.822089317 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.373293769 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.428788325 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.391214343 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.026597796 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.442510392 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.394056675 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.42849143 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.441179986 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.992386043 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.437765166 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.993256126 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.453676547 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.431550478 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.023554811 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.014330942 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.005308775 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.618885055 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437539509 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.715878046 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.436776772 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.030832273 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.449119123 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.425089671 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.426459607 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.598721946 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.041332909 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.734095307 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.760226842 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.760516264 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.433405044 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.49565905 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.449144546 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.759024804 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.498400111 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.367530815 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.755851285 seconds)
  done (took 132.07938894 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.738035192 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.551684959 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.900361212 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.402259672 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.404815026 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.417196 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.530724263 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.138243208 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.403749038 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.585290769 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.406524182 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.410821376 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.397365614 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.499203985 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.559432244 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.992925776 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.399020923 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.400028453 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.393985227 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.131585727 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.416727365 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.579922768 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.363602592 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.699534905 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.410946043 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.392922172 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.395974865 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.402309051 seconds)
  done (took 60.587791368 seconds)
done (took 552.053191136 seconds)
SAVING RESULT...
DONE!
