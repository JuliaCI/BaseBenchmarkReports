cset: moving following pidspec: 24208
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.017395578 seconds)
loading group "string"... done (took 0.518639766 seconds)
loading group "linalg"... done (took 9.507479338 seconds)
loading group "parallel"... done (took 0.172158974 seconds)
loading group "find"... done (took 4.121841332 seconds)
loading group "tuple"... done (took 2.106326859 seconds)
loading group "dates"... done (took 1.415967701 seconds)
loading group "micro"... done (took 0.199189227 seconds)
loading group "io"... done (took 0.522347151 seconds)
loading group "scalar"... done (took 58.320093709 seconds)
loading group "sparse"... done (took 13.993293771 seconds)
loading group "broadcast"... done (took 1.324895295 seconds)
loading group "union"... done (took 10.862689592 seconds)
loading group "simd"... done (took 3.859441554 seconds)
loading group "random"... done (took 14.412001415 seconds)
loading group "problem"... done (took 2.242423077 seconds)
loading group "array"... done (took 24.524950485 seconds)
loading group "misc"... done (took 1.173258695 seconds)
loading group "sort"... done (took 3.84992044 seconds)
loading group "collection"... done (took 22.365010943 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.700901351 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146362676 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202634637 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.208668644 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277629997 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165379619 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156126488 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.17596686 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.639424888 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211859693 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140426586 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420339835 seconds)
done (took 6.207312955 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.266110586 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.063706774 seconds)
    (2/2) benchmarking "String"...
    done (took 0.176287362 seconds)
  done (took 0.943677964 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093074685 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.164138819 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111418009 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09604699 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095908774 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.170943945 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094915492 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109226739 seconds)
  done (took 1.545298952 seconds)
done (took 3.558407951 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.498858829 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.888844664 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.520693379 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.181002557 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.313146595 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.316380386 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.269355062 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.220751884 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094862272 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087762069 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176039285 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.438045858 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.403294441 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.976260109 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069640211 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.110707514 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.13715997 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.788655527 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079182904 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110510212 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.541365002 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.215819624 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115180289 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106836421 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186822291 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133602464 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.14057025 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103127291 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.673062266 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136011011 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.217602322 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082903839 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.1398087 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.164730934 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222495054 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110265698 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671229142 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201538478 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099749207 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100017328 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683450249 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.120398411 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207772511 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106454668 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068714743 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.163543632 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103596344 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093594933 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093987929 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085750011 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166744249 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.462362497 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107886415 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.194138235 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09382485 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.690356294 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09829127 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.276522804 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127652685 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095314146 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089354031 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090124589 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155523688 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095789696 seconds)
  done (took 20.2618363 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.175945489 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.192047257 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078023749 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163379715 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.129959473 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097419791 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089911923 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078910453 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131004508 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.185300519 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144946435 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.192918527 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077053304 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089822875 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.169594262 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.239771342 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126381505 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104499951 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088617135 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.111104003 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.130210064 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.117291242 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095727187 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098884851 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173083882 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204576294 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110404403 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123657904 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091845339 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100545747 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142956866 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150428347 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092907136 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08854003 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177281971 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122914862 seconds)
  done (took 5.415961625 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.236945564 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103071138 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.24917589 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196352204 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133510274 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.200829309 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175665006 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.302400536 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.309093286 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161455448 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12953428 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095725232 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079652867 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079477076 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095189339 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.820691235 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.170312161 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.16450849 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165842667 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11561121 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097412946 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.380121173 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100145975 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085652303 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095838863 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.0796734 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222660716 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095687657 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.486652667 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084123267 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116811922 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115319762 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205043812 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.184245567 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.140170898 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121584665 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.113696232 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086378233 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.218015783 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103135252 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094338673 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.079992714 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131831219 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115590118 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107039938 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108070517 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.134069842 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088985687 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112342149 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.084792138 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194036127 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.145878746 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102007735 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.27169258 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.128458025 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101216223 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109136225 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08484815 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.835940451 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123188431 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099429334 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08197949 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09645214 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094484851 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.453908769 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106280904 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.686491209 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08158314 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160567486 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096858965 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117710569 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086045579 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100190045 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.110468796 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086303851 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096069409 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087434583 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080305253 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.105311716 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114446886 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100354452 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080395139 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14622055 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101217899 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123479809 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10952978 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10485656 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08696483 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127921365 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086888982 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08166262 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104293499 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170142726 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117316036 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114079102 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115935273 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143442333 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.090607122 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.289724203 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096120184 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083278886 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123377979 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100631302 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126902729 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101793043 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082378632 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100846553 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079689045 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081272626 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158828438 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08776116 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080148181 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104714504 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09493847 seconds)
  done (took 27.861077935 seconds)
done (took 54.244664634 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.414994742 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082772817 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082121756 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102953036 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082654366 seconds)
  done (took 1.545864247 seconds)
done (took 2.299030345 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.3062138 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.203645729 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087969077 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.190829435 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086932982 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.196729207 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183326106 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101766363 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208578968 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084907585 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.192036013 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084880696 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.105169659 seconds)
  done (took 2.815596802 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105676218 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106178167 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102463309 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11983116 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086096353 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102044192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118298423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108104669 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101013963 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113186739 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085706359 seconds)
  done (took 1.901746723 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101748973 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10415256 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093519714 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117004683 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086307693 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098438774 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11613488 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107054325 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099480667 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113374473 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086850221 seconds)
  done (took 1.881153463 seconds)
done (took 7.352599308 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.210612467 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.940221239 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166722528 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.243897216 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.3455357 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.295991201 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.614250737 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.199631951 seconds)
  done (took 15.908693208 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.19479593 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.110284765 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09079269 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096060539 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.109826536 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090701059 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09452878 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113357572 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095045117 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090463529 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091195326 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.111779718 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095049936 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093396863 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.111789425 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09159838 seconds)
  done (took 2.495859146 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135222433 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116059312 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.115639775 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100287614 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094838038 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117702678 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101142331 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098049969 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112974911 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096418407 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101486299 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.113554384 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097928794 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.093641866 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115060861 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116971509 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09335859 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114584055 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.118679757 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116076702 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099737543 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098021124 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113788352 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099370946 seconds)
  done (took 3.418452724 seconds)
done (took 22.582799112 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149730074 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101398858 seconds)
  done (took 0.998189085 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164915036 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.18189855 seconds)
  done (took 1.10908964 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113823972 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090969948 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137478446 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104894623 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090570177 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107058237 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117557128 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108100967 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091864545 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092787149 seconds)
  done (took 1.825789927 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094441479 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095192902 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122998393 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16760176 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116602956 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093987441 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094610914 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.110824288 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095495873 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090315675 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113131635 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109726593 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.094765821 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126991009 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094721542 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096082121 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11639462 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094956139 seconds)
  done (took 2.697965293 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090745898 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094393986 seconds)
  done (took 0.956091623 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09338925 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091206081 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093413416 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108817958 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091558571 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.091349187 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.106322738 seconds)
  done (took 1.445296151 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.528652841 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.237284503 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371489769 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072297951 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125256152 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.320938298 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106741018 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073620954 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092823186 seconds)
  done (took 2.733112709 seconds)
done (took 12.526628142 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092937307 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.43765733 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.626718873 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130422451 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089686405 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.147061369 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.334498961 seconds)
done (took 2.634399528 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350807739 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.16514656 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083568518 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092037332 seconds)
  done (took 1.462268491 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082021324 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099727766 seconds)
  done (took 0.961826081 seconds)
done (took 3.203937526 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089777478 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089491967 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128074736 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089086608 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088547853 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089337128 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.107591475 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088992252 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089840196 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087869903 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.107876218 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.087872836 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088079427 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10483477 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088230983 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.205030332 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087763186 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.10608437 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088673218 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089976875 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104778967 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089263656 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088071535 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08759431 seconds)
  done (took 3.182457979 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111547146 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091551027 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109632238 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093642355 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.09498645 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110715545 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094460266 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091816494 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109319977 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090864278 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095138634 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.109493114 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090663555 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095569346 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090669351 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.109895888 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.095736057 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090326151 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108662561 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094088013 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094004691 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108300225 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095054895 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093749911 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110899927 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093683422 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09112751 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107879361 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094532971 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095000628 seconds)
  done (took 3.74630482 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097872991 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087184621 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088950766 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114741337 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08657756 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090438107 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10474237 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091540551 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091310006 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089409344 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108629806 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091085955 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090157625 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107160065 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091560736 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094184602 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.114376696 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089790189 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090116767 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090478615 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109323608 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090132272 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090537072 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.106760713 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0907225 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086416716 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089705262 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107084357 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091524278 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090532044 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.108621355 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09299318 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089756596 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099566781 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109286663 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090549294 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096299257 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.1039987 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090635897 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086943319 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086227376 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106838237 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.090422812 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.095227962 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.108420072 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090967015 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089796265 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.108358332 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090175363 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092841764 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086750068 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.105774275 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.092324659 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.091654672 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.109757463 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08723337 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090896335 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.086322989 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.109167584 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09059525 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087431509 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.102543626 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095182705 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092472932 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.121220583 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096864552 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089885034 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090868189 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.108340802 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097055149 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092093205 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118307433 seconds)
  done (took 7.720328751 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.115552473 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097908051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108034409 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092561631 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091170881 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089685497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111455235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091206151 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092778837 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114811178 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091250012 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091843314 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106801291 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092493815 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091713828 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090328317 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112925673 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090313021 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091931523 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109708993 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091609974 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095852343 seconds)
  done (took 2.942528865 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.241926993 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096529523 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14097058 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12285871 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109138878 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122173427 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095346552 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097215924 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111254231 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101230052 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101389849 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111038492 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109907133 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100079277 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116074397 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102020097 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111470041 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102808046 seconds)
  done (took 2.880611285 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104983253 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093271777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154156335 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092629656 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092031885 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.109656193 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098868299 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111990918 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110611551 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09367113 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099521664 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110034383 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093992469 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093227707 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108540758 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093751028 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092722056 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091717669 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116382397 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097602704 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114143705 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099401677 seconds)
  done (took 3.061573682 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106480719 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093060437 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127413968 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095141987 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091826901 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091353726 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115522791 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092851822 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.097504717 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110494149 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09343304 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091984882 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123518361 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093479206 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097799797 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109989336 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09318231 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093693549 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110793977 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091727586 seconds)
  done (took 2.804422965 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195565651 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126275067 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108790161 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116815623 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127581657 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10803825 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135455145 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108181285 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110837489 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137015468 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110051075 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108052148 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133248089 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112838302 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126974666 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117077109 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116375623 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133875264 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110269469 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124489015 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120660456 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10869825 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13283002 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108894294 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108378586 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125867961 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108472942 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129077937 seconds)
  done (took 4.195958369 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092896381 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092352037 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090694424 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108177513 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091047961 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091436278 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090352341 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108419304 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091788767 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090622208 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107107335 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090876012 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091625199 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089273992 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108886682 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092408259 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090725364 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.107325729 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090552995 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092017288 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090416736 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107889907 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091754475 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091006824 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107207767 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.091755523 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091654463 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090830405 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107351989 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091327396 seconds)
  done (took 3.653587164 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104270173 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101882858 seconds)
  done (took 0.994179078 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098946032 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104508401 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090268881 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109178618 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098370401 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092246786 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117590791 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099517334 seconds)
  done (took 1.60200728 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.167679772 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.186906031 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097090838 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.1209665 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.16862689 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.179578353 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13123254 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.115695299 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091706913 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085207693 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.18218448 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084625845 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110367736 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0906389 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091075269 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117395515 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.094128311 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100564743 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.117436512 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095188711 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098214585 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114576861 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095558032 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102870833 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104516992 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096021847 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095675574 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.121185243 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088913122 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093371301 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108387386 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.0932657 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096083867 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.113773895 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093617562 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170265297 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119018486 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090050418 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111398384 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098403365 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12531845 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091899884 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.112264206 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09196805 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096400317 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115036906 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.098249645 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09299751 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103167659 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089281814 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093755777 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105166167 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092564704 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093043955 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.110066022 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100114547 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094964311 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.1056267 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089974151 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088320938 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108118288 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090501453 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095252895 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094220012 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110789438 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093462724 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09064826 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.109872561 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094943707 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09409807 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10970592 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10807771 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09467412 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.114868588 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099210311 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093613161 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10751444 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09821207 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093129022 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.11015465 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.097324667 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120714512 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112402213 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088518379 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088660646 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116474658 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094991758 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09555866 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085419102 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119491522 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094303612 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094382882 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104108002 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092363212 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087929967 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.112799331 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08715836 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093634742 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.108061927 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097479993 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099128946 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108168084 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094626837 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098125397 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114879413 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092514348 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157222018 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109735952 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088555745 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09374125 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116038709 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088067275 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091883752 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110579914 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091007941 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088140887 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113558086 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093585504 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093950984 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097325924 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112367711 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095579613 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093793002 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110699202 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090127313 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096578552 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118349128 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096014165 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095241301 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.110168339 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093468101 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09335873 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.114334442 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091705097 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098595778 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107082472 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093433599 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094777834 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098652001 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11143512 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089895789 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091763555 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11184921 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.093707097 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09630701 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113072619 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089762252 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085246455 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.11221406 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089514316 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094783422 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118852055 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089261421 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096449137 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088181185 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119925026 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091412183 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098121276 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113368048 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099582565 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099031657 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.104859075 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091533638 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096037981 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114312092 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090895568 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093729028 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.110448891 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101792972 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088111274 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096788844 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104595983 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090019967 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097276615 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113302746 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096894165 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089589047 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.149473687 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106786205 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09816346 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110359844 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093379193 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.095852622 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.110664003 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096922451 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099883372 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.116571249 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093881212 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092386329 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098288965 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108866777 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096783466 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092117021 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112849196 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086444093 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095109022 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105002598 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098459727 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095582406 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.115244334 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099353276 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096842133 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090724177 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121781408 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090122913 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09682146 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103903995 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098214584 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10309677 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.118017592 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101417156 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095607688 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10942872 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094653168 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102507169 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113462403 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094661898 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095209035 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086000042 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106170764 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.09964242 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096715092 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110293983 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093862844 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094518793 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114319705 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091604246 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086569947 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.11658361 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097837651 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.089960951 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112498104 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090851288 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093771282 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119699369 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087077903 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09060398 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113246035 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100167277 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094708971 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094242152 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.11611302 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099079569 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096902407 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116320938 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092161161 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100438052 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110551348 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095054546 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090831383 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096555505 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.114687001 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095755193 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095132907 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110205635 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090886836 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097958336 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117724677 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099973398 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09252252 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.11747262 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101271747 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099909283 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109673793 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100914648 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08977664 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085804906 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.109238821 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087222823 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095238787 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10888319 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100128096 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09136511 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111612937 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10010407 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096427416 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110473546 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100974153 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104139988 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106922675 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088282316 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092162208 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111844669 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.090953396 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090024855 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.114197274 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095764622 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.0977632 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.124067174 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091776476 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093546812 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098286801 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.110121336 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100499861 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100401385 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.118676474 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090108735 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09874042 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108902745 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099491492 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.087471179 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110517895 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092630006 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093901606 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10878199 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094272533 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090263015 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086563592 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.109844695 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100500979 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091859726 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.116374575 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093698926 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091883682 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.11018126 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090962614 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101416528 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.11207326 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100938883 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094615175 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.104992402 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087961185 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100046381 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09252692 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.120032094 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.0915057 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096228368 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120151592 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097919017 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094226018 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.12188589 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104622034 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100367861 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11787756 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087801738 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.09251358 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117132004 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094981492 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096645111 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096056558 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107984891 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096372242 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099948394 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.113633654 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093294057 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08773895 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.113476302 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100906337 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09764447 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097001092 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.115585089 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095223142 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088564963 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116572576 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099999239 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09473607 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11958483 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094959002 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098509803 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.110262904 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101290953 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095516197 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088954888 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.107947177 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091856025 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099774699 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107445437 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099171619 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098016724 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109203412 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093465796 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098893791 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.111313666 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09828254 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098595918 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092239453 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123309536 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09591541 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091961345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118237102 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100524794 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088634316 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112308765 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093462514 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100793474 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.113533153 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098996527 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094462222 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118363445 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097443607 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099528229 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098213886 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.121675109 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088335814 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101223976 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11777657 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097382426 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090975187 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111613774 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088966062 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093622031 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.119244913 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092537187 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102696649 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100584509 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.113215794 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092334786 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099597931 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112248422 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10239689 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091504094 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115447851 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089386995 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096738559 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.112889984 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102147906 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092080284 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108329209 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100938325 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099425493 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097490889 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117118524 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.100600432 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088695427 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108206428 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097633365 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090846749 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124271459 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098860127 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092484526 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112551812 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097758591 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094979117 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120001783 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089445732 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092545637 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095330837 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117020048 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092792875 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087986678 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.118756443 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094890279 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096885924 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113227387 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090152246 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093278482 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.121343503 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094057771 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091804341 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.111082003 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101463182 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094461244 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110699342 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089223915 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10191715 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.116235311 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102593703 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091748049 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.095125435 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112406892 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099355372 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.099940223 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112378606 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094923942 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092996742 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121178259 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100976249 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087740836 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.111088778 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104877932 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100000915 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116243483 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098183225 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094042335 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100891042 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.1218069 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097562197 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088787758 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.108930612 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093627968 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087815287 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.116719452 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101356464 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093385898 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111412562 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09999875 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0989292 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09631546 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.116917522 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089335313 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101801842 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.11161601 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099733143 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089236209 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108237996 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098979486 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09998995 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113551102 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095843962 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096705314 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098169886 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.109806911 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09253579 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.097427054 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.11844516 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101201975 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095592533 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.112521292 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099035079 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103930605 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.116604213 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095743181 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102404992 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.121572723 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096107124 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.0943884 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118219363 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102012832 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098800204 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102671226 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.113909108 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094950622 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100242915 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.121174696 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105493583 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09419424 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109111361 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100994756 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092901478 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.109109266 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099944553 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102895906 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.122353897 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097271238 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092254469 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124685269 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101061804 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095502508 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113304492 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093593397 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101402909 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092554507 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.118582956 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092728621 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.101350458 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.121757592 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103180788 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104244611 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.109573711 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101828032 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097617441 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123581986 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096516673 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091226545 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090023319 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.119617027 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103455055 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102201823 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.118893541 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098776388 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099500084 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116428423 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096164114 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.095002654 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101943061 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.120903223 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097168222 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096414985 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.113644829 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0962892 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098028318 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.122420176 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10290722 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096948432 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125219345 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102379779 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09457278 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112678226 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097629803 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097473638 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097598514 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119808392 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092766824 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089484215 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121149344 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102752732 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0952244 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.122874564 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103745595 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095192552 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117737598 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104903563 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101202604 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096586794 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.116686207 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099130483 seconds)
  done (took 61.800117251 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148063591 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105344542 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117872252 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098903918 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115047591 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119572329 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09747727 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099821772 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118265598 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108700136 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099214851 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117150931 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1137234 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119953243 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136403449 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108031825 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117676347 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102190579 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.099303759 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098900077 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132510845 seconds)
  done (took 3.219191282 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116479058 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113521978 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130916787 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114122333 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10446077 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129199251 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110932613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130855117 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113452626 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105235868 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133776997 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110653177 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126465523 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108346529 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106279158 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127467187 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113094759 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106806459 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130672622 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109513437 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125992558 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11138239 seconds)
  done (took 3.41581447 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127768133 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101564521 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09602094 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118238709 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101857017 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098641175 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120822488 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098898052 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107523589 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093846781 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109954136 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093639561 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097195391 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117458373 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094374641 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099031169 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127223231 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101124801 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10318477 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.099251797 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109746777 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099185798 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.09912748 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108282275 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103924388 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104334078 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098743911 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123265884 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089658957 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101238014 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11849349 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093405872 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091405968 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.10963552 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091231853 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10130995 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101757144 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119368461 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100449087 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089377776 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.119523021 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103176947 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089929383 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098915092 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119702373 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094192145 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101622908 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117701769 seconds)
  done (took 5.849983367 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130278857 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156435605 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103296515 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128448736 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.13520176 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108858046 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102245264 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129919943 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100748636 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.1244425 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114939058 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113914486 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12596986 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107644065 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102396331 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124955973 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106738783 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101568363 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128850882 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104144179 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107281938 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126725194 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.113304282 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132782947 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106866313 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103696078 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.123267211 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106880631 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112771044 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128575428 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107750644 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108409596 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134361429 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106518574 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101937893 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.126162831 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.344367046 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103930325 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124723053 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101545874 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103647328 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126732317 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105140605 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.135419665 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105963125 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104987931 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124132475 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102477906 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110889101 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124431465 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.10998731 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113998505 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126456654 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104655278 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106892154 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133539678 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103974814 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102620452 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.126165694 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111229158 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100348305 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.125588177 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114436619 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102288845 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130859727 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112564384 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.124921542 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106508795 seconds)
  done (took 9.056231871 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135329989 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107020244 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135207767 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115148232 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107374757 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126673721 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106983158 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106507468 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126986539 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111827699 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126377733 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.224072767 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125970349 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112775026 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105043176 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128556711 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106378122 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128264565 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106390065 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106090237 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126323885 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116290347 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107473653 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.135799182 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117863661 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102636446 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127304946 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108329558 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135295906 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107241012 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117203871 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127321917 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109369564 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115110378 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139069919 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107454726 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121765903 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107475468 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106898998 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126800621 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104826249 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115548213 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.1280556 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104751938 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107254841 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127556305 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115405527 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.140152041 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112704556 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113096366 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127551136 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116721687 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107678218 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128626203 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115370398 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142689374 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116874499 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116011121 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12961746 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115487521 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13481868 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.122917377 seconds)
  done (took 8.318515435 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10287656 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10027581 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098670857 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.120204462 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099995886 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098976623 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099650591 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119911128 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099343778 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100285797 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120676239 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099551696 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099708838 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100086819 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120308385 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101800515 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098685454 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118585471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101090578 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099675944 seconds)
  done (took 2.966196051 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.111869254 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117141362 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122943358 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108145946 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102835353 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12835941 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102789468 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101950744 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101707557 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123724951 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112239413 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130991029 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104433951 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10852672 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.131425582 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108328789 seconds)
  done (took 2.687908847 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121140126 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119679954 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.209725901 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104317525 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124574012 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.1093447 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101863792 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124668228 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101027233 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106780618 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.127027048 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105324078 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102721093 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102431112 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123195345 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105042758 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101328318 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127437505 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104122389 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.214881795 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106239557 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103829615 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125041948 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107458847 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103576788 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129953327 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109493043 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10165336 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124895002 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104297132 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104463982 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131772344 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102585321 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106305348 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123777821 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103709976 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103744548 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102477626 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127916267 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102734852 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10522204 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125242323 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10277983 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105378903 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.120717236 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10444303 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100624178 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127841397 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104071195 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105267018 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103388427 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1290808 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108170809 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109864529 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130080718 seconds)
  done (took 7.215347636 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115132728 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104958947 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.137042288 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101321474 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103882833 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103574763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124914279 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104844338 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10394143 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124311549 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105464738 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104014554 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12560019 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104520554 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105077747 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124664876 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10107668 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104193418 seconds)
  done (took 2.873403943 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110434435 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102703563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105888116 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12409986 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102060883 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102660821 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122776227 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104034598 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102415467 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102290451 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124737789 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104793423 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102140502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126027129 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102876909 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103022878 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123352907 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101952141 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103584122 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101331112 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123700367 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103247487 seconds)
  done (took 3.274828105 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115059883 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.213492023 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109189933 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223003777 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100718674 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.121377516 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.11091606 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099912985 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.140243253 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099776934 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097945836 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.120783167 seconds)
  done (took 2.431611869 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132212134 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139985678 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124193586 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104199843 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113176543 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130962953 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107963171 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108272847 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138209056 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120086849 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12924346 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116357603 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116308296 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137603113 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113004244 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133272464 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107828865 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107339488 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12612379 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124015352 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107418758 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137333385 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108953869 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107820974 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128147092 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115648925 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137007925 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119839472 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107637501 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137317462 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113965959 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128778247 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116566918 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11859895 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125492913 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115751871 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10753218 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143139501 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112241369 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137944078 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103868656 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112133324 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136940668 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114281083 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139445944 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108920834 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113620455 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129498032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108676669 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129649448 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135182065 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117147439 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134617118 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117679839 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116749274 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15060309 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119838284 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13688284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113504448 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14138006 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116763731 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112801774 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136626382 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121078875 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134620192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117260093 seconds)
  done (took 8.955981274 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144688581 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104851462 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13075755 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120099001 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13789484 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109707736 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108638046 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129561238 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109620993 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105629494 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172776859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109028949 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137341487 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11914001 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108602568 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13001793 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108778219 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118772366 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127727556 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13137774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128864921 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117184384 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116990156 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138664211 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119726189 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135535601 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109879057 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109334434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128872114 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108173183 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114459388 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129934889 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117854722 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104558268 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137844763 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11042801 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107918542 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136126947 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108412878 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134316033 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11755636 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123870431 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129022482 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108800567 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141280885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111478422 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108645869 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125741758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110168898 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105033538 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142711094 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121655345 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14247552 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117822106 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109465456 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130161105 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110125038 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107651259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129582121 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114633292 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138149691 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109824511 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128924286 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130844851 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108695596 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116572785 seconds)
  done (took 8.905762947 seconds)
done (took 168.536185088 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.177271845 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215268855 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196198763 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156291872 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.09446746 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151926442 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128172515 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.197290312 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094617689 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095821962 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093598424 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.119673388 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.163124235 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094035002 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.117287121 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.098162133 seconds)
  done (took 3.073321685 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197342693 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343845331 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109723521 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120237985 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101804427 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099840699 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121394627 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102372167 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099455804 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12836807 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101424001 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095793745 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128444685 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096204133 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099556794 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120805097 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109692999 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099927652 seconds)
  done (took 3.168239691 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122524868 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.159220177 seconds)
  done (took 1.178179921 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133250395 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.216108138 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29539783 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171186643 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122077536 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141201825 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149787273 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133971925 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191059562 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134737874 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112883978 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097157746 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147807064 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105119722 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138796072 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099180909 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128365904 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135960655 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113953458 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10241016 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145043584 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104379195 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106535684 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13716416 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181574696 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135253582 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103873126 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103058217 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124589796 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115470271 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106654135 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138002814 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113156429 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180309451 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103549132 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177220721 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106989025 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121721624 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114112276 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099033194 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125358539 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104765069 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135846115 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098413283 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103859715 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126931574 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10391496 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102811188 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131161022 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108017367 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108002142 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129272515 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174794994 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109816269 seconds)
  done (took 7.945097418 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.884082535 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147828226 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099640953 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.001404648 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143763953 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113995572 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.869731688 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146831172 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254388773 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.893927503 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116603096 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106707913 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262209042 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260237003 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28652638 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361712966 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.736003859 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113335362 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131372572 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163680032 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105704364 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140785501 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116869401 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.520976166 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101616204 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099972909 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126958673 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108534262 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180796315 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10120009 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104953011 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195660635 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293551924 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214184709 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099814229 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120598018 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100788935 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186128767 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.277521604 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22428739 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173304091 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118674518 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100039886 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105615875 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136071004 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097596699 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18079429 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.190086673 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169028059 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127239295 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109467901 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108225076 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125684279 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176337228 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098567353 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362183207 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363254783 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120981027 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107792897 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113633375 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269758466 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123538405 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240494759 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124593497 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.2171545 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123404519 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8394608 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163318254 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120846652 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.105434846 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104304535 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128207993 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.105135646 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191589307 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.482204545 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128890762 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10546795 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099415924 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236044193 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122480659 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100946846 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183563566 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101440204 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106451386 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.129760495 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10634823 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190554749 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271464269 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.108107253 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107689672 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126681472 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111587514 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101950883 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234287335 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229310236 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177268632 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231256642 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106008173 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18070189 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186524977 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105332808 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.188258158 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106760993 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112217692 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127068673 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227858235 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156216234 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.104329818 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106327068 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128250318 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.138557494 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104761087 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129279778 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167558179 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.561336257 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187084265 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097727791 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126711923 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108391647 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182618265 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108055011 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264705658 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128721048 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165858242 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127671822 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098190419 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106735571 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18004175 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109947012 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128320159 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.105135297 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13125887 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259454222 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225833048 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132038998 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254965803 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177310607 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128927219 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17146964 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128507123 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188033757 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111302282 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104621544 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123840399 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826560696 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112661952 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106538129 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127720431 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184399287 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122527663 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104140548 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100458375 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.121430526 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.82222481 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105106522 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099176788 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102325093 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12857005 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106430573 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10504569 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128148069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178473813 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250006862 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110654783 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126755784 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103806287 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179661045 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102698465 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101259245 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1216881 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102889411 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10837293 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12643598 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104578522 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190574164 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155291466 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230763144 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.662766823 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.10232202 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101163773 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243505966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122213725 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329717557 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107204764 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236619057 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184740113 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098495347 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.386085479 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.163240242 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208497184 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105286364 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192941085 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098760114 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128266521 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156408088 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123076336 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108667171 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178192981 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110938619 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107412263 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.307558664 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103212427 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25272739 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099710795 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.189106031 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101985595 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106467729 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349961123 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101677734 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113417565 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177696968 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105442948 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124472882 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.689753286 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10202303 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110328206 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127578654 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.236283399 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186729402 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108827247 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1084522 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132588369 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156985676 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230291645 seconds)
  done (took 47.739755175 seconds)
done (took 63.996893531 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259805943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171182732 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.373710721 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17794253 seconds)
  done (took 1.971441131 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.274799958 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16677889 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.253030431 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098186019 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.257541828 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097801613 seconds)
  done (took 2.062052933 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.183426189 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168692331 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148476632 seconds)
  done (took 1.423535283 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209237712 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.206247387 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346068868 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.259496197 seconds)
  done (took 2.029626393 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.283945396 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117491547 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124503682 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.234300675 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.251047078 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207630663 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124324958 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176675889 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129736889 seconds)
  done (took 2.609974635 seconds)
done (took 11.019126385 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.216056595 seconds)
    (2/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.13606423 seconds)
    (3/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.226656476 seconds)
    (4/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.219102583 seconds)
    (5/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.239907044 seconds)
    (6/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.336753647 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.398984466 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.236607393 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.19864642 seconds)
    (10/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.370497254 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.139405157 seconds)
    (12/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.188176583 seconds)
    (13/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.118910233 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.165994782 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.245192353 seconds)
    (16/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.340955578 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086458481 seconds)
    (18/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142002485 seconds)
    (19/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.383137828 seconds)
    (20/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.175795749 seconds)
    (21/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.219091548 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.129794159 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.135311969 seconds)
    (24/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.319464577 seconds)
    (25/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.303040282 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.146032607 seconds)
    (27/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.134983646 seconds)
    (28/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.113540486 seconds)
    (29/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.214902956 seconds)
    (30/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.37865262 seconds)
    (31/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.382012964 seconds)
    (32/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134898439 seconds)
    (33/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.101742687 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125636996 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121787554 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.226781772 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111317019 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.13326981 seconds)
    (39/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198891075 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103134833 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.128547422 seconds)
    (42/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111983934 seconds)
    (43/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.263981055 seconds)
    (44/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.134714756 seconds)
    (45/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.086923274 seconds)
    (46/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.226150127 seconds)
    (47/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.197175423 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156169999 seconds)
    (49/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.147522111 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.231002699 seconds)
    (51/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.106366948 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.12228231 seconds)
    (53/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.195897257 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.15911765 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078319666 seconds)
    (56/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117817706 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.127419416 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123814907 seconds)
    (59/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078214346 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.099271073 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.13657016 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107813221 seconds)
    (63/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.265309366 seconds)
    (64/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081474187 seconds)
    (65/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.130577149 seconds)
    (66/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085546214 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.145536384 seconds)
    (68/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.198817321 seconds)
    (69/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.134042674 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.08161387 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.132596471 seconds)
    (72/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081172613 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.109433469 seconds)
    (74/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081779464 seconds)
    (75/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080923419 seconds)
    (76/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.21608083 seconds)
    (77/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.14954695 seconds)
    (78/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.128936648 seconds)
    (79/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080718644 seconds)
    (80/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.12907172 seconds)
    (81/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.145432461 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122869326 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090052094 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.126544165 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107051113 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.124023663 seconds)
    (87/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.176875635 seconds)
    (88/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.207456339 seconds)
    (89/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.111294041 seconds)
    (90/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079152244 seconds)
    (91/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130013112 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086718779 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126157803 seconds)
    (94/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.17667554 seconds)
    (95/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085148608 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129975257 seconds)
    (97/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.083663991 seconds)
    (98/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086837928 seconds)
    (99/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.139871069 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134731519 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10172781 seconds)
    (102/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152108938 seconds)
    (103/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.167422827 seconds)
    (104/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111056441 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128466267 seconds)
    (106/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.155900062 seconds)
    (107/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086503877 seconds)
    (108/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079253654 seconds)
    (109/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11238147 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.129474705 seconds)
    (111/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086514493 seconds)
    (112/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104686287 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.13581315 seconds)
    (114/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087991776 seconds)
    (115/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.146015146 seconds)
    (116/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.088803122 seconds)
    (117/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.085929293 seconds)
    (118/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.159943803 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111104142 seconds)
    (120/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.110527882 seconds)
    (121/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.102718229 seconds)
    (122/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.096697143 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.123735288 seconds)
    (124/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109776878 seconds)
    (125/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.135565354 seconds)
    (126/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.180723261 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123718247 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148416639 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104528586 seconds)
    (130/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10743545 seconds)
    (131/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.109652841 seconds)
    (132/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.108754053 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112286556 seconds)
    (134/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.218974005 seconds)
    (135/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085776621 seconds)
    (136/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085269154 seconds)
    (137/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081910416 seconds)
    (138/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.084763083 seconds)
    (139/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.106273082 seconds)
    (140/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085926499 seconds)
    (141/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079907578 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104067354 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.127517263 seconds)
    (144/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085963585 seconds)
    (145/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113845622 seconds)
    (146/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.08089688 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.109587819 seconds)
    (148/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.087069661 seconds)
    (149/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.087232183 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104223869 seconds)
    (151/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.108655647 seconds)
    (152/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11288321 seconds)
    (153/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.08561375 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10085242 seconds)
    (155/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.162295079 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114763476 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082689566 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093971098 seconds)
    (159/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081077 seconds)
    (160/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.162759594 seconds)
    (161/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085643503 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110692009 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.148859572 seconds)
    (164/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083274277 seconds)
    (165/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.139793405 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100934343 seconds)
    (167/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104420471 seconds)
    (168/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079597412 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103982915 seconds)
    (170/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086847706 seconds)
    (171/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.10864978 seconds)
    (172/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10897105 seconds)
    (173/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.101101613 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102775011 seconds)
    (175/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.135917074 seconds)
    (176/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.086085738 seconds)
    (177/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082697737 seconds)
    (178/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.082292169 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127784616 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.101782915 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122889999 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.126831003 seconds)
    (183/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080469451 seconds)
    (184/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101983011 seconds)
    (185/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085864271 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.078656929 seconds)
    (187/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.106815888 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104763392 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103828846 seconds)
    (190/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084968417 seconds)
    (191/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.10575437 seconds)
    (192/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080818588 seconds)
  done (took 27.382373556 seconds)
done (took 28.309279903 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.232165696 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130893181 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111496022 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111024453 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.232601157 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11831756 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.15184389 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113299394 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120359021 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.136515335 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102423849 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125156558 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.135991456 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206773292 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138241393 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103413989 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.103072814 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.145148765 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127693263 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128256463 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.233403773 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104576567 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.14767653 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103252795 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233772814 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105018801 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111334619 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.136652922 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124611865 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112100848 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.136070655 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104299366 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127772463 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.150318208 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102879982 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112276638 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101535049 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.110712332 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113192118 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113510244 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.148217521 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114717242 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11214415 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.12775214 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114709909 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111779857 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12467612 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117734245 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101898922 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111931971 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128641429 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128958299 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112537915 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125351694 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101364147 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10415703 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.144634035 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103185189 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126771148 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127853409 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104418027 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103342262 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.13632844 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103856992 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112461508 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103139652 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.13733583 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114512048 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110043044 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129015079 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103444928 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111962352 seconds)
done (took 10.083837058 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.114039292 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147332982 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.233650522 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.235453265 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132643963 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.145039603 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116778957 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127081314 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.141082326 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122189001 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141201685 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159716051 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.240415489 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119785345 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119091052 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.140154555 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11599869 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111154917 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.235170199 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.129639949 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153727929 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119947865 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.154566164 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121539478 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107001526 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.165953157 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11147074 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114865165 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.13042266 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117379173 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127561752 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.130942 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111537299 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125970837 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149360613 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117952989 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118967712 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140505577 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108826898 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106388179 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140260713 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123351929 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.110384568 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143750892 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115718277 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.145328397 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116541496 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119774449 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107586656 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138341964 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109698657 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133898032 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143928568 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124414425 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.141345907 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120825211 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120612125 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.143112193 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112441533 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119854138 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107089666 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.132315639 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109879615 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153011217 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112479248 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120424462 seconds)
  done (took 9.791868435 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132530261 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13858592 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14210592 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117968773 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112687584 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124329008 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101964852 seconds)
  done (took 1.847004776 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108314402 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.2439526 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217672862 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.242174721 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.241163279 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.253561295 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126695301 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102508496 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.16421767 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112935661 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.245628233 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.272765133 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114028258 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143568396 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.22184972 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130143854 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.221762558 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12984214 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117639122 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.246299337 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120072601 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160149137 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117352353 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.104582922 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.241254632 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103979284 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.294350071 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147830111 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114119191 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.119251058 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.142642161 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185065363 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240571164 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117316735 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137183577 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.217141369 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.241255958 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.143149278 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.231873969 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.134753937 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.214668918 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144756676 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.120135249 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117826366 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.144618321 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.229968141 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125024139 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119402754 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.143129653 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.225033924 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.140428472 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217069783 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142864257 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118114252 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114742105 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145055457 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125506324 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118372455 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.249989681 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146715584 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.219445433 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.243932556 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.242510447 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.246197788 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128508171 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.244451966 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.204678821 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144138581 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113348003 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118794366 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.245551127 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143288613 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117174328 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.236158523 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121506652 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.248395345 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.246850804 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11597208 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117638214 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.132073638 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118458429 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.104961253 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.236909736 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11882796 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140318333 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124586723 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117482328 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.143658073 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110441348 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127311511 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.142552765 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117391045 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123145478 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142499266 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121792443 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.250319402 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113969311 seconds)
  done (took 17.038725386 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113052574 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.10534971 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108541316 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129367708 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10580263 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105025576 seconds)
  done (took 1.667760195 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148498493 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119124855 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15089782 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.119977827 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166124617 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.249401688 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.2588172 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11268472 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165164159 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130948635 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.253722069 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.254449327 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.253985441 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123089465 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.258166629 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122851377 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.259834857 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117257579 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126962653 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142477336 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.119174443 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14749222 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117647363 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.244602613 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120975091 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121562805 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138689773 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128747937 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126817314 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140442231 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123839351 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118731998 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136099779 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112890822 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.257291797 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.111867507 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14036338 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122842647 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122743682 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146038543 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.232513227 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142508765 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126948475 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121228894 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141293945 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112968136 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147635463 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113416796 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.261448191 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122649675 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121221141 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145629273 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.140610758 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121533402 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.138783361 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113575337 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121169738 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.258389632 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.150815407 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11265867 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.12002469 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.146766918 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115202568 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124035466 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146053769 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123693663 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112064949 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.147422937 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117518925 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.121003237 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147441445 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121536824 seconds)
  done (took 11.823007171 seconds)
done (took 43.142698804 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.691092352 seconds)
  done (took 2.684372923 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.132141804 seconds)
  done (took 2.129607962 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.567605559 seconds)
  done (took 18.598762595 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.440428074 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.473751446 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.163128147 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.148987102 seconds)
  done (took 3.228220432 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.848849284 seconds)
  done (took 1.873949334 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.350161707 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258862247 seconds)
  done (took 1.61635708 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720837265 seconds)
  done (took 1.740904064 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.571888296 seconds)
  done (took 2.577549421 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.30641627 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.248159351 seconds)
  done (took 1.571081211 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.650649709 seconds)
  done (took 1.668802437 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.986729877 seconds)
  done (took 20.010186841 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269477494 seconds)
  done (took 1.291954725 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299341836 seconds)
  done (took 1.324361359 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.492476453 seconds)
  done (took 4.516302387 seconds)
done (took 65.844826917 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.126452603 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12365504 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122050786 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.144933235 seconds)
  done (took 1.528356504 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.132083765 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12090476 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145891946 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119414906 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126646691 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120205649 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143523349 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122507828 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119571979 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146735 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120334087 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117880074 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146713559 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119404291 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116146753 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.14699914 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123746043 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118322519 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144334765 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121709751 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120326265 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145844943 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123254291 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122009998 seconds)
  done (took 4.10783173 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121165618 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110530885 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111549032 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132142782 seconds)
  done (took 1.500748734 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.132005264 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132139429 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153277173 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126776596 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132965302 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153835624 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118573039 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116920315 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141820199 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128142902 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135825792 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155836437 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133836921 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.1214109 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155565732 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114283527 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120216614 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155638437 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126861104 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128498882 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144104429 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126385345 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124284031 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152567096 seconds)
  done (took 4.252989504 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.20150244 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132252223 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177267933 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164271029 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.180341578 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117939858 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147340664 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150504055 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12660325 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.120347007 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148902944 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166350833 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150135852 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121074684 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121740062 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150944334 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132467404 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124147771 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191059981 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124659428 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150294322 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130875861 seconds)
  done (took 4.257995308 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.129628775 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110318009 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.130699651 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.107588402 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12280137 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134192833 seconds)
  done (took 1.766565217 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113713413 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104237138 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103311602 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127379047 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108053336 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103687068 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102252877 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128877841 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104484865 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102647201 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127561123 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103702084 seconds)
  done (took 2.351015377 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213578626 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145686404 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25808673 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.394244897 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187351129 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189320862 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285420164 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190134793 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180268873 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163314483 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212629832 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163225715 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181028956 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189143326 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166002604 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161596387 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193816966 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210947775 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168680738 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241403883 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159296095 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203537964 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190905491 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176343514 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140450682 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189351593 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119646709 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129643581 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19562334 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19308845 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179358143 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176438568 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141924123 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22041965 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260776458 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206775387 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271387025 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134628433 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197013252 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191899682 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260876261 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166008471 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194624191 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180808956 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128599314 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215404976 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154126792 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.213240874 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133739283 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171693132 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213894867 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182289312 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200020408 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137134129 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.325745404 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158416723 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143433114 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203076453 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190148203 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22920282 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205044929 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.124095599 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19904221 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192599702 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240983857 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.169044052 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166666026 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150111897 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167824344 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233128599 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209559051 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161283498 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.240483095 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131084686 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198819277 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195360737 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159458755 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234767563 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172429958 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146292067 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153367618 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163269156 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126511618 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.186856513 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148573223 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243266549 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132619727 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.340911509 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205208148 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159097117 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188827225 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162135143 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1909064 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149307185 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102314756 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170784986 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.161138717 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187472024 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128828952 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182628462 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140849824 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125744273 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180426156 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12095784 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196361283 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13712023 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191888438 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173272313 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.158989282 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180003058 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175886263 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161836501 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196321823 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221722888 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130772007 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133125309 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246321337 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197096922 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138336377 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201503767 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222726158 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.15272403 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134779011 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193200546 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222182793 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144657572 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226514489 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138325481 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161926736 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142175831 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201301925 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1606624 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.18665097 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128650927 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193976552 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193192514 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152539649 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140603145 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209373342 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133948737 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150681382 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13878797 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1360335 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.17004369 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151614811 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.167412979 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157989294 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195023473 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167690877 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185417643 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135979792 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202559278 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131820464 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.196596508 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149752074 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117419401 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.202707272 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22527278 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129642114 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20898733 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.163463315 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21109947 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200415919 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130095175 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.214112283 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128681588 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121038437 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189995809 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168871894 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191438171 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216763598 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207177183 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.167268826 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190489796 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150007413 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199211506 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183197458 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184027732 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.14266053 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202181716 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198145868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12235676 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122499935 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.15425111 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136338008 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130429155 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164887658 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182328074 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192448146 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204997228 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169265729 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16319254 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190063694 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153408335 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161129638 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203026935 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139054973 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217467738 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216919135 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180032181 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167670553 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163932927 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.146373082 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12731598 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134325671 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189316393 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137469367 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162790254 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142389685 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218311002 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17586552 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177214015 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21680264 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167196192 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.228739702 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119141128 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189018171 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170596484 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196730813 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.18691944 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156708127 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163090433 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.221245942 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142182186 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221926895 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195510547 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181068416 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226011004 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.164973214 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156726005 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149773166 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188448475 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138675595 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190077383 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146331038 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12941101 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180935858 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138474592 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168928116 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218920158 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144981774 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207104619 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.16143219 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199992611 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125832831 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169446129 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173506701 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17333538 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105958656 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198278217 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19652583 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176902873 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157452145 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201733474 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130920419 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.344046893 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187435288 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206027945 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163656845 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138714777 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17148256 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189690323 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190705327 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185340468 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168254776 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208711667 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200634941 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141763418 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158377821 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149346086 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179384614 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.143117222 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.178993502 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163216635 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170353926 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191758673 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165544515 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171699348 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20625465 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144616993 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.178050016 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139431837 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254504222 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194045766 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175335844 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.192301619 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.167004827 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210409369 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124198615 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127859556 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.159802025 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186218163 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156709383 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178637102 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.193157453 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21004361 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201899068 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164272775 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141347444 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.155851592 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16733322 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18001996 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210784625 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136213132 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138376325 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218313306 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129222927 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158872857 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161773016 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317132507 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148820601 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201746535 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10802917 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307932594 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128892368 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15899878 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163487201 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198588382 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133860877 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.208927825 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175140289 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167265893 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163193308 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134671106 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206548542 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209807406 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168482109 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20573119 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.173974288 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164218369 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189208278 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175797146 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175045304 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.150246899 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187765567 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195398521 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204650257 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.132062604 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196911214 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169627367 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199083696 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203936478 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139550358 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212430645 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127804451 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167234884 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165311315 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125348203 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188745161 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192576864 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130958413 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202585329 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174099164 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131113949 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154924729 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148637826 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192926768 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142456314 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.15613012 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188307257 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.157795066 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184025148 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239023412 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132803131 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195391677 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147040067 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15900786 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139943843 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171781901 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132499182 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.175439279 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206855355 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.132721207 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207782708 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167002871 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194715823 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159190495 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172727481 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.263334324 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.157769993 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191897866 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178783559 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227188737 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151070956 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205179933 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170301824 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178766448 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166248725 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177824778 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220380888 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19341873 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.167941608 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160347556 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144275051 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137777437 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161427162 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152780741 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197923213 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14310479 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.166160934 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.16921656 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173390346 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.148757534 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141830745 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227793283 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179717477 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190516615 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217932113 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139961653 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205434574 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20672559 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128999016 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194174482 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173733127 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17202837 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154954132 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134042116 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.166257664 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244575514 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124983701 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161575296 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203575119 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170557652 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201587018 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.135154268 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208112917 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140569901 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204458192 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127544152 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182100601 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170931234 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160871505 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128713225 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200638643 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162909893 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192025257 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143433044 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177842169 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221813682 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123697014 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161605117 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288462311 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188625243 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224600978 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139046313 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136470706 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175968048 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161143816 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.196097283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172290764 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.158264329 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13051541 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.172804237 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158864126 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.167144998 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172216313 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207415832 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163208743 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214812651 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135621785 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281798824 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143388764 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199855093 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117376728 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129589663 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168213988 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136882142 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142583425 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208715647 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243512391 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.189668044 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.149521318 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136032242 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.154452741 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132247055 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190301434 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155089135 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195688781 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148805934 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105014401 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170379836 seconds)
  done (took 85.795626596 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193071829 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.155862278 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16735089 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221513155 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195154076 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291296889 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228704014 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246547902 seconds)
  done (took 2.812450941 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125326761 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160400006 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142561704 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143193838 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111615101 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.488247213 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.160766813 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120180366 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162610413 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.150573338 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135937677 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.575295993 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.121103249 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144528155 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121267306 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133614966 seconds)
  done (took 4.105292789 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.156828184 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531559915 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.861486017 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.284989383 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.266824503 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.212414931 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.753644021 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.207422815 seconds)
  done (took 12.386775302 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.182136639 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.171815354 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.456078458 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.314747008 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.185399764 seconds)
  done (took 2.433854822 seconds)
done (took 128.313223145 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.13081042 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126893092 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.125013104 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152289617 seconds)
  done (took 1.644300089 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.20145837 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093747676 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095295708 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119750284 seconds)
  done (took 1.629472225 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.474944195 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092235611 seconds)
  done (took 1.720348866 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.158600057 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143299927 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165529639 seconds)
  done (took 1.602916824 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143088447 seconds)
  done (took 1.265234078 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124735974 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125169129 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.273456353 seconds)
  done (took 1.653596383 seconds)
done (took 10.646549537 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126046056 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.931366063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434021114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133567264 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.713638375 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427182814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.403287597 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176247762 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177386454 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137480401 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132656953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.69204366 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.415578825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.879465468 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.373580886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.90778988 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698540506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112047559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145547489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113205318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.384713866 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13824705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113509825 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114393387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.720060002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422406718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110247051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919541095 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110526136 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114712422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428105906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111407254 seconds)
  done (took 20.934260007 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118992855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.170471748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146932022 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113073876 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114786594 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139766656 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123528698 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124489993 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205657228 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111335387 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161813315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110900695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117890829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139119786 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136757405 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111452372 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.142461203 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113980346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119431807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140384403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133644369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110826314 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139525355 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114428866 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111731107 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159871797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111565724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124044056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136951913 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115876747 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11727427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112177254 seconds)
  done (took 5.286258469 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166348249 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179716778 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147946048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150012792 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188984019 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113660124 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22462619 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153002697 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207730606 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111698422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134828947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139596872 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151942785 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113014861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165433886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112262739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115755572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.141012415 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120528246 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113206086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160990514 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111044707 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113823762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141617869 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112401933 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135728712 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139517741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125710469 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112422257 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143628599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117927705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112881673 seconds)
  done (took 5.616479862 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133112946 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127657364 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133702826 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163616337 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.1207949 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125381237 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153971046 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121577541 seconds)
  done (took 2.218420652 seconds)
done (took 35.187844699 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142702224 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12969694 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131611988 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.15534678 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.254201599 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.118812455 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.131379347 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11815874 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.155273725 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132708845 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110872619 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.150467388 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13216548 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123859885 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.25497111 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127457199 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.259615207 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.25749287 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120858036 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125360774 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.148183578 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.231909519 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.153357839 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119950589 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.256037237 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116153947 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.249559459 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123598399 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.123941948 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.140767342 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.2288636 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.154331916 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120052976 seconds)
  done (took 6.422886249 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.247256024 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.152051459 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121120291 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121048075 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120766335 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149525927 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248569877 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150500912 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119843313 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119211528 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.148883737 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227578451 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.155459434 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.11623622 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122013421 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.110924162 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.277533616 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122020265 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.142344218 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095141708 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116228816 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.149232384 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.260756414 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.145540295 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119755452 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.119988164 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121738176 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155630335 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.122611682 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121663097 seconds)
  done (took 5.652839443 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.132335613 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135103144 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.167207017 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.189485339 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150893071 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161849632 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140414853 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13536456 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171473971 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115418587 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130650064 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180953249 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13161534 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125447726 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142889889 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134545182 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138195297 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144687324 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123648615 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132084953 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.164858604 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132500648 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137408954 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152441243 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.113073876 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121797472 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154315853 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126301466 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12283671 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.15837014 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116424861 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119088398 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115652346 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178529407 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11657502 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157263713 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141499 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12890012 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.155972418 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149978919 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119434322 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.144567406 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141377895 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169835284 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.144313393 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12875506 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126574197 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.159170031 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112989159 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132903912 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185344869 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114181559 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136960363 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.140847241 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112714473 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122949644 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114905534 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.146409051 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.129340959 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11642088 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.169026243 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122429325 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125529161 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144502384 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.126397498 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113843597 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113226968 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147717387 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14238298 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121804735 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180676747 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11477514 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125958545 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.156008177 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126208927 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126175752 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.141721723 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126456234 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125549136 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.149272125 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128516342 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118808195 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.14512439 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132771353 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136112281 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.157179136 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.127665606 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129232355 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.147083788 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.117634372 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132459791 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.114957705 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.148202576 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.127970603 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114971394 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.147922512 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127802704 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.1263528 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.142082174 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.14100578 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.118216919 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113975876 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.168586801 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118825306 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119056341 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.151820494 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.158455835 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113723609 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.15469956 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129100495 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114371737 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.151220836 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119426709 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113324327 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.163284451 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132008337 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122585282 seconds)
  done (took 17.134891036 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.363385665 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.342041889 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188814584 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.430144433 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.129559771 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.273682707 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.343373763 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.344295179 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115509312 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179713076 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177433667 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.310211306 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147073451 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.144011888 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346168601 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.402839984 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.17618253 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151915338 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180560251 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.130263213 seconds)
  done (took 6.041499551 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.142853711 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151190037 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166397347 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14365465 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12666918 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160999245 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115216187 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137367469 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154970615 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125070933 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117695903 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160299226 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128934692 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133017264 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.15828612 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150240125 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123260856 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148063451 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139407533 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120102773 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13274621 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140667958 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124463314 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167316668 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135018357 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125814672 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143173304 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120078747 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121931637 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151778449 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119867058 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133361163 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150534855 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108127298 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127810318 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129902133 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150579763 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118323147 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121178608 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146465971 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13239407 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.13010614 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122954392 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.131077702 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134842636 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113571426 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129492305 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.155954678 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108332421 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13491136 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.156779783 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130077086 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12288951 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165017633 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.122857103 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131356229 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.155156462 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130119759 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.121451617 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.140801634 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114203419 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119274036 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123511306 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158599708 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127341333 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.161442597 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.132484725 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116449864 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119556824 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.148207045 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119278506 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129207701 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163444039 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124409186 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121939948 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156089262 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12354979 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09632447 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.15245528 seconds)
  done (took 11.826513693 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147101109 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127262482 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133459989 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179865051 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130766769 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120194545 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154384786 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.136540617 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129732699 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.161702965 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.133266807 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129238292 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166446306 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127093257 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125158583 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160342526 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12904567 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.154297345 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161022012 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.1437298 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.159227371 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120719681 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128868273 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126816895 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173589812 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127580819 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141418542 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158861961 seconds)
  done (took 5.156159593 seconds)
done (took 53.376280881 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.3123657 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.563858575 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.271592986 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.272186288 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.287505066 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.292443892 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.271445133 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.287381796 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.742565936 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.239290974 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.274588968 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.268939367 seconds)
done (took 29.250930443 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.387322857 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.490629429 seconds)
    (2/2) benchmarking "String"...
    done (took 1.637177605 seconds)
  done (took 4.293453937 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.262888389 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.261562591 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.596238879 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.263079055 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.25902407 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.259744273 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.262128655 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.264371817 seconds)
  done (took 16.326469448 seconds)
done (took 26.429808917 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.31129615 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.475484697 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.505341916 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.249499675 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.266591862 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.25832433 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.26158522 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.290066495 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.272780778 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.242178841 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.740405327 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.538301065 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.267130478 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.661319851 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.245549242 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.287870756 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.257060343 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.497698904 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.260641873 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.292990401 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.237052561 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.241332295 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.285652387 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.26702411 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.268800732 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.261662604 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.26313842 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.25798602 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.449262856 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.283046399 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.29645369 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.259803988 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.267885113 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.259809017 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.259375371 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.268094986 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.454076318 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.271612821 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.239723291 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.264553195 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.450055765 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.27015265 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.262794801 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.260677493 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.236688618 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.282514697 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.239842232 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.455117512 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.283015389 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.272472498 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.336892143 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.639476361 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.263220343 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.270304066 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.26996785 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.473452036 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.275692111 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.308978747 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.291117677 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.273751711 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.261257734 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.259108717 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.312803325 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.265156484 seconds)
  done (took 147.511197063 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.262226154 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.264329773 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.262780274 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.276638531 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.263120541 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.265854966 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.26523296 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.264417982 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.26752103 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.264649436 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.263583169 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.259068699 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.263134858 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.286017377 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.274568785 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.289569435 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.262974224 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.278138302 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.270561431 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.264193512 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.269478263 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.262669226 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.262203385 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.2613472 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.307250594 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.338374454 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.29149887 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.286590844 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.274306111 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.262885525 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.302897875 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.268065024 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.925199915 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.220951701 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.278539471 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.274658949 seconds)
  done (took 82.614638567 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.265245671 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.264115151 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265375227 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.296765741 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.264571982 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.807234565 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808027474 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.239619089 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.975009113 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.525611742 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.507348874 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.265757747 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359671017 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.275504518 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.264014928 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.364806586 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.288274228 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.265347849 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265958611 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.808693899 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.277840778 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.319208121 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.43373693 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.273967939 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296956058 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.658664625 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263109785 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296374839 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.593495164 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.306921363 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.262728871 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.569226575 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.268768257 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.265907766 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.377769198 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.26462988 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296102039 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.265265157 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.547185226 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264836751 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.268531564 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.271148098 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872374483 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.26582298 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.806355333 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267418084 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.210522162 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.265857202 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.266781621 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.256917727 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.918929007 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.26762642 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.26546623 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.268153793 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.266832535 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.265476637 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.296854859 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.266154865 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.340696328 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.115502049 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.265740986 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.268847666 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295505665 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.266800967 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.28562885 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.261505671 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.07421719 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.324731309 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.496835666 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802815288 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.266072802 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362585214 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382497663 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.264419658 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.268878745 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.265759144 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.26549717 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.378215903 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.264876211 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.942018395 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.435078371 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.277786721 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.51033466 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.364402205 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.265288065 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578550876 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.267255983 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.266498973 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.982242853 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.266056668 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.358993137 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.265936681 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.267253888 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27056185 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.937107016 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801658717 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.501409362 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.268301158 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.74813578 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.269316441 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.269938237 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.111985191 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.78508957 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.891487947 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.270388155 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379176291 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.441190811 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.280082823 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.267347475 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.520840883 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.269889209 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.330377417 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.264147068 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.671978749 seconds)
  done (took 383.328756271 seconds)
done (took 614.61443262 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.250217993 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.248282341 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.24804942 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.248995281 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.247835846 seconds)
  done (took 12.40606288 seconds)
done (took 13.569858011 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534022588 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533439972 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.358254845 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.535493026 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.327109334 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.54767586 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.516344222 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.318624456 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.447815117 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.378207871 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.447926583 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.350162615 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.331328097 seconds)
  done (took 19.788239274 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.641152203 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.28048483 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.4048526 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.602850055 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344126093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.633193998 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.666747706 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.283379193 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.514125435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.323390775 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.322224914 seconds)
  done (took 19.180194074 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.646237416 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.2773514 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.403253375 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.64539527 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.344060303 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.66713309 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.671913865 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.281891363 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.520197017 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.323820718 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.322461676 seconds)
  done (took 19.267890072 seconds)
done (took 59.401612665 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.333092427 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.397368338 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.326436693 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.311217229 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.31195203 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.312117973 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.315294075 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.311042068 seconds)
  done (took 11.781964732 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.310587052 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.31138429 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.309489915 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.309353096 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.309258251 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.31217601 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.313003141 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.309561223 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.310964265 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.30947448 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.311427661 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.312233909 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.312632982 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.313485395 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.312244455 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.310256283 seconds)
  done (took 22.144591292 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.315803078 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.31287184 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.310679033 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.315650195 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.310378576 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.311403705 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.313572906 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.312501261 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.313316728 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.312191725 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.312147585 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.312382462 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.312089128 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.31371203 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.313751281 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.313919598 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.313482672 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.313371623 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.315253288 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.313412131 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.314107262 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.316516017 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.312544494 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.314342487 seconds)
  done (took 32.687907311 seconds)
done (took 67.783513604 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.275167115 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.287957079 seconds)
  done (took 5.732001814 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.429816669 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.410281992 seconds)
  done (took 4.012050485 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.314061096 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.31512457 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.312890696 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.313824474 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.312533668 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.313200093 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.312860526 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.313391668 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.315423491 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.314308265 seconds)
  done (took 14.307366671 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.314869719 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.3138925 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.313411363 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.313697713 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.313370716 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.317003929 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.317043948 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.314057745 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.312859198 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.316143903 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.31340836 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.315686582 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.315003325 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.315380888 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.316581879 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.314397034 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.316269758 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.317306063 seconds)
  done (took 24.839213912 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.336596784 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.342109286 seconds)
  done (took 3.849489939 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.495891621 seconds)
    (2/7) benchmarking "second"...
    done (took 1.397181164 seconds)
    (3/7) benchmarking "month"...
    done (took 1.480312266 seconds)
    (4/7) benchmarking "year"...
    done (took 1.467775547 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.396379246 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.343196017 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.397100427 seconds)
  done (took 11.147305604 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.314072271 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.671753999 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.847873393 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.507973465 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.30215232 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.332291907 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.260355524 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.328694172 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.332142656 seconds)
  done (took 15.06837748 seconds)
done (took 80.125886611 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.279587579 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.327112337 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.294056808 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.311478646 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.732784386 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.337041603 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.28072229 seconds)
done (took 16.738438946 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.26163369 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.263735913 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.261838255 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.288985353 seconds)
  done (took 10.249810469 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.284114062 seconds)
    (2/2) benchmarking "read"...
    done (took 1.691697736 seconds)
  done (took 5.146725293 seconds)
done (took 16.572598164 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31929151 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.320397657 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.316090825 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.317895034 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.319574577 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.320692317 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.317982615 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.318941326 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.319521219 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.319205047 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.321211936 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.318241516 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31807704 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.321306851 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31937958 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320143085 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.31917718 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.320178355 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319510952 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319220901 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318509498 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.319270907 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.320274456 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.319581282 seconds)
  done (took 32.835920896 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.319963104 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.319169079 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.320564857 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.319345358 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.318539809 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.321065689 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.319294374 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.322626013 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.323922337 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.31904965 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.321819625 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.321594387 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.320679118 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.318976317 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321740286 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.321783377 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.320344717 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322118196 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.321262361 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.321413987 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.322437022 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322909988 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.320023028 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.319837041 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.320823549 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.321485784 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.321625886 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.321408889 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.32002219 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.321916565 seconds)
  done (took 40.804283144 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.328930934 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.327424179 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.321184419 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.322320178 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.319482107 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.322199841 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.320544463 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.32141713 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.318964514 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.321990457 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.320903447 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.320798616 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.321553321 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.319145542 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.321595854 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.322135657 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.319740869 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.320762927 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.327181131 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.321847702 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.32337988 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.323088152 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.32214334 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.323263035 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.322480184 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.322597099 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.323595829 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.322779593 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.321172546 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.320165993 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.320751333 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.323779442 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.322119663 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.323628096 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.323068946 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.324023817 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.328436947 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.328739569 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.323234051 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.323314369 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.323330641 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.326316566 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.325483918 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.323989105 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.326097124 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.321762146 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.323323797 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.325253512 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.324428617 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.322350489 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.325166559 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.324834045 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.324422121 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.324100502 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.325600553 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.325867207 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.325257562 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.323866813 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.325622903 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.327563722 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.32648202 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.321789105 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.324484419 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.324717759 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.323175105 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.323220991 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.325817829 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.323478985 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.326726185 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.327306846 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.326335982 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.325252185 seconds)
  done (took 96.478145862 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.325535042 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329578433 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.327148375 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.326665004 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325334388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.325262241 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.33359717 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331100205 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327205715 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.325103283 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327341138 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.325207696 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32637656 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.326499201 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326494102 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.324299969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.326058502 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326724998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.328331487 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.327795804 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.329250179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.328324223 seconds)
  done (took 30.379793548 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328491773 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.327650325 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.329563487 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.329753385 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.32770934 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.329388883 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.325807632 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3282511 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327670788 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327875563 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329297671 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327405182 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.33041611 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328002325 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.325907156 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.338717445 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.328284065 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.332586567 seconds)
  done (took 25.104098085 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.32824677 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.328157792 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.329888808 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.325338229 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.327755645 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.32807042 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326783036 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.330713633 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.328077404 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.327367119 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.327558274 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327759557 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.329303398 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32859884 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330955773 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.32858103 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.329278115 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327822694 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.329857728 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329828605 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.32787228 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.331492853 seconds)
  done (took 30.413326514 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331030014 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.331228783 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.326773747 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.329186694 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.328791951 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.330691285 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.331655722 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.32865122 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.330087855 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.330711538 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328181607 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.332436059 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.332545919 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328717499 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.329236281 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331936904 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.330864421 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.327623017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.332344078 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.33008618 seconds)
  done (took 27.787963889 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.333346022 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3317359 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.331168649 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331784231 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330923856 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.330687233 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.331468757 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.332080218 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333413838 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.33101004 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.332031888 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.331015627 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331664592 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.331677862 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333076853 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333568536 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.331123531 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.335765952 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.334024879 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333176516 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.334690745 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.332530136 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330990135 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.334098281 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.33346964 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.333092148 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.335959203 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.334300123 seconds)
  done (took 38.499658512 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.334267996 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.341981267 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.333729729 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.333160453 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.332558142 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.333181265 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.333468174 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.334421786 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.335075501 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.333962161 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.334416967 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.332495215 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.335804155 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.33562173 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.335043933 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.332989063 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334755627 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.335200238 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335503768 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335357032 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.335909755 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33497458 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.334470187 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.335112797 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335066352 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.337617584 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337552282 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.335262816 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336340047 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.338981445 seconds)
  done (took 41.240583458 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.36317223 seconds)
    (2/2) benchmarking "in"...
    done (took 1.361449944 seconds)
  done (took 3.912026942 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.337295685 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337227381 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.334836154 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.335662866 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.335847387 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.33849968 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.334935678 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.33710886 seconds)
  done (took 11.881076987 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.329639055 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.336807774 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.335286981 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.336886695 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.337231221 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.327450509 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343910493 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.342214887 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.328567062 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.331411767 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.33698126 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.334686625 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.335084022 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330508719 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.330106224 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.337843311 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.339777844 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.336414917 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.338449254 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.339414042 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.337643704 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334083126 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.337792327 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.343128271 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.332120097 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.349965593 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.345497217 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.342769008 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.331341157 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.343771859 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.334169659 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.339242441 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.339935826 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.340058886 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.338671698 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.339222816 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.348587974 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338797831 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.348770259 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.343031261 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34216914 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.337961901 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.336278098 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.340355781 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341898087 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.341950048 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.340897959 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.34146989 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.333287285 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.338552898 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.348440399 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.33184618 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.342212931 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.342371541 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.341949979 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355195448 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.345993579 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.33680512 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.339936035 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.350444215 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.358325734 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.351456565 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346500208 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.345891122 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.348525884 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.357641709 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355020006 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.346575776 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.343479154 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.343116817 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.349976976 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362583189 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.358609429 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.346231947 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.341710702 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.341911775 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335000491 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34473462 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350760666 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.350956781 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.348157472 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.341974004 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350845174 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35390988 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.335396911 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.346118386 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.344593192 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.34485782 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.334142352 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.354069956 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.35167377 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.343721293 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.335062092 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.338071203 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.340089057 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.342804277 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.333655907 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341373648 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.348114868 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.34267102 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.344876468 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.339130277 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.351747174 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.34995812 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.343387242 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.35356619 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.351636057 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.337762714 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.353922451 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.351242292 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345135719 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.337119266 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.344947147 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.347525198 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.343375997 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.349677079 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.348060811 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.34680269 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.352144851 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.345821001 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351766241 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.367280783 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.350432132 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.343706278 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.343830455 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.3541428 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.346163783 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.34766537 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.351394266 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.346671808 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.345098703 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.347071998 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.352064951 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.340137597 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.347883973 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.34229241 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.349518469 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.347761891 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.344688735 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.349959936 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.348153072 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.345743268 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.353300864 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.357607207 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.350398609 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.34993151 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.36210757 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.345582843 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.351860875 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.352460533 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.352181936 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.347420926 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.341775795 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.350182589 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.339619095 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.350417047 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.339497502 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.351460475 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.34798217 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.347008513 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.349913491 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.339748512 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.346468151 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.350938622 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.355180432 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.347979377 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.351552317 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.347492164 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.349875567 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.341331115 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.34976871 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.339848036 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.346996011 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.355620013 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.349485364 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.348299739 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.352012851 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.355960699 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350219815 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35029266 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.344222544 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.353350031 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.354233663 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.358981404 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.357560972 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35175318 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.348775357 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.343137489 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.344466709 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353215308 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.345761217 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.356493448 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.362048204 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361981366 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.346175307 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.351695213 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.343959871 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.354688889 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.356712401 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.35817355 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.348840241 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.348569885 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.345238175 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.353237937 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.345920945 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.353726057 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.34153121 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.352278736 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.35224193 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.349316069 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.350902862 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.345239224 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.350717923 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.352786482 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.351682361 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.352710705 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.345663649 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.35470167 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.343535376 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.345734049 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.356412083 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.353403041 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.358951372 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.357613213 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355948127 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360447373 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.351586818 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.34775316 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.35541412 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356571601 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.351683269 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.368711273 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.353222152 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.346891878 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.367615533 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.353155594 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.346131585 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.361684751 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.358958706 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.35500548 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.349748107 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.36144296 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.35504515 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.353804978 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.353471974 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.348214113 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.35749162 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.36501164 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.361587182 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.348704469 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.356111625 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.350179726 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.356063575 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.357133613 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.357542813 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.358801562 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.366551501 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.362329455 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.353935022 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.349659479 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.357947893 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.355633492 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.354655365 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.349315719 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.362004833 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.36419764 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.355912508 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.358840813 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.351858012 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.35909329 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.346920862 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.357059511 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.348465263 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.374209178 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.375797229 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.366257469 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.360905462 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.358224953 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.366360624 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.360680572 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.354623448 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354534539 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.354049911 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.353107333 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.351127332 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.357453556 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.350164431 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.359887525 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.364378668 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.356382052 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.359720395 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.35718781 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.348666894 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.359838636 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.357448179 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.356683975 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.349450233 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.359214604 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.358940966 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.365548021 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.357687943 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.351910323 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.374883706 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.364094694 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.358510464 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.354929632 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.352964997 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.351644507 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.361625316 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.362737887 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.353811753 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.363509494 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.35592466 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.359258744 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.355256489 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.373632569 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.367547786 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.35468868 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.365613253 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.358216293 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.349750691 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.354329206 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.360524058 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.370868111 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.371583146 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.350985485 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.361555963 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.358392153 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.360386261 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.360097398 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.359613747 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358582331 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.359862382 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.371907489 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.363754567 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.35682729 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.369767342 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.368508035 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.3608931 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.359133379 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.352682489 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.370501025 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.36870373 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.35866607 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.357626762 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.355178895 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.362434078 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.360820674 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.362231538 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.360199646 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.360560236 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.372630835 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.367131743 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.361173233 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.362081938 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.373285248 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.372743838 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.373999096 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.372104861 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.362728319 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.366526358 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.361466497 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.355027131 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.356588013 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.357972896 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.365006751 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.354933263 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.366065266 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.362135786 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.365224516 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.370115222 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.369205959 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.355036489 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.370922796 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.384096819 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.353870559 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.363121805 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.362317722 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.352973517 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.366064637 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.36189169 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.353637149 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.358488115 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362330293 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.371522873 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.355006597 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.368181107 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.356929118 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366843018 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.363007195 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.363458998 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.364568008 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.361607786 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.354322851 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.365038948 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.372556664 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.373806054 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.361551353 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.364797716 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.360045646 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.377545916 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.376663471 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.363870853 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.373040734 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.365400796 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.357538833 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.364091202 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.367867101 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.359415258 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.367232453 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.356928699 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363829647 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.362704503 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.372628391 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.367639837 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.367888542 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.356243207 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.359340738 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366874237 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.364287177 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.366880593 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.36631418 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.369698759 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.357419333 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.358197087 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.367931006 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.361862357 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370520791 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.358715588 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.363709868 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364119627 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.370108168 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.365819215 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.366266967 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.358208889 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.359019258 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.380130113 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.373036893 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.3650599 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.364583374 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.371464975 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.36091035 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364000339 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.365804758 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.359791773 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.362168471 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.370764467 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.36256929 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.362175525 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.361534731 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366804605 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.378064417 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.371145591 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.361409297 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.383101301 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.382305529 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.373831756 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.360139303 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.364437545 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.3622571 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.368672441 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.367580892 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.362394058 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.382723878 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.376801826 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371596835 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.378163313 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.369722016 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.362210725 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.372701026 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367348599 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.37002373 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.375583166 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.37140547 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376923769 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.369839698 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.368523679 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.359708731 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.361616516 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.364997742 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.36526244 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.371163888 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.37665921 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.374687591 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.370338924 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.373189426 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.370073038 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.369065368 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.368094574 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.361533754 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.371738962 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.361087468 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.38029396 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.369247165 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.363325183 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.372423686 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371776746 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.363547976 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.36974653 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.376991585 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.368031856 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.367009171 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.369010193 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.381995155 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.377898195 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.37034472 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.364283754 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.368857799 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.372444359 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.372432626 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.370707406 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.368435749 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.389987791 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.383123301 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364714745 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.368490016 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381659148 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.385625784 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.370173889 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.372706124 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.373893076 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.373306131 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.376110747 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.3717662 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381764399 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.377969084 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.367249425 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.375853871 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.367329183 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.370795058 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.381586304 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.380979522 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.371304479 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.375599858 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.390770711 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.383256558 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.381133383 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.404855883 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.380973656 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.374804506 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.378803617 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.364374967 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.374417166 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.376661166 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.380239485 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.374008944 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.37262874 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.373232937 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.366682454 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.381314132 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.389355029 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.384342869 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.374944608 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.365067862 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.370959534 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.379144094 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.373477102 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.376181426 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.375631426 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.37503142 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.376347579 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.369276778 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.39427444 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.39977018 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.3799113 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.375006976 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.376225427 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.3815745 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.378732379 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.376297922 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.38098064 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.37636455 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.377757465 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.379300329 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.385533943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.377852449 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.369370085 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.371091882 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374035344 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.379991827 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.391060972 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.396209811 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.386322242 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.381300583 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.37851608 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.374608252 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.370957228 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.381331803 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.376475808 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.369439159 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.374531635 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.378723929 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.376329699 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.376488309 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.372703889 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.38251659 seconds)
  done (took 811.046129141 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.376899325 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376533706 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378249357 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.375393547 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.377594804 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379069363 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.375125636 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.376356868 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.37788716 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.378703326 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.377866697 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379608329 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.37784302 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.376500532 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.377236169 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.379773713 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.378047446 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.377311878 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.380317148 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.37835349 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.378659604 seconds)
  done (took 30.15418979 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.380626754 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.378318919 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.384751022 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.376904494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.37882017 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.378503439 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.379523262 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377530061 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.378456715 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379957675 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.380518291 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378655345 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.379638779 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.377408817 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379082773 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378607852 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.37995565 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.379067198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.37821304 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.377151522 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.377144747 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.378421096 seconds)
  done (took 31.558260447 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.379424366 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.379829656 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.371320962 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.381132475 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.378966557 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.379552316 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.38019276 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.377454145 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.378679929 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.373828893 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.371871801 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.372022168 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.379565935 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.384736285 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.383851606 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.385032202 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.381654399 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.381535669 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.381265662 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.378677135 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.39127336 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.394806561 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.383225898 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.371441927 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.381356386 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.382629593 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.379530526 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.380676621 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.373746759 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.382316215 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.381275929 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.374675788 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.391410877 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.385589397 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.376624151 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.386887607 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.381173821 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.383096063 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.382043764 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.391974566 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.400510498 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.383350076 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.392174103 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.397175158 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.382910773 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.378028589 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.389478718 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.382097611 seconds)
  done (took 67.566182545 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.385022634 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.384006932 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.385117689 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.385612793 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.384702342 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.384411663 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.38321612 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.385908083 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.384406634 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.383970057 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.384653593 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.383321161 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.386381816 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.384708838 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.38187391 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.385158126 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.385639264 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.383514202 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.382505415 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.38494106 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.384876248 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.38379671 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.385046451 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.386552857 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.385031225 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.384616159 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.385748705 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.38716774 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.383574266 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.385879378 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.387659143 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.385716997 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.385468572 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.386928743 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.383629999 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.386342635 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.385081441 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.385237746 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.385857168 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.386738565 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.385185784 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.384818838 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.386158953 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.386511231 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.387474483 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.385933924 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.386581073 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.386817066 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.387517855 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.388218432 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.386750787 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.390082636 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.388316349 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.388444229 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.389479975 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.386723619 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.388802165 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.387179473 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.38802539 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.389385689 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.387492292 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.387454648 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.391552166 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.393463932 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.396179571 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.39426536 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.389096756 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.394025246 seconds)
  done (took 95.511346382 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.388098305 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.388499194 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.390024248 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390640457 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.390137041 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.391637233 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.389538013 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.389445822 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.396569564 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.387411137 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.388302171 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.389277785 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.389920883 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.387738972 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.3897636 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.390754788 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.388022457 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.389192089 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.389703887 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388134483 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.392267131 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.387472038 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.388732464 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.389737201 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.393690218 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.386945015 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.390458591 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.38816207 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.388387518 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.39137868 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.392937049 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.389734756 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.389995962 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.390492045 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.389401892 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.391144014 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.390292858 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.392376014 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.390846629 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.391377353 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.391558451 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.391918204 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.389538711 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.390376947 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.390678521 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.390691931 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.389848108 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.392467925 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.391005518 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.390013423 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.393237715 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.391159728 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.390414731 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.390067759 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.390606864 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.38961903 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390310248 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.392664179 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391023537 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.391701836 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.391693106 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.390653239 seconds)
  done (took 87.430632836 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.392950807 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.389989328 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.392998439 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.390776439 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.390097302 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.390672027 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.391690103 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.393957011 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39862185 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.398380828 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3962675 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.394085449 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395839233 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394873468 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.392666414 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392815735 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.393497455 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.395834624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.392499912 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.39253141 seconds)
  done (took 29.104582853 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.391495315 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.392366097 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.392218173 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.392124655 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.393872224 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.393850363 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.392565074 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394154522 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.393297919 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39474496 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.39522931 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.394294554 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.392634636 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394188534 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.393966509 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.392041404 seconds)
  done (took 23.525833838 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.39313016 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.395932541 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.392080306 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.393645658 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.393718014 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.393315798 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.396960466 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.394841202 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.393002141 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.395634319 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.395480947 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.396162249 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.396770917 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.394980954 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.394710249 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.397344663 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.396233138 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.395973678 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.396498116 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.395665817 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.39653143 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.396173844 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.395189151 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.396474649 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.394459309 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.395749278 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.395883862 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.395727767 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.396722656 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.39570856 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.39712997 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.396801577 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.395838395 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.395436249 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.397573113 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.395336027 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.396794942 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.395150389 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.397131228 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.397820631 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.398344091 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.397771811 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.397789552 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.396184668 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.39682609 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.39629872 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.396406345 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.397458434 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.396602808 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.398710199 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.398932643 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.399833457 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.396569354 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.399273958 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.397943831 seconds)
  done (took 78.026640331 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397086948 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.398446618 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.396209812 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.399029234 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.395899786 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.398697279 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.398145603 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.401250117 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.402801432 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.398995361 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.403567381 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.400403571 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.399617368 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.399653406 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.398467431 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.398743304 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.398801551 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.397614529 seconds)
  done (took 26.421224236 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.398552637 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.398780949 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.399169755 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.398421685 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.398349539 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.399819558 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.399498777 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.400112053 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.39971745 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.403911419 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400728053 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.400098923 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401517051 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.398941234 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.399993393 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398205387 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.400582085 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.398953177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.400124066 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.400933875 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.400470618 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.399578187 seconds)
  done (took 32.03525162 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.390967385 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.390339861 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.38953068 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.415319294 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.408435318 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.390979887 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.390253607 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.391293613 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.422047245 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.439786303 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.437152797 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.40782288 seconds)
  done (took 18.113764048 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402336429 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401482409 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.400612047 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402540435 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400068612 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403992854 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40204533 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403173825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402726841 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402397819 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402406689 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402562365 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404294429 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400815495 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408618931 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404880467 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403951089 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404257413 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402179215 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403734162 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40397281 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402525768 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402078715 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402413952 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403897381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402621381 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404023515 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402990422 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403502429 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403243247 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404450314 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403175991 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40346255 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405416498 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405654448 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403791083 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405174848 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400839799 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405121489 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405870747 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403458569 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402030524 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40399034 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404186524 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.4046854 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403621228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405210676 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403824397 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404779407 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404495502 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405277515 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404003051 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406022093 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404680721 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405433191 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403981331 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405687833 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405562886 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405549966 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406472499 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406191178 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405503451 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406568112 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406581661 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406249007 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407254582 seconds)
  done (took 93.907356098 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406045629 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.405361883 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405001921 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406035782 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404230524 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405690905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406315146 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408142754 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405673585 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40612476 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406892664 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407604626 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40710582 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407157852 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405818086 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407842296 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407930296 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406790416 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406460626 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409111312 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40725982 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409410093 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408169014 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409089662 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409205318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409501794 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408205051 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40895417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411099834 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408363242 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407097788 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408979522 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409571077 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.411033274 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410195529 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409667947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409847439 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408700086 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410783173 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409685687 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409207554 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411833655 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407803045 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40792848 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410384589 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407859757 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408473591 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409213979 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411223243 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408523737 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411008131 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409690436 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412512722 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40923528 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410849732 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410069814 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412098144 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411269757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411236652 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409013883 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414011167 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411301745 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410794488 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408841306 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410185262 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41248283 seconds)
  done (took 94.228525012 seconds)
done (took 1899.140935568 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.630326664 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.577283815 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.4013986 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.392531759 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.394302376 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.383534456 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.390085569 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.392652376 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.400085164 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.40175954 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.397411152 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.657525792 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.418292577 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.393581474 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.402419609 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.554666763 seconds)
  done (took 28.43648721 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.43546634 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.418930858 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.538086582 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.405701381 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.438723388 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.641314583 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.47338457 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.408995445 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.588826275 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.427719265 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.377457217 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.430771329 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.419757988 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.375097769 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.425209519 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.640199568 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.731678728 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.375326708 seconds)
  done (took 30.803424514 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.914245171 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.400772333 seconds)
  done (took 5.564501674 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.431740866 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.406344271 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.411889109 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.407603579 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.376612766 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.373277007 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.40845634 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.377760119 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.392080096 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.540598075 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.411799713 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.429999793 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.406941134 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.408759452 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.417354889 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.468173362 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.623105285 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.419881327 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.416553949 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.421524902 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.406272334 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.553561176 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.458118452 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.417030686 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.542050563 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.385974851 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.411792309 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.425105455 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.580709111 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.418971016 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.410756074 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.412339446 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.411239446 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.382225281 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.025310551 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.380708958 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.438133299 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.423792299 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.41738967 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.598853458 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.41177478 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.423916128 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.379183205 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.036815087 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.565763216 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.568472849 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.382337028 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.412441066 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.414492164 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.487374337 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.412026348 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.41518932 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.510073383 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.302025558 seconds)
  done (took 90.035967844 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.442024017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.381632469 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.647616223 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.399728904 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.380541478 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.383410418 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.384081314 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.739662774 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.389327791 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.381252951 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.788855482 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.10004261 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.382466444 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.451214222 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.416788197 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.43392613 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.384774349 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.399400021 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.397624586 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.380824196 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.043796491 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.393094331 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.38181671 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.470251908 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.454443403 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039641145 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.383510361 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.383431371 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.402139057 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.382625821 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.073096166 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.390508108 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.438033007 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.382739034 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.761334176 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.876200179 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.83480553 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.379729713 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.403548804 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.383893161 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.412424932 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.032229658 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.842404959 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.380427637 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.379418081 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.027574526 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.380481833 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.385932526 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.385353403 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.74462374 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.385331543 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.384524876 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.384642349 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.385203593 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.385216374 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.442531135 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.457696122 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033697372 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.382156558 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.383556387 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.43353879 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.386463181 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.384207866 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.38911254 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.38966736 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.847852579 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.625155336 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.388729251 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.855508511 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.057982303 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.388142026 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139910808 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.38699614 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.423890497 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.437878797 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.392234585 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.387310775 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034765944 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.397989646 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.384341892 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.835487949 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.381699027 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.781768268 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.398172212 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.388523638 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.060064761 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.395712052 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.437478187 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.385427365 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.388076236 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.386202184 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.392563957 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.766434545 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.456810535 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.387219143 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.387392978 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.420865321 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.385843479 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.386922806 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.396316528 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139039678 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.388260477 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.38749327 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.40267006 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.390976534 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.400223171 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.392332223 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.389448337 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.761446899 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.389049054 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.391735709 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.388708438 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.385893276 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.395984922 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.485237962 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.391338242 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.796965941 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.389949099 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.401566428 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.390998255 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.390623975 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.410242462 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.38457586 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.385785861 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.387034761 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.843087728 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.402970518 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.390810522 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389132026 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389682655 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.384616158 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.38579061 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.452235372 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.393222839 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.296501182 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.402981063 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.408283623 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.39132176 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.403849819 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389149416 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.384364102 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389954057 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.786831971 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.767191136 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.660876778 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.389398749 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.38972428 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.310581464 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.396882452 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.654446701 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.406596956 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.389926052 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.784986834 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.618441004 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.393413017 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.38625254 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.393236039 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.754647082 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.392379157 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806580223 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.101891728 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.392704548 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.39433604 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.289543803 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.30198065 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.391802198 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.395124548 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.782791164 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.403843674 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.393098173 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.393027702 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.392741074 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.392928808 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.39517204 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.394119532 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.392197151 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.392459125 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.686258566 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.674685936 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.406734124 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.402736758 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044099811 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.435358156 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.387385296 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.400147673 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.390975906 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.391658813 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.454459886 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.398589514 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.394634122 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.395317379 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.404848829 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.113904498 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.394169748 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.394124211 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.673252024 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.239107082 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.394509316 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.393655506 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.393405334 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.453952978 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.071333024 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.426395214 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.802742654 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.405327172 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.464441253 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.393390529 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.405711509 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.070842878 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.412704507 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.393818097 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.239193546 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.39510143 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.889121934 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.392612147 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.396075018 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.160168971 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.390960122 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.394465386 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.391115728 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.395191037 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.788775514 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.398050339 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.395693265 seconds)
  done (took 516.724945693 seconds)
done (took 672.815113378 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.395020554 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.388615968 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.394720026 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.397378815 seconds)
  done (took 10.84234329 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.435167349 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.424158686 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.434677553 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.424993429 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.434884422 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.425233195 seconds)
  done (took 9.846065062 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.397258828 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.395810389 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.397280827 seconds)
  done (took 8.459306662 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.704238367 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.414813923 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.857439414 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.402799197 seconds)
  done (took 9.648289074 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.435665806 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.435221336 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.434477876 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.436169502 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.437145673 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.436007749 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.438860626 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.436475825 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.438712283 seconds)
  done (took 14.193343721 seconds)
done (took 54.257442586 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.547398661 seconds)
    (2/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.467908314 seconds)
    (3/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.534872067 seconds)
    (4/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.551757385 seconds)
    (5/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.58261948 seconds)
    (6/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.395804872 seconds)
    (7/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.770961308 seconds)
    (8/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.424412839 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.537813712 seconds)
    (10/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.775035568 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.462828688 seconds)
    (12/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.550644743 seconds)
    (13/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.424331125 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.580866394 seconds)
    (15/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.781031792 seconds)
    (16/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.379135573 seconds)
    (17/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.662696352 seconds)
    (18/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.581520457 seconds)
    (19/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.589297563 seconds)
    (20/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.378454061 seconds)
    (21/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.865263174 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.560228364 seconds)
    (23/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.461370612 seconds)
    (24/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.378158843 seconds)
    (25/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.394262287 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.584590331 seconds)
    (27/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.636278957 seconds)
    (28/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.465696092 seconds)
    (29/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.855491959 seconds)
    (30/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.737919605 seconds)
    (31/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.563758073 seconds)
    (32/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.644525536 seconds)
    (33/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.378743135 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.577208945 seconds)
    (35/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.627546771 seconds)
    (36/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.593870072 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.532806442 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.47152742 seconds)
    (39/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.380024862 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.63609737 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.571550264 seconds)
    (42/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.477633364 seconds)
    (43/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.816132205 seconds)
    (44/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.668916976 seconds)
    (45/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.380326228 seconds)
    (46/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.678764667 seconds)
    (47/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.380950539 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.713708077 seconds)
    (49/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.696201661 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.380458018 seconds)
    (51/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.601947846 seconds)
    (52/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.40130578 seconds)
    (53/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.060054145 seconds)
    (54/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.413456068 seconds)
    (55/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.393349811 seconds)
    (56/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.427489627 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.58805369 seconds)
    (58/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.409096506 seconds)
    (59/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.378346506 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.604733116 seconds)
    (61/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.632855198 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.578461409 seconds)
    (63/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.391556915 seconds)
    (64/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.380634437 seconds)
    (65/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.767901212 seconds)
    (66/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.699456265 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.738370571 seconds)
    (68/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.38127076 seconds)
    (69/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.495690409 seconds)
    (70/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.667813065 seconds)
    (71/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.575908292 seconds)
    (72/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.645539702 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.032872406 seconds)
    (74/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.669238944 seconds)
    (75/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.642712177 seconds)
    (76/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.751416574 seconds)
    (77/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.487930553 seconds)
    (78/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.56533048 seconds)
    (79/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.649906179 seconds)
    (80/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.604908417 seconds)
    (81/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.46740874 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.570365198 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.757947013 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.580477308 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.583595861 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.566302112 seconds)
    (87/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.61992583 seconds)
    (88/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.539403439 seconds)
    (89/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.382860418 seconds)
    (90/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.424196471 seconds)
    (91/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.5592355 seconds)
    (92/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.823080505 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.552107638 seconds)
    (94/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.388606261 seconds)
    (95/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.602227629 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.43565547 seconds)
    (97/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.383956926 seconds)
    (98/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.884577222 seconds)
    (99/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.489400083 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.469225591 seconds)
    (101/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.590274713 seconds)
    (102/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.700363433 seconds)
    (103/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.583876833 seconds)
    (104/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.468537514 seconds)
    (105/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.561200625 seconds)
    (106/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.567954905 seconds)
    (107/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.744389633 seconds)
    (108/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.3983443 seconds)
    (109/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.468943153 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.73842826 seconds)
    (111/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.38590005 seconds)
    (112/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.456467334 seconds)
    (113/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.608465574 seconds)
    (114/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.710452216 seconds)
    (115/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.694227946 seconds)
    (116/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.38623019 seconds)
    (117/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.79376707 seconds)
    (118/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.817508427 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.478082095 seconds)
    (120/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.471203636 seconds)
    (121/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.387126603 seconds)
    (122/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.386768666 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.647584445 seconds)
    (124/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.473705071 seconds)
    (125/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.470204417 seconds)
    (126/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.390824559 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.619020128 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.575914926 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.64908708 seconds)
    (130/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.593378809 seconds)
    (131/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.417317314 seconds)
    (132/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.540121548 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.542842703 seconds)
    (134/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.654371271 seconds)
    (135/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.750403177 seconds)
    (136/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.606043339 seconds)
    (137/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.585638509 seconds)
    (138/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.750249246 seconds)
    (139/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.387125277 seconds)
    (140/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.634439827 seconds)
    (141/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.386861416 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.644476508 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.410255173 seconds)
    (144/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.707737066 seconds)
    (145/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.540712265 seconds)
    (146/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.413651624 seconds)
    (147/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.651950224 seconds)
    (148/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.713686007 seconds)
    (149/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.65551192 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.617031398 seconds)
    (151/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.861323776 seconds)
    (152/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.470921127 seconds)
    (153/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.66512683 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.504198963 seconds)
    (155/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.545358875 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.563830429 seconds)
    (157/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.674279949 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.832452018 seconds)
    (159/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.388287645 seconds)
    (160/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.547603784 seconds)
    (161/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.870172806 seconds)
    (162/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.483369847 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.602655757 seconds)
    (164/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.595847838 seconds)
    (165/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.502684594 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.595479146 seconds)
    (167/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.413000913 seconds)
    (168/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.383248107 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.635967744 seconds)
    (170/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.388616667 seconds)
    (171/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.720995596 seconds)
    (172/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.419997124 seconds)
    (173/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.503972119 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.617057658 seconds)
    (175/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.54359706 seconds)
    (176/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.713472572 seconds)
    (177/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.784167317 seconds)
    (178/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.580277003 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.743929308 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.609603358 seconds)
    (181/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.698113846 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.41068763 seconds)
    (183/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.396462148 seconds)
    (184/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.681809608 seconds)
    (185/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.66198453 seconds)
    (186/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.391120617 seconds)
    (187/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.936751803 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.596157514 seconds)
    (189/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.451500292 seconds)
    (190/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.605575542 seconds)
    (191/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.403116136 seconds)
    (192/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.564785159 seconds)
  done (took 351.075532659 seconds)
done (took 352.345248592 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.473229102 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.590361945 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.442434614 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.441613699 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.441567814 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.426169766 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.47421596 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.441875534 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.465964282 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.466351901 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.425715798 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.451812692 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.467894905 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.45682569 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.487110058 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.447477225 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.442846259 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.455304058 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.467218771 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.469284537 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.44689852 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455407004 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.481792063 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.445842519 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.460572395 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.461953507 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.457037379 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.413846133 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.449980337 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.46799394 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.41727499 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.451927511 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.470209725 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.455728972 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.444126658 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.45421628 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.444818088 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.588381944 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.476381668 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.456242166 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.455479639 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.470741495 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.456973684 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.459564167 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.457923525 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.481535745 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46258592 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.470516188 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.421403867 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.4178208 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.474375268 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.466524549 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.455901411 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.421137911 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.416083288 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.464124243 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.455134135 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.474678588 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.454851696 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.4534504 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.489006738 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476220404 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.466155578 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.464357514 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.458354446 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.468883298 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.457095487 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.472386328 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.45522402 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448001872 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.450241753 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.455781074 seconds)
done (took 114.374948521 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.624969278 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.416520495 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.660187933 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.454045588 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.67580214 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.626721178 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.453757003 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.455965665 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.454674718 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.313810367 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.457134598 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.456563646 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.420915817 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.45394348 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.62304117 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.456186014 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.454114731 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.220345478 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.456722394 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.633702651 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.42263454 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.459001246 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.458188433 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.320134425 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.420543563 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.418541492 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.635263814 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.458483932 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.223910107 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.429494212 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.418528222 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.229469334 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.638939142 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.477330812 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.467682099 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.467146975 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.677414984 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.461235678 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.627467222 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.627768936 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.664863947 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.496250815 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.426858472 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.423101429 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.461789729 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.459570382 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.457570198 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.485954883 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.420495372 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.457412776 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.220083224 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.46690288 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.469422822 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.457331061 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.458508655 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.480393492 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.458360452 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.45979122 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.641898527 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.462593462 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.627630581 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.327138528 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.318384552 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.461526218 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.421662629 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.461541304 seconds)
  done (took 117.341892712 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.57347118 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.583597956 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.619311506 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.452973035 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.542546298 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.62364872 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.450473346 seconds)
  done (took 12.134521716 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.462793767 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.458368973 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.541229231 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.540883446 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.462270376 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.684579023 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.461068339 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.471332772 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.461539348 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.542881326 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.461893653 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.460644192 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.471362874 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.426311754 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.544140843 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.474025853 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.624087812 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.457062243 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.462319755 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.665235992 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.460672617 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.468097864 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.544607314 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.472993458 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.461064148 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.467507635 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.303773406 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.46130077 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.460651177 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.461929551 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.461847767 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.57208036 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.460786739 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.425012427 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.462485907 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.624773653 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.46323251 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.460478669 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.461993945 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.430529888 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.461431513 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.463487221 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.461720307 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.463214631 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.462418021 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.486017461 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.462904187 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.461474046 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.462285672 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.463246478 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.545545562 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.463209183 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.46539745 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.462794256 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.547681867 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.473449382 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.464428403 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.462161144 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.46358444 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.460878719 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.665704626 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.542525275 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.462222955 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.548728648 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.465157197 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.469897953 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.467169533 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.463193469 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.60433984 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.464515425 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.544689936 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.463889368 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.696493877 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.488932845 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.466175133 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.459892141 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.460738059 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464060129 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.426913227 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.471112562 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.462613716 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.457064478 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.471545649 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.465742536 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.465030155 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.67294179 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.627111171 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.465702238 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.47879217 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.47250436 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.463781672 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.598040645 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.463411723 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.469978549 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.548534769 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.629705356 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.551277016 seconds)
  done (took 151.129304296 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.476519116 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.475523109 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.463714135 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.492445443 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.457185233 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.455374668 seconds)
  done (took 10.113846042 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.460217672 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.469133609 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.464925113 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.468511883 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.466113184 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.466455895 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.465753641 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.458337195 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.469496645 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.466374669 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.46677458 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.4694546 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.467004778 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.466262156 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.467033483 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.471358404 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.469603711 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.467151653 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.4679762 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.468333299 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.430140802 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.468711279 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.468724061 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.460756427 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.471566601 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.468533673 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.490918154 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.468833432 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.465575965 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.474641154 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.471655089 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.469922467 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.462601075 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.466514003 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.473592208 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.462597094 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.4734813 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.470477426 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.468562447 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.470252746 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.472282683 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.468460969 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.469006917 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.470536023 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.462403913 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.463867158 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.472379064 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.491212396 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.470965547 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.472639712 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.470196664 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.469449711 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.470440689 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.471884658 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.464484834 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.466824727 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.474618665 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.46965267 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.471503954 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.464294097 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.47418977 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.470176131 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.465486638 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.474916468 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.47134234 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.471431947 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.464307927 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.476494881 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.47162834 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.469774543 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.474282519 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.469991261 seconds)
  done (took 108.050535898 seconds)
done (took 400.056427577 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.973189468 seconds)
  done (took 4.271326892 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.68885813 seconds)
  done (took 3.990271249 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.210409438 seconds)
  done (took 24.521344719 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.445557218 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.442729135 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.441739134 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.441141084 seconds)
  done (took 11.070675189 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.749871544 seconds)
  done (took 4.049335044 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.45656609 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.436959198 seconds)
  done (took 6.195918071 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.803477733 seconds)
  done (took 4.102866782 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.824976486 seconds)
  done (took 4.133183905 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.468167007 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.446812685 seconds)
  done (took 6.224979378 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.414274818 seconds)
  done (took 3.71574863 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.123142965 seconds)
  done (took 22.42456244 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.446373034 seconds)
  done (took 3.75141385 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.474442595 seconds)
  done (took 3.775473543 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.233842236 seconds)
  done (took 6.533306855 seconds)
done (took 110.061615241 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.435294949 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.436441534 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.436776423 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.433686016 seconds)
  done (took 11.040467088 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.591154713 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.591078377 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.595109336 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.571095877 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.584334921 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.597031019 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.508712735 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.527615209 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.569317439 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.568088792 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.597561463 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.582336553 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.597142695 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.505702086 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.561058148 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.597441547 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.571337039 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.597747521 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.507805846 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.584472718 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.475818608 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.583123314 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.570414017 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.475638976 seconds)
  done (took 38.814436739 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.020222614 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.592782015 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.67888193 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.558831259 seconds)
  done (took 8.153034055 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.638647136 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.643572482 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.654702739 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.690009463 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.731007344 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.651091805 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.510509612 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.508174538 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.490094795 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.642562158 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.717365456 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.641106177 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.861447325 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.477298126 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.858553731 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.476260843 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.47766598 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.642751568 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.693824264 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.722209228 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.475661116 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.641902298 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.649280052 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.639391643 seconds)
  done (took 40.437029389 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.490618395 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.502111477 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.477738266 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.501454899 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.477321104 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.478589282 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.479058406 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.492547062 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.477854621 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.476786957 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.47796057 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.498678708 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.478051294 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.47920165 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.495513151 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.479277846 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.481027301 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.493290872 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.494547735 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.478652279 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.479136698 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.492965481 seconds)
  done (took 33.98655737 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.440135159 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.44063648 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.886053178 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.781500845 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.438834436 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.435006645 seconds)
  done (took 14.724982206 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.55714131 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.744962401 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.467959857 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.863096348 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.990316995 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.467786231 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.470634429 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.787106517 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.111636542 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.059156615 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.543414424 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.557232173 seconds)
  done (took 21.926144309 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619079703 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.457309131 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457021456 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466591178 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447301016 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.447620329 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477369643 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.253933269 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.473831554 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.80589047 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464706301 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614176355 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.789141692 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455327804 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452753105 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.429243691 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773274311 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060122869 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456255925 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461946522 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517925568 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.453468419 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471182823 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.723492143 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453578489 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45259715 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.822372803 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.453931467 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833932793 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782768675 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788270142 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456749843 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.813941284 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220929701 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635300829 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70564071 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472061845 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455206141 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.436411083 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.45821197 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470857083 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.459078002 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786349717 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458828039 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.456431645 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467647317 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274349134 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.481363307 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.456819125 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457013773 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.795202938 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617919709 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.485487924 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.459021779 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534366975 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451993791 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.483438292 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668967122 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177592695 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456611906 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46523039 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.455201461 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.450707942 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464915476 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234341881 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.48598275 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.484887149 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483809079 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457233074 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.452434978 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511539352 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456805157 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.502158341 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456305024 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355604997 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47291789 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459849259 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125308952 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461716605 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.458140592 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770218196 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456519297 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45800035 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.456775963 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458522344 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.34963636 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488058153 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.428069379 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565584493 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.275429648 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.707643968 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511527269 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518945391 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.767034201 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.42731244 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457008814 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.472753204 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463128587 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505684487 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273741514 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452999785 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.481005371 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798350893 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.757381159 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465122764 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.440809198 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035922934 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461414262 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.509382304 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469640518 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.710762451 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.199809348 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807935982 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463116923 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526093856 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.460624567 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425424909 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46811274 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.491089405 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477355605 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835866977 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.435206111 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463906479 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616184153 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46725495 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.462967672 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474199199 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462825615 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460508351 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.707665479 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472339953 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793838379 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.464549089 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461565818 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.460727932 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459923849 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.462186777 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.767260906 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464534142 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815110218 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461304122 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462931844 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456710243 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.766912887 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.474469624 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.491380434 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.891513998 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470738493 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.472037052 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801438787 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526716281 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657480746 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52478084 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.471145038 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.798762678 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.49053256 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.49125891 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475704069 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.464463672 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471855395 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.49260971 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460241139 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204231418 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465348213 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467403712 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46361992 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.508492456 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612500375 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.491828814 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.717686935 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.464132485 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48718374 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.48636555 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.470467369 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769146342 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.80090024 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.46739952 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.716444947 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.041559405 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197632115 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505618137 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.466381305 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.464397253 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.463352218 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466966853 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46286731 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.46497065 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.718919494 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814138446 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.46558211 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.205698574 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467389254 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.465219705 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.496890561 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799533027 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.49756013 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465343254 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.465001311 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482159289 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479651009 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.803801867 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770149402 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.512392532 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467918022 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.070477049 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496557139 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468317724 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.465989774 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523124205 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.466258105 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416333041 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89046121 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45843651 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80235657 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.468088994 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.514736895 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.466891565 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482019047 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472896938 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.489811029 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493768796 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.720962212 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478319415 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468967806 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187868932 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367914104 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13998924 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478001358 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.477246513 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.467130492 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281752379 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463080885 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466267253 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816938173 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.278897197 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463883151 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026881072 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.477222557 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.365727024 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809023061 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78302576 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479626983 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.47006208 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830077973 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.767542646 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525168598 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475286068 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468817089 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.431252187 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10514675 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464876993 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722484124 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283170995 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46367726 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490015036 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.483083218 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.466380955 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963579586 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468958867 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470076677 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481105663 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.470296747 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414818113 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.474245992 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470730601 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236832631 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483257683 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.051793249 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472498493 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.725767222 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.811595106 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.790667933 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.478944354 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.483543193 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.805079682 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81402705 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475498944 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486670756 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152329218 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.417585295 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.503240321 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47309382 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437606696 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477753281 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855127737 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.479662602 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.47287417 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48113807 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.471409109 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47078815 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.473393091 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483450514 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473780919 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079833127 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.482254902 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481993346 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476474488 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472135458 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.810640166 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.516333187 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209023997 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.783408211 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474048131 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533982289 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.49844467 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474570125 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.445786717 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472704455 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473614347 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507185586 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.772730457 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.485686483 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.442994811 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.47905617 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.766625769 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.474174894 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472562538 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772057955 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.472505198 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.476040075 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373138721 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530141508 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.47418928 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477924881 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468682924 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569205134 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628336327 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.732148272 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.819906568 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.818790295 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974407779 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476781021 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477359516 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.52407223 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636665249 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48107172 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.476768589 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.473622728 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210014486 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375171312 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212558664 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817641476 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477921598 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479754024 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477942621 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798909973 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477226818 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.839384534 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476437401 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.462409151 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525757291 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475739338 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481426723 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773720876 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829014918 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475965275 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479671542 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478064005 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.47671104 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827168455 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.784906586 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081597807 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133004902 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474931903 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481937682 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292178356 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834680234 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478904685 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477634411 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47565923 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.491818617 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.476664456 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.510049148 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493541113 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.782537989 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810343131 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25593087 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.808771633 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.505040411 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.478095783 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479440437 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.811422319 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398033228 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.732555725 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.219976995 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321719333 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812671989 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632665019 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.735518322 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.478167441 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8019436 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.481009072 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505821515 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480101276 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477179395 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.476593078 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.812172693 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233390084 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820561329 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.508637865 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.488611505 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534490664 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.737914856 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.788176136 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384832317 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.786714637 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833882368 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.492197087 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.478803834 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238333171 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830447224 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482045167 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.504273553 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776242984 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484297759 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546176298 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.440702341 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.479735517 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164759918 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.786392739 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53241973 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49025103 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343065763 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235359259 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.483924527 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09755661 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483738749 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489318928 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.846380326 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.510796031 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.494764523 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847186852 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.509817345 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.49223103 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.741508889 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.229482325 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.384851034 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.506012392 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48343005 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.481843327 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480611047 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505758868 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477091605 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483100889 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.986484245 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482267822 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484135028 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521833188 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.493426154 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491781182 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.483427536 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484127207 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.509159929 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.457940986 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.457205766 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496482269 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.693591971 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129608381 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486727956 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.185782354 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.906502985 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.822219222 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492511094 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.454211321 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.512507352 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487435658 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485087734 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478071967 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49468246 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164107949 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.491335665 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.829047953 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516470705 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.784134212 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782050706 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.492694567 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.745501645 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496234123 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537969807 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.453838648 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485234191 seconds)
  done (took 1044.485365519 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.524515303 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.523083068 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.510575752 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.562454485 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.484814445 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.559154834 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.534543604 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.502243407 seconds)
  done (took 21.53742351 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.474296208 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.509140303 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.47847544 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.507138932 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.477240577 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.076524117 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.487194008 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.509665929 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.530867368 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.487275163 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.487120185 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.230763982 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.506019795 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.487912884 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.478690831 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.507679783 seconds)
  done (took 34.581369322 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.425761265 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.57350198 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.518478502 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.517784769 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.524252979 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.478384646 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.728334867 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.473641585 seconds)
  done (took 27.579169252 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.523126161 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.523387087 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.528159831 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.524566287 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.527012409 seconds)
  done (took 8.964294202 seconds)
done (took 1307.532955656 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.519273575 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.518450566 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.517574267 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.517585721 seconds)
  done (took 7.411137478 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.458345786 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.458120198 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.459511087 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.491419964 seconds)
  done (took 10.203666822 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.313229148 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.146232702 seconds)
  done (took 5.797142081 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.132785322 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.118079192 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.122905783 seconds)
  done (took 7.712767595 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.883169221 seconds)
  done (took 3.22280885 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.480175237 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.498029812 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.480027383 seconds)
  done (took 8.797095147 seconds)
done (took 44.484804808 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.481449491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.242022956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.639771789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.479668469 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.642431764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.640962094 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.726761482 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.490801589 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.485183417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.483840019 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.476064728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.641586336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.716448091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.246053007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.714856059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.251438329 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.64521948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.481955352 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.480223916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.480960463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.722491456 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.490630268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.481874336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.483976489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.660006346 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.631606296 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.48167012 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.242483559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.480234183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.478023078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.632441458 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.484405594 seconds)
  done (took 86.057809518 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.481812457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.478559879 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.476084424 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.500500098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.478214095 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.481364355 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.495889736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.477701809 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.495818707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.478623713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.486099594 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.479562869 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.481010679 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.479797396 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.478121275 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.478465453 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.477757052 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.478265707 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.47892892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.488451779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.480245288 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.491795081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.479053237 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.477833319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.495986955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.479886513 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.495291825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.492842142 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.496696542 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.488782128 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.477871942 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.493513246 seconds)
  done (took 80.843650092 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.493321742 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.484402032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.485597505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.499406943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.489864947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.487041334 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.500042429 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.484499461 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.493920003 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.484356775 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.488644261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.479149199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.480916463 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.480749821 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.496065596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.49582639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.480445803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.495336872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.485288876 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.485343283 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.482616959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.492797653 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.480143529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.48159099 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.487383277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.47864278 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.510640494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.478725542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.482038743 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.47976506 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.484935899 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.508228735 seconds)
  done (took 80.963813208 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.814101919 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.523128605 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.526110129 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.496584516 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.52969571 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.523981017 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.496581793 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.819441913 seconds)
  done (took 16.074048174 seconds)
done (took 265.281768729 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.496235729 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.10138929 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.55327308 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.496549108 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.557267862 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.553085836 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.791345603 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.552750248 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.782437138 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.51244659 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.538341642 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.497870504 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.43909222 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.709867715 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.413207923 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.493093082 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.484937296 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.507066367 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.17627053 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.815855355 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.548993207 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.489351125 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.482479162 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.500811381 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.468402441 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.594093705 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.595838898 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.736788316 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.696484728 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.593851774 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.104502256 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.498713908 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.51514861 seconds)
  done (took 69.642783278 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.517260331 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.52689284 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.52816919 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.527982783 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.527868872 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.528748384 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.517561417 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.529573977 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.529625451 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.526047063 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.526120186 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.530069571 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.529245793 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.52553785 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.529793 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.500922709 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.520368128 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.528495278 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.516009962 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.501474035 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.528082307 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.527839958 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.529610993 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.526673958 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.529174276 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.529321151 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.529412783 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.531044555 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.528950993 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.528341139 seconds)
  done (took 47.103407634 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.529430384 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.176796575 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.372654721 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.53356813 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.520053144 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.526379576 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.878502287 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.531935451 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.527129044 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.525671107 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.076498276 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.534193001 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.567658429 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.373153108 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.519419124 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.53107759 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.530009019 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.525710777 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.187331783 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.538825713 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.884537063 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.531223488 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.881580053 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.53915662 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.526191355 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.526015285 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.534549819 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.406404683 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.539365655 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.083700169 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.371171571 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.86783473 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.374510125 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.428300555 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.369868542 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.533003743 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.532301629 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.087646969 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.52552465 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.523568046 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.875425849 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.521687848 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.390250464 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.295249067 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.541207161 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.533993044 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.444106754 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.069654319 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.790833388 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.53512168 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.421556051 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.527437183 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.534043889 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.52771159 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.794600207 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.528530898 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.525195627 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.472773598 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.530625857 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.87514802 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.533685394 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.526531412 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.183797325 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.524140185 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.183523478 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.529156746 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.540986602 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.528989685 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.386941454 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.529095286 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.314286754 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.540872062 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.534475368 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.085703497 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.182223103 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.488743226 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.519963188 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.192894641 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.395290351 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.886371793 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.531653222 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.387376216 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.893570125 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.532732479 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.53762968 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.535757306 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.533175274 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.662310549 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.870321777 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.235119005 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.305817102 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.474169586 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.869981232 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.537277681 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.526581487 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.503634645 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.533247349 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.534751521 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.390380997 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.313977218 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.544963295 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.542828945 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.303399266 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.548810921 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.873812236 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.536315687 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.431665158 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.526264758 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.664505592 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.536601338 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.541879383 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.532327679 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.882538276 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.534500791 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.537044899 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.301707361 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.102547956 seconds)
  done (took 214.921597857 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.501393438 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.495890434 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.501523553 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.495967469 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.500902035 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.532825578 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.500196149 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.50246243 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.531057336 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.50132269 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.503745414 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.533118912 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.531597349 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.501649756 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.503322315 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.496917031 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.499905609 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.504009274 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.498077933 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.499900301 seconds)
  done (took 47.49168194 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.539221573 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.185241364 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.147314473 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.534116315 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.5404813 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.530211209 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.598871058 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.537979026 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.540436601 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.899507123 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.725767781 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.542532398 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.540818843 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.538023376 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.155017897 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.508374494 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.900591339 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.182476416 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.538085185 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.186325231 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.504432443 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.540856278 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.530882734 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.189895167 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.919724289 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.87557915 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.601914601 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.18850337 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.538613464 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.541199199 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.187783027 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.541643179 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.532307635 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.174124028 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.537860227 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.560865317 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.543705873 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.601219121 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.605182964 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.905153163 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.188267657 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.882885526 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.5632182 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.77165567 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.544730304 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.513075021 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.203137284 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.539107452 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.514858838 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.543458704 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.556365932 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.169079951 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.530881685 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.168405563 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.537426303 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.541061193 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.189022431 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.166004211 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.154376754 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.731050367 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.537016265 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.87418875 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.538142455 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.20258477 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.540374722 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.541498469 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.548022343 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.735650672 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.190538546 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.869980184 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.895048735 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.896405961 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.539486272 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.616379429 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.544027561 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.904379181 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.612955531 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.01841582 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.897350843 seconds)
  done (took 140.363019072 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.888930219 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.665794861 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.030501575 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.237894009 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.168920154 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.726189762 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.669711561 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.858649553 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.522823328 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.700772913 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.330406332 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.655669831 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.429946084 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.626740802 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.662121978 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.748955646 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.04996215 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.504655445 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.319733746 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.308953953 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.512756197 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.709272877 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.16030621 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.820424301 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.511854126 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.191001523 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.531644003 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.178444619 seconds)
  done (took 59.088002184 seconds)
done (took 579.958107747 seconds)
SAVING RESULT...
DONE!
