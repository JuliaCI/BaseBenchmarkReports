cset: moving following pidspec: 25374
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.34360347 seconds)
loading group "string"... done (took 0.538094767 seconds)
loading group "linalg"... done (took 6.731598664 seconds)
loading group "parallel"... done (took 0.155255978 seconds)
loading group "find"... done (took 1.1703807 seconds)
loading group "tuple"... done (took 1.75476127 seconds)
loading group "dates"... done (took 1.184265351 seconds)
loading group "micro"... done (took 0.2914279 seconds)
loading group "io"... done (took 0.903456478 seconds)
loading group "scalar"... done (took 36.513334592 seconds)
loading group "sparse"... done (took 10.946495901 seconds)
loading group "broadcast"... done (took 0.912871564 seconds)
loading group "union"... done (took 11.808732397 seconds)
loading group "simd"... done (took 4.148503992 seconds)
loading group "random"... done (took 8.535772633 seconds)
loading group "problem"... done (took 1.866802005 seconds)
loading group "array"... done (took 19.973436698 seconds)
loading group "misc"... done (took 1.683976702 seconds)
loading group "sort"... done (took 3.110260528 seconds)
loading group "collection"... done (took 16.665337181 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479374292 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121615413 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113247411 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117736224 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138874828 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113678827 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121407879 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082438175 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.784980533 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139607391 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118470233 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409191176 seconds)
done (took 4.901724387 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172539862 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081107804 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08074312 seconds)
  done (took 1.281859298 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064849005 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120599241 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065497226 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06630898 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066076083 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065314193 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065079374 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069041552 seconds)
  done (took 1.638727219 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071750059 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067905289 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067965331 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066815805 seconds)
  done (took 1.39564301 seconds)
done (took 5.68309852 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.756936574 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197983225 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181233348 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.390684828 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125332602 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160485622 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.635503399 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314934565 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181423296 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079431818 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102526193 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318898281 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105091837 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639220273 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075517235 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088657973 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13835001 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.40651821 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066440799 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081218873 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088229798 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.1276851 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084615424 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074581412 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142953287 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.066791126 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128319925 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.078851513 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065644147 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206326237 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171948792 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663858614 seconds)
  done (took 10.104293608 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094092088 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096656437 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068043454 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122180589 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094665154 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068582237 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069908153 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066322899 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085850948 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126762186 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087330397 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099617482 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064545045 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067925196 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083344065 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202755057 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078906191 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080306648 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069441477 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074592475 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104489088 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077169997 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076917732 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076826485 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12803348 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180044955 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096940674 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096808275 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065903757 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078918977 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114455318 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125221428 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064766664 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065807848 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122708054 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094103443 seconds)
  done (took 4.527006201 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.900604867 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137860042 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089592406 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108158974 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159627171 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06678371 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105112359 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064152469 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083023892 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196951707 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.035658925 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.427924614 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11038933 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083537696 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066910325 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067412258 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066138972 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.346201916 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108331426 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112264245 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083523092 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074125773 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068538825 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064516012 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066079061 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066257772 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068048448 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.100560684 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.307448033 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111784377 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067282441 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.968850854 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114862624 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065847185 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099652611 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161019119 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085888622 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131054836 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064122539 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063677843 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144823419 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071954112 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064620936 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080922844 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10147822 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.10037445 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.195459247 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066882092 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160575479 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066246129 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086337352 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.706082257 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15158708 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075315485 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065529621 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243512985 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085113547 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065944633 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063293321 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064272463 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183223424 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126133224 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067146177 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065973705 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064632427 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067942368 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372285491 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066306284 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.714661249 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069007789 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076375382 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062915596 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068551813 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066343709 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071703172 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071129528 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084090406 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065708301 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067938605 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064998057 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065668683 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067787813 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083178324 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.188006748 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066072701 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066112442 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064437298 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089813947 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095997237 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068371796 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064334886 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099001758 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067176356 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06634394 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100511826 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065885947 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082764353 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068250799 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112122211 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065792336 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092914314 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064440826 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09421725 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.067167434 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098109579 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076213799 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.159578553 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.214600157 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06396911 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064543016 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065624356 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066905817 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066498202 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068117286 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078027222 seconds)
  done (took 19.704769381 seconds)
done (took 36.355680422 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271305352 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073430839 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073903561 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073649679 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073652284 seconds)
  done (took 1.777107249 seconds)
done (took 2.966698516 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118663591 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098412908 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063555245 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094642557 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063380335 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098779578 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09839381 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080439575 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098176959 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06346772 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095500505 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06340158 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063299525 seconds)
  done (took 2.308422575 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081574932 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082325741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068485567 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08095665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06290237 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081149103 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079699772 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087305983 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079528737 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071491555 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062999074 seconds)
  done (took 2.022222829 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080959898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083077992 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068938616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080718865 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062549656 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080909599 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079736475 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084419817 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080142702 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072322523 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062787991 seconds)
  done (took 2.015263751 seconds)
done (took 7.523485431 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076400123 seconds)
  done (took 1.247037978 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.579124226 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.023424049 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079841836 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110472617 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181748535 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117432658 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274035967 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085536511 seconds)
  done (took 8.802849188 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086891451 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067596308 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08124503 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068133096 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071198711 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068592953 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068859699 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070318733 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070834912 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069636906 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068217056 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07073324 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06941651 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069787011 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070929849 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067574242 seconds)
  done (took 2.381320676 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090597945 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089111331 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072045122 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073587376 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071269566 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071204554 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073090252 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07207035 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069808049 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071000546 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073290981 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073167946 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070740932 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063857803 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.072845772 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074392184 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069546714 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073148874 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07377774 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07411857 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073503451 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063502804 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070175313 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072693285 seconds)
  done (took 3.028073314 seconds)
done (took 16.637890564 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109829851 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07051154 seconds)
  done (took 1.357765408 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080412679 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081480946 seconds)
  done (took 1.346030878 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080706341 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064301989 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08781845 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07683585 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065403043 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065277729 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085188578 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06506527 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065036057 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065219137 seconds)
  done (took 1.905879163 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067686158 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076533549 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068460793 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079581673 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072575704 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063170256 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071444554 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066558897 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076225965 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061715852 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06961765 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08060079 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069753183 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082180627 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071018281 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066951605 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069260201 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06590877 seconds)
  done (took 2.467019106 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064819674 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066089015 seconds)
  done (took 1.324631605 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06589964 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062788078 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065592451 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065322601 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062599553 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061607482 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06231379 seconds)
  done (took 1.636628614 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.372963905 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109823916 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29119508 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070314466 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.0809875 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248316891 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064751441 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07000796 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069589318 seconds)
  done (took 2.610911 seconds)
done (took 13.839219728 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077638317 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084502728 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093594454 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.339839118 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090983004 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065480866 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112764706 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185875664 seconds)
done (took 2.249125262 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.206299798 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.559294445 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.36616887 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192796051 seconds)
  done (took 2.313407219 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.313041848 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090357007 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05883977 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065673714 seconds)
  done (took 1.729782844 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065448266 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067790568 seconds)
  done (took 1.334033707 seconds)
done (took 6.784667419 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065798091 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081894604 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065857952 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063017986 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065566029 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06298009 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062914079 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070550006 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065156533 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064933094 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068280536 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065167039 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064999005 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062813181 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062669798 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06534947 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062674691 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062795244 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062933233 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062563776 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065520334 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067790684 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063013034 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062790554 seconds)
  done (took 2.802806189 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081761964 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065841176 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070366592 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070008457 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069339237 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071010074 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07043362 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065265313 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070194827 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067203239 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068614802 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068778831 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067421683 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069304324 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067341473 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069068254 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070249405 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065736929 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066956181 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068861525 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070164166 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06543398 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068557262 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07008236 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068894401 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068523192 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068149698 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065603159 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070061087 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068479847 seconds)
  done (took 3.277166258 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068760021 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062901244 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063975801 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069639202 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062749655 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064017302 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062845561 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063419479 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063406683 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062853086 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064002804 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062646846 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062648367 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063373617 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063677682 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066452523 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07777977 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063993199 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063231604 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063953541 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066127394 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062548633 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06268972 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063091761 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062853481 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062563972 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063475694 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062557076 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06340524 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063173105 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066546272 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066619397 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062943002 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069503503 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06615915 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062815362 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066916178 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062447655 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065752591 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062813953 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062751935 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062878903 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062780067 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069446522 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063055601 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064437319 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063131416 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063963095 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062950605 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065062907 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061997064 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062378478 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064315158 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063573358 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066378324 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062240497 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063390428 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062288572 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063660977 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062748124 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062759976 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062756926 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065779339 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063698088 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077194374 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069169241 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062434376 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063940913 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063369433 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064783461 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064144497 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07555177 seconds)
  done (took 5.86204528 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08976972 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.198022364 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065001193 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064598954 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06085526 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064959476 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066301298 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063304523 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06460846 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068685517 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063671666 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064486355 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064645915 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075559964 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063235041 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064511443 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069116446 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061380133 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063088332 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066532558 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063361656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06663277 seconds)
  done (took 2.814263178 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152608172 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06927482 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104266496 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071624036 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066396481 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071732783 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068689185 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069297745 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069078495 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067825926 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067640208 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069738738 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066588195 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067201557 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067290627 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067461261 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069616361 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067198989 seconds)
  done (took 2.571371613 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076572087 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065975538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08527972 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065895219 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06541839 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067909629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069743249 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073117016 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067766206 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065234094 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072956418 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067292687 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067653888 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065589662 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067581219 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06486885 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067262923 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065029866 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072557947 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069432574 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069599609 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073039452 seconds)
  done (took 2.744881953 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078217022 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066752449 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081357084 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068119076 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061631571 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06398263 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069392014 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065061249 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069843774 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066596966 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065194305 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063523503 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068441544 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064990458 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06865758 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065338649 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06645066 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06526685 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066879267 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061095123 seconds)
  done (took 2.567593806 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085330619 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067265809 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067340196 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075294807 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066570957 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066758005 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073912126 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06653812 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06674977 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086572714 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066790563 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066683343 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074102541 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071050247 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066387297 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073713084 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073650801 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0734983 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066189291 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066179166 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086154047 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066419361 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073516782 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066395071 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066404728 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067245118 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066465124 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071171381 seconds)
  done (took 3.206169834 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065459751 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065555406 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063561651 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063276761 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062926082 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063156722 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063054361 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063121048 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065140249 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062991551 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065283816 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065228114 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065819675 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065528102 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065509403 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065426224 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065318482 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062496328 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062931245 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062751916 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065056435 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06501577 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064843568 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062766855 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0628699 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064838712 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063132995 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062743547 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065260516 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062497037 seconds)
  done (took 3.148810881 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073826716 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072411746 seconds)
  done (took 1.372953828 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062609596 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079134442 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062461212 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068897632 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068830564 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065523488 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072363873 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068736927 seconds)
  done (took 1.770687675 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080757503 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07599833 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066714043 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079114891 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075750242 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082081118 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131036557 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066085256 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072288086 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063525418 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078776365 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064383336 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07146894 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065346909 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071415057 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071246319 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062877976 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071260782 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067950907 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063733843 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066759355 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073888499 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067406116 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06075173 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066539675 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087870121 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075715826 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064750053 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068312169 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072368329 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070581174 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05957188 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065269583 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065302067 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063153519 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074708796 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080015084 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067921517 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074004335 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065905125 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075697952 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061112572 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069634183 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071723327 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075239758 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065249917 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065678229 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060220751 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063128843 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067862985 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061083677 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065178475 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060228109 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074375434 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068743702 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075441514 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064188827 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066722511 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06820872 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068525458 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072356733 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06726706 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067515129 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064905566 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074619137 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069518408 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074254825 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060496454 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059538955 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063488993 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074711407 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087774939 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071275062 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065943375 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066115533 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063578312 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068898676 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067166131 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071085546 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072009502 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065796084 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071173479 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072666427 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066149852 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06824572 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073492855 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063734022 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068470746 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063145116 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081162445 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064005201 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063072668 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063534568 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075539427 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068267212 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064828679 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063425155 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072547931 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059611941 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065764435 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065780709 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066188121 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074695198 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068355767 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068563319 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072348313 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071196324 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064212342 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067041293 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061046418 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064868122 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063399584 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07105828 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058849521 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066969953 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065293961 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064806213 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197788597 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064661742 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066741501 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073539264 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071966077 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064975697 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062269216 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068614659 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066085908 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068720702 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074270326 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064686233 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061210472 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061189586 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068971012 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06626422 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069475785 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069713416 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068821187 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060461358 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06362791 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070633723 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074536396 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066784369 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067234391 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0719402 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067216996 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064912822 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072377054 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068370142 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064450486 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071567615 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067269049 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061228004 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069189317 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068117499 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064283209 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069688289 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068770815 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068119174 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067084178 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064339127 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072638249 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067745228 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064932562 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065346626 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064308 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076229223 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067648041 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060330771 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062520226 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074367131 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064668507 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064836116 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064700505 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067454617 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065962701 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063298068 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065178564 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067762794 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075476607 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069244571 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066398085 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070572323 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075943473 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065575757 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068348735 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064926816 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066672634 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066679986 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074015538 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070701105 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069701681 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067704758 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062327523 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071240404 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072723142 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064674661 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06318742 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064581687 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069035566 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070942826 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069762637 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06592262 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063451583 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06606189 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06825816 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068416561 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064979347 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064782799 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071717413 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064054404 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072476126 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06639834 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.0757964 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069044839 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060586748 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068361018 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063239918 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071096527 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060409428 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063306084 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064494276 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066350154 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064252188 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067737898 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059594968 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07162366 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071698501 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064453377 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063653665 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063670057 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070765351 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065842274 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067957911 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067436262 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069629751 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074297863 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063787442 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067347072 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073910183 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.191122026 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060672599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071655188 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064555969 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064718275 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064731948 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063628481 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069155938 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074334762 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072999908 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059614565 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.06835755 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065271516 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065354998 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062088699 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070495988 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06852916 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066856536 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073013153 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067568792 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065728165 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069950572 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065214505 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066357533 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066831799 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069492217 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066343278 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068210094 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06502292 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068607607 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065159213 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06366595 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067826455 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065404324 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066476058 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071023815 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06491409 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065744064 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068539261 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066920378 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066001424 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06663341 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065607346 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068434837 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067041019 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06618201 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068240441 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06160535 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073749644 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065511708 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072629739 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065907557 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063163084 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07294158 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068212309 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071138643 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06669246 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065790133 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066896847 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065667565 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068679533 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07282132 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064052569 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075973878 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073727696 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066822539 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068049135 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066060475 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067345158 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064966449 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066466299 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066069886 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065767833 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065132277 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069577477 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067857729 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065871177 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066933383 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065987492 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065549174 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.0664814 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060199617 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064806454 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064807701 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065192369 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075066471 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065787179 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064946795 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064520746 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066404921 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064829265 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062459945 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073067608 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074309619 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065876207 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072784482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064785839 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066777798 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075543033 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059627315 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063406734 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06313061 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063721535 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07266098 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065915538 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074623687 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065401769 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064949579 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063113652 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065537772 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063747747 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059832717 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062470782 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067854207 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063720287 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063018984 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064134068 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066847809 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065057159 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073122601 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063235741 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065069169 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064367203 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061415434 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063957682 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063425812 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06662066 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064771681 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06268532 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061849376 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063595748 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065029682 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065546368 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063749912 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065767657 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073282601 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063975696 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067360006 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067439968 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059619264 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067167613 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064271172 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063990718 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063599029 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06780219 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067384183 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064717504 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072635037 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063828213 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064750458 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064268339 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062192355 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06371231 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064002647 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063642948 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063383598 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064774568 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071232732 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061901439 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066782253 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06388794 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06440891 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07069184 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064783391 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066901641 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070199157 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064409424 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065828963 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071619089 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067865856 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067171364 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065286033 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065293339 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068677383 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063512318 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.069399423 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063890735 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063404961 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06515894 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062388849 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062353756 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063072995 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062559157 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068789912 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064255038 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06257764 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063067889 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061680729 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064426346 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066425221 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070111455 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065245012 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066042675 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058741266 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06082899 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063837598 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061604114 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065075993 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065831006 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068611765 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066180063 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063778172 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062156267 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.071716057 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068681402 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.067511926 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061907589 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.067221973 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063965088 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06584905 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064562155 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063769614 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064037466 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.067106068 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.065878214 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063755849 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069315648 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066721568 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063470554 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065085604 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064204583 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063911366 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058883547 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063453618 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064748011 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067584244 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066394838 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063316228 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072841456 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061440321 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063683526 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065825121 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062776362 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.067732833 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058903027 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064530517 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06381691 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064263402 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058754913 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063274483 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062012333 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065517059 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062833795 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058919162 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072890099 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.070851766 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066288943 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062692581 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062911871 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059082081 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.298646549 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066750913 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068199325 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069470359 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077965886 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06656987 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067440922 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062675208 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068064017 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07019526 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070733717 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064972393 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062603034 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066287386 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069603303 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072504859 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065876683 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066253915 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070016502 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068904024 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06473215 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070164345 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064120361 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070235975 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079416846 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067286805 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067793192 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072957951 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074168333 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06692565 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062032682 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066724525 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069818426 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066722902 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067585207 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067136919 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080766645 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069833249 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066282496 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065892181 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068491465 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06595082 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07397074 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067063563 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06701965 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07105105 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068461546 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074932539 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069986176 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073905637 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069824216 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069010152 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065712763 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066747883 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064687157 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065252445 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.0667952 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066974857 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070688237 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073566787 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065535126 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076108179 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075344163 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068034114 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062771943 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065140875 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065538458 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061333403 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067239528 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064693248 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064226539 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064366915 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06481611 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067124039 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071135266 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06700278 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06656448 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065892423 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060450927 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068396926 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068012405 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066672786 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06274739 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06603814 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06612551 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069871192 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069089222 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064092798 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067333603 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067869723 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066862681 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061390554 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072608446 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064891268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067842601 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065283339 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065866665 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066712006 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069347266 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070433724 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06645225 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06803229 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069769083 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068116937 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064291588 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063491197 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071008606 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063855457 seconds)
  done (took 41.793231214 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100422911 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064000919 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061846648 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062240304 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072927486 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062886346 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061992527 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062948152 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062561616 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065290355 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061578044 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061811057 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07055885 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077437908 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073144083 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067028611 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062174242 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063180398 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062074039 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062873791 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070751439 seconds)
  done (took 2.782819245 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073872692 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070438193 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072467908 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075051969 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066837126 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070284031 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071847514 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070098525 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075340954 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066829541 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075244222 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070469276 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075785476 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066857747 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066721927 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070638166 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075271821 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067033981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07029916 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07195832 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070243175 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071714783 seconds)
  done (took 2.898361089 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06699483 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065797289 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06755225 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061226025 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065805014 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06117576 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069030195 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063986717 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069307606 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065037768 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065173689 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065073841 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067654619 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061383527 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066203223 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063683766 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107436568 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069191078 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.0656553 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06696319 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061768959 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068293945 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062004633 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061976589 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065416204 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069642119 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066527266 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064565676 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065524562 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065352406 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065763697 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063754032 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067373489 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066594899 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065425528 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065907544 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065616835 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065637057 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061827679 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064189039 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066559162 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061939852 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065889802 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067462524 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064082192 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06366302 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067675148 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065184478 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061031058 seconds)
  done (took 4.578075079 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078887496 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108078008 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067404749 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088117765 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079591731 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075428368 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069100424 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089160398 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063388984 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063889138 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081192652 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079143094 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065688444 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069866567 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071912233 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065659107 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066777863 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064407258 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069539615 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065062539 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069344935 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071791306 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078879338 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078266511 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069015567 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064786555 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064644688 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069741475 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077832873 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069798035 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070114025 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070756579 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079660548 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06735654 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065081476 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06787363 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080652868 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065605434 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067892468 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063216619 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067855067 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069438483 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071982875 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081438684 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065493966 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070244172 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065763636 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062778934 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077915819 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067702507 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07287408 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07922857 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069341709 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065990257 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069719849 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079860847 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.0655652 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063635479 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068220129 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077552087 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063415662 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069217077 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079199358 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067069624 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071810859 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078745683 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070370368 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068661491 seconds)
  done (took 6.348321586 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074747752 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072040146 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080158491 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078936839 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071458037 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071576073 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071697235 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07227338 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071636091 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076342726 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071590686 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092221075 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06740438 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074113324 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071871624 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071743962 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071634783 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072413886 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07208192 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071713763 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071721561 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079196836 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071492702 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079168713 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097900715 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067488534 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072018086 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071861456 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079176205 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071589666 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079007757 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071869909 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071838819 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079283105 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078714782 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071284228 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064930968 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071549986 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071905485 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07147497 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066932573 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07889575 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071030726 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066525085 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071403892 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071026858 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078502066 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077972912 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073312914 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075188726 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071185978 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078362258 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070508785 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071624241 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078667055 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103097678 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078725144 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078593936 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071535603 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0780955 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078241034 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084591376 seconds)
  done (took 6.003873005 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08247012 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073776828 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075934302 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061182401 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063251751 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068929127 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063542238 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063592789 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073502008 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073776779 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076104876 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068889217 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071853757 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075890062 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069194827 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071824882 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068942182 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068965156 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073336948 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069398707 seconds)
  done (took 2.774824437 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073369018 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082478261 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066603702 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070781166 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068423573 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07081057 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067593605 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068613837 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066391869 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068675065 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075222721 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075266732 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066648363 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070874404 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074846456 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070674292 seconds)
  done (took 2.489834176 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074040884 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071659171 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078981819 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066114557 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063801418 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061940315 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065191401 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06103741 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061859592 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077605335 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065341533 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067570537 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065269206 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064092907 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06259333 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068585206 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062040911 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062857787 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065288145 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077390283 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076000178 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063814725 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066155033 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065513094 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065510824 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069960947 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064466721 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063014448 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062788687 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065108515 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065531896 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068449819 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062346831 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062975955 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063965117 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062555545 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06457433 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065151368 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067742372 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064981732 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063263836 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064708062 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064682724 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065875594 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061443133 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065346662 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061399718 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066904134 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062837386 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065010202 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064778805 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067076608 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065464847 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072047182 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067822429 seconds)
  done (took 4.986828383 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078679482 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068500955 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061430058 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063377263 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068412289 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066656574 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068619074 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066648836 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066905531 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063416085 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067023739 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0678091 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066938133 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068572605 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066933271 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068975582 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061929257 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066653047 seconds)
  done (took 2.573910444 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070756956 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065699135 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072504295 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0655044 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065376157 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067420467 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061923441 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064545724 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063893413 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065406861 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065159197 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067363734 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064068012 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067508586 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065496958 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065049776 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06745751 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063949739 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065589634 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061483712 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067304917 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064124055 seconds)
  done (took 2.807212899 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071832849 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091687072 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138158821 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083268669 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080601811 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077954012 seconds)
  done (took 1.904602431 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089684477 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077913839 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066258101 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087389692 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072872399 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066299766 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066217981 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06657498 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075272929 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075429912 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066919151 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075241112 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07520738 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07462431 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072896622 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072552362 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067147147 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066729855 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066059655 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083048274 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066755748 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074528916 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066621052 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066550071 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066444032 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073860684 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074866471 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075221588 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066481414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074534611 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071830719 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066817153 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075047051 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075080466 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068463435 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074578056 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066427953 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082834812 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072217404 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073961924 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068176123 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072414609 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074973901 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071188388 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074810321 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067082424 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071598812 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067002565 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067046973 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084804642 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072937946 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074130669 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072553056 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075563698 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075768096 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085156609 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075892546 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074691368 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073074658 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078333885 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075038301 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072929626 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074497791 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075400331 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072978004 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074833401 seconds)
  done (took 6.184907619 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081518525 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085698824 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068055986 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07613112 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0744005 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066850144 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067093009 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067236372 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066838999 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067147359 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106576927 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067107724 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074976257 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074627988 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067009414 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066880111 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067132851 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074566468 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066675195 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084882935 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066832603 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074485616 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07447876 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074650646 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075461527 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073226697 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066926672 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067203922 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067143591 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067109204 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072005664 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067211555 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074483752 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066729774 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0747675 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06694609 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066655813 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071588809 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067126112 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072624952 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074604942 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082793535 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066925505 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067028547 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075289093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067182384 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06680147 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066858399 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066703721 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06669171 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075244567 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075239717 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075828828 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074221473 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067148984 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066779118 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066862338 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066690569 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066898001 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072140236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074075191 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066469504 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085159458 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06669043 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066481975 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074099524 seconds)
  done (took 6.100073319 seconds)
done (took 127.563827306 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18392183 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168624243 seconds)
  done (took 1.711490678 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067759089 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095350292 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076692837 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128102459 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065885432 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098797962 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098279011 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077297525 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065739095 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065779673 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065950185 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06718211 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130042971 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06646452 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065735245 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067324081 seconds)
  done (took 2.673827744 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.095494142 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172422823 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098909109 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064280754 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09687274 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072932848 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064193838 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07465747 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070214263 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065188387 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072758596 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070353034 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064925901 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070307304 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07096559 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072171929 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064476171 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072512331 seconds)
  done (took 2.808572429 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099272089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090270604 seconds)
  done (took 1.565835276 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158117767 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105769449 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149413681 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.333167697 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164386901 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.23376999 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129055549 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127766575 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118260821 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122730948 seconds)
  done (took 3.014819456 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097071753 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.146556209 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254531502 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115169932 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071768476 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090424888 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115968595 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077328016 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077508945 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076445506 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076572206 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075556075 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095294561 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073082302 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073224322 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075066764 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098837631 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072296619 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075072226 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07352581 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096220326 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065683444 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073445396 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072175441 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074287446 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074447135 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065160968 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065753516 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073373358 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073541351 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076436018 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088880868 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.073847656 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103256159 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069913246 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104394174 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075843716 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070722024 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072819194 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070516663 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074894399 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074872455 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071359972 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075241212 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064825715 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075569241 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064820967 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064692818 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077247696 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06580077 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077545416 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076179111 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103455659 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06646258 seconds)
  done (took 5.882434081 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.667162233 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102330121 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069497862 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1073164 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095417689 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071557173 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.687280685 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090329817 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.172719721 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091536954 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088393347 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069684869 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080100454 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082602911 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108075814 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101023992 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092783624 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070701787 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099789784 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.09776148 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068068084 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092742687 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089739247 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.3752567 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067126796 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068943934 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067591627 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069333513 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.109062836 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077460171 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069521119 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.120126277 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083650898 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119798702 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066598187 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067131654 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067262741 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078313922 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.179857428 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.131374745 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.129141504 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066440092 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067167134 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067953247 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088456478 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066187105 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.10890632 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078974589 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117786447 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069426101 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069017796 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066826874 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068108444 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078935004 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076713599 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079429453 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.228450774 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067210592 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067482847 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069938852 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178563419 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078624356 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078635406 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091177743 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.127929607 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066870822 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.695611804 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083765889 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06688755 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068657754 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066993716 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068801681 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067678717 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244702114 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.342871249 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069878175 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070084133 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068073835 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.161353732 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07887722 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067724017 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111404938 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068022844 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068444859 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069682469 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070689796 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.117647605 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079481238 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069670072 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068388517 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069512483 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067917531 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067232916 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.161563753 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079045285 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079153392 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.15847976 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068719239 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111196331 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079271448 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069802871 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079011269 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068709279 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07081358 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069741727 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07838513 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.095353833 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079893351 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070013503 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067709862 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097737383 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080680149 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068012657 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078071841 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.395221873 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079582173 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067054133 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080115583 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067599585 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.110367712 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069243301 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17468315 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070057519 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078502964 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068468209 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066902293 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06757969 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.109763489 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069440823 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068337777 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068406402 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069903785 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079025509 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.131673534 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069769948 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160615439 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132767853 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069659896 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118607313 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067903164 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115401457 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069629229 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068910001 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066941515 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.711748852 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067781423 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067653433 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069352691 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.13607547 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067524241 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078114281 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075869404 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066362012 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.690214672 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077626868 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075347594 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078137909 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069022307 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067293532 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066234328 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068390684 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.105631572 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.137451699 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068261459 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066535119 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.074718748 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.105994088 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065058765 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075180402 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074715924 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075340825 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066655576 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067673661 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077439933 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.112543862 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075462526 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.127802594 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.506621369 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066370553 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074131829 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.1349205 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066104854 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08092625 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066045462 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079098242 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.106827811 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073725196 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.220232579 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.108338963 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.133861617 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076921439 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079814027 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065791247 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066108562 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076556392 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066216029 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068351616 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075603534 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067791579 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068147098 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080791492 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06680396 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.169056455 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065664603 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076280209 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065340113 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068071349 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080478149 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066626233 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067993263 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076755604 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068379425 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074869411 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.628954153 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.07529984 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06613482 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067824085 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.128077393 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.107063844 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065661372 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065740284 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067970407 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.10468216 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.152241597 seconds)
  done (took 27.654298103 seconds)
done (took 46.694038252 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210370878 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151912525 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.202328425 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117750675 seconds)
  done (took 2.174323267 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121649954 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100877365 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095045247 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06553033 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10070208 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065656583 seconds)
  done (took 1.973516304 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306296051 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208123411 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180203948 seconds)
  done (took 2.114795939 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195391707 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186384365 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.391583947 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250952024 seconds)
  done (took 2.556616338 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142762312 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087867552 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066441923 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083170859 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132627153 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158666418 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100141683 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124426948 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077970081 seconds)
  done (took 2.451136937 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143619635 seconds)
done (took 12.93746198 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.229828777 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.149496339 seconds)
    (3/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.09537947 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105534023 seconds)
    (5/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.188082387 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.186169025 seconds)
    (7/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.108465242 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.086970691 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081678814 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089344634 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193332459 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093644634 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077345581 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105383053 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073677969 seconds)
    (16/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.157794927 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073342234 seconds)
    (18/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.189412472 seconds)
    (19/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10036708 seconds)
    (20/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.191436282 seconds)
    (21/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077107512 seconds)
    (22/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.172562702 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.082680513 seconds)
    (24/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.0738756 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.142755279 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19247756 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.172087844 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098870733 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159876074 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.168467491 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090919072 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065394066 seconds)
    (33/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.142023673 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094449616 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143073482 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.147291997 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.191174622 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094925959 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071011718 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.208684958 seconds)
    (41/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.160833195 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081571749 seconds)
    (43/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.077873604 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.188949021 seconds)
    (45/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.136409601 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071706617 seconds)
    (47/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069172253 seconds)
    (48/309) benchmarking ("sort", Int8, false)...
    done (took 0.138210742 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050495768 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080566612 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067385012 seconds)
    (52/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071697743 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176048898 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064980591 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063613048 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.148113963 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072137343 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071745582 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.162639489 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16593033 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.162528828 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070735152 seconds)
    (63/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070897349 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066908558 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073338443 seconds)
    (66/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074179921 seconds)
    (67/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069347159 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.136160289 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068537247 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052401414 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.165981856 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050804263 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051946683 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076223517 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078556005 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079062549 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.135261201 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.108994817 seconds)
    (79/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090639655 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.137558572 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.065340728 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051173803 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095537455 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.240396115 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106399199 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093489877 seconds)
    (87/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100133398 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075589909 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.101884659 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 0.126738225 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051396306 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062371729 seconds)
    (93/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07265282 seconds)
    (94/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.073019169 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066030908 seconds)
    (96/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119929315 seconds)
    (97/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051461922 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13528237 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08715897 seconds)
    (100/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067410791 seconds)
    (101/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073316092 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132395159 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176675446 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066563332 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076128027 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.134573737 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072388119 seconds)
    (108/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066775229 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17003888 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171932312 seconds)
    (111/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073088945 seconds)
    (112/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075024822 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.106974944 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144310439 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.0657727 seconds)
    (116/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071864196 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064207709 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051426152 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073076994 seconds)
    (120/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085578888 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134414023 seconds)
    (122/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.394126183 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076878795 seconds)
    (124/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067219162 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050953025 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.133562756 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073381895 seconds)
    (128/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100354954 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120311099 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071759255 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071958387 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070529883 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116628811 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071322045 seconds)
    (135/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107497463 seconds)
    (136/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105935962 seconds)
    (137/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061261565 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064867185 seconds)
    (139/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069108113 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05074811 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070972166 seconds)
    (142/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05226929 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086491741 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064764276 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.168931458 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071827258 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.137560264 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064512635 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071597277 seconds)
    (150/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095576177 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063439454 seconds)
    (152/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099359089 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076755923 seconds)
    (154/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112717605 seconds)
    (155/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105142588 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073208579 seconds)
    (157/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060283953 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072690774 seconds)
    (159/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065910978 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065029383 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065827744 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.0504234 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06753943 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.136122781 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135219589 seconds)
    (166/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066863833 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065593387 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052029015 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.171581729 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087557114 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076038569 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074821727 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068345278 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053274995 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.136384207 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088771269 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089280171 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11272131 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066635451 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050370255 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071784617 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070482163 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064168531 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074919409 seconds)
    (185/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050862941 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.179203538 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064326528 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072478986 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050277711 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078759937 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144339498 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163346922 seconds)
    (193/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050027853 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069771197 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116697424 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.244450237 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 0.128541912 seconds)
    (198/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061301659 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053649869 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064272889 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072816204 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052833513 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087918602 seconds)
    (204/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073399377 seconds)
    (205/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054267029 seconds)
    (206/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052581807 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06633523 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.139708583 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064627815 seconds)
    (210/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184138515 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065428281 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065566519 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089118195 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051381673 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074628672 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09124889 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138262093 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071883634 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052049057 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096748937 seconds)
    (221/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074943361 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.138803182 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.170471497 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051145611 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070796994 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130131505 seconds)
    (227/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051339789 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078064881 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114518726 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054080513 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072657 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050942435 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064465579 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068800566 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07118561 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051071024 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.094701232 seconds)
    (238/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068871088 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13884099 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06547646 seconds)
    (241/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073498359 seconds)
    (242/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052122444 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073957684 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068518732 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050685367 seconds)
    (246/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051802348 seconds)
    (247/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087649611 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066508626 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050682533 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052270203 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131367563 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064730346 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073949081 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052288456 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087912464 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088263767 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053296109 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071100759 seconds)
    (259/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099397899 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064418523 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070147722 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085570266 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063966293 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072829283 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091682741 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050203633 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050731959 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05325816 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064850536 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050656732 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069273749 seconds)
    (272/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053056371 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06461476 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050600245 seconds)
    (275/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071292087 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076617536 seconds)
    (277/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050657751 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066537762 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066032617 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051738081 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138010068 seconds)
    (282/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098217241 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07197866 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063495716 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064446294 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063146142 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072045006 seconds)
    (288/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079027892 seconds)
    (289/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052377225 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065217093 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050614279 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088744291 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0650239 seconds)
    (294/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071129178 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064699757 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070053613 seconds)
    (297/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060072306 seconds)
    (298/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.0711213 seconds)
    (299/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061448197 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06469886 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099796586 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065047982 seconds)
    (303/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051750495 seconds)
    (304/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05069346 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070303355 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065496817 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085558279 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066151848 seconds)
    (309/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060593382 seconds)
  done (took 30.154597112 seconds)
done (took 31.591732124 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084084918 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091584153 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073791817 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091919299 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079334318 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075483749 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07166576 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076871798 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078686031 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080328923 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077322569 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054404244 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073121521 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.0730942 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073461157 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090615101 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077218011 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071627863 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072029927 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06407506 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072013626 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064806419 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066248519 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054247586 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076951052 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071017054 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071494478 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072725174 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065052539 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065342263 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068372588 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072401805 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065011414 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077694093 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071400344 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072286365 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07352093 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.07522189 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066478122 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065450142 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073170304 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065060747 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071960105 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072471339 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070795348 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070418524 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072283871 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076827344 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090520728 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06736731 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07346485 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075571921 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075219784 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071563483 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068748229 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072211808 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070193963 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090090421 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072862514 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067220102 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072869275 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072920418 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069890101 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072056242 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072204159 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07410833 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07417281 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070389884 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073989315 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070351984 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064734763 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072057662 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068321065 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065498931 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074881165 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076113734 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063936342 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070399259 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072145647 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070541143 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064455597 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066829621 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066199741 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071025858 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066626821 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054306482 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068302963 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070394566 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063885432 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072044669 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07039555 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071216022 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066081123 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074591683 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064134647 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.06974869 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064994124 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06511019 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066338282 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068445065 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064378873 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066916871 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073835274 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06597052 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070747829 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077964464 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065231158 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071180503 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063819298 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064502621 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078570926 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073832818 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065036798 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067184816 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063788616 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07199995 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063651701 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064534191 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06439326 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064357629 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069761146 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064222057 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066404066 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071006497 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07679492 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064496789 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067227719 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066472909 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064369068 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069615131 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064161264 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064177743 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199010154 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061433577 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06778175 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065584728 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071522972 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068046197 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072401674 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066394379 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07301877 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069457681 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07068096 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070715507 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064490361 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058280203 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067056629 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066987295 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067242183 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065129554 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06632683 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065529907 seconds)
done (took 12.356584191 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065988318 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141278443 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097650461 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094201375 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084700735 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065830772 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075326192 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10051143 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.06714386 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101024052 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08681092 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084195647 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110979242 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064022988 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065467511 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069058163 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066586142 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080607552 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099602553 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085810956 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107688797 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064680892 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093272208 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088838208 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086256063 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090894698 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066084632 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068838052 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068679231 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099033375 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085649178 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069112899 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066176459 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098723244 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090861125 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081872106 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065647415 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081112723 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065822684 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065230197 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07947038 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096420498 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07919318 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07891635 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069052958 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068333748 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066394431 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082261622 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087427569 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077440097 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085153685 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101586285 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067891285 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064597884 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063644602 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084039156 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064604675 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068463706 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065753548 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067526049 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065561215 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0683013 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079688699 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085220847 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06875721 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078859344 seconds)
  done (took 6.771235541 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082517677 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089353639 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082033955 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082537556 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065134637 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065903545 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066040003 seconds)
  done (took 2.065040758 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066534065 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086790034 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087976034 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087808175 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083728893 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085940489 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075199861 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066009954 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079743642 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067035082 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08666619 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100418981 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066175261 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.0720508 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089672202 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066346146 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08927295 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066046294 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068671915 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089407216 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067598624 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081168494 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069892234 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066660488 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079869207 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066280928 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111726368 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069892444 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067670694 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068999175 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06409074 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10463945 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079329117 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074560386 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06563624 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079935224 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079910385 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064418193 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081353728 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070598644 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079099036 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066237596 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066593064 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063728376 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069861793 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075767715 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06651117 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066469768 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06859569 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085027998 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066435835 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079056202 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070060274 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068304914 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06729085 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069409384 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075443019 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066732088 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085562432 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067741822 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082680622 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081829663 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079596393 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081691561 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06812577 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078861057 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078997068 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068117024 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067363854 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069120803 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081761482 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064186325 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067143027 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076225623 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067105525 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088310514 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088361849 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06700358 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074667701 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066222705 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066095314 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065853379 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087769949 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067780822 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065918585 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069921692 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06944673 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064476053 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06477886 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069458187 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063943459 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067606819 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069000786 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069514987 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068478342 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081979626 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068674744 seconds)
  done (took 8.719150266 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068654655 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06665995 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068724069 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06742821 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067009411 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067456614 seconds)
  done (took 1.956713335 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092352243 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068537261 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080013831 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07236385 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103397428 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086182527 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086147394 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077781799 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082986431 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078015604 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085729865 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087411131 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091612712 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072138258 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085215194 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071247444 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086168446 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074959183 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07832321 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072351935 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085641162 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072111815 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072243878 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080920315 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075370068 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071399458 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066582327 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077796177 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077528203 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07780629 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071906915 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075086428 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070024048 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077689744 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085955976 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069503907 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07134039 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076228279 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071612997 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074630672 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086972496 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071920941 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073609581 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076479175 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077084769 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069788439 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.075920443 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075607416 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085146507 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076154845 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076042018 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070882797 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074203468 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076466245 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.06941179 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077177134 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076172282 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085407546 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071225876 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069530642 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068671344 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074684699 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076691918 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074522037 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077944928 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076531418 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070019731 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071783966 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072402601 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071178006 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076679845 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.0679371 seconds)
  done (took 7.057880582 seconds)
done (took 28.085402562 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539576617 seconds)
  done (took 2.058785856 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611958202 seconds)
  done (took 2.153979803 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.37400763 seconds)
  done (took 7.915124169 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.391760111 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.504215108 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.706428273 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128983814 seconds)
  done (took 3.312892096 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.660573413 seconds)
  done (took 2.214240429 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209907353 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.19403429 seconds)
  done (took 1.963753611 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.365642737 seconds)
  done (took 1.907453388 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.100643706 seconds)
  done (took 2.645400491 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257753434 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160965149 seconds)
  done (took 1.967870654 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45840607 seconds)
  done (took 2.005778265 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.832395444 seconds)
  done (took 6.381315123 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.204806705 seconds)
  done (took 1.802143682 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237091219 seconds)
  done (took 1.78734957 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.710293347 seconds)
  done (took 3.260308816 seconds)
done (took 42.924616104 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079184373 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079706406 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079930941 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077137648 seconds)
  done (took 1.853813874 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075773336 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071812162 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075593561 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071477894 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075810418 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071348256 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073021128 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075426813 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071667063 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072116187 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071577755 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071190218 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073835239 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073231279 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069576744 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073660682 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074976042 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071720182 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074295937 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071082513 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069688875 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073131294 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073834248 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070974762 seconds)
  done (took 3.299814109 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076147785 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072165992 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07343895 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070976051 seconds)
  done (took 1.851785545 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076461497 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090624554 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088149754 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076662234 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089959266 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084761522 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068222278 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068100549 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071975203 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076014549 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066931332 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094668987 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086524726 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075845516 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078064766 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064919217 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067511324 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085766653 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07695418 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076661538 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069109138 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075610051 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067236667 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086800036 seconds)
  done (took 3.418356874 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076250794 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10139483 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076762269 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085861363 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088414829 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064447566 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073398611 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087619132 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121113595 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064411512 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068769231 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064658293 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071321859 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064298649 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074913143 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103459498 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107169358 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067364266 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094394994 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064561359 seconds)
  done (took 3.185989302 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07215868 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068797329 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064593275 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067862467 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076915162 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071788754 seconds)
  done (took 1.986296492 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067340193 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066109979 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066128233 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066014827 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070832941 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066416798 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065354243 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066341341 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066134591 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065935405 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065529851 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064705991 seconds)
  done (took 2.356963033 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.320903748 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067700917 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067812936 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06514318 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069589637 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065672278 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078888527 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066954653 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089283347 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065894627 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065628664 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067740144 seconds)
  done (took 2.652356601 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201477854 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075539362 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231916901 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134788237 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10968437 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114364757 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101985385 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111872917 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140451328 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100020612 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164667122 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162670064 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105282862 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134547278 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087857737 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096833852 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152567165 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159633628 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101874699 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162755073 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141385248 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1226274 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144120098 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1000451 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103919648 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119716232 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070171959 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07896374 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166791209 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128836662 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143328734 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108917084 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091948703 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17272553 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167868843 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139764564 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132196985 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08302497 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100186996 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131174779 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195996359 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087408593 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161277844 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243010287 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080112495 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138294492 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118077337 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119469946 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104945117 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088234811 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143161725 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179002696 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136025758 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085449072 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111110701 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113847751 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114255231 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101410435 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178857782 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15762445 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126298923 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070316373 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098281177 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150993925 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130721706 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106427777 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124229026 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091419023 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13078532 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151892774 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116449629 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140775243 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127074104 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087123766 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116676424 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13716473 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125974267 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16635292 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12217561 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071361453 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12213046 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101414809 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080224595 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140489074 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074347847 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172570452 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096729162 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104136392 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110754462 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106488168 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107010756 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157647428 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140112264 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241716162 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065222328 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101630759 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118423079 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145982708 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086774918 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107479802 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114690876 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076796851 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136041101 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073753173 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121549556 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07435721 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122880694 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130192034 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074582181 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119267957 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099046891 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098606809 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131157883 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156520155 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088130605 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080945813 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164706552 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11982719 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102572313 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141193295 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153145225 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097401071 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09997528 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145828887 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176773166 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087904651 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15975448 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105314104 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08245951 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086078294 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121450084 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110900587 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120293386 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080737484 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116278345 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164661014 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074488578 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093707355 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130908318 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077641598 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079477115 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101541554 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098671821 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093293703 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098131963 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102244394 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136142067 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12109966 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102607137 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265410546 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096997236 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168461096 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088051042 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098592534 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102834964 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068977422 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134610255 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15363041 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078639851 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160441654 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121611557 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103308396 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116852346 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081526194 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137563001 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07800276 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069364712 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142423868 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10900457 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108708848 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147857573 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103453446 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124934821 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117154676 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132134378 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129906308 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126637131 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104545262 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087113098 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109482139 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123257478 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072067641 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089546089 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07895796 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101990741 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093905093 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081997221 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13970952 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122916122 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098396885 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109405372 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094678616 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144162551 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075298895 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126590021 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117498425 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092538373 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149051276 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149149708 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128702213 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097056772 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141914506 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068984653 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072551379 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.230539722 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122464696 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082019607 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082389844 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115878048 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144899024 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126811815 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136304147 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110233519 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118489258 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152522891 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06955144 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114080301 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144733047 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11994327 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103401288 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088965576 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097457285 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139563899 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106196489 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17897022 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112429701 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12468415 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151011245 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098719109 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078427667 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101633763 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133256416 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107906007 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142036398 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09857165 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08658992 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107945263 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072977104 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098006853 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124634337 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117810583 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133167311 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112342779 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130254035 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076206444 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115405556 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118946649 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120057028 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063520611 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118836397 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157644424 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092116475 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115940142 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14970706 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077801505 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121631847 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316788511 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143739263 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083371149 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10782387 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116901161 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125963324 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117615778 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138425992 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107762996 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134023287 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106802821 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083917693 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086254459 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095552546 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103213583 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.092800484 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106073369 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11227418 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09366598 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129985648 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100836897 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107956458 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116283326 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096234827 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087857287 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094107757 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170981403 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118059315 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169076941 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097687499 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142651853 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160501308 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073809264 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077763647 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076906826 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137602219 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082620029 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128889746 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096423266 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103961851 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121701263 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139167228 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093574143 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067778798 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106910461 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131692379 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110624543 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096684705 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102719107 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15967498 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099193152 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077822636 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111030146 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103083222 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100314276 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312681948 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.0615478 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096836477 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074933007 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080697137 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125952236 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151615305 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079942287 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101777095 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117253894 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109013356 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125309681 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099516635 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097748536 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112556905 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1467763 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126432094 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088296747 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110901543 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127496501 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170522951 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103926645 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093645067 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167681431 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149979798 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156947254 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086473341 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112103995 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112346665 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106716706 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136362157 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081695374 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160389693 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080744211 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133548092 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101990735 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088534987 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127936103 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097191612 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086830978 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144743893 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116137534 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081999439 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076405035 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115717554 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11809869 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105363255 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074469057 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136800726 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071934919 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129180446 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165213561 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079763137 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244744337 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095794117 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078527279 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107704949 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10111394 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088237776 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096822638 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168939567 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08585891 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146830958 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13860166 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111446436 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134801517 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098486455 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633710861 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076534229 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149294824 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114662352 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169703219 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095687873 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115289032 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107658441 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121187248 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141993431 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10333703 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175475204 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12916601 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114450586 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078623156 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100688366 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100438647 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087043242 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103437315 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111294174 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113723216 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09188265 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114263017 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120639787 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083775987 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093578778 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153014781 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114966144 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141741668 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138405099 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083887856 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116539381 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135674884 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078321753 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119222824 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148208123 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10401856 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096258149 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.2217967 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100745836 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167490071 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072761742 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160231802 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118700457 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107586648 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110797108 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.111268782 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129964931 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105784244 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119308673 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091769422 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108522939 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110806054 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080779841 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075461545 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102871824 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109952807 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096108652 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096749363 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096793777 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148639789 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070347324 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093788534 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101371645 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142597076 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171895616 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086887879 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081441283 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118001964 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110668907 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110790518 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118219341 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.0777082 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080935207 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080308319 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076174297 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106476624 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110358569 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102939161 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109113333 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160423786 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081675883 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22309844 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093719611 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103257708 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068757586 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077444492 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093809956 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095909496 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106700616 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099166425 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166685389 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093101954 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087989287 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090239628 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072304539 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080802907 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269287562 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108605008 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118031303 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096980534 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062313949 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107048668 seconds)
  done (took 57.965916559 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107049911 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08143364 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096027685 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148030562 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12119572 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210671613 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155833972 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198182159 seconds)
  done (took 2.791146958 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06782175 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092686166 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097775555 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081643762 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065451205 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067080919 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222873918 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079517869 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06562487 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087341685 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078424482 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067997998 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.397536039 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065414252 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066844863 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062107574 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066411309 seconds)
  done (took 3.397119264 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.371703932 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361592367 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.369943998 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072395588 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.648897756 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087639219 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.077858342 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095258761 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070323352 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.278544669 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700599549 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091651169 seconds)
  done (took 13.902268754 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073729101 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069023331 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082531477 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081685232 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071208749 seconds)
  done (took 2.04797785 seconds)
done (took 102.304803129 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078473844 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.291074343 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052459023 seconds)
  done (took 2.041515685 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081361603 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083597615 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083085145 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081313205 seconds)
  done (took 2.004870294 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073231312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074679213 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083265687 seconds)
  done (took 1.901690932 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220411192 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140601011 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.0850315 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080726238 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077127552 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07753962 seconds)
  done (took 1.913594845 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071193304 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07338957 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072038962 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074998191 seconds)
  done (took 1.96540718 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074846366 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051536142 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0541839 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055260591 seconds)
  done (took 1.91027897 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.0847027 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077474444 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076730791 seconds)
  done (took 1.911250232 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105013582 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083448767 seconds)
  done (took 1.860094301 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080742199 seconds)
  done (took 1.753307716 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097129107 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11146049 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126544638 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107396988 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.133543307 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106975292 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083539531 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085112769 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075713331 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085329085 seconds)
  done (took 2.685633923 seconds)
done (took 22.140759101 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077439934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366333737 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36009788 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089515823 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667374134 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35522533 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.977585094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090724714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119248909 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06690114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082847959 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648834139 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.968676258 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32351087 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.954012031 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.412787551 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.6492856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067145755 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066822953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066622293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.963563361 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066999228 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066947746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067142946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648640995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369713481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066964477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.412415576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066729646 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068914695 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353692681 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067536429 seconds)
  done (took 16.290489 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069316703 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115931106 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072107925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082944926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069711657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068746089 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070274475 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067898394 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122926014 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06713721 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08342274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066748111 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07060396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06765839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085596201 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067452026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067510574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067899398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06728431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067785774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085252848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067188581 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067285871 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067496306 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067092422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078908035 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068231703 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067541512 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067740265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069405506 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070543332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067951829 seconds)
  done (took 4.055798812 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113587246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122582716 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074034629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101812333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111176576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069487308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14197164 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09163477 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125790167 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066930704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083218713 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066919129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099987745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067626286 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086158845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067906129 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068124689 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067694381 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067612053 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067535425 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085996659 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066966902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067461038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067715671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067414744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080556458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068128966 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067916457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067528158 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069786256 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070930563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068481905 seconds)
  done (took 4.301664237 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071935505 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074302162 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081909916 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081929384 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068387502 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070678722 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071908027 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068929425 seconds)
  done (took 2.282623844 seconds)
done (took 28.608620428 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078379691 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067913606 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07167278 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079253288 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072149652 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077250149 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066666094 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073492297 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070919687 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071733057 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073843637 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066833116 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070531263 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066908068 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072753624 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067048746 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078100766 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0710182 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078072521 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078856024 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068891916 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071937103 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073023271 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078109572 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078309671 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077850039 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076072993 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071736744 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068061808 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070264641 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075649876 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082955024 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067743314 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077947702 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067291578 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066907901 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070532262 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06690835 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078155877 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075470897 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069067837 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074939115 seconds)
  done (took 4.733088905 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086874018 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090165486 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083497056 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061197027 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066125621 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063968958 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08763392 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059120229 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058855492 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087261448 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055568757 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05873327 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061453199 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05384401 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058531231 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056132593 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061128248 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055402781 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058991522 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058952853 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057687338 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053517285 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059458287 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064657797 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055830946 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060851136 seconds)
  done (took 3.376208882 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073537669 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082829666 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086993807 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125353787 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102200363 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075432738 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076461482 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086498319 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083713234 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065963904 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070100794 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093308347 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086937908 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073130005 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066973691 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08271695 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080837245 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067831779 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072361168 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089778266 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082926922 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.076659459 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091179865 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079434346 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065871893 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06871499 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070308212 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079832636 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071767921 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075282817 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070213369 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069912489 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06823862 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077713606 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070009771 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06792573 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08785957 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075780583 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076772864 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066899844 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069635483 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067800528 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088393973 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121555979 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066064177 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073012454 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074466382 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07549406 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066518566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084811964 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077297719 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065934158 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06961834 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065691349 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066867464 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079620368 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068519119 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068491919 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075765544 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069522442 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.07871546 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070663612 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081472493 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066165064 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073969214 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065765503 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067675651 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066204845 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091165622 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068576182 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107128241 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068151171 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067721508 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075549211 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074113962 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072585396 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066991697 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081842404 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076389536 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069823476 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074903113 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069660481 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069470232 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086353082 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068544311 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068223629 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067995958 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072482762 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069330496 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068410828 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07930116 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066683794 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069613688 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082770553 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066252539 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068208719 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072452743 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071151756 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066467605 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077664265 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071370793 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067360548 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07552408 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066594871 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069348322 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076384831 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072558359 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065868286 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071008127 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072367723 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067499492 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068361534 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07007853 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068431912 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.087091211 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072990735 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070889927 seconds)
  done (took 10.474974689 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157399054 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15135305 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069115089 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142050708 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075588548 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078666429 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145072659 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093119288 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066884877 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067500754 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067896726 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113750782 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104113592 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121004703 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077375422 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066664942 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08198574 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115225074 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146430146 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140544564 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08209983 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075935458 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06892203 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068103506 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073147704 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080936626 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089553192 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075566211 seconds)
  done (took 4.433141439 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079622194 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099547169 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07318199 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087927615 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089291519 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067141127 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069399877 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068659987 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079482241 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077713799 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066598433 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072312105 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074080834 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07305258 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068098677 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073733434 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07423018 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068400391 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069992757 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072264829 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076943957 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079206817 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070720298 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066390941 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073568781 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066431738 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063247198 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083094746 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067142265 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089531737 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065280457 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074169546 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08040903 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067646853 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067009167 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067057382 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06678055 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066958746 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069118504 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06534119 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065812434 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057285457 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065885439 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07826407 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072940242 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05603743 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072021663 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072126682 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072112515 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064681167 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069744034 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069647466 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069860839 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07387612 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072259973 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072107802 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068472081 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06570213 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075033976 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066605954 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064383864 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065540553 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071695733 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065005874 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074291132 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071219046 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065482721 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066166095 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068827376 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073016443 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066551488 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069436265 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065312185 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.0683777 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07108018 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06819066 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067651838 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065390733 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066224524 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066913324 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054713683 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066581036 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053344275 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069551298 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06463033 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065011775 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066518003 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071127188 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078616537 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068013086 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072245305 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067344288 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065719698 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069706003 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.05940763 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.06972727 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081572835 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081258461 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066809359 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065129372 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080598125 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070937647 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065684291 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055366738 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074449161 seconds)
  done (took 9.099660819 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093404927 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086743411 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069790404 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082859088 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090064275 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085403501 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073846589 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075910653 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06820616 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081169447 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072669936 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075465232 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067105316 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076216675 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092741813 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075937803 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069193311 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075498526 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071294877 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.09993403 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081275972 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080715973 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074058045 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067137419 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074608437 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079135016 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088715758 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079284405 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077245642 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074398803 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079062445 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08870306 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073120526 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071306873 seconds)
  done (took 4.414646154 seconds)
done (took 38.21870804 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.763657862 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.939914714 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.768053133 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.135693937 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.074040386 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.892276381 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.875732315 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.768896705 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.055436703 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.807095363 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.02200968 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.816305853 seconds)
done (took 65.62752522 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.820585545 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.918147384 seconds)
    (2/2) benchmarking "String"...
    done (took 2.046078394 seconds)
  done (took 5.674798071 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.134980527 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.296894866 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.012906745 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.767006412 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.772993311 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.069873806 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.568738022 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.286888811 seconds)
  done (took 30.486981924 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.95327602 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.969791931 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.425907696 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.458939316 seconds)
  done (took 15.565740599 seconds)
done (took 63.47324754 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.78480331 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.772768159 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.777753324 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.75390035 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.826293815 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.78447829 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.139060269 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.864592073 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.765543794 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.760455413 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.768075747 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.198555955 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.771847693 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.153727567 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.75559617 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.765367654 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.796713915 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.319951508 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.909375915 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.757084577 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.769205094 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.775123157 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.752032406 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.759621556 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.755871143 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.752194852 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.204551882 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.760043473 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.375276811 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.750689141 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.78649471 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.19279039 seconds)
  done (took 203.770461067 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.751775542 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.717804519 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.734628798 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.753857762 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.139200921 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.950890749 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.885702394 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.201044699 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.752779378 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.751002594 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.938302461 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.750930504 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.962151911 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.701152709 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.76915948 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.842165728 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.926935381 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.972697297 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.754185275 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.012664069 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.775638484 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.763662786 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.713818481 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.919054119 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.775152613 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.764191681 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.914224479 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.778761429 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.937478025 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.891225282 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.766650925 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.764002662 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.971388483 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.618733913 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.757323233 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.762350719 seconds)
  done (took 168.836385646 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.136344314 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.74852305 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.746010241 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.746916281 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.747959473 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.761025569 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.744996154 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.867570859 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871793552 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.214726024 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.221172345 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.796502177 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.571825565 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.746237263 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.815074952 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.759387487 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.749350721 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.76460401 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.772778796 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.748677983 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.748118702 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873499221 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.758370133 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.746544822 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.75292046 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.748154787 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.75318721 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.118104757 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.892263733 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.740617923 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747059078 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.998969468 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.739582716 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.740304276 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64407574 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.379687219 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831656779 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741293561 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747810785 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.739698282 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.957382916 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.74086513 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.739763256 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.743906915 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.908308931 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.737362663 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.865251516 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736916592 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.243795663 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.738279635 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.737134731 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.56801506 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.406946051 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.734786641 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.735133285 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.73757935 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.733816495 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.73637446 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.737186882 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.740448001 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.584595049 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.806410347 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.734701768 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.742998225 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.740051083 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.733036754 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.915019767 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.734861101 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.631419217 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.785232568 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.835584635 seconds)
    (71/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.729576474 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852953594 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.730861734 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.796033382 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822949792 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.73004463 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.727668845 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.728507692 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.731383345 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.806964329 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.730480815 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.858371476 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.735805069 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.728701387 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.774711741 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.796553554 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.729028293 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.633690867 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.730609383 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.728587046 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.043861148 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.795939736 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.726474917 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.725157169 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.727858374 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.867619667 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.851755525 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50794223 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.732388842 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.535666392 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.728657011 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.87847445 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.729244847 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.900231187 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.726674471 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.80916889 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.732446504 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.729898004 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.726125969 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.759159601 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.725871674 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.786412645 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.727448139 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.100768289 seconds)
  done (took 398.737012833 seconds)
done (took 775.24571726 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.403858657 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.371606961 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.479410362 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.398326524 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.370768483 seconds)
  done (took 13.689264863 seconds)
done (took 15.356105862 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.811562565 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.814654368 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.74982932 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.812984595 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.746222605 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.813465985 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.79530776 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.754557979 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.780691247 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.754433178 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.784378372 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.751505898 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740873471 seconds)
  done (took 24.776910997 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.96832102 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.960347152 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.80030748 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.976485208 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.774279264 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.958807282 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.892743758 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.877569889 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.880954373 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.743165577 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740489934 seconds)
  done (took 22.240281373 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.962409641 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.97707587 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.800136823 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.955684207 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.773408489 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.961726972 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.891323267 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.877833697 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.877284178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.741322418 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.738403698 seconds)
  done (took 22.226257507 seconds)
done (took 70.91247094 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.735471435 seconds)
  done (took 3.40396209 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.758437689 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.891699913 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.737572926 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.740928154 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.734990718 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.734944196 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.738516585 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.736442329 seconds)
  done (took 15.741709257 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.731561715 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.734353136 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.733268735 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.733557375 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.73693892 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.731850938 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.731557696 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.734040836 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.73495994 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.733665295 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.731982589 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.735644673 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.731244458 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.734530523 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.733685877 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.738060117 seconds)
  done (took 29.408942993 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.735459351 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.734295226 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.732173399 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.736665234 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.733317619 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.732634428 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.733115707 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.730211255 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.734857159 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.733136831 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.735472485 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.734351759 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.734014022 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.729667414 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.732701513 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.733593958 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.733426795 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.734662206 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.739123662 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.731812721 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.731512521 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.732685903 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.733303274 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.731166179 seconds)
  done (took 43.274532874 seconds)
done (took 93.497362046 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.443775725 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.158836419 seconds)
  done (took 8.272267587 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.734952111 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.736625918 seconds)
  done (took 5.177554331 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.73552631 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.734622118 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.737391878 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.735841582 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.736208648 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.73763037 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.735610652 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.737770954 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.734940189 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.735285056 seconds)
  done (took 19.032713689 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.740187938 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.736199614 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.73267958 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.735343229 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.736401306 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.734657114 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.738415459 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.735965032 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.733711654 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.73176112 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.733667893 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.734997457 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.736387192 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.732400941 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.736302892 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.73497721 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.732282811 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.73350251 seconds)
  done (took 32.901245527 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.733935236 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.737648697 seconds)
  done (took 5.141678963 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.73224445 seconds)
    (2/7) benchmarking "second"...
    done (took 1.73629552 seconds)
    (3/7) benchmarking "month"...
    done (took 1.730896269 seconds)
    (4/7) benchmarking "year"...
    done (took 1.733104919 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.734330819 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.733683067 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.73234987 seconds)
  done (took 13.806679174 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.73659974 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.903848837 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.981807783 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.426214385 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.739818836 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.739258241 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.674056401 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.741126056 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.738546742 seconds)
  done (took 19.354141403 seconds)
done (took 105.355360941 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.540635289 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.733448044 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.071329504 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.776853335 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.749958953 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.030602752 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.736818838 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.965569185 seconds)
done (took 42.275593415 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.74096965 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.2084237 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.215746068 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.443230785 seconds)
  done (took 11.542107993 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.718151705 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.25766086 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.768589002 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.323056579 seconds)
  done (took 19.752406175 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.105837491 seconds)
    (2/2) benchmarking "read"...
    done (took 2.087560216 seconds)
  done (took 5.872228233 seconds)
done (took 45.581450706 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.73823164 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.734857025 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.741839173 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.734866886 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.7373236 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.734113382 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.735192041 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.739278236 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.737938416 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.737808306 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.735816378 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.740570163 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.736278814 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.733886754 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.731403999 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.737144412 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.734764306 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73413613 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.735523612 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736064666 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.738519281 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.738995893 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.734087024 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.735723192 seconds)
  done (took 43.347748918 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.739920662 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.736497003 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.740493575 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.738391146 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.73615329 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.738278082 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.738081955 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.735003768 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.739420506 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.742744597 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.73712108 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.735905342 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.737780022 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.732741059 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.738914151 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.74119136 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.73705766 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.735130686 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739401433 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.735922072 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.738515794 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740011816 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.736094607 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.736567469 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.737096402 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.733928389 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.740361886 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.738001874 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.738098029 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.739481606 seconds)
  done (took 53.806946597 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.743482785 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.74960264 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.740124763 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.740471945 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.73905696 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.740887287 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.740966491 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.742025022 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.740003542 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.740059468 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.739496351 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.740386774 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.739609179 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.742512016 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.740063277 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.740954025 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.740788849 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.739725648 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.740527427 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.740545734 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.74085049 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.738606792 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.741915341 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.740269369 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.743336878 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.743206628 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.74142006 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.740879049 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.74134094 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.743432595 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.743072195 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.742684931 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.740936522 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.741322784 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.741393692 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.741281912 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.746441958 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.746693297 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.74206132 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.740887781 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.740113833 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.744688913 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.74313959 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.742216151 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.742967599 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.741540949 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.741040072 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.745401072 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.741597315 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.742109532 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.741773718 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.74428868 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.739226181 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.746387325 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.743215172 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.742004467 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.741921993 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.742086626 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.742927541 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.744527787 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.742787488 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.743704483 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.740087015 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.742855689 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.7428693 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.743992539 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.742188796 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.743544272 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.743520962 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.743930573 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.743751829 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.744180974 seconds)
  done (took 127.111057503 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.741242806 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.741133979 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.74288135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.743927369 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739299468 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.745353701 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.739234132 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741232613 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740556315 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.743628301 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.741791505 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.739663675 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74126235 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.744660682 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743781244 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.742956185 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.743311036 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742797803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.744638787 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.741960728 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.743596965 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.741681228 seconds)
  done (took 40.011029685 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744431351 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.745610188 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.740995137 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.746390596 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741211388 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.742856668 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.74539111 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.746513666 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.742493173 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.742331157 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.739614431 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74425253 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.740505014 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.740952139 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.741964408 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.738890431 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.744037488 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.739992677 seconds)
  done (took 33.048976445 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.744265807 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.745323941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.745542494 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.745008561 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.74314477 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.744656968 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742973528 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.742942533 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.743278714 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.74165456 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.744191279 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743639592 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.742954884 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744250402 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744652031 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.744068608 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.744607375 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744895806 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748685042 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.741282152 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.742040843 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.74487646 seconds)
  done (took 40.051697151 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.745523953 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.74615603 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.743145339 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.743926815 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.745376999 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.754973506 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.754030746 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.750762862 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.756888116 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.749263658 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746158666 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.743571279 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.742461842 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.744117206 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.742389121 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.744007149 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.745979169 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.746275938 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.74713242 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.743472856 seconds)
  done (took 36.615882262 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.751717315 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.748861448 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.749134619 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74790035 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747202225 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.749231102 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.74757496 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.748579763 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750399777 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.749707391 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.747762814 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.748067592 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749415776 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.748064598 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750764894 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74936562 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.746963859 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752733345 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.749928009 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750820823 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.750977635 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.748311254 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.749806171 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.748554222 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.748130601 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.752780448 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752879737 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.75032896 seconds)
  done (took 50.669720664 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747635694 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.747451758 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.748481557 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.748597877 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.747158516 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.747554196 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.747939082 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.747366467 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.752578012 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.746924814 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.748855679 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.751153665 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.74880665 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.751569664 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.75072877 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.749808503 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745112083 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.748546341 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745108297 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748921929 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.75162005 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751685914 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.750732208 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.74727632 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744848121 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.748791872 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748331503 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.745590936 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750223928 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.74715595 seconds)
  done (took 54.142848361 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.770813202 seconds)
    (2/2) benchmarking "in"...
    done (took 1.767127534 seconds)
  done (took 5.220167743 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.747134573 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74764197 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.74857908 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.751987983 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.744954449 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.746256894 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.749082243 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.744251322 seconds)
  done (took 15.664604452 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.750857949 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.746900838 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.748785692 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.750182857 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.748360225 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.753568813 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756391357 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.751524369 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.75046582 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.749407454 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.754889499 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.760578673 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.752617452 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.750667102 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.750591602 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.752247071 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.748782494 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.752195984 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.749514887 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.748673497 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.750013975 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.751620414 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750129089 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.746883936 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.751519876 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.760561339 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.756848241 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.748992364 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75295525 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.756645036 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.751143753 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.747561281 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.754041773 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.749096489 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.751195895 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.753425181 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.761867937 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752293139 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.75871429 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.751237766 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.753433482 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.747582273 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.751601922 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.756181261 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.752319227 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.755036232 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.749813448 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.750321057 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.749243437 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.751965354 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.755371148 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.751658968 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.749906226 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.758702547 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.753513884 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.758059163 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.752347941 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.75703707 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.757963693 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.762242958 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.764695449 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.757390762 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.751787295 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.754948014 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.760881509 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.771282764 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.761778404 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.746310836 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.752667443 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.75214075 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.760689737 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768270254 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.76126435 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.752251281 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.756202167 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.752351027 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.756636896 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.751949868 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.759613513 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.755205394 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.752889463 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.752881496 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.760847809 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.774233455 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.753669509 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.757278216 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.753357344 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.751640501 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.75341609 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764780946 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.753432921 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.754098035 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.755710487 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.754256808 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.758244317 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.75362167 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.755912194 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.758373178 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.749963726 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.75202355 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.756307546 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.757230683 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.765551083 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.754954153 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.755278628 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.7634928 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.751629758 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.753800424 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.766111771 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.75587789 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.755792168 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.754510726 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.762091332 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.749529826 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.759650278 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.761493147 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.757481199 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.756683554 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.758826743 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.760338614 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766017783 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.776203583 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.754170951 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.75494498 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.757485878 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.764957937 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.755563587 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.76053337 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.751798017 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.75091086 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.750055462 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.758505769 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.754711243 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.758179272 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.755665155 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.757856805 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.751232379 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.755553182 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.752930578 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.76033235 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.758944794 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.757535702 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.76037776 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.75961018 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.755719665 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.756130085 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.764368916 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.754797384 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.757670517 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.757138676 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.751634938 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.75530122 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.757595016 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.755413361 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.757823224 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758786841 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.755069819 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.756790743 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.75648653 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.75693496 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.757464425 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.755922264 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.758588044 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.756223585 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.764038106 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.755387277 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.753306691 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.754050559 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.755841088 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.756126867 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.756542536 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.755178201 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.761067474 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.763998523 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.755668472 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.756342836 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.763089234 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.760516639 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.758354821 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.756569718 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.761138088 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.763375695 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.759174241 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.765632386 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.755451033 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.758422245 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.761913207 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.757579625 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.757625395 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.757727197 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.759274293 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.766160375 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.771354882 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.768618515 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.758108122 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.761049646 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.75894377 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.761396312 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.763374144 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.757490619 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.755791614 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.755607779 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.757711015 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.759271941 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.761175097 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.758232229 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.760106166 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.757127902 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.759057815 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.759398292 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759248566 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.759072689 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.762988794 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.754824545 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.758605175 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.759535399 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.760763098 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.757265996 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.757342712 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.760091553 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.759944095 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.759814935 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.769973703 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.756105125 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.760799269 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.761811223 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.75933283 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.759050479 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.760418047 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.761929105 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.762712561 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.771718774 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.761213755 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.7616957 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.766508885 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.759500745 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.760377223 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.761750701 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.75907734 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.758329114 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.764387563 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.765057024 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.76122174 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.760137585 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.762344322 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.761716695 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.759068948 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.767420801 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.757002632 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.760569616 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.759224343 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.763745786 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.757020599 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.763211716 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.760735187 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.761882065 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.764981786 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759988855 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.762259419 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.762884164 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.760826728 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.761476131 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.762420415 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.762385185 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.769795688 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.768008416 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.763483212 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.76495904 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.764335174 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.765202952 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.764836462 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.763135342 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.764596558 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.778277263 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.771020227 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.774830311 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.76673784 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.762084364 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767608372 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.762948649 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.766905731 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.76444912 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.762574984 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.762440163 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.762345674 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.759805334 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.76490724 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.762165562 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.764523801 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.764198335 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.767542291 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.762474773 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.762848642 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.762522655 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.76336169 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.761492338 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.762587716 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.762983458 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.769945695 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.763664497 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.761886548 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.765364115 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.768973046 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.764368271 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.765693122 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.762198029 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.762436184 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.762390187 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.765117793 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.76237153 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.765299462 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.769706334 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.765420943 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.773757609 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.76397082 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.774036997 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.763171485 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.766514396 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.771167032 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.761037965 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.764385807 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.76582039 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.763970237 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772821551 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.763799567 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.764853794 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.766961841 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.764205955 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.763963382 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.763030042 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.7631567 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.763153254 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.764814868 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774242414 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.76472852 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.768934268 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.765996244 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.760849445 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.764674346 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.764554672 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.7638466 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.770842451 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.765830065 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.766642328 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.765650798 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.76494389 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.765206077 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.763978921 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.765879496 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.761375519 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.765216124 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77367527 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.765147818 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.768934796 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.764083562 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.777344937 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.765584161 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.774438401 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.763817545 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.767734353 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.765916917 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.763514898 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.76920572 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.766978426 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.768013762 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.768409686 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.766541646 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.768695681 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.76585791 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.771171638 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.766881514 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.765419199 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.766009915 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.775922414 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.788235117 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.771580067 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.769534615 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.762266601 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.767272694 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.771760437 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.772350554 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.767694604 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.769175667 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.777341635 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.774606578 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.767919422 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.771111885 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770580868 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.768340344 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.77158036 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.768754172 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.767964545 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.775596496 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.772337468 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.76821379 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.773841686 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.767429633 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.77199184 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.770604317 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.767522542 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.778458222 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.769361177 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.770191829 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.76915656 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.768963001 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.770012216 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.768543468 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.767436904 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.770502442 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.76849984 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.771038409 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.774560477 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.773635551 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.771625122 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.769522339 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.770679648 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.770457989 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.771933623 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76830727 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.768573191 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.769403107 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.772379161 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.769425529 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.77260231 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.769502096 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.76883965 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.773563974 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.770512918 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.771546593 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.776224428 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.769815037 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.767923598 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.768624827 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.768802757 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.769513742 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.770804365 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.781848799 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.774246795 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.783006438 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.780888349 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.774519335 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.772426458 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.773862699 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.782295197 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.769575508 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.772160304 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.770400165 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.772872625 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.775359793 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.773180829 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.771066282 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.779355061 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.76981879 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.772039883 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783440129 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.773393984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.771805169 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.773263549 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.775835474 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.773159326 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.768762516 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.771356643 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.771074896 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.779537712 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.774183026 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.774123034 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.774932051 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.769145473 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.774125814 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.775198353 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.770969117 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.776739998 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.769537167 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.77323858 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.773786814 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.771968168 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.770904251 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.773206561 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.773780184 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.774314294 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.779156212 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.769040768 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.776586915 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.772887267 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.774103507 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.77181545 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.772761426 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.769846506 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.773285471 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.774529097 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.773960152 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.775100545 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.776763069 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.774495317 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.773772009 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.771753594 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773355211 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.77606566 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.782149558 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.784398852 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.769175989 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.774258707 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.776069214 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.780225819 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.776479119 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.777749721 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775626559 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.778109761 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.77490391 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.775728813 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.775964237 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.77649427 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79237282 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.773989194 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777816123 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.777506191 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782365024 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.774495364 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.771638478 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.773812794 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.777034455 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.779525233 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.780491627 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.775441062 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.783044312 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.774909723 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.777096941 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.779544894 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.77723769 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.782104883 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.778804261 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.773598721 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.774265762 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.785716684 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.79201646 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775693916 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.784243908 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805586307 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.777923029 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.776601411 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.776423433 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775631479 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.776805237 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.780059703 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.778682021 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.775104045 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.775759177 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.776488594 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.778355887 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.782053257 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.779954019 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.776392782 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.776952267 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.77881869 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.781525949 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.776699509 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.777861079 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.777054079 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.777881399 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.778588728 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.778174228 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.780151438 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.793367721 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.788572263 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.776184515 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.777320389 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.777585523 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.782421819 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.780828013 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.787256616 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.784198653 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.778138896 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.778917529 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.780462699 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.777828277 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.775357392 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.781007562 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.779242676 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.779218806 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.774711602 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.793824731 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785790985 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.783992365 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.782481091 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.778875205 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.77729912 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.78159271 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.77709801 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778330212 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.784552979 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.779101986 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.781316764 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.778172359 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.778456577 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.783283869 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.784542566 seconds)
  done (took 1054.073073652 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.776521048 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775095123 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.775105344 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.778863706 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.775355193 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.776001594 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.776511542 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.776303805 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.776039195 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.779119394 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.776056288 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.776323844 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.777592956 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.777244377 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.780078183 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.776664231 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777053913 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.776253552 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.776811674 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.777371915 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.779186261 seconds)
  done (took 39.026665566 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.780119175 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.77774473 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.777928879 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.779255125 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783715571 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.781234372 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.77769842 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781738604 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.78033873 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780611935 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.780922462 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781297821 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.7790006 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.778462264 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778194389 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786316565 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.781020945 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779594335 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.781879815 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.777845961 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781640724 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.780200693 seconds)
  done (took 40.881932361 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.782322547 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.782087985 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.781451036 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.785662279 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.781301689 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.780252136 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.781964117 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.781392754 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.782810652 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.785218827 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.77999844 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.781044261 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.786710566 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.785107241 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.787760828 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.781446681 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.923721193 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.781235388 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.781807466 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.781269849 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.77915996 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.788641346 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.7780892 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.778882819 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.78045991 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.78158325 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.781792995 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.780392971 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.782609869 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.78308926 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.784086555 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.784858786 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.783781525 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.785031359 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.782943224 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.783646402 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.786274512 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.784453533 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.779674431 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.782698307 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.793457849 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.800769556 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.785122875 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.796168323 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.783389749 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.784094059 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.785523301 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.790719734 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.782556579 seconds)
  done (took 89.265758325 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.783403324 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.783156049 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.779600937 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.78302592 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.785831176 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.784982684 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.785231259 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.784492628 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.781351209 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.782267867 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.784133222 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.780933203 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.781411763 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.783444587 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.784466845 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.782412631 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.781986658 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.781110089 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.781793078 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.781725063 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.782281396 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.783065818 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.783851529 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.782049922 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.785005069 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.781419048 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.782364414 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.784555159 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.782305832 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.782487764 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.78563378 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.7858593 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.786160012 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.782469 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.78386771 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.783743237 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.784300524 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.78339754 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.78481911 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.784233842 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.784132339 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.785091406 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.78565162 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.786553173 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.782928065 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.782811063 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.783079132 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.783055201 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.783561291 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.784888997 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.784920179 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.783495515 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.785070744 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.782942466 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.78626676 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.785348277 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.782537188 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.782776175 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.785287779 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.784457471 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.785521283 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.786957369 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.784809029 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.786379691 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.787685649 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.785141522 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.784378217 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.787563733 seconds)
  done (took 123.022481887 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.786991254 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.786657455 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788291501 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.785414339 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787265623 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.786574343 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787010273 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.787739172 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.78862889 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.786825538 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787379531 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.786058186 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.787610577 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.786905724 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.786780032 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.78638068 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.786382763 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786405286 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.787513587 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788953293 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.78711664 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.788464686 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.78636923 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.788142422 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.789067528 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.788211933 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.78666889 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.786894876 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788434839 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.788365162 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.792386757 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.786987032 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.787585696 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.78908161 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.787924447 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.79070199 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.788098444 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787608288 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.789005574 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.787432378 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.788289981 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788530683 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788327362 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.788794915 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78870557 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.788223802 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.788815852 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.792321563 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.789800338 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.78906492 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.78875154 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788427022 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.790195752 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.788583324 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.788192025 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.788321241 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789426067 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.789074734 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789232409 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.790037561 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.789068543 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.78875908 seconds)
  done (took 112.58681677 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.791075618 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787085896 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.785570717 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.785999673 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.788888698 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78530715 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.788737705 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.789861344 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788763653 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.789825857 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788227541 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786941271 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788251366 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788852605 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.78628573 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786008546 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786191461 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787497414 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78938839 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.785560474 seconds)
  done (took 37.476888226 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.786914784 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.788532118 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.788527196 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.786894553 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.790541865 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.787704208 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.790329465 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791984532 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786990025 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789322558 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.790393665 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.790593062 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788056488 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.78836314 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.790252477 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.788429938 seconds)
  done (took 30.346487426 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.787832091 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.792228141 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.793866877 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.790870464 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.786959616 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.78725472 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.791187725 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.789210406 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.787918359 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.791044065 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.791115514 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.791124527 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.789948625 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.792126829 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.789665335 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.792060898 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.787903109 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.787547142 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.792843473 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.791703059 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.789214379 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.788944719 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.792992455 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.792407734 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.790940121 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.790308449 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.789192345 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.789507238 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.790192995 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.791387186 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.788890743 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.789461295 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.789121662 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.789357409 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.793348473 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.789541123 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.793036064 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.792269139 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.793816824 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.792374541 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.792307399 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.790641882 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.793242258 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.79245655 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.790495384 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.792114061 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.79129835 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.790874897 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.790708185 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.790651691 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.792195474 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.794280387 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.794030602 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.7950769 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.79353685 seconds)
  done (took 100.228939595 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794166914 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.793950559 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.79214276 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.794291728 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.793884618 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.790098574 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.793436581 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.790338378 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791193068 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.793121011 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.791353745 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.792281592 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790347298 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.796145954 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.792635022 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79437203 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.792149677 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.793095715 seconds)
  done (took 33.994553327 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.792449733 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.792198846 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.793902128 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.791636157 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.791039074 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.796028646 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790308613 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.795089792 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794976878 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.793219737 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793424551 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.794998918 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79532103 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.795631846 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793412482 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793611575 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.797599558 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795488615 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.793815093 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793456419 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.795213874 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796036078 seconds)
  done (took 41.198470427 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.796666541 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.796224098 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.813658662 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.838770361 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.83240199 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.79517829 seconds)
  done (took 12.603035979 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794859758 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.796328168 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79401104 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799770715 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797193868 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793859074 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79564149 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795285616 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799627481 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794014292 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794299548 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79681933 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797582395 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793292577 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800369313 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796335603 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795329325 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794281364 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795604994 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796925471 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795618017 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797654589 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794691825 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794635007 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79423345 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794576418 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798965801 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795709874 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795111227 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797133624 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798221126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795615535 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798410154 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798190206 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799654266 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798220475 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795413484 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797955376 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798282179 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796350438 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.799139065 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799794716 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798426584 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79623522 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799698457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797289587 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79525913 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796176093 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797211894 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799723892 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799489798 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79656159 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798330216 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79915614 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799606087 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800426499 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796962868 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795081957 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79917549 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797366349 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796636862 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798891846 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796360343 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797566229 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803062295 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79571784 seconds)
  done (took 120.336832983 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79790286 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.797447406 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796244761 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800467517 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797245891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796683977 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796583526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797454174 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800508217 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797984306 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801075205 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796731883 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797172558 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79853586 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799078934 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798186196 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79835945 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798863138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79875815 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801466552 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797872121 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798257562 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798696091 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798085343 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799561253 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801671695 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797916604 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797806518 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.797725262 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797716487 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799613757 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.799197418 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798080263 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.799013973 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798356396 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799436838 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801368165 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.798819607 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799612642 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800882649 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79916208 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801807973 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800112509 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.798946141 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799223734 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799481435 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800011042 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801942621 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798993629 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79989007 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800743848 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799617542 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800174991 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80105001 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800056506 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79955073 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800394086 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800278396 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799525829 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802387338 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798494458 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799237504 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801574661 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.799321513 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800445089 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800029738 seconds)
  done (took 120.484314302 seconds)
done (took 2456.88867589 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.892376454 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.975991506 seconds)
  done (took 15.602814674 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.969876672 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.91935809 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.804881407 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.80967082 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.80419381 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.799821549 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.808357594 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.802991167 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.805829217 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.805603744 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.805514049 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.990744134 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.809234804 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.803583668 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.80611656 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.899636182 seconds)
  done (took 51.187493001 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.808295412 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.807770035 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.819283165 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.811083024 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.807808367 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.82871505 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.842223601 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.812312652 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.869622682 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.832558496 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.933371851 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.817355064 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.808469377 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.869391201 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.820288767 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.823858832 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.910323701 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.883533306 seconds)
  done (took 34.844688712 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.887637267 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.807764832 seconds)
  done (took 10.441590978 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.840624179 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.823525968 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.833384393 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.813499815 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.831924102 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.859986944 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.835863739 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.845199169 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.837339168 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.820625016 seconds)
  done (took 70.084585299 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.815609708 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.811331641 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.810542596 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.808118267 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.802765612 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.805200502 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.811605522 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.803479413 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.503939515 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.846145874 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.815048936 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.814373903 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.809387492 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.811379089 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.808970976 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.83266019 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.968462741 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.806006304 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.809255014 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.81660793 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.80938076 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.861466836 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.822959037 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.811240704 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.841433603 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.500071152 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.817767169 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.81626883 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.931444481 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.806542358 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.811133186 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.811114686 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.812280581 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.195990773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.100905003 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.813379705 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.817361186 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.82088143 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.808284206 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.920439927 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.811418706 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.817348142 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.793127481 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.085760786 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.905997749 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.852771973 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.209252282 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.813499715 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.812625288 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.84158544 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.816124512 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.813863623 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.824764147 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.323237543 seconds)
  done (took 129.507223826 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.867779668 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.289711417 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963094291 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.804796626 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097141961 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043076544 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.807541221 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855566495 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.844254891 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.05895723 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.986870643 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.92609436 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.805761254 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.805779925 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.808379753 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.803772792 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.957194982 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.878678855 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.807764354 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.808770925 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843675343 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076233767 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.933821387 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.963671315 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.829395379 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033534824 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.935181476 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.924662807 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.808242736 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.806010602 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.874929532 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.81135242 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.810454585 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.808068143 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.975142825 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.913067295 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904389761 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.810324727 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819604043 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.806382962 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.844660119 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028978874 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.917573796 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.944977261 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.057155229 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.035808304 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.807283705 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.80749479 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.808400691 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004008237 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.027017825 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.065326521 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.938038019 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.808408979 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.157631968 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.806640683 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864201666 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.058406124 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041210031 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.920379247 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816137213 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.81069981 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.805223235 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.126390198 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.81340879 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.915449816 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.185971605 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.811434725 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.917446104 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.924425098 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.042095925 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.050412747 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.842026045 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.823676738 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.845478561 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.096002132 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.879193844 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064048819 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.838910918 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.811053694 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90002189 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.810942826 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.980764339 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.127841501 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075377429 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85099719 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.811145213 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.807102897 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.058912571 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.059907584 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.084250216 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.053355272 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.976193029 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.822245974 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.811266682 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.808784573 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.823242233 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943181155 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.811047815 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.170548992 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056823423 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.58351167 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.842471785 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.12766605 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948811679 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.810915984 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.812358553 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.811568479 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019548217 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.853268026 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.811488926 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80937327 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.054205241 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.758551886 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.928193056 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.505579502 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.876991925 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.815016016 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.079558482 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.811283387 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060357859 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817517138 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.129778597 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.328946033 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.855220475 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.009193688 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.057443076 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.812862267 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.075704724 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.128967291 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.935700418 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.064426338 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.558745188 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.817831615 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.103957575 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.81243408 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.846280981 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.982072992 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.813015824 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969899915 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.816954647 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121542661 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838586546 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984480102 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.109353391 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.093142679 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.859714813 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865765636 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.837705946 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.945929117 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.8156469 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.78434471 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99775995 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.951274231 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.814113507 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.381941952 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.811540983 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959707179 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.114092331 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836715787 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886854034 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.817161693 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.820196881 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907231442 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.842106761 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.412606197 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.817553507 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.984042667 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.79967868 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.263287448 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.814397567 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.12537469 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.025846457 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.814915691 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.81214811 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.620561218 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.814990625 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.962809072 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.974113664 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.283490602 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.815972219 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033206889 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815651675 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.948330031 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.816432545 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.814533916 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.165756297 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861911323 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.816093432 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.820736202 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.814097015 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.814775831 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043304289 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.843694054 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.538710408 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.954162447 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066235338 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.125461699 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.081328965 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.863787858 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.816833758 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.079210758 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873256635 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.885985379 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.81610117 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.839685116 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06024893 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.817651907 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042538461 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105414634 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.83516065 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.866807391 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.817043912 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.868906284 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.814997458 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.958999591 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913069725 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.815062223 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.819043478 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.931977696 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.944637828 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010195243 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.815521622 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.846627996 seconds)
  done (took 941.700248159 seconds)
done (took 1255.10244449 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.816539637 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.815917846 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.804085329 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.817488605 seconds)
  done (took 29.004996954 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.825570358 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.824043032 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.825251941 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.823095682 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.824916478 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.824224542 seconds)
  done (took 12.701122407 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.865149432 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.817228477 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.818834601 seconds)
  done (took 21.254975082 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.893313005 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.234586058 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.927471098 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.26572307 seconds)
  done (took 10.075501867 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.82544323 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.824688016 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.82466675 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.826188767 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.825531476 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.827853239 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.825655501 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.826344742 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.828111986 seconds)
  done (took 18.190917358 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.978293788 seconds)
done (took 96.958036895 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.114290976 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.819585118 seconds)
    (3/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 3.147108806 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.150849426 seconds)
    (5/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.901356543 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.877156627 seconds)
    (7/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.90224001 seconds)
    (8/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.919622327 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.954124674 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.328013834 seconds)
    (11/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.488088869 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.107689235 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.863438088 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.058359636 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.848325731 seconds)
    (16/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.986020384 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.847514678 seconds)
    (18/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.056725912 seconds)
    (19/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.383608065 seconds)
    (20/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.252081514 seconds)
    (21/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.829347003 seconds)
    (22/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.365529277 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.156150375 seconds)
    (24/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.939338309 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.898615235 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.820775265 seconds)
    (27/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.124435223 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.878425407 seconds)
    (29/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.891363962 seconds)
    (30/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.005218339 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.870137848 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.08456601 seconds)
    (33/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.913825328 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.656715804 seconds)
    (35/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.827223005 seconds)
    (36/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.022494769 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.809856553 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.708638851 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.926132688 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.811169593 seconds)
    (41/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.04318271 seconds)
    (42/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.335813834 seconds)
    (43/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.184605149 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.810722931 seconds)
    (45/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.00008895 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.838998943 seconds)
    (47/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.904452304 seconds)
    (48/309) benchmarking ("sort", Int8, false)...
    done (took 4.852692213 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.123839375 seconds)
    (50/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.336711503 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.826310976 seconds)
    (52/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.49893469 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.819426356 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.124467607 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.809828462 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.022670419 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.934401383 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.083779391 seconds)
    (59/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.110482891 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.826405051 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.003031949 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.917854416 seconds)
    (63/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.905878658 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.876885496 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.204318946 seconds)
    (66/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.979966169 seconds)
    (67/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.396530952 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.977497016 seconds)
    (69/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.888696693 seconds)
    (70/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.808776466 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.723061947 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.125359489 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.697013901 seconds)
    (74/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.909977146 seconds)
    (75/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.945346801 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.498901219 seconds)
    (77/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.924271066 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.002979135 seconds)
    (79/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.826461673 seconds)
    (80/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.24584076 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.504542487 seconds)
    (82/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.959258441 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.418639292 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.821215468 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.214885764 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.5070614 seconds)
    (87/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.972479965 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.803029194 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.888118531 seconds)
    (90/309) benchmarking ("sort", Float64, false)...
    done (took 5.646391196 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.125019524 seconds)
    (92/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.082157669 seconds)
    (93/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.926876699 seconds)
    (94/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.122433721 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.81020426 seconds)
    (96/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.899551198 seconds)
    (97/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.004425013 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.825415009 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.839588207 seconds)
    (100/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.945281775 seconds)
    (101/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.830062525 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.852181709 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.822932768 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.821465632 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.443654292 seconds)
    (106/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.05983867 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.037558317 seconds)
    (108/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.882681631 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.823950971 seconds)
    (110/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.82389237 seconds)
    (111/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.944478531 seconds)
    (112/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.82260923 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.895178175 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.82627353 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.069529527 seconds)
    (116/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.952264139 seconds)
    (117/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.904773267 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.994437279 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.835321383 seconds)
    (120/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.838183904 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.823999626 seconds)
    (122/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.266291157 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.929774017 seconds)
    (124/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.971450891 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.18710431 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.272527905 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.848044748 seconds)
    (128/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.964339005 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.814927566 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.121522532 seconds)
    (131/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.848284396 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.037930988 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.945271561 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.08674669 seconds)
    (135/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.104992527 seconds)
    (136/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.996013775 seconds)
    (137/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.115872054 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.154739921 seconds)
    (139/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.429594238 seconds)
    (140/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.717481653 seconds)
    (141/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.955920369 seconds)
    (142/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.414945799 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.81482947 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.161753368 seconds)
    (145/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.294647698 seconds)
    (146/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.277715195 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.458939939 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.047170374 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.855370723 seconds)
    (150/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.952550166 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.911524939 seconds)
    (152/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.172967709 seconds)
    (153/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.829980891 seconds)
    (154/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.227125935 seconds)
    (155/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.1020082 seconds)
    (156/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.8905851 seconds)
    (157/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.436136365 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.852286743 seconds)
    (159/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.931007335 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.830038 seconds)
    (161/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.321674219 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.276509736 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.894680415 seconds)
    (164/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.092637203 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.937314638 seconds)
    (166/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.18071793 seconds)
    (167/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.834899335 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.255254389 seconds)
    (169/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.821644809 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.87709711 seconds)
    (171/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.867112938 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.830720163 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.914060093 seconds)
    (174/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.031025423 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.892416322 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.21179226 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.792122289 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.917216849 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.914966541 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.061826821 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.862999955 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.052385391 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.97258249 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.670835034 seconds)
    (185/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.33717868 seconds)
    (186/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.816815271 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.530957557 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.874457719 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.995444274 seconds)
    (190/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.681253689 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.838873246 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.790067452 seconds)
    (193/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.941185158 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.990105481 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.21301879 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.184393713 seconds)
    (197/309) benchmarking ("sort", Float32, false)...
    done (took 5.595661194 seconds)
    (198/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.011033288 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.243303462 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.895490711 seconds)
    (201/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.855892797 seconds)
    (202/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.350901018 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.765430983 seconds)
    (204/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.867533841 seconds)
    (205/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.950205774 seconds)
    (206/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.904915966 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.089835564 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.212412644 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.054425815 seconds)
    (210/309) benchmarking ("sort", BigInt, false)...
    done (took 6.830225477 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.162453798 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.105625979 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.092370204 seconds)
    (214/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.821611687 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.601399339 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.635635688 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.867974428 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.031763938 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.995238798 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.906880305 seconds)
    (221/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.784504969 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.92800702 seconds)
    (223/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.445206376 seconds)
    (224/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.123963733 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.859069937 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.940505247 seconds)
    (227/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.030113333 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.521594138 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.915162757 seconds)
    (230/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.823769774 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.860592341 seconds)
    (232/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.023392272 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.879075571 seconds)
    (234/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.896084986 seconds)
    (235/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.941564524 seconds)
    (236/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.135392334 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.8221267 seconds)
    (238/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.851721881 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 9.116054859 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.981363655 seconds)
    (241/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.861737083 seconds)
    (242/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.977762611 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.861564117 seconds)
    (244/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.850043273 seconds)
    (245/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.18257891 seconds)
    (246/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.967919822 seconds)
    (247/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.863791939 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.398894008 seconds)
    (249/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.281512743 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.821813763 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.008504994 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.928743261 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.886484199 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.43332849 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.481284612 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.488570891 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.826514599 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.018580023 seconds)
    (259/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.979022273 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.137391665 seconds)
    (261/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.862342215 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.746042918 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.781044933 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.212923886 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.885935175 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.122989826 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.131795822 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.826454763 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.14362667 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.046215669 seconds)
    (271/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.357297016 seconds)
    (272/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.827850277 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.637052301 seconds)
    (274/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.713930217 seconds)
    (275/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.862210022 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.835295377 seconds)
    (277/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.898101859 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.924589357 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.94392028 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.053420678 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.835880867 seconds)
    (282/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.176704854 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.919692702 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.918559401 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.211898169 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.952935189 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.015656245 seconds)
    (288/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.771057826 seconds)
    (289/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.353046516 seconds)
    (290/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.064968685 seconds)
    (291/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.319269977 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.645713596 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.512981667 seconds)
    (294/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.859829301 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.494454071 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.874142797 seconds)
    (297/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.038514033 seconds)
    (298/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.86911284 seconds)
    (299/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.124488224 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.218910898 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.908034027 seconds)
    (302/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.832350774 seconds)
    (303/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.989055843 seconds)
    (304/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.945135563 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.857688528 seconds)
    (306/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.832512133 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.798055617 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.839816512 seconds)
    (309/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.343772988 seconds)
  done (took 1012.529366557 seconds)
done (took 1014.299752343 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.871471217 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869172152 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.849303536 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.870487122 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.968833445 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.878635092 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.860146479 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.850500765 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.897606226 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.900053738 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.850345864 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.876954334 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.854594344 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.854195591 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.849281632 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868192466 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.164372542 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.881530585 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.871822254 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.859810095 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.870196202 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.852593779 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.900902248 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.879130075 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.854004961 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.852911933 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.857606191 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.873705064 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.966017997 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.857528338 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.853911194 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.864941295 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.163897668 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.879097765 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.845388657 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.873470341 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.864944863 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.860484269 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.854275733 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.885172824 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.30594547 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.859593126 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.853459181 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.851689085 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.852158987 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.855743518 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.856910511 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.859494187 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.867263845 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.868520345 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.303671601 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.876086081 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.859008416 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.853264471 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.86456908 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.855733416 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.855859096 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869575455 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.875510119 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.872618139 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.155924208 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.885566749 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.855130602 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.873428715 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.862999957 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.340630759 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.85346776 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.857832546 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.309679198 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.862856049 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.340309071 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.868845848 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.854162083 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.87047389 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.889031513 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.16367806 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.875392892 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.851433671 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.864260591 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.854537231 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.862862535 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869371908 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.858403518 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.853224707 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86971962 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.883791404 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.863999848 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.858335553 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.862257183 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.876034905 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.8631201 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.86815665 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.856003593 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.849536186 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.863218366 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.858296257 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.861023177 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.860224812 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.859848702 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.865177173 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.30505489 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882273784 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.852055165 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.851855135 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.854363672 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.871340091 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.307693174 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.864794629 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.877429469 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.903233783 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.857019023 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.156387835 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.889902904 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874395643 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.865959106 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.858799438 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.850834471 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.158049645 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.334393984 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.878709976 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.858159068 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.857269846 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873572781 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.857178413 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.852375907 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.170077442 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.883049442 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872780348 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.979603504 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.866383744 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.891392827 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.85603602 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.859199139 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.883648816 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.874793003 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.891605161 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.858769769 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875169765 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.875701942 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.852636709 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.870940263 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.867503681 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.859389748 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.864591319 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.851052889 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.885039059 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.872891656 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.874299394 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.877717343 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.981890415 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.854483255 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.159637506 seconds)
done (took 291.813618149 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.925077721 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.846611061 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.947946319 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.854880204 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.94002926 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.949253363 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.85021284 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.851542501 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.850892606 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.232001054 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.85034912 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.850317054 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.849522429 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.851603989 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.936435373 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.853181201 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.850424008 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.193950176 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.854317005 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.923806041 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.85257938 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.850436494 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.854158589 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.234079921 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.851883152 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.852535801 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.933065446 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.852678015 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.199279754 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.848539702 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.849853717 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.200014697 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.952826245 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.87154337 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.866075166 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.863256938 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.949088304 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.859443803 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.945150454 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.936746918 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.950530712 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.895034308 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.854061014 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.85055433 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.858989965 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.856453662 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.852399104 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.88389587 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.855219344 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.853060925 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.195304753 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.864828555 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.864046373 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.853075948 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.8532745 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.876500734 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.852117583 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.856559091 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.944160066 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.856275228 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.932422719 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.237329617 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.23337617 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.854990989 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.855171899 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.854743779 seconds)
  done (took 183.362790753 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.924869218 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.930718311 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.924602237 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.860962831 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.905727628 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.929873436 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.861630843 seconds)
  done (took 15.122100502 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.864196524 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.857579521 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906864399 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.907614225 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.857666017 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.008266661 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.857223935 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.868351453 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.85336504 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.91060497 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.857319433 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.856906779 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.864175872 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.848732582 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.906782581 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.867680141 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.973100877 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.859398693 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.85799782 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.013870424 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.863532235 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.863909051 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.912157951 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.869224156 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.857761374 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.864040856 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.44470225 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.857494951 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854082608 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.857780941 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.854602336 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.897338607 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.858450685 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.850669723 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.855640988 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.975730034 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.858294864 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854484397 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.858836507 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.853469139 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.856664931 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.857745361 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.858273967 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.85667244 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.859090781 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.883215969 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.859413647 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.859055912 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.865148316 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.859475842 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.909096129 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.859952117 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.858093143 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.85947062 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.916715397 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.866856632 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.859561104 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.855587301 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.860920356 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.857364534 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.018452497 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.90825682 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.859987632 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.908175659 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861128584 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860683766 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.860996922 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.858722033 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.91587084 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.861090503 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.910396557 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.857132844 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.019530702 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.884577738 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861500903 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.865047228 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.863888877 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.86188524 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.85405138 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.867172729 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.856275319 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.862281835 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.867045052 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.862734925 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.857921617 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.966276257 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.968451672 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.85833413 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.873560381 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.868014181 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.857305906 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.912232239 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.859919403 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.857165917 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.912950001 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.9754868 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.917653558 seconds)
  done (took 204.758279967 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.867160824 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.871670992 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.861426884 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.877737318 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.860721243 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.860501111 seconds)
  done (took 12.986958404 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.864459672 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.854991498 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.853101208 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.852137563 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.854268539 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.85371865 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.855982131 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856330046 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.858951155 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.852915899 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.855965468 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.855082318 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.856069836 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.854756774 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.853706706 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.853100167 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.854988207 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.849318492 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.855689147 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85501726 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.997651168 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.854922102 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.276650227 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.856305464 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.85880563 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.853770755 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.861526818 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.855006799 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.853987758 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.861894263 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.859414702 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.85534894 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.857278339 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.860537862 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.859060452 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.857151695 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.859505245 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.85672746 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.853522815 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.856033349 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.857435943 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.856440451 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.856739353 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.857038976 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.856959519 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.859441067 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.862224344 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.864430539 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.856727411 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.85642063 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.858475051 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.855280302 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.857971388 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.857839486 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.862055198 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.861021976 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.860326554 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.857637617 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.856976473 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.856630114 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.855877961 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.85558971 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.858170563 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.861433326 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.863174251 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.85599323 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.858408291 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.860234437 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856105106 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.853953275 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.857236429 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.853449791 seconds)
  done (took 137.055654795 seconds)
done (took 555.084785265 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.074587499 seconds)
  done (took 8.85765279 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.916567583 seconds)
  done (took 8.788137552 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.366918415 seconds)
  done (took 10.159969809 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.872958703 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.896525266 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.868041115 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.863902947 seconds)
  done (took 29.307698699 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.143479794 seconds)
  done (took 8.937846471 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.872488878 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.854260571 seconds)
  done (took 15.582459235 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.93505484 seconds)
  done (took 8.727515091 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.966820368 seconds)
  done (took 8.76554864 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.866449593 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.871048165 seconds)
  done (took 15.544582679 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.84547888 seconds)
  done (took 8.637186178 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.521591038 seconds)
  done (took 11.327096545 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.866995027 seconds)
  done (took 8.675569588 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.912301493 seconds)
  done (took 8.707071982 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.033886315 seconds)
  done (took 9.826464628 seconds)
done (took 163.628230787 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.861269574 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.860533891 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.859225594 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.857896881 seconds)
  done (took 29.228791232 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.898327422 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.896672702 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.897011767 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.906498659 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.8988431 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.895988235 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.889266727 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.889068296 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.907817766 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.900809129 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.899912303 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.902199383 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.90127067 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.888932014 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.90081463 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.898732439 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.909869917 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.901305298 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.889830869 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.902189594 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.865454557 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.911539684 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.899957675 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.866501689 seconds)
  done (took 47.31439224 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.064942368 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.937641153 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.021616081 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.917825829 seconds)
  done (took 9.735409893 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.91712412 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.919285634 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.932927701 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.969571226 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.995898592 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.928803157 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.89543287 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.887514557 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.874256316 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.918544591 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.995179635 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.93424934 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.004017209 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.86754623 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.052140703 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.868056656 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.866190299 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.918228945 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.970294689 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.984873694 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.868133546 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.917239364 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.922325507 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.935595782 seconds)
  done (took 48.136986791 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.865312483 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.873177834 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.871036111 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.863938126 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.867232198 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.864558394 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.873812531 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.868667668 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.887911417 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.86571648 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.865204619 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.865813206 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.864515968 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.867866155 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.865092295 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.880433582 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.880567998 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.865459094 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.869823875 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.873313537 seconds)
  done (took 39.19563791 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.862954315 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.717061784 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.215343124 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.117124757 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.863086318 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.860251505 seconds)
  done (took 31.431587665 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.880843711 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.932751084 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.875918858 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.923589371 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.006477124 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.873917561 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.867951792 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.938125845 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.983084288 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.940890388 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.889513586 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.896621178 seconds)
  done (took 24.80826386 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.86414386 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.862512543 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.863874329 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.878311208 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.879106918 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.874441906 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.875704425 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.862843906 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.881454274 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.888043219 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.878442904 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.881350753 seconds)
  done (took 44.292761915 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950722804 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.911581017 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.881848752 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54266005 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.242703301 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071355046 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.51538825 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.197593119 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.866376046 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137612487 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842982563 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966519679 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.120967114 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.429367481 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899380106 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.333886662 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152686145 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061613157 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886061046 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496133964 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924271417 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.098942303 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.567695219 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.917192358 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075533643 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.996215027 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.124339289 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.864030925 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995319159 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89770447 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874854492 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865604271 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139010369 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236104969 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967315245 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87541572 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.483153342 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.581041416 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.909448095 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.556166567 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.517197973 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.009741983 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875922308 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865855269 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.800079545 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068299652 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247720072 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.869709 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.574778731 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86557127 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877221481 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959709323 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.870320165 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.68527063 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779335636 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.869914717 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.865202334 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874108203 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43594354 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924439694 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.114605203 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.844666692 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.958316999 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504781786 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237555743 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.008223866 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.868447754 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871524719 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802736363 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.573341145 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919185722 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.21537785 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.886157062 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510655544 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158220733 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.890454105 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808756816 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126145525 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.470705907 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.846474394 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095878937 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867278755 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803020408 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.814203205 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802341939 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.118155584 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901146161 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.623818137 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90520376 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.199609629 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.877965709 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885939194 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892330527 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092819029 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.758586194 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868381529 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.600394332 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033183364 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889472265 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.200013607 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802764546 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.870756975 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12667538 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.080188709 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.999858572 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.37117271 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019499497 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.500019403 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.925524298 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.083327912 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.92056644 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.125587449 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92031906 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930062297 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920426205 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.869263519 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153346447 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.508141374 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.009536693 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.83599001 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994237462 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.169660214 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893265573 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952924984 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873663135 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870743731 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.579308321 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420360618 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.870251667 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.876566064 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.006010376 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921147406 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.872100084 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815219818 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.492981564 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.81074676 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.884441049 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095112109 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.49649715 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187865986 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804806976 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199444654 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.924222549 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.114552518 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.506156856 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.935836031 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.13119684 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005248256 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.048662017 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92097943 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888753699 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967223653 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891959312 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.067064646 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164140124 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.873208681 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.871390603 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.595349217 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.904635172 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879858439 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.881353807 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.622387064 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130755657 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.890800816 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.875248629 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.760225257 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.891389017 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933920031 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874574918 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881082839 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.411214121 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.588603131 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.877752562 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.456236966 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099787178 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.881714902 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.570903792 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988222127 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.959567425 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133454521 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92797011 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.808709214 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.585700073 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.56609629 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872960053 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808464104 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.87705946 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882096934 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883665643 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.072575356 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136694121 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910751572 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.5051495 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.91566014 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884905971 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.880335389 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87517538 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.386047054 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.942317687 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.12129794 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.92553147 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019540162 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.889788926 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809577237 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.87910595 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880846554 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.876452308 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.875138241 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907822943 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.515404233 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25971033 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136169099 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.485737562 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889447309 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.575936882 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.933928353 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.877295552 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.645780642 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098318426 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.918486302 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898955224 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.89237176 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.612713945 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.574827097 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442604421 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174846466 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162344176 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296064979 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.137727359 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.907096047 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212326242 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808738353 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.433721077 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934579216 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.219212674 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82086616 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959584111 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.505635736 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212138312 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891838619 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110074366 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2553644 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.67489123 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903375309 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087592743 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911253456 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.080065323 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849006025 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.401050437 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023114521 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.504592714 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076441805 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.214558919 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650260686 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.890500876 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.8773465 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.55653785 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956241894 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.586463817 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.050853672 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.135230231 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.907021721 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233060533 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.888832062 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.106216498 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215754361 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.091311803 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.007139372 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.814367007 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.88918506 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888367112 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.882245267 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.874685059 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.739533752 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.131847275 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888715258 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813350827 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.066423128 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160529403 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.77664503 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.887920863 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879205957 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160914797 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.474175695 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048340655 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.034430294 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.398400112 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885100865 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.813115853 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812291226 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.570070642 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.883388986 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.853496234 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084078765 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.978959453 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.793048269 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.019276567 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132124729 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.134465507 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.890287187 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.136703084 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147801067 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.575720164 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903033173 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.977019847 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.494485719 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.988033735 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885000827 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115034695 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.635687046 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108688737 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.898969643 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.840432287 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.883861646 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099662829 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.884203728 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.706233445 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108689624 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.608124256 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.896403089 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186581857 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953576941 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.768334477 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.924698693 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.975277558 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894198663 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964652742 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897427112 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.897699064 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.89480703 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930632269 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.767330501 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.002211589 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.900858098 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979996239 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.974848718 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.408079033 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.89058583 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150254415 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230636505 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194879203 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939642833 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882734991 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888207688 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818674518 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035133924 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.109184109 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156122014 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.014775548 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.000633798 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917879676 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.514570449 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.16235541 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139302661 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166373998 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.788123643 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.457213937 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937449175 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.892365104 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904965354 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.102859408 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100177552 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.1931601 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.106185846 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.027328885 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.259574226 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169140773 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.892607311 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893669405 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.438199252 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.904691342 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571470792 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.932312093 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.798297453 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164836264 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904455416 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276498022 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916024631 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.051388384 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.668303596 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635940311 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.187536057 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.877635197 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.952240664 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157916704 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263982063 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206544725 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962284442 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907154244 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.999317475 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042845413 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.75473493 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.895852651 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895613414 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944330371 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.605322486 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.90410745 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164525917 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204335103 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.892893628 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.768621548 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916521951 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.903471256 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.117824073 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14904597 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144952131 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903844322 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900931559 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.71518396 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162681195 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95154588 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830583951 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.900434833 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99538723 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.143279009 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916815469 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.347980609 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.608213071 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158678085 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.896126165 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91650685 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.111259757 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.254844445 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20701885 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.426492338 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095572209 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.484128784 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.516618826 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199160865 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.895069039 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.104900111 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203982617 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.893362338 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.028960237 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932855259 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.153390431 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199798583 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.901593589 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56858409 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.865768511 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238273665 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454636169 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836143704 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904773776 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.961947431 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897362622 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.029313476 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90747989 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.789902044 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115260098 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.662393205 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179458556 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.895528117 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.885537188 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.602815142 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.235283776 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930091582 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03273107 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899227871 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.565630938 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.241697254 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153044644 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.03353494 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.906868471 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.898167264 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892739566 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881242164 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.091428541 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.090860526 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159565625 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.058311886 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.930399851 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.889097659 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.100661789 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10456889 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.798777821 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027687111 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044283626 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937681923 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.845605478 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393197056 seconds)
  done (took 1678.795325544 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.890678151 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.898423506 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.895077507 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.964876765 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927218773 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956816198 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.937125065 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920563905 seconds)
  done (took 57.216257448 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.886888243 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.103284346 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.894844172 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.88483705 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.896653698 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.886169966 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.062357308 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.900301838 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.893871953 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.896858301 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.888174656 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.885738193 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.217595267 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.914837057 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.886637888 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.873863549 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.893909198 seconds)
  done (took 74.692825894 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.886800972 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.116909595 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.921045171 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.899891875 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.872708021 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.889222831 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.664322261 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.889657579 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.873903305 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.992440381 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.50174233 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.887178842 seconds)
  done (took 87.217517464 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.878911251 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.878413343 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.878259739 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.878167062 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.87971274 seconds)
  done (took 11.202873124 seconds)
done (took 2185.089162979 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.296868582 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.095128252 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.106208861 seconds)
  done (took 6.008649432 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.020494647 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.070069486 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.186401178 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.191489614 seconds)
  done (took 10.275259299 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.151767855 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.243508138 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.073875759 seconds)
  done (took 8.271660198 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.265807936 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.880804592 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.976419687 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.856248931 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.858886489 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.859947328 seconds)
  done (took 22.367847262 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.86276521 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.862582667 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.860444355 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.863004973 seconds)
  done (took 9.23801319 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.845264233 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.574463832 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.84551092 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.856149446 seconds)
  done (took 20.910684447 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.606355973 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.615849928 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.601676673 seconds)
  done (took 9.610895887 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.559793189 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.789576594 seconds)
  done (took 9.135392302 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.117881183 seconds)
  done (took 3.90341333 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.988140379 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.121634825 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.32262419 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.356838859 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.414420337 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.752700234 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.173269784 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.105904775 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.250498367 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.300404518 seconds)
  done (took 24.575737949 seconds)
done (took 139.523551071 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.23380519 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.860764029 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.052664586 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.2332666 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.080109442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.053062276 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.082818021 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.2159774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.697744021 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.695684124 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.191086201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.075590037 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.02554044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.09691518 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.025956474 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.222471585 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.076584625 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.250340205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.886079643 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.084900741 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.080405984 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.826534032 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.034961562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.840093606 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.078048756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.004402508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.4061301 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.224836585 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.036599205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.412235766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.005222821 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.237430158 seconds)
  done (took 169.114461358 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.778235663 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.856778703 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.856778403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.861052442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.29337306 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.85486273 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.856738824 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.855255735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.018126604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.011114213 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.855653928 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.304550045 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.860985261 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.855447629 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.858574337 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.855748858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.1852283 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.837817548 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.867477127 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.870965754 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.877447352 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.248625023 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.882771937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.303490609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.227386559 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.882675333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.851269413 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.889132323 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.855971157 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.856377579 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.859727616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.844664704 seconds)
  done (took 207.967826517 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.846834488 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.84685383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.850579687 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.845782133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.845326223 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.849540969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.841400462 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.838263136 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.617650879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.619568238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.849808203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.841553746 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.852793223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.836908671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.840172754 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.834282345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.841493993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.841860704 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.839491269 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.841057726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.84686555 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.656365033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.849424329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.651495798 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.839206134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.841012388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.830107243 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.836893625 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.841767351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.839790958 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.841614267 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.831547054 seconds)
  done (took 219.933268042 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.03596319 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.838487862 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.839058061 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.780343335 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.838511874 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.838420633 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.835517374 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.024757275 seconds)
  done (took 18.812576209 seconds)
done (took 617.628193658 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.27586124 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.118612097 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.008561829 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.859765141 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.09124165 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.896677981 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.857147011 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.918378544 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.043813189 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.935938572 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.548616629 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.877072028 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.64632445 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.881592181 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.986329433 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.911811278 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.427007059 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.523188419 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.034629158 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.907264918 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.023813254 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.816078721 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.932138615 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.091105434 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.666175498 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.863782533 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.032131939 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.436315145 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.868847638 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.022210928 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.542551736 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.227385607 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.86959386 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.856147322 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.907757836 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.894785704 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.205167795 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.86797651 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.981648845 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.628226585 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.905949527 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.926732163 seconds)
  done (took 103.082061071 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.832564465 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.829146318 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.826635462 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.830382219 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.82993971 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.830428271 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.830197726 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.829625556 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.830523655 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.830745362 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.829414244 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.831717948 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.831241934 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.831120322 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.830718243 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.830657398 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.832323434 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.833576981 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.82659504 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.82982559 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.831313953 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.829026056 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.83034201 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.830777824 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.832882867 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.830819377 seconds)
  done (took 49.379094888 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.840808013 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.984327921 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.062783669 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.859420332 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.840260832 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.843609172 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.859517052 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.845133152 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.8413158 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.84123748 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.931032668 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.845721311 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.85954652 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.063116354 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.857163134 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.840413688 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.840658825 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.840986662 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.988635044 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.857920531 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.85966929 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.845310755 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.86044258 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.853393253 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.843971909 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.841711328 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.843410247 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.275081139 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.851858928 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.932089035 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.885001386 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.86343883 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.230064234 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.076192983 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.895255405 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.846855467 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.840561407 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.935697006 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.848406887 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.843680919 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.860323254 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.845799285 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.063669644 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.341312476 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.857039252 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.842870552 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.285690555 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.942413458 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.884739293 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.854781287 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.067572675 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.859124845 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.843105211 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.844286266 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.881074832 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.852879301 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.842025005 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.147862778 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.855674081 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.861408823 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.845756818 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.844070455 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.997455169 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.850445916 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.985977916 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.851056265 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.851287486 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.844291185 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.064622766 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.859796771 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.338905481 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.854288427 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.840633723 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.932058998 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.986779816 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.309609412 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.853521651 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.997404122 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.244056668 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.866012042 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.849142613 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.263187574 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.868594517 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.849182704 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.843199117 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.842642867 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.841989035 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.88474319 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.858279437 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.278875168 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.346117278 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.157904394 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.868215858 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.856950538 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.842535851 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.147400648 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.849113754 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.842705053 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.056635391 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.355581287 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.855882743 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.851591243 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.327433736 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.858286074 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.863118679 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.85085873 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.06841919 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.857641679 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.886721708 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.842860052 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.849737802 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.846690227 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.862004334 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.850769389 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.851993856 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.315866889 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.952380027 seconds)
  done (took 228.3400487 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.839421142 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.839363166 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.840962195 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.840005183 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.837487193 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.844276436 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.840634195 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.838508282 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.842830843 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.836220329 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.837156842 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.843197269 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.839512638 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.849629616 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.337690612 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.845874434 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.449820705 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.845205782 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.840267449 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.840888177 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.5173049 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.846654526 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.838601352 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.837771827 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.834623909 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.83864739 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.841308033 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.858672687 seconds)
  done (took 167.12168583 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.840414932 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.020906432 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.857550949 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.877005671 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.848813428 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.838362037 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.865068006 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.860662393 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.845142324 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.837835774 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.838920861 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.902120043 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.852519169 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.978755072 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.874408559 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.872815469 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.946434718 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.849323127 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.839103246 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.83877712 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.869776885 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.839127176 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.901748911 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.967094148 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.858278804 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.95807867 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.850698541 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.843509138 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.841734035 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.960545931 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.859252151 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.902056758 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.868965947 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.861264925 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.962939779 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.960897827 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.948589303 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.872858432 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.845764149 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.839288052 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.839842557 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.833305303 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.958726959 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.86000865 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.843944345 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.953358127 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.860954558 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.842504737 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.850346861 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.840134779 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.856758984 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.860857224 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.910541429 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.974636479 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.87585534 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.868427982 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.867745597 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.133490828 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.853818313 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.942325672 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.839217395 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.959195553 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.863060567 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.834373117 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.843583664 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.848443499 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.870787557 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.874723462 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.949248249 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.851634319 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.94438197 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.879298588 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.850428325 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.842489658 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.846115324 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.958452374 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.961176323 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.878138934 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.879356925 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.874637464 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.842227776 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.843480326 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.835430728 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.860833707 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.847999173 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.961201979 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.962988185 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.851503385 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.845133826 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.845682962 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.845982104 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.86978835 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.968438308 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.881231868 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.946713392 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.913387625 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.918666119 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.858257297 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.856279195 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.84782163 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.906379596 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.857999119 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.855673195 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.186150751 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.916740968 seconds)
  done (took 199.877296431 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.939478974 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.319385448 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.900361679 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.900731565 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.135743031 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.257181666 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.628381469 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.893675518 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.895464703 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.920812064 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.056091616 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.952087629 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.908590141 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.880128587 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.298778724 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.883820838 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.894878665 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.915243357 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.8967312 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.429163735 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.203470312 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.022289758 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.893586182 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.00569626 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.876226888 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.155704527 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.377031746 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.279872133 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.930559038 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.240070844 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.22692159 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.587535609 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.110981549 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.134412746 seconds)
  done (took 73.738522209 seconds)
done (took 823.305393359 seconds)
SAVING RESULT...
DONE!
