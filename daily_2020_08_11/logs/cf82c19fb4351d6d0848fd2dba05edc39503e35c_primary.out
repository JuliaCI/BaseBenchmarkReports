cset: moving following pidspec: 24111
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.701010122 seconds)
loading group "shootout"... done (took 1.082830442 seconds)
loading group "string"... done (took 0.390389179 seconds)
loading group "linalg"... done (took 7.580604381 seconds)
loading group "parallel"... done (took 0.151248144 seconds)
loading group "find"... done (took 1.227032971 seconds)
loading group "tuple"... done (took 1.803627854 seconds)
loading group "union"... done (took 12.413041777 seconds)
loading group "dates"... done (took 1.249408645 seconds)
loading group "micro"... done (took 0.218150643 seconds)
loading group "simd"... done (took 4.1286359 seconds)
loading group "io"... done (took 0.973881333 seconds)
loading group "random"... done (took 8.327081314 seconds)
loading group "problem"... done (took 1.576321334 seconds)
loading group "array"... done (took 18.519910444 seconds)
loading group "misc"... done (took 1.514468725 seconds)
loading group "scalar"... done (took 37.615679499 seconds)
loading group "sort"... done (took 2.870779315 seconds)
loading group "sparse"... done (took 11.302864964 seconds)
loading group "collection"... done (took 16.482542636 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.483676209 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120535917 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127245534 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115653648 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146314517 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119240699 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122645789 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084033888 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.866602042 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138746552 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.109946085 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422994889 seconds)
done (took 5.188935996 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.163146203 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084703913 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074704564 seconds)
  done (took 1.287502514 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060584868 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127524671 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061900954 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063869638 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063324287 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063211181 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062671381 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062604144 seconds)
  done (took 1.633864388 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068530238 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064406832 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062778337 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064692085 seconds)
  done (took 1.391437924 seconds)
done (took 5.682767542 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.230016205 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.097379957 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.278057069 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.386660448 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.444294 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.086236909 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.06953342 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.065169547 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.121991842 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329333825 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102343315 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.179976958 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088706399 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.173695191 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.990169022 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11471263 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081134835 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.119243241 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08828576 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128673166 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.40262174 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074413415 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.069818083 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.067106725 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.064023596 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.640279999 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.656821317 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127062353 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080900977 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097906445 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112263051 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.638612099 seconds)
  done (took 10.36884783 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089643739 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.08780813 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.064520044 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119604457 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.088265421 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.064750363 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069888055 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.062918106 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087149578 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121297056 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087963824 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097684303 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063118943 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065692516 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073005494 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.195758046 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077294733 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077277117 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064794186 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07682302 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104495817 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075547565 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076252275 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075987601 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12633723 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16747654 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094070632 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095231516 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061856407 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077588233 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111692948 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124860536 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06400061 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062778351 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117961919 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09234751 seconds)
  done (took 4.443631061 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.929416543 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085360124 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097684373 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.599226643 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061082635 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.146012096 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234598337 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06910014 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.365447856 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.139710092 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.136485348 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.140202434 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.111104669 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066560337 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.216012764 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.113335832 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.355439116 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064548228 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063128303 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062109884 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.06519495 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064131398 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060084362 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066248843 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088359409 seconds)
    (25/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.081078901 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083485671 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.16937233 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.01756448 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.063220392 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.240867109 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061825627 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.081468247 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.408032906 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066867596 seconds)
    (35/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063473749 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080016692 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.389507774 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117374045 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.060107137 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.059728268 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165014937 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110639842 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.059736679 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.110281203 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073859231 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066129077 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068467577 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065367801 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068147735 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.075369251 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098381992 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064607975 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062248552 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159651374 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062276045 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063489668 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064571355 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146204592 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061717831 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.139037392 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06090955 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065222179 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095899283 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064946027 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087852007 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.100638521 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.333173012 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.03518648 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062918802 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.919023072 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075115508 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062718059 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067841568 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062929777 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064648115 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064044992 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071643209 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066316131 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.063289009 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103935061 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062049287 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06639509 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063866542 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067240187 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09546737 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060377178 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.45017091 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.093573679 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.0634841 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.073833245 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103113818 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064692147 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.07005938 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064167722 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063558252 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062580387 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063428716 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.17858072 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.088350588 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066027534 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109940011 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.030703152 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063387161 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.06260322 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068052696 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060635833 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066881541 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065952039 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063814559 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066442401 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064547167 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06163129 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.110248491 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064230436 seconds)
  done (took 21.028861838 seconds)
done (took 37.901658528 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248214084 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079174687 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079845744 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079999449 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079625084 seconds)
  done (took 1.791051015 seconds)
done (took 3.009852252 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.102899746 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060211781 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097328807 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095382512 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063700676 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060528285 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.093999732 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060731587 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.09417597 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.096238004 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.098374498 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.09768029 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061023608 seconds)
  done (took 2.30509275 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065186629 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.07720251 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079771227 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059346386 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06876878 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078540662 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059027236 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076855149 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083654012 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077923907 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077623688 seconds)
  done (took 2.0163088 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064421913 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.078105404 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083465255 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059262468 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070782097 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078822026 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059263797 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077875411 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081369364 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078351201 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077734984 seconds)
  done (took 2.012657354 seconds)
done (took 7.540687091 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064124759 seconds)
  done (took 1.251333771 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524263442 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.615536709 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065421399 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084761891 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182320987 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.098032382 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.22703718 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070141522 seconds)
  done (took 8.231413084 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.095637212 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066033483 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06612273 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066429638 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066014985 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066784484 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065507251 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065516736 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065596759 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066424539 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066706343 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065322705 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066809166 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064845114 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.064546435 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.063484739 seconds)
  done (took 2.371356636 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092079647 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090531705 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068598447 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070028323 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068066083 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.066837507 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069592441 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069868279 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067118842 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068853494 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071728303 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069938959 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069818271 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060861639 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070997257 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072425687 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067423495 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071145745 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071535309 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072288779 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071586887 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061193898 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069727555 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069519116 seconds)
  done (took 3.010249922 seconds)
done (took 16.070259919 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110082641 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073557793 seconds)
  done (took 1.380530737 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066641787 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067862686 seconds)
  done (took 1.346909637 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.073055531 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058588391 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.082188184 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070875385 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059231366 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058964796 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079742447 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.05953214 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059162042 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059431841 seconds)
  done (took 1.873603669 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060240186 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.06754048 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06544602 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067223006 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065327187 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.059326159 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062283865 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060456476 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069324521 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05969448 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065304652 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079955253 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06412444 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080508894 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064259989 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065188532 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067480396 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064201515 seconds)
  done (took 2.401799213 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057830793 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058679627 seconds)
  done (took 1.337603492 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062023883 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058840231 seconds)
    (3/7) benchmarking "month"...
    done (took 0.061820531 seconds)
    (4/7) benchmarking "year"...
    done (took 0.062276527 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059415936 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059614545 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059350951 seconds)
  done (took 1.636169683 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409081619 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116408479 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337151304 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066840537 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077112693 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.242611929 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060486875 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.06608516 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065709782 seconds)
  done (took 2.698039455 seconds)
done (took 13.898778741 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075674982 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081498252 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086684526 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.417458568 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089754328 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064226077 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109572002 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17807579 seconds)
done (took 2.340466261 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209724812 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.334583218 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.915907928 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063928289 seconds)
  done (took 3.537809991 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.318906343 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081291187 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074066303 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064728454 seconds)
  done (took 1.770961762 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060408037 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068057226 seconds)
  done (took 1.358016726 seconds)
done (took 8.113029297 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059974457 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060087752 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.061330808 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086125263 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060996828 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060640002 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06071626 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060344017 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06071445 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.060230492 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.060663165 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060269425 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061059605 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06061146 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060407396 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060931506 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061271593 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061442028 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060919302 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06064223 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060817033 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060668607 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060603557 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060269867 seconds)
  done (took 2.737873264 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077293978 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062760386 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064615705 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064925989 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065064293 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064750396 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064817423 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063616225 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064853078 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063146665 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064866499 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065697539 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062680894 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065133222 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062598725 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.0650762 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064973707 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063342431 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062751433 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065055435 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064798504 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062841908 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065175145 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06446536 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064870523 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065105823 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062901925 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06297491 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064955479 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065224219 seconds)
  done (took 3.182367206 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060212532 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056546679 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058418497 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066828127 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058087731 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058469138 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058388032 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057640406 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057872187 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059215342 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058194746 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057860067 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.05854691 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057680749 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057395935 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058470806 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06160906 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075442112 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058117057 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057526675 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061192646 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.058000889 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057478849 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057334827 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058167772 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057904668 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057176228 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058107077 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057368535 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058541377 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057612853 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060988889 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062224461 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.058112743 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066379373 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061888027 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057386607 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061114893 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059225021 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.05756379 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057560014 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057268287 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057701994 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057503485 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066512499 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058254688 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059030427 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058347558 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057930126 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057223832 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057562777 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059995713 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062541795 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059574291 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057460447 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058844405 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057553038 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058653864 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.05735756 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057253173 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057432052 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060429151 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059535929 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.05847634 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074920873 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059266785 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066299659 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057271953 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061767521 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060373297 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058102592 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072962081 seconds)
  done (took 5.537071286 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083737284 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086034843 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062804557 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062447269 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058644414 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.05849905 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066324449 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058610734 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06260344 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077459924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058591642 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062000933 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062271556 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062716294 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058596733 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062688063 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067272185 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058764823 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058190898 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061935677 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058273965 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065985024 seconds)
  done (took 2.67268072 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135571626 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063826485 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101378207 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075475526 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067161889 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074967004 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063829941 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063891751 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064078291 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06449139 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064512541 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06402974 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066878542 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064295205 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064668482 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064346485 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063782714 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064474488 seconds)
  done (took 2.538735718 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073652461 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062303103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086433891 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063894662 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063379132 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062997178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068289644 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068747188 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063146328 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063666758 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068789139 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063071097 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063004725 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063318604 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063092703 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063286553 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062897409 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062991252 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068331085 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067676701 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068102693 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068727052 seconds)
  done (took 2.708759002 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07149099 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062179583 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075770922 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064138686 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058815148 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058155112 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06351487 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062624994 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063550622 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061964751 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06257657 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058644849 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064655808 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062677564 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064797577 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062376275 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062062914 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062712142 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062266605 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058100471 seconds)
  done (took 2.512262822 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082952382 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060981416 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061825552 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079518033 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061278268 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061072324 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079229048 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061326073 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061668406 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082314482 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.0614571 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061026795 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079467517 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079282537 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061305385 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079238992 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079443039 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079572095 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061584091 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061606923 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082340067 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061687557 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079559167 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06130624 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061310657 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061372785 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061503845 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088840852 seconds)
  done (took 3.205234484 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059751303 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060480082 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060651132 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061147787 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061174993 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061022946 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.061021996 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062506312 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060366338 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060997977 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060718877 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060664652 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060912105 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060676356 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060415052 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060975233 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060848621 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060937799 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061048924 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061001948 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06081353 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061064648 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060728113 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061612027 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060925473 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060620069 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060859187 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061166026 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060523914 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061271089 seconds)
  done (took 3.080593315 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070102606 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069057079 seconds)
  done (took 1.393949787 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059355101 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073289535 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.05712553 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067755924 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067902111 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061672978 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068085916 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067192351 seconds)
  done (took 1.772276686 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064370092 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086293057 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059705924 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060569291 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064201861 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115202308 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073705604 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068535846 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074024365 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060809949 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060344686 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071376407 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059263239 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070137172 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061548555 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066946092 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064890631 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069415375 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070358435 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057859078 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069974398 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060465087 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058456965 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061115405 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059757945 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064779886 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073318451 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069526879 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067015486 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057410772 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.077188058 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058830791 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059738191 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066867193 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063919987 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058754789 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092454291 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.05872084 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065413402 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058199648 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069571742 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077015172 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07062636 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074875039 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060539535 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06147818 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058394743 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060777833 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06119617 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066736191 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058271222 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064499249 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057794777 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060430623 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067698436 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058887568 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065473815 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066780663 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06963803 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067498812 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065852438 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07193773 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066069615 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068317404 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059422953 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075742414 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060509274 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069116528 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071075277 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059735994 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071599908 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058019986 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057105523 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058107388 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088465721 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060295686 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059397574 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058224196 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058852007 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060378815 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066821956 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065058741 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064595596 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062781176 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073235714 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067024437 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058171711 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067053015 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.073663055 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.05932342 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057010896 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.071238195 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.058991645 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056892149 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.072982122 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065365581 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060272905 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058413335 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.059175658 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069089563 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057996254 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055295838 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063336335 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058507765 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059963158 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.062022066 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062931304 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.05833873 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066651734 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.06427436 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060096908 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056787228 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061383359 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.05956419 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056752626 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066361942 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058038204 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071717208 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06305616 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070553283 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070239065 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066821485 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071185319 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057152176 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056056348 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.073566254 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.197531573 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061451308 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076715803 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059658656 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069026495 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058901934 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.06131444 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067158005 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058297097 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061662847 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.05898839 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065139272 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060735432 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061331363 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062024133 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065644744 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070273344 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060393175 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066173231 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059212545 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073239192 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067261958 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062851648 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063930435 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059575085 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069998234 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064615249 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067266171 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057989329 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.06005054 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058942061 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068043664 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066977656 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06076271 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067731674 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062415525 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059396661 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059292502 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059934781 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061588561 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063459585 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.05947842 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065298884 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065997032 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072385282 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071521135 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066188064 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057916825 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058369929 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060789156 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058244339 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061845146 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06664407 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07210381 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069542975 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076927371 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058979907 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066677146 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060691238 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07416964 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069896417 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059730699 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063825647 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05607455 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059474551 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066238389 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067952096 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.070055518 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070161608 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060944967 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06100982 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057349299 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.069899764 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057698185 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064342798 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.06598827 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063955953 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.05927676 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060330926 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.064895293 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060660153 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057494357 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.070310464 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064427034 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.056726644 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069031074 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.057320327 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.066737057 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.056797055 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.059228163 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061274015 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06053553 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065341319 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072088097 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057195591 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058968133 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072755619 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060790999 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060223255 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064739352 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071370624 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061746198 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064253599 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066690603 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06551683 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061151286 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065344357 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059290464 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066284451 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062067223 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068724814 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057929292 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074163465 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056835639 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071148482 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058882299 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068213504 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058671983 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066006237 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059113942 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.072965068 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059749744 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058936099 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.068960775 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056424306 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065981942 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057171194 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061376037 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062885456 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066051781 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060026462 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.201644686 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061790558 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067618054 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063464181 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067083224 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067752211 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062488326 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058722059 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065889635 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069082535 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066250338 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061286516 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061888233 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060195945 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067228339 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061320166 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060550934 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065681347 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062766064 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063265955 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060631213 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061190638 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061298923 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066149511 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066888317 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075217446 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065961542 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065012763 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066632758 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058472752 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072781956 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058596688 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065519059 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.05768815 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06719131 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067540039 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059627358 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.076667158 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06065207 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065802511 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070617045 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065534242 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061064365 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075982699 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063625216 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065165985 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065235327 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062828405 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064165739 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06109108 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065121292 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066725843 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06812688 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059688208 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064276468 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066428847 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061002586 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068940801 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060833978 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065405032 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060872431 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058072038 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062591057 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069380521 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06259514 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063164574 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059021833 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057423798 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057670484 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.065877465 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060946446 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064262395 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07056435 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056337316 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059207772 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057373212 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062296744 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073915923 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067404449 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065293886 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062401962 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.05777312 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060918719 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061015915 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058744448 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063120644 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057791096 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058414161 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067588648 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060629383 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062303152 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058838702 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.059884072 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066214791 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064592439 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.059209249 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063884021 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058354268 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062303137 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058081999 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060606324 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062380089 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057726173 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060722697 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067305085 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.072774197 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063815852 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06535084 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059353359 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063719136 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070145247 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065633274 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058449755 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064659366 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0565422 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074520889 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065685547 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064834857 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066436594 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059433189 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072971221 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061512879 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.066970628 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071671825 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059229789 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066606794 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057632493 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071023561 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060922459 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057118477 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064308234 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063354211 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.201504708 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070047151 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061298145 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067186253 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066943766 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062106436 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061775483 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061926327 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066449984 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073567446 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060312331 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064687576 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065759906 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066225941 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063110268 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069917808 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066156764 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060794737 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061307537 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061447263 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060647835 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070140082 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059594899 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062367406 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062644734 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058741887 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064559753 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073363391 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06734834 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068043628 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058362606 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058092022 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075574396 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061526932 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063734053 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065992771 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066831136 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070560379 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066547076 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074059224 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060169812 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063945281 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070514371 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060413189 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.05931184 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061682181 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061048761 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066846369 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067425776 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064942465 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06093455 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06467419 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07046174 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060142832 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062155368 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065100476 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059722268 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067763792 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065593503 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065678255 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060287034 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058425542 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061400672 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066420395 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.064547739 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066361604 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059811332 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.067450883 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071766894 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064736448 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062969013 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058708513 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063312591 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066416539 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.06499726 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058581051 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062455334 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061511813 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067556271 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06719001 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062424246 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058613162 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074682995 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066073355 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066788689 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061207365 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061087868 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058988749 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058199669 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068658929 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058777333 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060658169 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062209769 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060729099 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074849225 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06541121 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072716915 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059681602 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062040014 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058245904 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067098657 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062355591 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059069169 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06744427 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057866075 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072122961 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069315873 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068573264 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058437342 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062018446 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065587564 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.0713198 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066380632 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066201211 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062878229 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066689306 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060035594 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067538243 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057810717 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.05705216 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067110106 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065519455 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069660745 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058350227 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.066815744 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060248804 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064603745 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.064983051 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059446919 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059778975 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059209117 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.203284785 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06341398 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067766587 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063545195 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074941643 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060938078 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069888402 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066429285 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069176441 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07022263 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070548153 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065976568 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060254921 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06490928 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066003583 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060564912 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062382288 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063624307 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079980537 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061155396 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06100104 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073422945 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067265332 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.05955061 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067236481 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062201926 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067452558 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060433778 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067609911 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064443177 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.05992936 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062369907 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062347906 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058350595 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059045146 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057658813 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067100156 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062197034 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059222512 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076682365 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060676288 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066102376 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069168919 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064561499 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060892208 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057988378 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060111794 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06960897 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072062157 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060997874 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065697028 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060699134 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066780436 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057659974 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06630244 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065806909 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065896686 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058769113 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059362958 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071496569 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072239067 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062145634 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067182713 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066211539 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061122185 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.07950628 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065721743 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060163295 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068612027 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061735566 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058323187 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057816291 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061282232 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070830844 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058940175 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061959266 seconds)
  done (took 40.095085635 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096869395 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060401963 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058911638 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058928096 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071744015 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05991793 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058933786 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059909493 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059892356 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061962994 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058396134 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058724813 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070869948 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074325124 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070439764 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06362863 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058681653 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.05977454 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058688978 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059724144 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070056608 seconds)
  done (took 2.717596099 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065552401 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074805275 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071481009 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076821747 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067731579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063926584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071619051 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063788206 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072164185 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069124582 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07211566 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063983034 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069157152 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069305131 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069269797 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064342445 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071755207 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067475896 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064524374 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07146679 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064252457 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071421819 seconds)
  done (took 2.858216382 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.05965703 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059083279 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065825271 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058073948 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058152295 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062709256 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058103475 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.061548401 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061544 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061712799 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065539506 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059316997 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057965863 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062414944 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057714643 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058985727 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102835075 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059566315 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059204965 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058005289 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064369365 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066053736 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.05814957 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058448829 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061304204 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062194874 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057868816 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061578875 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058953911 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061326728 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059528024 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058056828 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065520522 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065021339 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061318317 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061584601 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.06016122 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059355692 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058053192 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058151855 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065562166 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060009208 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058636315 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059582175 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065874466 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.058092485 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057913912 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065939974 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058115617 seconds)
  done (took 4.361671381 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070685797 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108088135 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064230973 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087848419 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072988054 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066562718 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06429395 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088808757 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059748351 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060602212 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07436974 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074415883 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062182671 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06358423 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065696184 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062245577 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063062807 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0608919 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065361294 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061452078 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065573666 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064418031 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071103652 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071998305 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061794536 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060676899 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06164394 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063822142 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073316749 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066208306 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062575397 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063398039 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072026341 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065098564 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060494487 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061944329 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07488396 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062555019 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062132166 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060119363 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06213927 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063796543 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066186572 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074969519 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062613437 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066662378 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062287584 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059687619 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07397072 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062039971 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067426566 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075285994 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063728253 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062621437 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064659282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074123962 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062755686 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060996305 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06240428 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073466413 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060217297 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063288204 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074259947 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061551611 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066319345 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074684247 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066303809 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063882317 seconds)
  done (took 6.041082606 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068583421 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089253322 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071222732 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071239571 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070261821 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070452664 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070374206 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069992897 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070015266 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070629604 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070112881 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109404984 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065174963 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075820736 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070364893 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070124088 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070084945 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070060155 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070017648 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070246105 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070242013 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070177104 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069985805 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070679217 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072091767 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064505869 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06896481 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.06955377 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070918484 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069972595 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073541421 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070194702 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070449441 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071207452 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073645009 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069988619 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059605481 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069996837 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070428435 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07029609 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065395233 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071100747 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070045926 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065653697 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070214209 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069997951 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070871213 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073579655 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079282403 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071058278 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070428314 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070180441 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068893833 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069566217 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071214892 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.079399427 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070918672 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070773053 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070267704 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070731052 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070647433 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07971826 seconds)
  done (took 5.813958319 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074154486 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067785726 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079465442 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061510522 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.05844742 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069053966 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058893889 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058446343 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067373123 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067888326 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069613201 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069048225 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071655558 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069539439 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069552442 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071562681 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069117622 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068624983 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067551339 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068742788 seconds)
  done (took 2.736726026 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070085643 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077061897 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064842909 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068879777 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064334176 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069031189 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063324451 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064524152 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065295779 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064488451 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070589595 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070671853 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065459853 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068873143 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070468069 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069528581 seconds)
  done (took 2.454032321 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064825028 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067418345 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.068044498 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060467005 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063569973 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059564315 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.05976854 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058169689 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058951793 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073666814 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059784444 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071076687 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059926788 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058518225 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059406542 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06544196 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059004755 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059979422 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060021535 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065456408 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066594016 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061232919 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063393312 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060375227 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065121374 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.06738268 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061819686 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063208687 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059905974 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060375633 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065451564 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066545473 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059538634 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060440326 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058568415 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059858402 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059936039 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060376681 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066483471 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060114187 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058577164 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064714798 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060330807 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061081223 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059051576 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06045968 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.05886564 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065819532 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060259298 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065196471 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.0597988 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062550263 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060494813 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067372095 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062989005 seconds)
  done (took 4.795963411 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072365976 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064106312 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058553119 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058314113 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063347347 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064132648 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064069505 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063950653 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064592853 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058779193 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064351606 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063227819 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064580084 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063839584 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064182274 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063957778 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058259337 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063743594 seconds)
  done (took 2.520737582 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.06839796 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063430862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068239915 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063311678 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063238758 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062918984 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059142841 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058710344 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058887544 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063459408 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063711353 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062828638 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058649523 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062925019 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063316193 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063304928 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06290645 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058806944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063499514 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058652849 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062778835 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0589997 seconds)
  done (took 2.744740086 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084619178 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081573767 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120570654 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075777545 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083795533 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068576871 seconds)
  done (took 1.890502947 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085803497 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101372606 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063258218 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063834604 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075782212 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067424613 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067100842 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067825656 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074892687 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072575593 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067512819 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074786219 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075067211 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069640784 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07472224 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078056482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067607108 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067790869 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063585761 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077841094 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067630603 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074590392 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067887697 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067047502 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086245873 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069425361 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078116868 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072640776 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070219095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074700255 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078070103 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067816368 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074962544 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072766798 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064125559 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075196259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068009462 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07817202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074938733 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069929912 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063649922 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074790229 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07485218 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070288954 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078266563 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068041241 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070236719 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067576121 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067893521 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080918966 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075086701 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070342894 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074948369 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078306617 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078478543 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081005814 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072681543 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069752231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074714193 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072714811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069684322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075218216 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070106379 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07274686 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077967884 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069779317 seconds)
  done (took 6.188838109 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094311348 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064390381 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06831243 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07290691 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070039876 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067786099 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067746446 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067823969 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067459788 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064151 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102176481 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067954578 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069959126 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070153534 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06842554 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068208879 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067726909 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069787845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064359679 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080943814 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067842406 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069780207 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070074162 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069946215 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072548693 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077887223 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067561622 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067715658 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067347838 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067749167 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069957034 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067849335 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070100738 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064172079 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069738009 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06763924 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067548763 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069854637 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067533933 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074952205 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070156524 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078120002 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067566168 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067128092 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071452721 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066160126 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066281561 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062531894 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066099355 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.062479594 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070985091 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071149411 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071399998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068160904 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066426976 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066170075 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066136198 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066112004 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066141832 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075899456 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067961326 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066355679 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079740666 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067540229 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067411962 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069708687 seconds)
  done (took 6.008830453 seconds)
done (took 123.800968581 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204750419 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179968147 seconds)
  done (took 1.745432529 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068737958 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094102179 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.072468193 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131229107 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066554011 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101026542 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099354053 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070516427 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065851422 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067781011 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06753261 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070186285 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134298795 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066166694 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065773518 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06879879 seconds)
  done (took 2.69206791 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099599137 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.179997803 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105435977 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065012251 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101029847 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073293821 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065330101 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076336984 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069364574 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068427433 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073555674 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071755248 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068653969 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071388351 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069199945 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072494241 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068208558 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073157839 seconds)
  done (took 2.858869069 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088769293 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081507952 seconds)
  done (took 1.558468058 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.14933982 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100588838 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139803718 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.315979593 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.135570996 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27296106 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130300473 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128003338 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.107027468 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120905419 seconds)
  done (took 2.98115557 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096834009 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163734945 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297365539 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115591596 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071990505 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.085264911 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117763173 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078173033 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07821436 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077339256 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07697416 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076634306 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094228408 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074071389 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073325011 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073683337 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097627967 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072119306 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07223172 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072857481 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097050498 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06638732 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073560644 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072321044 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074653779 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074722843 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067377332 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065947721 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073022651 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.0720076 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07603225 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.08180869 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075162261 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.101801047 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070640449 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.102884703 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071910762 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070889734 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072095775 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07097189 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074771843 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074473767 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074548531 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073799278 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067249987 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071684771 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067038813 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065631528 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.0764107 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067126432 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07657021 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075814846 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101568224 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067150556 seconds)
  done (took 5.942940509 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104604081 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102102165 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065670841 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108685879 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099432042 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065405487 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101141385 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096307752 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105145606 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067037329 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06580451 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065900981 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075521202 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078777842 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110089154 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102938466 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067162159 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066954623 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105633228 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105601888 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065855107 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098002899 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094307317 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105317159 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065261787 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066652024 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064837999 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065850443 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072773712 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073970865 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065670401 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075104941 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082563428 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072135258 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064487483 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065252041 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065272884 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074918658 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075389811 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075281818 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072240736 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063513726 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065429923 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065921402 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066586669 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064533484 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073726628 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.075188389 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074118706 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065271838 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066248775 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064733162 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065801633 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.074532756 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.073021494 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075622728 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074995358 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065250253 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065284996 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067073455 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076360391 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075643939 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075058815 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066342297 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076003841 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065289891 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077075539 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08069623 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06551765 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065789944 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06532634 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065040742 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065880769 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073300524 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072944804 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065687629 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06499681 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065129189 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07565339 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073389643 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065337486 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072741267 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0647684 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065392394 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065668369 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065978372 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072907048 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074737387 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066654586 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065320493 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065407417 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065447888 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06435281 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.073296113 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074145104 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074962543 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073886181 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065651156 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073639408 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073695668 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065684307 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073222806 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065343539 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065376261 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065735629 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072958237 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071631125 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073673987 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064553138 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06387375 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071920776 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.209289482 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067243018 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075152831 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077664724 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075496962 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066472266 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08105814 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067195495 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077264858 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064924473 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07693054 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066866767 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074615643 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066439688 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065023134 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065547819 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.074688926 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067114615 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065859698 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06610331 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065710828 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074430025 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077911587 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067112443 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074780085 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074143855 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066697085 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073973084 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065938119 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075408196 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066085862 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066354288 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065183995 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076884115 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066517288 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065643357 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065726105 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07697662 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066707488 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076814469 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074065188 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065459578 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080858804 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074243916 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.071905717 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.074414146 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065318028 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064847176 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065933406 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065780932 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073459073 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074812894 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066254758 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065517598 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073178568 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07713619 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064893936 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073758442 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071793184 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.071812238 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064472302 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065964912 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077231284 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074003241 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072090253 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072126599 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072431738 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.063934022 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072584496 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073896294 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065305931 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079856368 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066356683 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.078062017 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074872692 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073272326 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074666556 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075634788 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076162011 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076499465 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079069285 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065619255 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065251071 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073859225 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065537557 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065770437 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073590296 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06628018 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066023178 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080025261 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064107181 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.073850818 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.063779253 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072570062 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063024016 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064592822 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078559714 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066640853 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065990798 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073396338 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065340542 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07294033 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076653912 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073229778 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064633881 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065266321 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073444916 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073919267 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064621312 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064204954 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064528034 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071527238 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071185729 seconds)
  done (took 17.713655761 seconds)
done (took 36.895352924 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.205182267 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153632266 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186915568 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111474493 seconds)
  done (took 2.144498681 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.097204272 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.095999146 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076444592 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.060800726 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.081340865 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060860434 seconds)
  done (took 1.908959967 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278167038 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19557146 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172583572 seconds)
  done (took 2.075920444 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210945873 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.194271313 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.45335436 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.283389791 seconds)
  done (took 2.673344006 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130202124 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078510086 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.060472422 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.070661625 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.111230487 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.144077677 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.087771293 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.112481688 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071452802 seconds)
  done (took 2.355239548 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.130790149 seconds)
done (took 12.752881424 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.206125737 seconds)
    (2/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.195796767 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.171898454 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.23268593 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094402707 seconds)
    (6/309) benchmarking ("sort", Float32, false)...
    done (took 0.130689542 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074679361 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065766644 seconds)
    (9/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071823508 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.206127593 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074625203 seconds)
    (12/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118334563 seconds)
    (13/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078684437 seconds)
    (14/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.168459095 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.458153286 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214656616 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072878627 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145640303 seconds)
    (19/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.07461574 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156239246 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08265248 seconds)
    (22/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063429572 seconds)
    (23/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075647786 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.085708214 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.173306429 seconds)
    (26/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088382598 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07038708 seconds)
    (28/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071210886 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.078590596 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191962674 seconds)
    (31/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064209195 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107510262 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070473223 seconds)
    (34/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.249359035 seconds)
    (35/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071635716 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.172432455 seconds)
    (37/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.171211091 seconds)
    (38/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.194592354 seconds)
    (39/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.211381234 seconds)
    (40/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074211033 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068345931 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117823102 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.124470006 seconds)
    (44/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121250484 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07381728 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.202754261 seconds)
    (47/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071499338 seconds)
    (48/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07388004 seconds)
    (49/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07235275 seconds)
    (50/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.0664256 seconds)
    (51/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.170071764 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.201489271 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074108485 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.113228621 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.162764013 seconds)
    (56/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.143801986 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071359859 seconds)
    (58/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070772042 seconds)
    (59/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.155440528 seconds)
    (60/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062619899 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074195735 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118439107 seconds)
    (63/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076085924 seconds)
    (64/309) benchmarking ("sort", Bool, false)...
    done (took 0.151449628 seconds)
    (65/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073534942 seconds)
    (66/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071938116 seconds)
    (67/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061805823 seconds)
    (68/309) benchmarking ("sort", Int64, false)...
    done (took 0.063618417 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.082420983 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.160625273 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117643104 seconds)
    (72/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074470828 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061799258 seconds)
    (74/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.159418521 seconds)
    (75/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061525339 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084417137 seconds)
    (77/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070650682 seconds)
    (78/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.122901151 seconds)
    (79/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.081368404 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121725883 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061131349 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.137302747 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.061186226 seconds)
    (84/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.363489837 seconds)
    (85/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075005721 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08910635 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065886763 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.162849903 seconds)
    (89/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065051878 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079979572 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076911264 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075032082 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062880431 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065204669 seconds)
    (95/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.138706383 seconds)
    (96/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.153480429 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.184555482 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073890639 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15572529 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.09337659 seconds)
    (101/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076486383 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083828108 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092095469 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.18581884 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.135570473 seconds)
    (106/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.080198704 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154594611 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071637747 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071952722 seconds)
    (110/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.173517219 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.185216157 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070023828 seconds)
    (113/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062705538 seconds)
    (114/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068921806 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164069009 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.217479838 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.166725992 seconds)
    (118/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.204937266 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.07844692 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123138113 seconds)
    (121/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.06313731 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.217060765 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062854262 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.0892461 seconds)
    (125/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075139452 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062261219 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063022665 seconds)
    (128/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063379701 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073935998 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063780759 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064239704 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071816518 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065637462 seconds)
    (134/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.072253789 seconds)
    (135/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071280751 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062487831 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062642904 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.187161279 seconds)
    (139/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137123698 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062632467 seconds)
    (141/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067858733 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.21524167 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.061757507 seconds)
    (144/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.063463162 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062201711 seconds)
    (146/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071791895 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.078331466 seconds)
    (148/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.062131377 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073041745 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.165199486 seconds)
    (151/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074023708 seconds)
    (152/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063707233 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07259966 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.061373467 seconds)
    (155/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06389056 seconds)
    (156/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062889919 seconds)
    (157/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.068765687 seconds)
    (158/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063285381 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.063421961 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070906215 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071178838 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.105818487 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062526583 seconds)
    (164/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.064005658 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062214047 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062822115 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125779084 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.061520752 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 0.128480058 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063098216 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061761654 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063707668 seconds)
    (173/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070436206 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062243786 seconds)
    (175/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062764988 seconds)
    (176/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.187404569 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084874193 seconds)
    (178/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062758976 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066143772 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140854513 seconds)
    (181/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075139086 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062264549 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066394207 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.154002856 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062330205 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.060928951 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.160947859 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070643222 seconds)
    (189/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133408148 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.134697732 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.060864058 seconds)
    (192/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062455665 seconds)
    (193/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.232267057 seconds)
    (194/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064865478 seconds)
    (195/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075309177 seconds)
    (196/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071773428 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.0647745 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0628388 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073536522 seconds)
    (200/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063880664 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171078965 seconds)
    (202/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090940579 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064592055 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065145007 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145821228 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.063998636 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.064434066 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064914862 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.063567252 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062691658 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071102858 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072394376 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.064290129 seconds)
    (214/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064254762 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086964638 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.09385566 seconds)
    (217/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.138181159 seconds)
    (218/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.068555287 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07016551 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062490208 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077266673 seconds)
    (222/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06623946 seconds)
    (223/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072640375 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063315666 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062823491 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074608501 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074607713 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.062533433 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13723876 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.13649713 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124412617 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062390666 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070993561 seconds)
    (234/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064202604 seconds)
    (235/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064906682 seconds)
    (236/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071565548 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.13125091 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133101869 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07547825 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129813119 seconds)
    (241/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.062683461 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.139133591 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086296384 seconds)
    (244/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062251059 seconds)
    (245/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064677349 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064369493 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14405459 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086553453 seconds)
    (249/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062942073 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062126876 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064356985 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062201955 seconds)
    (253/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07109638 seconds)
    (254/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.063390606 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066728423 seconds)
    (256/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067807032 seconds)
    (257/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.062268178 seconds)
    (258/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065216637 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064215943 seconds)
    (260/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.063989618 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072378881 seconds)
    (262/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091498993 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119219497 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089135871 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063617014 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062905814 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.063154902 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069969947 seconds)
    (269/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062428974 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062708663 seconds)
    (271/309) benchmarking ("sort", Int8, false)...
    done (took 0.169102563 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069191405 seconds)
    (273/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.064124675 seconds)
    (274/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.069977162 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062720774 seconds)
    (276/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.166151449 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090612429 seconds)
    (278/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062030715 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062436306 seconds)
    (280/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.134293137 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10976713 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.170861912 seconds)
    (283/309) benchmarking ("sort", BigInt, false)...
    done (took 0.240812241 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066581584 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083659272 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073959588 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.12731994 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064989098 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.065469996 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062650434 seconds)
    (291/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062663901 seconds)
    (292/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063511906 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061929733 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088097132 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083753567 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0624286 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065795898 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.06931039 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061951515 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.061691355 seconds)
    (301/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.076737122 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062270869 seconds)
    (303/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06263295 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076553501 seconds)
    (305/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063278191 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062279659 seconds)
    (307/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061986851 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088036939 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069044034 seconds)
  done (took 31.934408988 seconds)
done (took 33.38318024 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082812382 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090183486 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072076863 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.085181781 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079934689 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096119422 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072771202 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07715327 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07981476 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078719733 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077782854 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070561838 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073770858 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073560231 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070814335 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087322831 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077806465 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071684469 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072405709 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062970468 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071791649 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063431154 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062476719 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069538928 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074478982 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070173885 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072334457 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072560739 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062998562 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06298346 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067941759 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072089815 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065623623 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076420233 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071927706 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072033271 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073421741 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075266801 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062621632 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06304732 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073007734 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062818908 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071158585 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069555098 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067950266 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069886479 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071640866 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076045606 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087926195 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0675927 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073448199 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074081778 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075124919 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068795963 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068114081 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071478891 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069698493 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086452827 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071921462 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067203167 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072626738 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072679345 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069637504 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071625251 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070669175 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07197129 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074370027 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.06828439 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072579659 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069595063 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062700277 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071817523 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068169282 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062782063 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074271581 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07622782 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062458405 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067490596 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070460497 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071578244 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063112178 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066960127 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062622437 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.06755226 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0667079 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069187303 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06786489 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070507764 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062233333 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0716263 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070493329 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07064591 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062603574 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076269376 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062855867 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068931309 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06316301 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063037081 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062214697 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068391778 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062497096 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066783131 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071772957 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062038378 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067415385 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.0763944 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062532088 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070258658 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062635592 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062854341 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074507979 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073794929 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063163976 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067244952 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061996534 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066826713 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061348745 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.061128648 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061202186 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061294509 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.065583816 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.060949024 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064989749 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06647291 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074294272 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.060931932 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065666964 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064499359 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060900521 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067394146 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060682193 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060949681 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060108902 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07394892 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06421942 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.060538269 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065826266 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064003702 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.068302156 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.059214547 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.069161129 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.065935018 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.205918888 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069138937 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063786333 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076113452 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068034981 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067364785 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062739291 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06306312 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062003133 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062757055 seconds)
done (took 12.252500238 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062806741 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.091687338 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072549554 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080245363 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075678239 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.062654846 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.066337577 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080144539 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064601886 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.080886675 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082438749 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081514714 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089107714 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061478857 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063358241 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064833242 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062633612 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070214332 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.07967561 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084387214 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093326334 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063332283 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073073212 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078419405 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074252782 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.078837891 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.062749373 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063837789 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065081058 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082070759 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085341243 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.061898278 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064005418 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078867876 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.07816895 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071314034 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062177863 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.066056624 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06227284 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061809136 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063179773 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.07664478 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.065815229 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068299341 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062634691 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063461967 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062590462 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.065759885 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.075174805 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.065805906 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069469768 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.074188678 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064182363 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062250155 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061029962 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068467855 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063508087 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064730231 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063596632 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06354993 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063315168 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065261128 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064230122 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064614972 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06726205 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067017764 seconds)
  done (took 6.114948695 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080286881 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091741164 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080459616 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080915173 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06299907 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063752604 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063799612 seconds)
  done (took 2.070580045 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063935665 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07730406 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080289324 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080629811 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073483847 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081589731 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063670314 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093414333 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063142625 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076496256 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.11063938 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081371106 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067643669 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075305288 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063721011 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072051546 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063847744 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072032617 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073019055 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080877017 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06797697 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090984736 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077218723 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064258571 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085429505 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069279184 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063160696 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064042886 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065208552 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065313291 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065060523 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103504648 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069170953 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075775377 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065125827 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063880026 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070617075 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067263649 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067542331 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072682744 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069783685 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065419147 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062704104 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065650757 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066691121 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068287402 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062979489 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065238039 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064933566 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076337226 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062832855 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068976119 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067766348 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069159958 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069684105 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068801499 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071825293 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065341367 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07605501 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071996758 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065153347 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073820231 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073161985 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.0704826 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072776146 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068380583 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068857265 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070331354 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064967436 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065910727 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065244103 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072932396 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063894521 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06584031 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067187397 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065680623 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068627573 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080925127 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081155664 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076861673 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065965519 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06544375 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068844084 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080866425 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06918239 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065197733 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067507197 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063403868 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068178436 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065357776 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06978567 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065595925 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072715081 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066621091 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067497437 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073098241 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063294336 seconds)
  done (took 8.399434309 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066336264 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065224194 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066592746 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065033422 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065330948 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065205252 seconds)
  done (took 1.975338854 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.08675617 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065219731 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078485641 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065413544 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099727058 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072067473 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072926021 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074536574 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077593354 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077354537 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.073169533 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075401861 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072565842 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066873558 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072205392 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066296597 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072646758 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068414599 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076430515 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067141086 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.0785406 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066869209 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067247586 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076560376 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.06761925 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065623675 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06449482 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076236161 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075863379 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076952567 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066601197 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067814353 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072143006 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073717467 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072656367 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07219363 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064590594 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070758106 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067207865 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.06779417 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075084067 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067227934 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067524175 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070788351 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073755996 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07192172 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070773599 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068835361 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072377843 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070585905 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070631722 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065898135 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068378841 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070835312 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072616435 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073888934 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070709314 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.072905743 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066787505 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072288817 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065138853 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068011686 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07353856 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067666401 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069138938 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070834208 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072590455 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06711904 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067778775 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065333825 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071049864 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064879166 seconds)
  done (took 6.673812757 seconds)
done (took 26.767306937 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.979237058 seconds)
  done (took 2.499678754 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.566932361 seconds)
  done (took 2.129400902 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.74759949 seconds)
  done (took 8.31084122 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.301603526 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.344423572 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.71781546 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129724233 seconds)
  done (took 3.086406073 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.712800372 seconds)
  done (took 2.282437809 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231845064 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.218944141 seconds)
  done (took 2.030691858 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.34888062 seconds)
  done (took 1.910944956 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.116503617 seconds)
  done (took 2.674105115 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.235017089 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155597922 seconds)
  done (took 1.958486714 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.453359909 seconds)
  done (took 2.017914628 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.453298616 seconds)
  done (took 6.02455596 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236305279 seconds)
  done (took 1.844700027 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234349019 seconds)
  done (took 1.809152392 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.707761318 seconds)
  done (took 3.275284519 seconds)
done (took 43.429226986 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079045727 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08071343 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080719322 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077136573 seconds)
  done (took 1.855577776 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070342756 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067207747 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072555321 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072518029 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069617127 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071500803 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071259865 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068151838 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069633228 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068045036 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066763794 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068240541 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.069816658 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065865171 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.068707656 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.070108762 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.065739049 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066440941 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069478863 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067420397 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070945209 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068079404 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065976043 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.067358065 seconds)
  done (took 3.216087674 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075717401 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070742977 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073341992 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069093627 seconds)
  done (took 1.863704311 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074473324 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.085618987 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.087132084 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091575807 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074723808 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074544577 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083457717 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.084169918 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063592458 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.087017115 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065976718 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064451518 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064237723 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085978486 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082692242 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061185282 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062959961 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074989313 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.07400627 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076446713 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065864793 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063984665 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074212662 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07447032 seconds)
  done (took 3.372012218 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077985467 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063475847 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078501703 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090287263 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092944841 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063454851 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078129241 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092490819 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140331908 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063558285 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069199385 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063298047 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104928303 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06330291 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080187391 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10978957 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11361818 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067230479 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09819467 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063985521 seconds)
  done (took 3.261061929 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075594354 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067672668 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068055562 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063085412 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074789548 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071754487 seconds)
  done (took 2.005575768 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06647944 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065353065 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065188667 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064427521 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069742793 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06492973 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063833434 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065650096 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065620279 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065384991 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.0645207 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063386477 seconds)
  done (took 2.361208453 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.162516908 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067845814 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068745837 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067098882 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069264155 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064544864 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079269064 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066719936 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083697193 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064324379 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06423844 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066941876 seconds)
  done (took 2.503403193 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10165122 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131005596 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096402978 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072063145 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171264056 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09459258 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089816286 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.12200029 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09366543 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068727781 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093131969 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133872965 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092652448 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095619412 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078948386 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122106713 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106181624 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084568934 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111072877 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078978803 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067475866 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131079042 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067226391 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090389706 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09895703 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.095085876 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107032853 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129725801 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081415649 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086521082 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079879875 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070943168 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101793472 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.080555288 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.094205589 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090655821 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097313263 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084501501 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085750796 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120563589 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152883168 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097204181 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097617685 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130829951 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077170921 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.105242527 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078179581 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097087924 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101244005 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090716744 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072395359 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088704514 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103147014 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098629387 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078683017 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078690852 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114848103 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.095594437 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092867634 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076367522 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102538207 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.082614093 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102646322 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26265193 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138635153 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09982597 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135143215 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121267559 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094145319 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087031831 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.089344326 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073197495 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108769015 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095388525 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133430876 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108429585 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09713529 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093151048 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07964472 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104670795 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112018054 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092077784 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091351141 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143131305 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105644871 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092761504 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088682956 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.138485313 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069103118 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144974629 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086378287 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117151722 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09442061 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135774875 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088579796 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.080817637 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102873026 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100915764 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087029778 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100601308 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081343756 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111081564 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089737559 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097969128 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079118767 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088158265 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08405316 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.093963643 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.072231254 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101133496 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113302268 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111546797 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07235831 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105435629 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083062942 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.07393907 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090160185 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136744789 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080833357 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.072483856 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146260326 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089423352 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.112125515 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105811516 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.079221622 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263480569 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134768379 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09089311 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087672612 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074165074 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151596427 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073690634 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117304519 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07924833 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100537507 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10304436 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129800578 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136255914 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093071472 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075469422 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089765854 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.103665455 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084647867 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083144823 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074224239 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.10691694 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123101099 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.097319741 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078404466 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090114516 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066604797 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111897625 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073727343 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081830265 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093739956 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.085019979 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086840037 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140678795 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081916763 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105981541 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095083443 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064575819 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088946146 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150424449 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080312487 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.108112897 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114179474 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081062502 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065727388 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.093531331 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07044452 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10592904 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089894662 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103993709 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07559818 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10380734 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065988787 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071059345 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12688759 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099069426 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086649511 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.129927832 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101473436 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.08561223 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.101324293 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093432367 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091578744 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098392838 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.257095236 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10483452 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071704274 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127173709 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090076592 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.075349184 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084772383 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077186888 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.075085838 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098358461 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113399715 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086318409 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098649368 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100484911 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088844295 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.107251808 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086735187 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076651856 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129224879 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074168517 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072199852 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086041216 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.103739547 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085676143 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.131426771 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076775462 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133742233 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090066917 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078784901 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112808571 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066745188 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068412824 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079098774 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089816569 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114169567 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076605727 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075672677 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116258384 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129571227 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095311819 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100729218 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.065938674 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088547886 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132934439 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.112327808 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079015149 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107624291 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08171194 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127301061 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093964922 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117526788 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103776957 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108530098 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089258559 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.078693093 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070827678 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085161822 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108915647 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083514971 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079454946 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.06516868 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071621709 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090180244 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088533855 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108877726 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084264331 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130461675 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069257812 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097204964 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.256539393 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106039139 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087854969 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094169879 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090855796 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089919575 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089998084 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090170214 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.071478214 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124645238 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10094951 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076216697 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087711042 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093591579 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104302366 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106514816 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107017593 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090861065 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104614334 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120842799 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096521767 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079704646 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08227059 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.09141621 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082372537 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079183976 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.101669653 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111068307 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096421175 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106893922 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.091997077 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.09090319 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104978583 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090589541 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086202588 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.115921495 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151360494 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100077768 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101694173 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083409535 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104914586 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103240114 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110623506 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.108935929 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107045355 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068859621 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072630671 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067696106 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104037029 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076555616 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115493781 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073815967 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104630487 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097305781 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079709933 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066111297 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102136304 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091830495 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.079600519 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121042705 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.11090817 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070713366 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088518301 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10393853 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080449893 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12036386 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.098113564 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097197655 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.067975136 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086808086 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224987593 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108841114 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.102489658 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078446179 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076547078 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.07027452 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108494249 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083643176 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109560204 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089717922 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101407972 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119163122 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13229202 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087448854 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097329069 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118381088 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111897835 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.079687546 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110071622 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134610922 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.117592955 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078884761 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.082038357 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103810857 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104618411 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099541679 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075828003 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079310771 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10964198 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114942408 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067663665 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083836021 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068311013 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.08256774 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111434692 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09355364 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079814259 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115733516 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072757412 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105633816 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093281112 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121436469 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120422026 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14281286 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094546846 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082457973 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074690568 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12201631 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068753934 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115086906 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109847755 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085748052 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.066145391 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081496373 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.093195256 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.625463235 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106557491 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073473165 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133237266 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08528856 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112109882 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081676051 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.114242422 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085588351 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097823241 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.087151862 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281832921 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083634731 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11039526 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.176373901 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111706511 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109488527 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074808805 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08685519 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074135938 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079042147 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081808824 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087298567 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109767841 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084837048 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106545957 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080326592 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.10653556 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089695915 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087056913 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.096165759 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078826866 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136664591 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085539492 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122123726 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104668852 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076494666 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072330308 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.084784106 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098719453 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080004355 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092165723 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076509417 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.074332409 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150057765 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100233521 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083249912 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100711953 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088686357 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.085172949 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089874543 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115517707 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108467916 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070983128 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085289641 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101627153 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07676889 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07254125 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094571933 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066952378 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08725992 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097218858 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093892087 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088008752 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100742639 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075932019 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085231714 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108043266 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085424418 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075758023 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074116356 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074330868 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073792017 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101346111 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105589088 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11099556 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105978301 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087538469 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090598915 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.075336628 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.372387038 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078568995 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096182507 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102371784 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074480075 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.129241387 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086816685 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087228353 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095502835 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098644491 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150862163 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071847824 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107653389 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091537304 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107731536 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085210656 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105646202 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094080127 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090374661 seconds)
  done (took 49.533595267 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.089973151 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.149695329 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.154046994 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078519566 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091777781 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116335111 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.205399642 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188668008 seconds)
  done (took 2.779828342 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064035416 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077398632 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099330718 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078943223 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062942454 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063151983 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.200942203 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079821182 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.061691902 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09917896 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072279117 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063785792 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413185357 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062916001 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063622701 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.071297923 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062867658 seconds)
  done (took 3.386052551 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.360892416 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.598180668 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.341916065 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071120633 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.978039127 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084308565 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.327840259 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13186769 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076867773 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.555129148 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364899781 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130377166 seconds)
  done (took 18.72015874 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071077957 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070076523 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074853812 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074480142 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070168298 seconds)
  done (took 2.053256845 seconds)
done (took 98.495094014 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076765911 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.164833169 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066099629 seconds)
  done (took 1.958143166 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.08169127 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080015779 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079713631 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077768466 seconds)
  done (took 2.020245404 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070221537 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.074211333 seconds)
  done (took 1.840804795 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.248639193 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16488348 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.09206974 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078719133 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077249045 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079219137 seconds)
  done (took 1.940357989 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068292559 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069867996 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070269229 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070424804 seconds)
  done (took 1.970256109 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063918611 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062534996 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065064483 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068490037 seconds)
  done (took 1.950825703 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.079959115 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081769463 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07415023 seconds)
  done (took 1.928843138 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.092862999 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092471617 seconds)
  done (took 1.877284942 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076304181 seconds)
  done (took 1.768461224 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.085409097 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094548771 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15172967 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108970244 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.149237228 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.132871087 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074554806 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075766021 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070256092 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068530579 seconds)
  done (took 2.705046997 seconds)
done (took 22.238112774 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074609634 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369989085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357878272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085036585 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668852301 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354105766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993468521 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088135833 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094711141 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064702917 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079868722 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644435025 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985368628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.321815416 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.971545965 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319934478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.644784173 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063918988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063402374 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063815269 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979157807 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06320705 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063657108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063995182 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679435103 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.368447087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065360325 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32476376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064429794 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066452648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352050519 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065434242 seconds)
  done (took 16.132743124 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066062256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117169367 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068683501 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079282565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066392395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064996354 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067135294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064757515 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104425908 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066725474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083654308 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064869372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068888237 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066222813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084811394 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066791322 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068200684 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066775095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066647096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068383485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082111173 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064155257 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065225954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064911973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065294265 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077835088 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066058149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064432735 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064532781 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067113851 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067966299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066410888 seconds)
  done (took 3.995476309 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117108159 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124086525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072557429 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105431561 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118657638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068346281 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148690153 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090907166 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112785787 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067084578 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08369403 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06647079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102492931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069113087 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087966826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06749061 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067831543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065027487 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064731822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065623544 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082870464 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066220299 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066577542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066984611 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067757874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079701298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065904173 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064224778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065021769 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066902259 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068863447 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066084108 seconds)
  done (took 4.306351854 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.066944277 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071102899 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078688693 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.07930446 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066028908 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067441412 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068911183 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065151638 seconds)
  done (took 2.279048505 seconds)
done (took 28.424842753 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074061604 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065981739 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069090101 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085914989 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071688876 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069110518 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062658941 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.072377944 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069685375 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.070244047 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07067054 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064187093 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067711894 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062555123 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069885696 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064529787 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071632565 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069460759 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069840305 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07071212 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066623674 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070367806 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072771298 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069325036 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069472821 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069827844 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074080455 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.070282701 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065453418 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067899067 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.065943474 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073092608 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069827313 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069475817 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062650616 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063080997 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067396572 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066429689 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071342962 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074241364 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065239322 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07179494 seconds)
  done (took 4.586095224 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.082336758 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085679705 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078781814 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077387847 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096556173 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07947514 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.08523753 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076912488 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075326862 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084282757 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071888152 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078459077 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075795891 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069717077 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.075113325 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07269166 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077204235 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072250699 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075885899 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.075829268 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084870281 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.06738189 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075695996 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074563281 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069517324 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075137602 seconds)
  done (took 3.731454313 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071013081 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08236392 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09013019 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146850915 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111015467 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077784767 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.07850881 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089789836 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092341361 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063659017 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067610744 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.088167657 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087990681 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.069852732 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.103434482 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.079892578 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079008056 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065567771 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070056318 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09207851 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083721049 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080706103 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089303096 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.078931106 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.062391769 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065114002 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069499817 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076505606 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071936637 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076573318 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.06997851 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068605971 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065518669 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076675125 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069882164 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064670561 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08948267 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077414765 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076719789 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.1059489 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072305701 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06438469 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091202137 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125432743 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065383127 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.06863615 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068567918 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.0767144 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065994468 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093319627 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07948443 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064697406 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065548083 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065873325 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066203124 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080676429 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066835711 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06704364 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076138243 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070944967 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087061549 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070050499 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084290133 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.062917583 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073027086 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064102067 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064239492 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.061841852 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093493847 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069963241 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112071863 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066044032 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063993787 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076784188 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075517856 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071373495 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064955557 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083152534 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076190105 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068749729 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076821994 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068217225 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067911685 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096387088 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065164077 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06455511 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063952089 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068396364 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067934433 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065833768 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079017388 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064616224 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068104885 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080323551 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064711311 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065483333 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068410881 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067686941 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064378376 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078233332 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069454089 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066221434 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076547749 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065470007 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067694714 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078240455 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071822232 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064310423 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.067297151 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068731206 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066497118 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069172539 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067721177 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066581923 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071490472 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072387414 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070592396 seconds)
  done (took 10.519343537 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159029858 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15175716 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067320588 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144640839 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07417156 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07103738 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145077191 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085680251 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066235645 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066268685 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064805601 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094328792 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.09154996 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.103326472 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071071774 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065951908 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088927174 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098827218 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147908234 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143101536 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.0893 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07279873 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067894157 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067334204 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06695864 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074125867 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083619056 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072968552 seconds)
  done (took 4.355933609 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075512916 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.090521454 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069938453 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.077044941 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086200498 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065996623 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067690282 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067128871 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079775991 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075287711 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065740891 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070543699 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069644157 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068482358 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066491865 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071997111 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072175008 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064754796 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069800797 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070642519 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075538697 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.089867123 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.067859823 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063364114 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.065866804 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064536245 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075154891 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077033384 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065570048 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.080320239 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062379035 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069655678 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079757628 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065972792 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065239471 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065781872 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065426527 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065559923 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065758831 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06420604 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06470609 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070831949 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064690818 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074580297 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079454641 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072590567 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068086531 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067978501 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.06872546 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063219885 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068192632 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068521974 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067852685 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07292153 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068925434 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068528328 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069593295 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091696827 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071705637 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064955382 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0649874 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064184325 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068347962 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076382868 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081886258 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068143478 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064215401 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065736872 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071565444 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079213952 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06511976 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070207794 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06304038 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066810689 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067817241 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067892081 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.066470473 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064607926 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06552207 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065905954 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065950791 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065334503 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065378128 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068099508 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06369435 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064550723 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066112142 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067471981 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074618214 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064881767 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069283966 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06635045 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064425851 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067911995 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071277517 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068333742 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079002446 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.077462484 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066200939 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064682448 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078529445 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068115406 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064853155 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072165891 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069440483 seconds)
  done (took 9.08205334 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086995106 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067685223 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082334305 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089111722 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076042844 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071322393 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076889385 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066755034 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081974628 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065008801 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074660965 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064410143 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076922985 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075938018 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067360527 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076122795 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068116837 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082746396 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080291465 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064560554 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074384994 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077615395 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077634156 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079985529 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079372925 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080361617 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077440836 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068541802 seconds)
  done (took 3.8765642 seconds)
done (took 37.864479143 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.794745563 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.957617225 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.780539381 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.983078425 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.923238592 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.892414142 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.896586597 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.775956655 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.901324985 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.832272644 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.057385916 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.282935415 seconds)
done (took 65.850885892 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.796702733 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.942341713 seconds)
    (2/2) benchmarking "String"...
    done (took 2.044122271 seconds)
  done (took 5.699842394 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.066805553 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.567591521 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.059578401 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.777806024 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.781654615 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.329443844 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.589599445 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.235134058 seconds)
  done (took 31.055336762 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.900428402 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.007403061 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.469316332 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.482916828 seconds)
  done (took 15.614031212 seconds)
done (took 64.037692852 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.829349053 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.778133376 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.812199204 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.810076743 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.788026038 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.779811968 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.780748852 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.77998329 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.80372891 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.027060619 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.783347694 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.795155263 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.77925674 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.784123176 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.353219179 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.836458526 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.79941109 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.795443015 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.791059444 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.800069678 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.784903674 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.781949616 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.254024546 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.954679078 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.394365333 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.053943029 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.269866737 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.194640762 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.789255503 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.779331818 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.811760742 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.01112783 seconds)
  done (took 204.500478993 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.780300987 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.860007538 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.923631304 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.798208179 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.254774626 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.952816124 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.883822501 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.440861051 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.781259533 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.782880751 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.092824911 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.779958994 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.148692373 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.722204201 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.817732295 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.821988927 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.928691209 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.147224616 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.818893115 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.932318523 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.787592914 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.887503783 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.831665572 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.066501469 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.81723771 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.863412173 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.786072644 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.799330452 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.968513799 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.876568801 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.798271369 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.821388561 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.920805567 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.653372681 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.810309185 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.791322831 seconds)
  done (took 170.867138442 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.971117097 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.790522555 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.783074214 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.838103413 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.902271042 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.784650829 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.410613035 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.792155626 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.129382143 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.787002876 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.782597608 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.784276394 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.783699186 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.795078659 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.862319179 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.784509105 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.798929587 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.78326283 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.808243305 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.783776981 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.78273752 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.783180133 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.78405433 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784133655 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.782497179 seconds)
    (25/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.783638672 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.783474803 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.142751478 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.674780548 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.02235332 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.782530336 seconds)
    (31/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.782199162 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.795306295 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.807511865 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.787205058 seconds)
    (35/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.784270787 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.875823533 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.838401546 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.901082291 seconds)
    (39/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.785074521 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.784186815 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.001918235 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.857004647 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.783839154 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.785517917 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.848402593 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.794291502 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.784505687 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.785545168 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.790296679 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.850791861 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.024733236 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.784057009 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.906735583 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.269274648 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.787288943 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.785735209 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.785110869 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.377822402 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.788855972 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.785330497 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.79055025 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.791153125 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785700218 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.784939724 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.175205426 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.854909237 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.850368462 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.056062187 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.787537058 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.179589131 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.904261266 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.785310736 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.785749832 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.786870652 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.788208668 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.787010293 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.789887597 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.909487866 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.794619587 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.909823677 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.868971159 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.908211067 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.788764004 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.797776737 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.615428277 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.858207801 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.821484705 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.614145028 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.789465739 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.16467492 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.560781084 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.78992069 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.789163145 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.801745799 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.790155648 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.788550302 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.790339222 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.869953034 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784878921 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.912285101 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.500049178 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.969040201 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.969163276 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.789938722 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.796476965 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.789221695 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.88271612 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.956927435 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.786020848 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.855933098 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.792174932 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.790119812 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.948233247 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.787524868 seconds)
  done (took 401.762349195 seconds)
done (took 780.877438455 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.361914738 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.336362403 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.450426064 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.351304289 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.325343577 seconds)
  done (took 13.547790982 seconds)
done (took 15.270433644 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.803855654 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.794034096 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.852149951 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.871414527 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.803430584 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.808661974 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.870721536 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.806610362 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.838384331 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.843618423 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.873839415 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.872986605 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.812661167 seconds)
  done (took 25.576220473 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.799929269 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.944367585 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.021909724 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.829624073 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.798361069 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.026218624 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.853183804 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.937945688 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.940059491 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.027053063 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.029429248 seconds)
  done (took 22.935760766 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.798607975 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.948069341 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.024158817 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.831091965 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.8009881 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.029849949 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.860927321 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.94211635 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.945576175 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.026979897 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.033799995 seconds)
  done (took 22.976332634 seconds)
done (took 73.213829747 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.794412064 seconds)
  done (took 3.519014845 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.812505587 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.956608694 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.795021922 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.792771212 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.794909535 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.794622794 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.793007498 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.793901158 seconds)
  done (took 16.259771361 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.794957361 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.794537373 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.793809978 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.794980783 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.794525959 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.794292658 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.794455053 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.794595614 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.794693197 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.795353281 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.795581358 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.79541937 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.796157785 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.794427136 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.795369174 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.796072739 seconds)
  done (took 30.44633335 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.797316836 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.796439679 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.795237091 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.7952211 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.795723409 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.794401371 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.796579977 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.7954701 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.794226384 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.796476187 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.796633502 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.795960851 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.794400267 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.795874029 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.795514175 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.795409037 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.795033532 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.795970038 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.800308815 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.796494716 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.795219607 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.796536207 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.79614075 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.795074589 seconds)
  done (took 44.829923378 seconds)
done (took 96.789984708 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.593012435 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.538322201 seconds)
  done (took 9.858594181 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.797643732 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.796157371 seconds)
  done (took 5.327226775 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.797058895 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.795839669 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.796381501 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.797228832 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.797634845 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.797037408 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.79930513 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.796318464 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.797345569 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.797834349 seconds)
  done (took 19.700784116 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.798816972 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.798954218 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.79753688 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.797779311 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.798073294 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.798617497 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.798835956 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.798098418 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.797317263 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.799055031 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.796820795 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.798605641 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.797326986 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.79882149 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.798179105 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.799644574 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.799938987 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.79836828 seconds)
  done (took 34.101018658 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.799579383 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.798968685 seconds)
  done (took 5.327348269 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.79900996 seconds)
    (2/7) benchmarking "second"...
    done (took 1.800495336 seconds)
    (3/7) benchmarking "month"...
    done (took 1.800409051 seconds)
    (4/7) benchmarking "year"...
    done (took 1.79947203 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.799490934 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.801019913 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.798973119 seconds)
  done (took 14.329769315 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.800587042 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.965156652 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.032585566 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.657858102 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.802221358 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.803768796 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.137608999 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.802896977 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.806150245 seconds)
  done (took 20.540317053 seconds)
done (took 110.913686223 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.649580202 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.798912091 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.088659069 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.856979696 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.817083544 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.096446684 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.819594066 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.446346377 seconds)
done (took 42.306653263 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.903439027 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.799128446 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.825646648 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.825590126 seconds)
  done (took 22.181615175 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.800806848 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.158944461 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.821924972 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.620050532 seconds)
  done (took 22.151644261 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.180774472 seconds)
    (2/2) benchmarking "read"...
    done (took 2.139634635 seconds)
  done (took 6.058287849 seconds)
done (took 59.029650151 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801678737 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.800061743 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.800187228 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.800516587 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.800551565 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.801307454 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.800357392 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.800569254 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.800402253 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.799724214 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.802229017 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800355148 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802507861 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801341116 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801074732 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.801373628 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80187178 seconds)
    (18/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.803080466 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.802378652 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.802580185 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.802731705 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.802916575 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.801438644 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.802126417 seconds)
  done (took 44.966489331 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.801923146 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.802335749 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.801709653 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.802679692 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.802709556 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.801819353 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.802943164 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.801176921 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.802941755 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.803849766 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803380136 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.801855027 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.802369941 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.802970003 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803100985 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.803338625 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.804149367 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802368318 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803675964 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.801782617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.804098422 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804201709 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.802706814 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803776467 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.803157496 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802734266 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.804600767 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.803673704 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804195832 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.803143688 seconds)
  done (took 55.82413994 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.802462475 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.80392924 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.803555912 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.80424404 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.804360026 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.804169059 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.804069509 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.804632942 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.804802134 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.803325707 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.805095456 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.805877041 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.805425723 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.805504471 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.805697739 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.805173449 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.805922203 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.805858871 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.806102466 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.805724801 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.806244056 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.806257903 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.805199535 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.804458081 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.805823444 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.804992609 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.806757299 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.805922493 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.806280028 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.805573928 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.806865398 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.806036135 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.806325746 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.807447204 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.806124767 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.805698619 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.805678581 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.807224747 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.807262746 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.807000113 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.806335616 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.805676057 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.806105927 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.806730542 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.807516582 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.807411183 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.807295914 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.807722853 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.807336538 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.807411486 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.807226652 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.807612951 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.807821744 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.806410797 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.808597135 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.807362085 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.807596289 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.80684362 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.807746424 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.808670332 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.807630211 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.807648522 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.808278842 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.808610042 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.806723485 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.807701636 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.808398017 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.807457801 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.807703033 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.807640159 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.808780038 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.808828921 seconds)
  done (took 131.798071822 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.808773659 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.807723392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.807804521 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.807745412 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809172093 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.80966595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.808003587 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809224365 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807538007 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.809830608 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808436597 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.808508503 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808412051 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809272815 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.80800208 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.80797332 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808983146 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.808329722 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.807660296 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.808645968 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809170979 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.809222258 seconds)
  done (took 41.528017403 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.809103107 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.808616979 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.808336892 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.808642941 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.808871535 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809371508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.809289628 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808107186 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810105497 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.807923047 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808732542 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809732144 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.809507293 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809837392 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809194903 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.809244802 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8105365 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.809750154 seconds)
  done (took 34.304719489 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.810538198 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.810339049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.810811215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.810223745 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.810733881 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.809727509 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811225458 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.811749007 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.811932888 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.811062778 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.811718414 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811220437 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.810210973 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810062682 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810480211 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.81018468 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.80951493 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810785512 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811260437 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809864351 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.8111467 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811321229 seconds)
  done (took 41.576720536 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810912021 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.810954337 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.810829809 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.811133003 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.810966271 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.81211234 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.813139973 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.812618996 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.811409061 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.813003352 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812510512 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.812538106 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.811553388 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.81225426 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.811282775 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.810788101 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.811425654 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.811152985 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.81604348 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.812050239 seconds)
  done (took 37.981775335 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.812614286 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812257737 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.809661437 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810331222 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812254418 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.811643392 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810953344 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.810097313 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811661364 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812421347 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.811754037 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.810861935 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809838826 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.810387647 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810387936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811045253 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.811404306 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813733094 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.811956135 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811704223 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.812575667 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811376875 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.810775925 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.810677136 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.81120882 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.810698888 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811601871 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.811405131 seconds)
  done (took 52.460593866 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811213186 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.810583499 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.809963101 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.809991462 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.810809362 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.810760646 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.812286428 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.810380405 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.811669221 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.811162139 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.810598434 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.811777624 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.811431903 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.812299401 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.81013322 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.81100614 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811410324 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.812060145 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811235187 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810939958 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.810640649 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81101776 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.81179044 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.812521028 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.811174077 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.812115432 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812201601 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.811900572 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810444435 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.811056543 seconds)
  done (took 56.07946419 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.833004155 seconds)
    (2/2) benchmarking "in"...
    done (took 1.832312909 seconds)
  done (took 5.407928925 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.812281566 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810120398 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.811887571 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.81200274 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.813988574 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.811914359 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.812062731 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81218079 seconds)
  done (took 16.239684114 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.812582302 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.816027735 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.813826292 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.813060386 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.812917637 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82088423 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.812211385 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.815944853 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.815129106 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.814915388 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.816888734 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.817597789 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.822411959 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.81832873 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.812354799 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.814847837 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814721759 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817977581 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.813909746 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.814573215 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.818260837 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812531532 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.814014548 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.815009546 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.815854322 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.817143173 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.824353093 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.816934993 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.816191669 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.814542559 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.822364377 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.814980498 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.814418748 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816314583 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.814933 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.815238936 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.822385227 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.814178244 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.816106267 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.81663577 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.818252902 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818506515 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.81873478 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.824819245 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.81647904 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.815367721 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.816144363 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.816985788 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.816770974 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.820109653 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.826029748 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817514825 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.817016509 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.815681518 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.818826963 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.816086304 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.816781922 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.818111097 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824814566 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.824022531 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.818919581 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.839749146 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.827605594 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.817653553 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.816822638 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827968543 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.844751959 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.819589769 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.818560916 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.817564208 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.824655111 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.814134685 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.816669106 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.816467751 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829341693 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.823917156 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.817814604 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.816395324 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.816231098 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.816555911 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818619367 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.816073958 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.816766277 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.817595637 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.826805371 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.844152183 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.816552087 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.817175184 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.819467565 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.818677626 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.820752539 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.819696504 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.81496037 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.816880498 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.818924966 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.819169902 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.816502089 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.817052248 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.817966242 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.827276719 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.81804888 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.818111175 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821645121 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.82668636 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.817717095 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.818560408 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818096498 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.818009041 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.826667731 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.817569517 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.818586499 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.818618183 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.820535414 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.823161043 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.818694666 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.822389438 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.828313327 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.828893336 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.81757262 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.823148347 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.823247497 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.822000388 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829589335 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.84589993 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.819129903 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.822769408 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.823673603 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.833901659 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.824573698 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.818829742 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.822257925 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.820178767 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.81939616 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.821125881 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.818839587 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.819511011 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.82021626 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.818924394 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.819159337 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.819992942 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.822733422 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.822101623 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.822617407 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.820605586 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.824600962 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.820395575 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.822719932 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.827734521 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.820699414 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.821079735 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.821068854 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.82264621 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.821637175 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.820872759 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.820591621 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.821421949 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.821215219 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.821379013 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.823241927 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.821080762 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.820717507 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.822795989 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.824626683 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.821212066 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.821401954 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.821914813 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.821862789 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.821814792 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.822536231 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.82118957 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.824013914 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821745394 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.827502332 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.81950587 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.821742444 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.821429796 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.823397203 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.821628868 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.824542322 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.833855403 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.82415126 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.832508427 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.820660766 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.831772748 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.82117105 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.824704761 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.822839917 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.823356473 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.822416078 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.821466437 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.821909738 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.82624261 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.844423601 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.832398041 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.823737646 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.824769357 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.830148743 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.827530004 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.829826788 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.820282857 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.822756465 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.825205076 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.824085871 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.823434987 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.822271339 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.82686071 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.822623557 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.823435795 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.827459131 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.821881442 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.823507275 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.824213292 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.823210838 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.825956871 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.82395546 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.821654458 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.82471387 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.822949566 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.832810199 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824747879 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.822403016 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.824893214 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827205671 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.823999317 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.824634424 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.826175367 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.827410952 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.822514882 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.825190978 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.833603966 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.824463882 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.824699637 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.825707153 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.824805768 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.826642786 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.824721703 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.828590186 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.835102324 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.828391745 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.822233354 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.832023453 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.823825057 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.829493497 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.825373733 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827019872 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.825688739 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.828507814 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.824637461 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.825598738 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.834754784 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.824173453 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.826473788 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.824901064 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.83000725 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.827335404 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.827518624 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.827066663 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.8298787 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.835852396 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.833986108 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.825478429 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.830715549 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.826625088 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.827531386 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.831587699 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.828255428 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.840151439 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.836676964 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.827015149 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.827386026 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.827202707 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.829317 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.826759764 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.826747307 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.834158702 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.825886372 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.827950869 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.829995383 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.827016814 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.82788279 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.834270307 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827091885 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.82949679 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.828037915 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.827825269 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.828612648 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.826212308 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.829923879 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.825158613 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.828713822 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.831801345 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.828499852 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.828473174 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.82637529 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.837544442 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.825955343 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.828824069 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.836365598 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82948965 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.82854834 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.829798597 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.828653911 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.830270224 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.829407868 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.829608642 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.829830494 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.827659215 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.832536773 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.840878836 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.831311878 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.836091025 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.832462397 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.840339807 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.828189424 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.828698423 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.828540904 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.833996162 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.837764081 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.828351308 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.829110857 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.83749762 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.831129957 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.830862249 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.833136139 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.829948613 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.829993527 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.829510771 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.830980063 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.835890872 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.833931436 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.829528361 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.83093251 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.829929356 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.83112904 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.832957604 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.831840514 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.831903724 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.830983449 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.830962881 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.830843154 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.831176304 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.830398506 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.830760149 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.831446985 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.829888834 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839908352 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.829850631 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.833278879 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835127333 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.832772774 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.841020925 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.831249057 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.831210274 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.832597395 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.829498064 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.834218227 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.829477756 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.831540019 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.831558305 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.831029581 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.832537146 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.844518357 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.838566328 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.833570375 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.831561948 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.831108796 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.833085056 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.841539796 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.857239249 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832103732 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.832208955 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.835306177 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.838059726 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.833725753 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837529488 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.834988144 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.841646948 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.83322155 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.831744907 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.835665264 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.844614029 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.831371954 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.831891775 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.832087933 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.837451787 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.833835591 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.833133473 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.834299862 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.834956546 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.834505819 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.845819695 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.83275154 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.83410385 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832629923 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.831771685 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.833369792 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.834074667 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.836477871 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.833913643 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.831936635 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.833759935 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.835310933 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.839212031 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.832433323 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.836120249 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.844684968 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.833178243 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.833070478 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.835221752 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.834347715 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.835239509 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832975451 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.832563163 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.83651168 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.832848386 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.835661052 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.837100979 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.842930462 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.835383995 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.833162703 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.835328742 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.83870525 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.832694403 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.835294581 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.836431969 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.845256306 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.838117586 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.846875663 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.846636339 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.833252278 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.836044289 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84252009 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.844251534 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.833434674 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.83539514 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.83440922 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.836756862 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.837653777 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.835453868 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836015946 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.837511266 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.842958231 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.835781038 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.837282176 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.836462917 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.836593612 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.838431522 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.836207663 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.842714882 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.836471085 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.836835276 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.836460981 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.838015807 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.836728819 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.837897856 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836237068 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.837003162 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.837997544 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.838567517 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.84270502 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.837663293 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.837752443 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.839563565 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.835876127 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.836085078 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.838640056 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.837253637 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.836510741 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.840911026 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.846422584 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.835913065 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.839306456 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.83683484 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.840044871 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.836171196 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.836963688 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.837389396 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.839147843 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.847331431 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.83682706 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.83788433 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.838497633 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.838683957 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.843307241 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.837198116 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.843190307 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.837318235 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.839237985 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.83740593 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.841900377 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.848892767 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.843179718 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.842652709 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.848453312 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.844153974 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.839137999 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.837772757 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.838155301 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.838133624 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.839330345 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.841277371 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.839189973 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.842183664 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.839669678 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.840235503 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.838946969 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.842679139 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.838070852 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.840819286 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.844213026 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850232165 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.850835712 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.840180247 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.842759534 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.841873534 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.844992171 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.853085913 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.839270974 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.84108284 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.840893066 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.84174341 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.842163283 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.848649996 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.849624905 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.844445818 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.839782947 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.845471098 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.861643395 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.843741493 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849053772 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874650167 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.840918757 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.840209982 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841478821 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.842569893 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.839877145 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.84402559 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.840474788 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.847440059 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.840602983 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.840741928 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.850165975 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.839953988 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.840640053 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.840647775 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.841433591 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.847755168 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.840903439 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.850329516 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.842291287 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.840761186 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.842507177 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.843711623 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.843176211 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.842727385 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.841726234 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.845320029 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.842314242 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.843716074 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.85206223 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.843089997 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.844007841 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.8561327 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.853905909 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.841483881 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.842526341 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.842214223 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.848222269 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.844854203 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.840072943 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.845698909 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.852341663 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.847379604 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.851797458 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.844781158 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.844566573 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.844134713 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.843879616 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842140982 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.855429313 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.856127436 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.842990814 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.844574954 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.85031472 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.843111494 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.851049219 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.849820422 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.843126766 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.84574519 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843825753 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.844136355 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.844075501 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.845559432 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.84827394 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.853632018 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.844339953 seconds)
  done (took 1092.967797255 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844784654 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845197302 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845019568 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844533214 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845901898 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845895903 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845307269 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.845610075 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.845073988 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845379725 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.84448369 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845779942 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.845822873 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.84544126 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846291318 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846808053 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847449422 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.846486829 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.84661566 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844704806 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846129948 seconds)
  done (took 40.534128693 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.846376579 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.845844058 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846827187 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.845993007 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845731466 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.846362805 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.845605231 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.846034455 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.843974727 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84505306 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847369619 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846566386 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.846421794 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.84661022 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84616327 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846162964 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.847673982 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844808864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.846284885 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.844949624 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846042766 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.845076972 seconds)
  done (took 42.388729274 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.843378 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.841553408 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.842756334 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.841798681 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.842371824 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.842477413 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.841226117 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.845016513 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.841812575 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.844160944 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.850076612 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.850817658 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.842220621 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.845176045 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.842305761 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.841702652 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.98992423 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.843834288 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.84188441 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.8429468 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.844974876 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.844795468 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.836648277 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.837931691 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.837335178 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.840470156 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.837904715 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.838764334 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.837220559 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.839476618 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.842702738 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.839085663 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.838861089 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.840680765 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.836965319 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.839198581 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.844068775 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.835616562 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.838180017 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.836241484 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.846822283 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.863470979 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.836877048 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.83698866 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.845279858 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.836051404 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.83679472 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.841938867 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.845347368 seconds)
  done (took 92.168422893 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.836962525 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.836575084 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.838931131 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.838928496 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.836763042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.836406823 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.835778927 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.836547632 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.836543282 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.836388178 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.836698083 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.836041829 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.83732604 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.837808987 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.836575709 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.835864291 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837172289 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837368616 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.836758975 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.842595502 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.83626141 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.836241745 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.836869311 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.836383979 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839740916 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.836681612 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.838064054 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.837461281 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.837825843 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.837579352 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.83794388 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.836425656 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.836823224 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.836657664 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.836347826 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.840467475 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.837203838 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.835421877 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836180215 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.836483115 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.837288151 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.832538302 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.83499562 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.833918808 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.834459705 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.834265083 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.837662498 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.833936879 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.834205572 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.834282317 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.833817938 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.834482469 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.833196 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.835325287 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.833659516 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.83412822 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.8348232 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.834314551 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.834332505 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.8358257 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.834211715 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.834264923 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.836489102 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.834999388 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.834312738 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.833920588 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.833546596 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836160986 seconds)
  done (took 126.624761969 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836602363 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.835578205 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835223813 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837586134 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.836487833 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.835182598 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.835347986 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.835771124 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.835674739 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.835818359 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.83703558 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.835166601 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.837100375 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835203412 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.837461407 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.837110691 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.836752369 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836594353 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836527958 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836975805 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.83600142 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.838245366 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.836453604 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838301774 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836807783 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.836196721 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.840777481 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.837204977 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.838262534 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.83749005 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.837789636 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.840873687 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.836958929 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.837285014 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.837152409 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.836459624 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.837838205 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838863195 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.836248835 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.838909254 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.836615849 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.837215362 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.837136911 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.837484179 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.836907773 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.838656717 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.837095102 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.838615363 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.837957738 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.837133242 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.836845439 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.836496693 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838418856 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.839614569 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.837089015 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.836714713 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836758131 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837237476 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.838411663 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.837871766 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.836490383 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.836498134 seconds)
  done (took 115.669018595 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837978296 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.836841796 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.833578608 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.834971709 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.834593987 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.834315934 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.833838541 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.833899 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829683185 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.830608127 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830993916 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829107674 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832327713 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828450964 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.828854663 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831097163 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829594642 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.829682153 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82998588 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.829217709 seconds)
  done (took 38.408173386 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.829602337 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.828735005 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.83133852 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827462885 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.829021972 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828833803 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.827185461 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827185122 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829026846 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828271445 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827908619 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.827191905 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828289167 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.83053654 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.827095681 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.826359461 seconds)
  done (took 31.014473232 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.827496903 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.831053456 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.824673622 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.826373936 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.826782834 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.826365641 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.827065419 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.827605428 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.824925803 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.82573861 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.826090604 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.825884922 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.829177206 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.825646848 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.825687351 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.82462855 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.82490713 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.825713253 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.82644186 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.825651301 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.826680324 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.826217671 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.824502204 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.825345756 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.82624953 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.825856524 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.825934102 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.825472109 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.82684934 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.826360637 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.827025391 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.825306732 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.825595285 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.825155189 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.825972969 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.825419268 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.825555271 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.82528384 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.825487326 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.825187226 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.825206946 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.82568705 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.823584831 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.825400001 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.825234365 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.826570529 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.824585712 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.82359048 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.824322056 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.823535986 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.82422323 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.825796091 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.823472054 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.823024432 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.824564276 seconds)
  done (took 102.170862138 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824781733 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.823298973 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.823316904 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.823514157 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82360216 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.823176068 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824517979 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.823170805 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822480646 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.822426854 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.824402277 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.823978422 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823800009 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823183752 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.824388088 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824142323 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.826050325 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.824990053 seconds)
  done (took 34.583594701 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822331499 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822443487 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.824006899 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.823696706 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.822713601 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.824291159 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.823055034 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.823390755 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823495212 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.824506912 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823830185 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.824105038 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823165807 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.823660815 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.823415681 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821923974 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.822100836 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822641323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.823717016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82285839 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.825547589 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.822450745 seconds)
  done (took 41.866684286 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.823155328 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.82294155 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.836799822 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.844096624 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.842754261 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.858019975 seconds)
  done (took 12.780863292 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822839194 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824693649 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821368623 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823327833 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821412544 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821308388 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825592379 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82160807 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822719621 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822167475 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823452312 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822377743 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82634121 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821882665 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822411042 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821758919 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822755702 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826009275 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821266625 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821027056 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821700454 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82281043 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821537892 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823005429 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821310726 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822795798 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822720431 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823290765 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824160428 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821764585 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822905044 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82219299 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822234321 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82408836 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823758431 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822573952 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821714542 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82166381 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823198351 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823846478 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.821849626 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822223003 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821746442 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823109283 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82233073 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822978683 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822140077 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821796758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822715453 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823117375 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822652469 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821764892 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821884179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822038477 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822909382 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82246848 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8236714 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821428647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822469681 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821677531 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823088601 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822403823 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821385855 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821589963 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822177824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820192753 seconds)
  done (took 122.041525149 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822173862 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82172568 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822502628 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82236223 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821475925 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822281098 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821954261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821324599 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821954293 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822279358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821906137 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824558432 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821855578 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821997251 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822074189 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82173355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822978185 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822653712 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823220212 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823424946 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821903578 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822615089 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823672593 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82227766 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822752939 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822081119 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822921043 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822882732 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821964483 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821776722 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821907016 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821861777 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821484766 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822592943 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821146659 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820800781 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823487046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822949233 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821949891 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822162683 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821900115 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823184746 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821667121 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822632864 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823718462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823353028 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823590545 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823340694 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82359358 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824747031 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824318228 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825459887 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823022886 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823166356 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825503368 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822915426 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824803485 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823341776 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823067302 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823439283 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826468734 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823531279 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823782131 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824109121 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823559396 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827034465 seconds)
  done (took 122.065708507 seconds)
done (took 2535.18985496 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.844044625 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.935689493 seconds)
  done (took 15.534202813 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.988482526 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.939352709 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.826783114 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.841604946 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.822891 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.8495387 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.82345524 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.822711781 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.827184361 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.826338387 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.826595129 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.009715179 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.848791817 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.823726445 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.826105664 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.920091762 seconds)
  done (took 51.582816199 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.832738469 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.830024502 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.842916828 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.828052516 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.832315228 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.844135594 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.861445125 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.832204404 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.865648706 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.843343417 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.905404282 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.839492575 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.830767174 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.881514169 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.842568982 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.844104053 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.928507268 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.905756447 seconds)
  done (took 35.147013325 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.909220379 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.834803428 seconds)
  done (took 10.506493347 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.842227332 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.826488007 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.857065055 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.853767385 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.833021071 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.856201066 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.845612155 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.848704729 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.843194644 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.831744101 seconds)
  done (took 70.197732665 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.834916221 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.831859159 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.83323258 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.829907557 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.825957835 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.830119738 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.830492618 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.831121107 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.516555206 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.868258036 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.839978966 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.838742525 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.830188028 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.831223284 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.827904929 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.858294804 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.96087531 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.827375146 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.826335245 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.835825456 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.833018486 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.88422838 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.841795902 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.828327089 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.861841717 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.511863254 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.838144084 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.836317987 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.936728295 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.825784875 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.83305327 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.040677873 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.83440057 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.302094242 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.113300552 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.833427396 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.838457318 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.837659539 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.828908769 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.941809859 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.830112124 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.836514 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.782650766 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.084050292 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.92654647 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.875620871 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.165573366 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.830732839 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.831560616 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.864662117 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.833059297 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.835506267 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.849598269 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.346853916 seconds)
  done (took 130.764504629 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.830122502 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.175125794 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994633919 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.830701407 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111659067 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035833983 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.828765986 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874270574 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833358884 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.054462919 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.081045915 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.93398932 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829158185 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.833226519 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.826696242 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.825437576 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.98087053 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.898864709 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.829001807 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.827946943 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855375613 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.071757857 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.946986826 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.830877384 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.854755173 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.037856924 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.947586739 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.930683779 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.554458787 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.827719272 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892089857 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.828943759 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.83130747 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.826351057 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.983969991 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921310527 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913786697 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.83009426 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826354898 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.829139902 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.490459439 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027807121 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.921224181 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.957114338 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.077807276 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030061134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.607505601 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.829811466 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.563035573 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.989770509 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.056371487 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.056414905 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.947592768 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.833028154 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.358202985 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.830393504 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.831737653 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07453229 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.048738361 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.926785956 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.830617402 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.833869822 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.827848687 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.06774832 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.829558229 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921860164 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.831058482 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.827516958 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.926169493 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.929579366 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.0580178 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039843322 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.85810728 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.172034763 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.330038303 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.07643737 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.89437149 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078620402 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.831736541 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.830222437 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90820554 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.683877517 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.084478585 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.075441099 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072955814 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86261879 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.550299339 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.831281696 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.058515743 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.049070601 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.0874148 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.078826199 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.065639115 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.157507589 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.831481559 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.831920055 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.0557657 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952979297 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.832016745 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.174647752 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064177264 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.4014354 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.859477122 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.136003 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95910972 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.835466429 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.461214923 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.833435151 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.060027204 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.870538348 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.8339208 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.834617945 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.052028074 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.815053134 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832947536 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.474330305 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.892932752 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.83552891 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.061375526 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.833136803 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098333735 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834335953 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.063926483 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.39993014 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.863253741 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.061256259 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.080565619 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.834133951 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.076890957 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.073000744 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945954254 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.050222299 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.448682943 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.833932406 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.120978581 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.833612638 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.83353958 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.002568218 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.835465424 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975834836 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.835366313 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124103221 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85229021 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.060793578 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.83399934 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.084900971 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.863283368 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.883059865 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.834864192 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953050806 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838832344 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.754147241 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.989717033 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839285145 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.8336225 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.636197933 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.837262301 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988349228 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.060912849 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853472039 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908938276 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.49402386 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835988889 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915640165 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.854990343 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.230732578 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.838052097 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.085682331 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.837804001 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.836134811 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.836653153 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.06966399 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.014618141 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.840037458 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.833317924 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.741623713 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.837009322 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83621442 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.016336382 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.331331177 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835802304 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037286114 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839169062 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.95908143 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.838562224 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.9165692 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.173465087 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.836491346 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.836326946 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.835549474 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.837836733 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.838753338 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.097139091 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.866781938 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.369285298 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.973018594 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110962864 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.143122105 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.075768433 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.87667493 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.839009119 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.089313111 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.838596239 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.897039511 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.837356191 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.857590037 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068790635 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839118926 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044611673 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.103724447 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.713410093 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8834519 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.837996709 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837942312 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.836955554 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.982574476 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920533344 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.838445732 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.838255256 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.951721238 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.955241056 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.046507061 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.840636416 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.897507278 seconds)
  done (took 894.907022266 seconds)
done (took 1210.394928158 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.84141025 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.838113981 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.843178307 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.841808819 seconds)
  done (took 29.135129815 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.84043344 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.841513866 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.842223803 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.843192871 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.840520311 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.839415736 seconds)
  done (took 12.817652227 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.059694094 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.838347904 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.839762354 seconds)
  done (took 21.50875123 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.916566798 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.24805131 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.976340891 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.273448798 seconds)
  done (took 10.186444075 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.842522682 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.841698371 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.842335902 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.841508491 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.841782595 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.843303961 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.842933211 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.841757174 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.843542904 seconds)
  done (took 18.35402318 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.571857895 seconds)
done (took 98.344558396 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.922985907 seconds)
    (2/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.921149684 seconds)
    (3/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.983859961 seconds)
    (4/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.162282291 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.909338146 seconds)
    (6/309) benchmarking ("sort", Float32, false)...
    done (took 5.551414019 seconds)
    (7/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.159853476 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.976910226 seconds)
    (9/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.976527915 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.098290021 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.07119281 seconds)
    (12/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.86686064 seconds)
    (13/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.846034258 seconds)
    (14/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.935224791 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.245411837 seconds)
    (16/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.904925629 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.858708386 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.842664418 seconds)
    (19/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.059126732 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.842048412 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.166027827 seconds)
    (22/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.918504897 seconds)
    (23/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.843881635 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.915242033 seconds)
    (25/309) benchmarking ("map", identity, Float32, false)...
    done (took 3.356750848 seconds)
    (26/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.853434842 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.08207009 seconds)
    (28/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.004028592 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.228298932 seconds)
    (30/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.146378369 seconds)
    (31/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.136857467 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.328957467 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.861556922 seconds)
    (34/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.624291169 seconds)
    (35/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.867523957 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.843199433 seconds)
    (37/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.31461686 seconds)
    (38/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 3.001460664 seconds)
    (39/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.84127108 seconds)
    (40/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.680596247 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.873887044 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.969365343 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.977512626 seconds)
    (44/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.845025116 seconds)
    (45/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.868280981 seconds)
    (46/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.168242858 seconds)
    (47/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.866999614 seconds)
    (48/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.929566663 seconds)
    (49/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.373542627 seconds)
    (50/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.006382499 seconds)
    (51/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.846500815 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 4.214820978 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.981100042 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.594778696 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.10723383 seconds)
    (56/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.042694087 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.013735297 seconds)
    (58/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.866828446 seconds)
    (59/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.309474575 seconds)
    (60/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.949078456 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.930401762 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.457565437 seconds)
    (63/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.369017857 seconds)
    (64/309) benchmarking ("sort", Bool, false)...
    done (took 2.061659599 seconds)
    (65/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.442374481 seconds)
    (66/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.211623787 seconds)
    (67/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.222325342 seconds)
    (68/309) benchmarking ("sort", Int64, false)...
    done (took 5.591469353 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.859663587 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.023748493 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.955975322 seconds)
    (72/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.209906096 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.014024831 seconds)
    (74/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.128775047 seconds)
    (75/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.0092257 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.834240007 seconds)
    (77/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.895037491 seconds)
    (78/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.33652477 seconds)
    (79/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.766207125 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.988220754 seconds)
    (81/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.951345863 seconds)
    (82/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.123577794 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.169630551 seconds)
    (84/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.184139136 seconds)
    (85/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.888961338 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.021237101 seconds)
    (87/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.155574139 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.024078568 seconds)
    (89/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.194950795 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.218966009 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.182206327 seconds)
    (92/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.880819218 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.045556391 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.860666156 seconds)
    (95/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.532714867 seconds)
    (96/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.977618955 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.246923329 seconds)
    (98/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.858848718 seconds)
    (99/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.136918488 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.229062745 seconds)
    (101/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.350289358 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.838540098 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.874336215 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.133416189 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.332900179 seconds)
    (106/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.561799494 seconds)
    (107/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.966128337 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.887396694 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.451090135 seconds)
    (110/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.253902796 seconds)
    (111/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.17200303 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.885416774 seconds)
    (113/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.61473728 seconds)
    (114/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.956643963 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.860067577 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.159786671 seconds)
    (117/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.867066488 seconds)
    (118/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.265937294 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.11998322 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.989884138 seconds)
    (121/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.495482196 seconds)
    (122/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.862434729 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.132770108 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.641072477 seconds)
    (125/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.524601664 seconds)
    (126/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.059030784 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.18090195 seconds)
    (128/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.051410217 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.163300717 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.863984875 seconds)
    (131/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.949328769 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.89172697 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.313530762 seconds)
    (134/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.086439557 seconds)
    (135/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.013438656 seconds)
    (136/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.866438286 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.260415303 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.865705122 seconds)
    (139/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.001808073 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.168369694 seconds)
    (141/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.946222228 seconds)
    (142/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.789294019 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.229202649 seconds)
    (144/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.659249164 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.182813799 seconds)
    (146/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.902800674 seconds)
    (147/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.673008912 seconds)
    (148/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.243326876 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.17073162 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.014665461 seconds)
    (151/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.001563524 seconds)
    (152/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.140133228 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.115227823 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.964124044 seconds)
    (155/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.110790379 seconds)
    (156/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.078045656 seconds)
    (157/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.874981921 seconds)
    (158/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.38773319 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.125652062 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.887904356 seconds)
    (161/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.015421917 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.986991675 seconds)
    (163/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.127204983 seconds)
    (164/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.204686835 seconds)
    (165/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.264357421 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.207976013 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.96885104 seconds)
    (168/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.182275838 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 5.642180955 seconds)
    (170/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.012495286 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.889068168 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.108711019 seconds)
    (173/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.948058231 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.86437977 seconds)
    (175/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.305706682 seconds)
    (176/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.885153181 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.106386467 seconds)
    (178/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.564687787 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.755819682 seconds)
    (180/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.949961653 seconds)
    (181/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.902153366 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.173946875 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.93075521 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.976604554 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.159914276 seconds)
    (186/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.134710547 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.865068013 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.893192816 seconds)
    (189/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.06678099 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.87126031 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.952668686 seconds)
    (192/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.996831006 seconds)
    (193/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.869136933 seconds)
    (194/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.78375995 seconds)
    (195/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.964684817 seconds)
    (196/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.978951507 seconds)
    (197/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.971133801 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.955246248 seconds)
    (199/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.796899862 seconds)
    (200/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.663473217 seconds)
    (201/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.974382479 seconds)
    (202/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.879825905 seconds)
    (203/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.031829916 seconds)
    (204/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.965687511 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.880113424 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.868198875 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.298624269 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.866649127 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.205930217 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.059003363 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.936706336 seconds)
    (212/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.948836854 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.926129147 seconds)
    (214/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.978301704 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.800584615 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.88038739 seconds)
    (217/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.976915065 seconds)
    (218/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.999006789 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.101243185 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.07849319 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.430035592 seconds)
    (222/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.966233349 seconds)
    (223/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.895960157 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.266664893 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.128520949 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.640224747 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.186245574 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.013830262 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.876519187 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.014173653 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.971077051 seconds)
    (232/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.261248945 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.890611801 seconds)
    (234/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.152443119 seconds)
    (235/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.273974284 seconds)
    (236/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.006578659 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.99786752 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.870343356 seconds)
    (239/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.555283151 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.917544586 seconds)
    (241/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.335452241 seconds)
    (242/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.868228228 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.991356595 seconds)
    (244/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.999381186 seconds)
    (245/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.869507878 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.985458293 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.870954733 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.805352885 seconds)
    (249/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.978120803 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.080657299 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.090167977 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.979351642 seconds)
    (253/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.999442417 seconds)
    (254/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.041905375 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.932506848 seconds)
    (256/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.95917518 seconds)
    (257/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.983591827 seconds)
    (258/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.011979851 seconds)
    (259/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.29687018 seconds)
    (260/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.969577997 seconds)
    (261/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.88389064 seconds)
    (262/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.905543731 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.87361693 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.612026267 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.87833832 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.347756407 seconds)
    (267/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.872036956 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.953680056 seconds)
    (269/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.31198405 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.204982386 seconds)
    (271/309) benchmarking ("sort", Int8, false)...
    done (took 4.730730047 seconds)
    (272/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.885469217 seconds)
    (273/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.193121985 seconds)
    (274/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.275606067 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.190131609 seconds)
    (276/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.083368295 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.066067243 seconds)
    (278/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.459006191 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.056953693 seconds)
    (280/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.95460194 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.006111987 seconds)
    (282/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.871764462 seconds)
    (283/309) benchmarking ("sort", BigInt, false)...
    done (took 6.873416934 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.933632502 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.791626853 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.800227246 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.89338037 seconds)
    (288/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.95958006 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.061621994 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.154043319 seconds)
    (291/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.874155473 seconds)
    (292/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.08956781 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.02206208 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.494121935 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.781540622 seconds)
    (296/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.050733137 seconds)
    (297/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.872867138 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 3.354300767 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.17412384 seconds)
    (300/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.956920435 seconds)
    (301/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.380095441 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.268984258 seconds)
    (303/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.870569464 seconds)
    (304/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.756409927 seconds)
    (305/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.174144774 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.080285742 seconds)
    (307/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.271228644 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.49120069 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.90484074 seconds)
  done (took 1012.381323667 seconds)
done (took 1014.232236387 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.901916189 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.896995117 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.879026532 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.899693057 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.991921443 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.923274073 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.892933297 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.882318736 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.929610079 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.930427682 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.878082357 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.920190216 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.879583273 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.880354512 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.879546603 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.896273238 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.191898279 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.905255708 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.899725332 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.890746846 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.897803637 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.878962522 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.929772311 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.923846014 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.884711057 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.885070628 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.883674508 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.899948836 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.99814727 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.883894358 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.884624875 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.893694207 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.191754414 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.904146265 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.880053614 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.899956205 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.892771994 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.893152096 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.885358321 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.914048201 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.334456104 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.882569759 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.882445028 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.880246663 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.881648681 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.888434672 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.8814126 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.889397778 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.897866816 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898413913 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.328309449 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.900540823 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.88566118 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.882385802 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.899524356 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.882533493 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.886585118 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899978414 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.902523741 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.899250653 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.182974657 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.913996425 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.885488665 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.9002104 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.891373429 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.368584439 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.882479086 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.88919331 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.33491033 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.894938963 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.366123857 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.895229392 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.884228173 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.896792135 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.915616755 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.193227692 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.905161112 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.881727129 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.89286311 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.880254837 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.895126771 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.897035247 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.887384446 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.88301203 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902390759 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.928714467 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.896285299 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.88299726 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.895618185 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.903144207 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.893098714 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.896850654 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.886550959 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.881213851 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.895039508 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.888002895 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.885934267 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.88721443 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.888309265 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.897193924 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.335075679 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.903872654 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.882207391 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.880812453 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.882946498 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.898444879 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.335014287 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.889003467 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.9082741 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.934730269 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.887852819 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.184782318 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.914013341 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.901396234 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.897019879 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.887528041 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.885220881 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.185718878 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.360876669 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.904186166 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.884983292 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.88512824 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.90166083 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.886647402 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.883727105 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.198162395 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.91269368 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.901323572 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.008903656 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.898617999 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.919028427 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.884379823 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.888634373 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.932029638 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901771568 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.91873516 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.889608239 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90248465 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.902893237 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.884151761 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.89850691 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.898621988 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.886155364 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.893964714 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.88399943 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.931133262 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.901487442 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.90168837 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.907429825 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.009658151 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.884284579 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.186911127 seconds)
done (took 296.303046366 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.959429412 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.884466795 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.000439663 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.883607331 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.970959067 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.952974829 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.884905313 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.881775902 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.881930661 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.381989761 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.883348804 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.890938807 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.88290061 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.885714948 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.950908878 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.881953883 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.882296282 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.326765702 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.883754106 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.963198452 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.88177386 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.885938631 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.882572387 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.381703225 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.882763046 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.882100009 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.968345495 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.883028053 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.330761214 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.882435522 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.88438573 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.333618015 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.963057205 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.91223212 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.892276555 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.890188676 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.976736735 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.890861832 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.950776277 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.951346704 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.008305043 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.920531714 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.88467406 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.885182739 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.886369301 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.887481122 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.885518126 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.91685375 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.884323991 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.893374706 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.328763459 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.89095117 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.892929531 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.88532293 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.886503849 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.912564645 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.885270333 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.887127949 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.965771015 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.886851965 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.954029379 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.385848852 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.382572125 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.884351593 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.887662873 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.886334509 seconds)
  done (took 186.287797727 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.956433255 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.960251389 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.951015071 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.891008545 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.936414552 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.953967769 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.890902842 seconds)
  done (took 15.353472143 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.891376798 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.886491803 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.939235492 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.936815768 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.886490881 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.067024805 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.897041812 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.890541514 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.914524318 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.88786426 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.551898239 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.934999332 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.894007314 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.885597005 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.898009204 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.944162542 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.888830036 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.886749898 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.001341958 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.034505899 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.891280565 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.893779728 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.912238976 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.897672223 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.885596803 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.887966102 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.890074058 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.893210029 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886581861 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.885599139 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.885991888 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.939185413 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.886607665 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.886092679 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886532852 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.88810117 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.886292629 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.88743408 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.887020473 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.885492468 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.887286732 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.888862098 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.886479719 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.886891788 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.88593389 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.910473181 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.886272563 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.891143366 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.88658665 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.887757526 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.914829306 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.886332126 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.890935243 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.89307914 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.929564244 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.894927649 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.888454857 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.889042957 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.889153762 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.889996137 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.888125625 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.037129295 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.938202345 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.887803678 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.93808085 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.040986217 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88918216 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.888887478 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.892143538 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.976282572 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.887965379 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.936439929 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.888612813 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.002010126 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.887501993 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.072340716 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.910925544 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.893234368 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.894376943 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.887870572 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.896101964 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.891802544 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.891959124 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.895661869 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.894073572 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890089716 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.889434267 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.890099987 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.897535881 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.890578356 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.939834695 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.890791384 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.889753121 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.029638481 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.889018462 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.007248865 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.918342324 seconds)
  done (took 207.770516904 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.897494235 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.897061069 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.892384955 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.905474143 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.890037363 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.892018471 seconds)
  done (took 13.194081928 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.893737624 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.895884198 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.89323465 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.89042014 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.890571536 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.891030028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.89034886 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.894214576 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.897041584 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.889644169 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.891304913 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.893251844 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.891773729 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.891498837 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.890737685 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.890188355 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.891789133 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.890451827 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.889204486 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890535045 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.098666339 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.891588782 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.890536087 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.895171068 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.896734062 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.889502433 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.905448579 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.890913698 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.890881106 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.897806275 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.894908047 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.892320708 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.894378381 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.899312341 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.89474148 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.895596217 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.895392557 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.894366677 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.891542335 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.895140993 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.893541258 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.89214483 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.891997191 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.894060804 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.894996596 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.902161104 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.898839089 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.905638917 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.893931355 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.895275273 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.896941613 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.893521826 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.89454307 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.895466803 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.897953442 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.900962952 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.898428917 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.893646048 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.893028521 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.897568969 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.895756991 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.893702178 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.896713156 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.897496776 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.899565136 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.896379041 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.897464577 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.898006063 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893306215 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.894201498 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.89927306 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.895186137 seconds)
  done (took 139.432703165 seconds)
done (took 563.868082092 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.836436636 seconds)
  done (took 9.655987239 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.979138582 seconds)
  done (took 8.804234289 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.759849792 seconds)
  done (took 10.585672236 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.916760042 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.909234756 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.897695584 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.89487625 seconds)
  done (took 29.452775616 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.949155436 seconds)
  done (took 8.772142264 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.910494934 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.904950047 seconds)
  done (took 15.679315096 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.013956675 seconds)
  done (took 8.836097127 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.12046314 seconds)
  done (took 8.959408741 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.904149249 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.902624034 seconds)
  done (took 15.652817265 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.900015361 seconds)
  done (took 8.721846025 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.536874071 seconds)
  done (took 10.449644277 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.91375142 seconds)
  done (took 8.786950595 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.936069487 seconds)
  done (took 8.760553084 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.972244073 seconds)
  done (took 8.79608283 seconds)
done (took 163.733688476 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.908169341 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.896328136 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.895791544 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.895728387 seconds)
  done (took 29.41848403 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.935689297 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.9376908 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.945118059 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.935113203 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.927333414 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.928172727 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.936092882 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.936086179 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.926132432 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.934829887 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.935578816 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.932139402 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.934502778 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.943977187 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.944827602 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.934148575 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.93427184 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.935602814 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.928506415 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.944416525 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.933483552 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.935061987 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.902035746 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.901937408 seconds)
  done (took 48.20825451 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.09155587 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.972734223 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.055960692 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.954893676 seconds)
  done (took 9.898718002 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.899983906 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.964895575 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.951202273 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.947830009 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.952545663 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.003520763 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.956279417 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.038277323 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.029461594 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.02739874 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.909264057 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.923480214 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.927732118 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.949857946 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.007115653 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.901627866 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.903118791 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.076259698 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.964216166 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.089710289 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.901123936 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.957588288 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.955130796 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.955383456 seconds)
  done (took 49.016766206 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.902883043 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.912294404 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.910302246 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.903573206 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.903723278 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.905280585 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.911371054 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.907149973 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.925632103 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.905303038 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.903374393 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.904499299 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.910998632 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.904083518 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.903319771 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.918176872 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.918967156 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.903873788 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.908152165 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.911459562 seconds)
  done (took 39.99922636 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.902049844 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.749237707 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.247572959 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.156678946 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.90322723 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.900088543 seconds)
  done (took 31.68497619 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.913469556 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.912376005 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.905540873 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.960491576 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.046018753 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.912855508 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.906437199 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.915016573 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.946874478 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.969448597 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.924751628 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.930011328 seconds)
  done (took 25.070205791 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.900893339 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.903440456 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.904219235 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.911543536 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.912413428 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.909683313 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.914695154 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.903189852 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.9149985 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.923373169 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.91397299 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.917166812 seconds)
  done (took 44.761887604 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.610705061 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97655728 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904962625 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.777825051 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378023986 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458992121 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.79256339 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.691023332 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.372232503 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.830372309 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.108654742 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.903460003 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995703383 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.90507996 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175277038 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.321892794 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104625821 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.148992417 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.731653553 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.941432117 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.108973401 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133724848 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.195230987 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905091157 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908075497 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.907227214 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.568100426 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.738739671 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.939597465 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.342702528 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156259464 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.855628231 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963270738 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.907748723 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.917501391 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90843279 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910783665 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17588564 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.915735301 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156391131 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983121557 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156020938 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908791674 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327186275 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.614659828 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.269942977 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.026070435 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.906680882 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90927223 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90720695 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.833657476 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989490553 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.910146444 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.91255817 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.607486349 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.906801596 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982524674 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.908135501 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110770213 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.714706099 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.599214554 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.90571205 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910242091 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482419249 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.026233215 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.022584939 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.708819187 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291223852 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.327108731 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.004538447 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.908435848 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909234727 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.161878962 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880418416 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.65639012 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944548493 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044764777 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.922322418 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.549413268 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205262072 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.387828211 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.470873161 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.828856055 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188768015 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.716655791 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.906170425 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127813476 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.752353431 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83591743 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136510185 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946599185 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912758331 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.173820318 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695129715 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025404589 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.922133305 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348841093 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927186298 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.91496792 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911974274 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124719358 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430606305 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945328918 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.030802592 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922305849 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.993012229 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838022712 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.917188102 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.912560399 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.816141794 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916904178 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912016634 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.956986499 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.70464363 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.956982003 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.84945733 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917804844 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.031797607 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950368536 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.866884239 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169183456 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.219861323 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.586256412 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940123953 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.045285436 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.342175584 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144694286 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.916673131 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.125628854 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447945391 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.362460616 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.964129358 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209737837 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.970408929 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209821057 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340578755 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9857809 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.711802653 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.712806852 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.135042705 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926615431 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.908121585 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.916881973 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917736226 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849118004 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.556705064 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.344615356 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.082669255 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.129147292 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.350059752 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.902878604 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.913809954 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222545082 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.052511276 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.898954697 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.572698931 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.447384954 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.750835646 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.937038281 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.170723719 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.216229132 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.883587172 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930289641 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992129727 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93132042 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.926005751 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.334635919 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280925354 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.91684476 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.917123776 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.865869141 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918949273 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.918877881 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.44901454 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882562028 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.915462141 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.928857677 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.790447636 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990797277 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918607997 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921514394 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.458400508 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.423563144 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.921667749 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.580435858 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.923877754 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104383767 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189195902 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.34323357 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051179097 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.616169286 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.369545746 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.033487154 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.617311702 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842603197 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.918924575 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.859367009 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921031876 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.918650095 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921411954 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.106740624 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197155669 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.21946786 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.399210706 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98244535 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120854287 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.665610137 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869830269 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.919887676 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922694833 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.918713209 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918309741 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.434176828 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.208044342 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.03263418 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944935786 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.922587498 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048130684 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.9286388 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.843814421 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.918490357 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920874058 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461546359 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.95207644 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.86711171 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.288161722 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.843421378 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043600663 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963978787 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.930313335 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924503716 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.667337262 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.954916022 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84680079 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467790772 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959840923 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.708953296 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408617646 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502742795 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221894312 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.241858888 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.250088569 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.990466074 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.132312775 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.004433744 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977241636 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011213925 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859205126 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.844069949 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.582431441 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256977106 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185792201 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927417537 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138632011 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.655442541 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149303919 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949916441 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.711694147 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237584055 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895159667 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937186109 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.363061153 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03315563 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00755653 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924865239 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.876533191 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.266790281 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963344564 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.620442183 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93573506 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275008009 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.452877106 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.995885143 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.352704252 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138397472 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922904092 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280631837 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.237116112 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.965456605 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.926718075 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.916298372 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.135691762 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497234956 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.794698559 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925697282 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.193760541 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226601303 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.82377765 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.926060466 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.18315823 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187808231 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923928344 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.333643602 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301025116 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.030559441 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980667347 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150805485 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.711872158 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234642075 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.489882378 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.418831154 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926495462 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.854612651 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.62546001 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.128358552 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.926440208 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.890570356 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140849145 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160879779 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609955534 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143945189 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171202208 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.93565699 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.200721037 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998723454 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.022124694 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.293891134 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.36782264 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.174282867 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.151704704 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466319057 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.141076384 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415572217 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.092852766 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.929396887 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129964397 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142652213 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.140851696 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.355013212 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099166778 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.63658807 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.932304858 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.133239761 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231022205 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988620631 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.360711552 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.098480547 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.008296799 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932627287 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991297141 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.931809692 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934125264 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.365833682 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.461121799 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.938976 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005514953 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051362064 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.441277854 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.929317653 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.933399286 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201474667 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28495354 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275448921 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909468019 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925643192 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934619041 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055295239 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.85971993 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934700292 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200385281 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.934677222 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441742378 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.087129016 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944365906 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.313913017 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.320948799 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.706672299 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.898336816 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.935374202 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15579767 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243883719 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.22721619 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.048848635 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203379829 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275251692 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.966468299 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.361326557 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175179394 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935986904 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.805659199 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.935548803 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062617795 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.135773885 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211831985 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.440655534 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737589965 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197042445 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.800631728 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.936340255 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.674520485 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204548098 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.208223523 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.983920553 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999555492 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936976453 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476004147 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.65838969 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067244533 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.859629396 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862863497 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.945317507 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.265340807 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.174334493 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.642338639 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938357144 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214200382 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238686161 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208803071 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.984554668 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.84618937 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147091668 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934459514 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.942674858 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.18421767 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160540794 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179683816 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934460767 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.932678339 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.739649007 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857596733 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.931388624 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98665064 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.162240225 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952144338 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.449054461 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.634120267 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221397715 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982474061 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936120105 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208618234 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.471686233 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.497163654 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935913336 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156334697 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.966430888 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229029988 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.936569004 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.510630882 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239464901 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.934415615 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.573513844 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.183850675 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201588846 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866158803 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.940191773 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150677524 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.815296847 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.930145874 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.915405918 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471802783 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168456168 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.667410023 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491074716 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.931539195 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.935722179 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.486085676 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969827142 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.482087971 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969600599 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952732469 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451363818 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.640868817 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.215910875 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177143869 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.58251988 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.58048657 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.937300927 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.934369488 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935036841 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853243287 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.11561701 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.121625925 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224293502 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.969010649 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481952741 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.973188583 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.363017817 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05547425 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.204818955 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976428134 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.457997114 seconds)
  done (took 1689.688797807 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.929909459 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.953635455 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.979999964 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.945608114 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.937457922 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.95260475 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.98002582 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.935734145 seconds)
  done (took 57.471214604 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.938261108 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.947666786 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.942704057 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.939823749 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.945556555 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.938156834 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.098683684 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.951321173 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.939340654 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.944519506 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.939685199 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.936416358 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.217507341 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.952362614 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.938383087 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.934459398 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.937158716 seconds)
  done (took 75.309474575 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.943897333 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.185363996 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.998911264 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.937383337 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.88560539 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.948992201 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.936575621 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.981236425 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.941834681 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.172526693 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.234382101 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.962282759 seconds)
  done (took 90.994183389 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.940896831 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.935722322 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.936694711 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.936280894 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.935832147 seconds)
  done (took 11.55025847 seconds)
done (took 2204.96465303 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.290571478 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.997055132 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.038209287 seconds)
  done (took 5.894417603 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.083681135 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.128900859 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.241453969 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.008151398 seconds)
  done (took 10.331948467 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.241494076 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.30889402 seconds)
  done (took 6.411428037 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.293460564 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.948803046 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.319500227 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.937112792 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.934863459 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.935729862 seconds)
  done (took 22.677837897 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.939106534 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.9379344 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.939530541 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.939232342 seconds)
  done (took 9.619501089 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.936912894 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.640443705 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.937352611 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.946895459 seconds)
  done (took 21.323140098 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.085169465 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.051518876 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.079285731 seconds)
  done (took 8.079309374 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.156509457 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.962156063 seconds)
  done (took 6.981237312 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.086523927 seconds)
  done (took 3.95016241 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.96814505 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.208676935 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.430779368 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.481106763 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.601958797 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.730366427 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.248303386 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.173565892 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.357023078 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.379307697 seconds)
  done (took 25.443458504 seconds)
done (took 136.426827222 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.284771035 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.953103746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.140126234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.298696094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.157964916 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.13817319 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.156450392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.287382379 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.964282254 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.956831172 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.294389672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.160850456 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.100062708 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.957297968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.11124702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.956329891 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.161824368 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.299017239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.976995563 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.219922609 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.16357836 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.941075627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.140147597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.951219939 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.156967496 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.088999749 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.486994815 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.952375428 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.121675803 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.492077678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.090376844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.359221145 seconds)
  done (took 170.384222931 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.939578671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.937830637 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.939916519 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.938503528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.480068213 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.938039127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.938703709 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.939005983 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.332485865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.318199225 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.937756933 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.474432656 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.938677501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.937198229 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.939427256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.936520619 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.486005902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.937529316 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.938119709 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.93792956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.938469392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.30401807 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.938296392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.311755669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.461418882 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.938994537 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.938820893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.937361116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.938272216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.938893182 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.939982427 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.940782739 seconds)
  done (took 211.562076776 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.941543698 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.938222429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.938977135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.937510482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.932229499 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.936477379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.931744204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930222469 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.638281496 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.624676359 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.924809885 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.925425002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.92363195 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.921681651 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.919888282 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.918755301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.917769437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.917784223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.919229235 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.914981594 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.913798451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.742954174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.911644233 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.741044143 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.910949839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.912715404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.906596431 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.908703971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.902438304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.903054923 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.90236436 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.899523185 seconds)
  done (took 222.381142145 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.147907967 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.911069452 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.903839892 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.809696793 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.906281137 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.902763784 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.900266749 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.147240953 seconds)
  done (took 19.462606677 seconds)
done (took 625.669322275 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.272923028 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.076903145 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.074780555 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.926430586 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197531604 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.962812321 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.914907487 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.975896528 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.749401272 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.986410629 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.543851174 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.926579473 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.641045827 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.940308458 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.039781591 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.96796108 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.45655179 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.559089274 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.054646016 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.976925473 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.099845434 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.855138033 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.990219247 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.778560041 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.556569491 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.888749204 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.945578935 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.45596751 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.924898076 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.071364174 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.595622559 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.204370723 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.924621246 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.906983533 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.953528557 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.929713699 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.120959287 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.912706082 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.028693724 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.630968353 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.965154941 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.64034338 seconds)
  done (took 103.455478043 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.890178021 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.8879824 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.887656887 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.884098434 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.895119589 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.8880431 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.889167364 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.88565793 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.889013036 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.888010535 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.884996802 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.894000989 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.88658754 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.895189498 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.887882654 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.886482514 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.886242413 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.89708801 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.88857794 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.88772562 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.890075461 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.886164864 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.882998219 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.887167214 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.889042342 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.8858592 seconds)
  done (took 50.925386103 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.884484409 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.056066355 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.12547281 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.900173699 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.883682649 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.887955554 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.898986291 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.888613799 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.885359029 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.884358217 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.973060265 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.887823238 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.902828275 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.129730932 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.901080434 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.887366757 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.886991749 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.888827288 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.066327144 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.902696974 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.906589694 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.891051174 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.906646421 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.90055126 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.889500623 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.889167233 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.889488135 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.390322135 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.892396593 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.980483438 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.928153124 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.906258711 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.336905571 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.140357286 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.937280322 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.892753022 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.886520013 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.984223785 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.891040075 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.889577549 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.907000698 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.891249161 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.133109546 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.404308251 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.896897303 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.885950584 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.399687582 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.988634431 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.928062602 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.898135388 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.135583248 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.900167577 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.886078842 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.890538831 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.924042631 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.897994153 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.887113351 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.245213687 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.897975489 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.904490623 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.889470727 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.886324665 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067214905 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.894175828 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.05863041 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.893426639 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.894932417 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.887380636 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.135120183 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.904602975 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.431119094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.901372861 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.888790328 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.982226859 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.06197429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.42073946 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.898938656 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.073581221 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.354286116 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.911138302 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.896374559 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.378477121 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.913433018 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.895901506 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.889293729 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.88857789 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.889846919 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.934536275 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.905917451 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.335907623 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.414657535 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.260617216 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.913746439 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.898562032 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.891255103 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.250467124 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.896813843 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.892233009 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.125885356 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.431197996 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.903759465 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.896165865 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.403005012 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.903506053 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.907133655 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.898519332 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.141061852 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.908561053 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.934016737 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.889643186 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.898395655 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.89393671 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.911575088 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.901905712 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.891123545 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.387536603 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.995889822 seconds)
  done (took 234.770520946 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.890038003 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.891096931 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.890208782 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.889637465 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.888246578 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.893449434 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.89207516 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.888279898 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.895016796 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.889061035 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.891840763 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.892066051 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.89317414 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.895556512 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.953049491 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.89167887 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.493950127 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.892385489 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.891739526 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.889589193 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.533988931 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.894604185 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.89451 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.890175529 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.891940907 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.891720141 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.895744765 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.942026609 seconds)
  done (took 168.144826425 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.891085329 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.005919404 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.905635374 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.920390909 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901250772 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.892211321 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.991501036 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.907987777 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.897217044 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.893107046 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.893928538 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.954760786 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.903297268 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.989412052 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.920516906 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.998400135 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.993204655 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.898568539 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.895872391 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.894260365 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.925602113 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.898545905 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.951721397 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.014400544 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.907302525 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.0084866 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.906455004 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.890932144 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.89372094 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.003924017 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.908465058 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.953845558 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.92304161 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.910972669 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.012205312 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.003971252 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.995566157 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.994948256 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.896919155 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.897312866 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.895533846 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.892950575 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.004694772 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.907919877 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.898423659 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.004096087 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.909025739 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.895937044 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.897166716 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.894132488 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.908542217 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.910364216 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.958069948 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.021977371 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.925226998 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.917606847 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.992608533 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.021364661 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.897760102 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.991649898 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.901876889 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.009326694 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.908081251 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.895294542 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.896697815 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.902166391 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.925692479 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.999071075 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.994644743 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.902786123 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.989931219 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.928750436 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.90347435 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.896800654 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.90059541 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.009467036 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.007351668 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.928421286 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.930029121 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.929545022 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.904481217 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.896182877 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.898532425 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.915576511 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.899636294 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.007332122 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.006232895 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.898873763 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.897484364 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.896987051 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.897112609 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.923860699 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.019127315 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.927649425 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.999122248 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.957963812 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.966435271 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.909045951 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.910029043 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.900949718 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.957452271 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.909436115 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.909160619 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.216007752 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.957709429 seconds)
  done (took 205.355362516 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.300182008 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.938019604 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.952252439 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.217396937 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.256225668 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.850887442 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.941727534 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.943604113 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.98129729 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.158140044 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.014037537 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.965104535 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.936244816 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.917576051 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.936527783 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.981406274 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.94781051 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.28014854 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.143045039 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.472618498 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.931875742 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.20953778 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.264070758 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.517653331 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.986427435 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.360727452 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.560962811 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.101115572 seconds)
  done (took 63.894346987 seconds)
done (took 828.373711432 seconds)
SAVING RESULT...
DONE!
